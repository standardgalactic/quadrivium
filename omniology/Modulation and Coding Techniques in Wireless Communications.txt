Modulation and 
Coding Techniques
in Wireless Communications
Editors
Evgenii Krouk
Sergei Semenov


MODULATION AND
CODING TECHNIQUES
IN WIRELESS
COMMUNICATIONS


MODULATION AND
CODING TECHNIQUES
IN WIRELESS
COMMUNICATIONS
Edited by
Evgenii Krouk
Dean of the Information Systems and Data Protection Faculty, St Petersburg State
University of Aerospace Instrumentation, Russia
Sergei Semenov
Specialist, Nokia Corporation, Finland
A John Wiley and Sons, Ltd , Publication

This edition ﬁrst published 2011
C⃝2011 John Wiley & Sons Ltd.
Registered Ofﬁce
John Wiley & Sons Ltd, The Atrium, Southern Gate, Chichester, West Sussex, PO19 8SQ, United Kingdom
For details of our global editorial ofﬁces, for customer services and for information about how to apply for
permission to reuse the copyright material in this book please see our website at www.wiley.com.
The right of the author to be identiﬁed as the author of this work has been asserted in accordance with the
Copyright, Designs and Patents Act 1988.
All rights reserved. No part of this publication may be reproduced, stored in a retrieval system, or transmitted, in
any form or by any means, electronic, mechanical, photocopying, recording or otherwise, except as permitted by the
UK Copyright, Designs and Patents Act 1988, without the prior permission of the publisher.
Wiley also publishes its books in a variety of electronic formats. Some content that appears in print may not be
available in electronic books.
Designations used by companies to distinguish their products are often claimed as trademarks. All brand names and
product names used in this book are trade names, service marks, trademarks or registered trademarks of their
respective owners. The publisher is not associated with any product or vendor mentioned in this book. This
publication is designed to provide accurate and authoritative information in regard to the subject matter covered. It
is sold on the understanding that the publisher is not engaged in rendering professional services. If professional
advice or other expert assistance is required, the services of a competent professional should be sought.
Library of Congress Cataloging-in-Publication Data
Modulation and coding techniques in wireless communications / edited by Evgenii Krouk, Sergei Semenov.
p. cm.
Includes bibliographical references and index.
ISBN 978-0-470-74505-2 (cloth)
1. Coding theory.
2. Modulation (Electronics).
3. Wireless communication systems.
I. Krouk, E.
II. Semenov, S.
TK5102.92.M63
2011
621.384–dc22
2010033601
A catalogue record for this book is available from the British Library.
Print ISBN: 9780470745052 [HB]
ePDF ISBN:9780470976760
oBook ISBN: 9780470976777
ePub ISBN: 9780470976715
Typeset in 9/11pt Times by Aptara Inc., New Delhi, India.

Contents
About the Editors
xi
List of Contributors
xiii
Acknowledgements
xv
Introduction
xvii
1
Channel Models and Reliable Communication
1
EvgeniiKrouk,AndreiOvchinnikov,andJussiPoikonen
1.1
Principles of Reliable Communication
1
1.2
AWGN
2
1.2.1
Baseband Representation of AWGN
2
1.2.2
From Sample SNR to Eb/N0
5
1.3
Fading Processes in Wireless Communication Channels
6
1.3.1
Large-Scale Fading (Path Loss)
7
1.3.2
Medium-Scale Fading (Shadowing)
10
1.3.3
Small-Scale Fading (Multipath Propagation)
11
1.4
Modelling Frequency-Nonselective Fading
14
1.4.1
Rayleigh and Rice Distributions
14
1.4.2
Maximum Doppler Frequency Shift
15
1.4.3
Wide-Sense Stationary Stochastic Processes
15
1.4.4
Rayleigh and Rice Models for Frequency-Nonselective Fading
15
1.4.5
SNR in Rayleigh Fading Channels
17
1.5
WSSUS Models for Frequency-Selective Fading
18
1.5.1
Basic Principles
18
1.5.2
Deﬁnitions
19
References
19
2
Modulation
21
SergeiSemenov
2.1
Basic Principles of Bandpass Modulation
21
2.1.1
The Complex Representation of a Bandpass Signal
22
2.1.2
Representation of Signal with Basis Functions
27
2.1.3
Pulse Shaping
31
2.1.4
Matched Filter
35
2.2
PSK
38
2.2.1
BPSK
38
2.2.2
QPSK
43

vi
Contents
2.2.3
M-PSK
47
2.2.4
DPSK
48
2.2.5
OQPSK
50
2.2.6
π/4-QPSK
51
2.3
MSK
54
2.3.1
GMSK
54
2.4
QAM
60
2.5
OFDM
66
References
81
3
Block Codes
83
GrigoriiKabatiansky,EvgeniiKrouk,AndreiOvchinnikov,andSergeiSemenov
3.1
Main Deﬁnitions
83
3.2
Algebraic Structures
86
3.3
Linear Block Codes
94
3.4
Cyclic Codes
98
3.5
Bounds on Minimum Distance
114
3.6
Minimum Distance Decoding
119
3.7
Information Set Decoding
120
3.8
Hamming Codes
128
3.9
Reed-Solomon Codes
131
3.10
BCH Codes
133
3.11
Decoding of BCH Codes
135
3.12
Sudan Algorithm and Its Extensions
139
3.13
LDPC Codes
146
3.13.1
LDPC Constructions
148
3.13.2
Decoding of LDPC Codes
154
References
157
4
Convolutional Codes and Turbo-Codes
161
SergeiSemenovandAndreyTroﬁmov
4.1
Convolutional Codes Representation and Encoding
161
4.2
Viterbi Decoding Algorithm
169
4.2.1
Hard Decision Viterbi Algorithm
170
4.2.2
Soft Decision Viterbi Algorithm
174
4.3
List Decoding
178
4.4
Upper Bound on Bit Error Probability for Viterbi Decoding
178
4.5
Sequential Decoding
183
4.5.1
Stack Algorithm
184
4.5.2
Fano Algorithm
187
4.6
Parallel-Concatenated Convolutional Codes and Soft Input Soft Output Decoding
190
4.7
SISO Decoding Algorithms
195
4.7.1
MAP Algorithm and Its Variants
195
4.7.2
Soft-In/Soft-Out Viterbi Algorithm (SOVA)
201
References
205
4.A
Modiﬁed Chernoff Bound and Some Applications
206
AndreyTroﬁmov
References
219

Contents
vii
5
Equalization
221
SergeiSemenov
5.1
Equalization with Filtering
222
5.1.1
Zero-Forcing Equalization
226
5.1.2
MMSE Equalization
228
5.1.3
DFE
233
5.2
Equalization Based on Sequence Estimation
239
5.2.1
MLSE Equalization
239
5.2.2
Sphere Detection
242
5.3
RAKE Receiver
251
5.4
Turbo Equalization
254
5.5
Performance Comparison
259
References
261
6
ARQ
263
EvgeniiKrouk
6.1
Basic ARQ Schemes
263
6.1.1
Basic Concepts
263
6.1.2
Stop-and-Wait ARQ
265
6.1.3
ARQ with N Steps Back (Go Back N, GBN)
267
6.1.4
ARQ with Selective Repeat (SR)
268
6.2
Hybrid ARQ
269
6.2.1
Type-I Hybrid ARQ (Chase Combining)
269
6.2.2
Type-II Hybrid ARQ (Full IR)
270
6.2.3
Type-III Hybrid ARQ (Partial IR)
273
References
275
7
Coded Modulation
277
AndreyTroﬁmov
7.1
Principle of Coded Modulation
277
7.1.1
Illustrative Example
280
7.2
Modulation Mapping by Signal Set Partitioning
282
7.3
Ungerboeck Codes
285
7.4
Performance Estimation of TCM System
287
7.4.1
Squared Distance Structure of PSK and QAM Constellations
287
7.4.2
Upper Bound on Error Event Probability and Bit Error Probability
for TCM
289
References
299
8
MIMO
301
AndreiOvchinnikovandSergeiSemenov
8.1
MIMO Channel Model
301
8.1.1
Fading in Narrowband Channels
301
8.1.2
Fading Countermeasures: Diversity
303
8.1.3
MIMO Channel model
306
8.2
Space-Time Coding
310
8.2.1
Maximum Ratio Combining
310
8.2.2
Deﬁnition of Space-Time Codes
311
8.2.3
Space-Time Codes with Two Transmit Antennas
312
8.2.4
Construction Criteria for Space-Time Codes
314

viii
Contents
8.3
Orthogonal Designs
317
8.3.1
Real Orthogonal Designs
317
8.3.2
Complex Orthogonal Designs
319
8.3.3
Decoding of Space-Time Codes
323
8.3.4
Error Probability for Orthogonal Space-Time Codes
326
8.4
Space-Time Trellis Codes
327
8.4.1
Space-Time Trellis Codes
327
8.4.2
Space-Time Turbo Trellis Codes
330
8.5
Differential Space-Time Codes
334
8.6
Spatial Multiplexing
337
8.6.1
General Concepts
337
8.6.2
V-BLAST
339
8.6.3
D-BLAST
341
8.6.4
Turbo-BLAST
342
8.7
Beamforming
344
References
348
9
Multiple Access Methods
351
DmitryOsipov,JarkkoPaavola,andJussiPoikonen
9.1
Frequency Division Multiple Access
353
9.1.1
Spectral Reuse
355
9.1.2
OFDMA
356
9.1.3
SC-FDMA
358
9.1.4
WDMA
359
9.2
Time Division Multiple Access
359
9.3
Code Division Multiple Access
360
9.3.1
Direct-Sequence CDMA
360
9.3.2
Frequency-Hopping CDMA
366
9.4
Advanced MA Methods
367
9.4.1
Multicarrier CDMA
367
9.4.2
Random OFDMA
368
9.4.3
DHA-FH-CDMA
369
9.5
Random Access Multiple Access Methods
371
9.6
Conclusions
376
References
376
10
Standardization in IEEE 802.11, 802.16
381
TuomasLaine,ZexianLi,AndreiMalkov,andPrabodhVarshney
10.1
IEEE Overview
381
10.2
Standard Development Process
384
10.3
IEEE 802.11 Working Group
385
10.4
IEEE 802.16 Working Group
386
10.5
IEEE 802.11
388
10.5.1
Overview and Scope
388
10.5.2
Frequency Plan
388
10.5.3
Reference Model
389
10.5.4
Architecture
390
10.5.5
802.11a
391
10.5.6
802.11b
392
10.5.7
802.11g
394

Contents
ix
10.5.8
802.11n
395
10.5.9
Future Developments
397
10.6
IEEE 802.16x
398
10.6.1
Key PHY Features of the IEEE 802.16e
398
10.6.2
IEEE 802.16m
400
References
428
11
Standardization in 3GPP
429
AsbjørnGrøvlen,KariHooli,MattiJokimies,Kari Pajukoski,
SergeiSemenov,andEsaTiirola
11.1
Standardization Process and Organization
429
11.1.1
General
429
11.1.2
Organization of 3GPP
430
11.1.3
Organization of TSG RAN
430
11.1.4
Standardization Process
431
11.1.5
3GPP Releases
432
11.1.6
Frequency Bands and 3GPP Releases
433
11.1.7
RAN Speciﬁcations
433
11.2
3G WCDMA
433
11.2.1
WCDMA Concept. Logical, Transport and Physical Channels
434
11.2.2
Logical and Transport Channels
435
11.2.3
Physical Channels
440
11.2.4
Coding, Spreading and Modulation
459
11.2.5
Cell Search
476
11.2.6
Power Control Procedures
476
11.2.7
Handover Procedures
479
11.2.8
Transmit Diversity
486
11.3
3.5G HSDPA/HSUPA
490
11.3.1
HSDPA
490
11.3.2
HSUPA
536
11.3.3
CPC
574
11.4
4G LTE
577
11.4.1
LTE Downlink
577
11.4.2
LTE Uplink
592
References
602
12
CDMA2000 and Its Evolution
605
AndreiOvchinnikov
12.1
Development of 3G CDMA2000 Standard
605
12.1.1
IS-95 Family of Standards (cdmaOne)
605
12.1.2
IS-2000 Family of Standards
606
12.2
Reverse Channel of Physical Layer in CDMA2000 Standard
611
12.2.1
Reverse Channel Structure
611
12.2.2
Forward Error Correction (FEC)
612
12.2.3
Codeword Symbols Repetition
615
12.2.4
Puncturing
618
12.2.5
Block Interleaving
618
12.2.6
Orthogonal Modulation and Orthogonal Spreading
619
12.2.7
Direct Sequence Spreading and Quadrature Spreading
619
12.2.8
Frame Quality Indicator
622

x
Contents
12.3
Forward Channel of Physical Layer in CDMA2000 Standard
623
12.3.1
Forward Channel Structure
623
12.3.2
Forward Error Correction
625
12.3.3
Codeword Symbols Repetition
629
12.3.4
Puncturing
630
12.3.5
Block Interleaving
630
12.3.6
Sequence Repetition
630
12.3.7
Data Scrambling
630
12.3.8
Orthogonal and Quasi-Orthogonal Spreading
631
12.3.9
Quadrature Spreading
631
12.3.10
Frame Quality Indicator
631
12.4
Architecture Model of CDMA2000 1xEV-DO Standard
631
12.4.1
Structure of Physical Layer Packet
632
12.4.2
FCS Computation
632
12.5
Access Terminal of the CDMA2000 1xEV-DO Standard
633
12.5.1
Power Control
633
12.5.2
Reverse Channel Structure
633
12.5.3
Modulation Parameters and Transmission Rates
634
12.5.4
Access Channel
634
12.5.5
Reverse Trafﬁc Channel
636
12.5.6
Encoding
640
12.5.7
Channel Interleaving and Repetition
641
12.5.8
Quadrature Spreading
641
12.6
Access Network of the CDMA2000 1xEV-DO Standard
643
12.6.1
Forward Channel Structure
643
12.6.2
Modulation Parameters and Transmission Rates
645
12.6.3
Pilot Channel
645
12.6.4
Forward MAC Channel
645
12.6.5
Control Channel
647
12.6.6
Forward Trafﬁc Channel
647
12.6.7
Time-Division Multiplexing
651
12.6.8
Quadrature Spreading
651
References
654
Index
655

About the Editors
Evgenii Krouk
Professor E. Krouk has worked in the ﬁeld of communication theory and techniques for more than
30 years. His areas of interest include coding theory, the mathematical theory of communications and
cryptography. He is now the Dean of the Information Systems and Data Protection Faculty of the St
Petersburg State University of Aerospace Instrumentation. He is author of three books, more than 100
scientiﬁc articles and 30 international and Russian patents.
Sergei Semenov
Sergei Semenov received his PhD degree from the St Petersburg State University for Airspace Instru-
mentation (SUAI), Russia in 1993. Dr Semenov joined Nokia Corporation in 1999 and is currently
a Specialist in Modem Algorithm Design/Wireless Modem. His research interests include coding and
communication theory and their application to communication systems.


Contributors
Asbjørn Grøvlen
Nokia, Denmark
Kari Hooli
Nokia Siemens Networks, Finland
Matti Jokimies
Nokia Corporation, Finland
Grigorii Kabatiansky
Institute for Information Transmission Problems, Russian Academy of Sciences, Russia
Tuomas Laine
Nokia Corporation, Finland
Zexian Li
Nokia Corporation, Finland
Andrei Malkov
Nokia Corporation, Finland
Dmitry Osipov
Institute for Information Transmission Problems, Russian Academy of Sciences, Russia
Andrei Ovchinnikov
St Petersburg State University of Aerospace Instrumentation, Russia
Jarkko Paavola
Department of Information Technology, University of Turku, Finland
Kari Pajukoski
Nokia Siemens Networks, Finland
Jussi Henrikki Poikonen
Department of Information Technology, University of Turku, Finland
Esa Tapani Tiirola
Nokia Siemens Networks, Finland

xiv
Contributors
Andrey Troﬁmov
St Petersburg State University of Aerospace Instrumentation, Russia
Prabodh Varshney
Nokia, USA

Acknowledgements
We would like to thank all the authors who took part in this project, who sacriﬁced some part of their
spare time to make the realization of this book possible.
We also would like to thank the Wiley team who have worked with us.


Introduction
Major achievements in the ﬁeld of creating digital devices made possible the implementation of algo-
rithms and systems that were considered unfeasible until recent times. Modern communication systems
and especially the systems of radiocommunication support this statement. Transmitters and receivers
comprising, until recently, bulky and unique devices now can be easily ﬁtted to the body of a small mobile
phone and many manufacturers have started to mass produce these devices. This raises the problem of
compatibility of devices from different manufacturers.
The solution to this issue is the system of international standards. The modern standards on communi-
cations comprise a large number of speciﬁcations, and some of them are quite cumbersome. The reason
for this is the fact that these speciﬁcations are the result of complex and time consuming processes of
reconciling comprehensive technical solutions with a large number of contributors.
There is no doubt that the impressive achievements in the development of communication systems are
not only the result of development of digital devices but can be explained by signiﬁcant progress in the
ﬁeld of creation and implementation of the new communication technologies.
These new technologies are based on theoretical results obtained with the help of serious and sometimes
non-traditional mathematic apparatus. Understanding the fundamental works on modulation, equalization
and coding theory, sophisticated results on multiple access and multiple antenna systems comprising the
basis of modern communication standards requires signiﬁcant efforts and high mathematical culture.
On the other hand, the great number of technical details that must be mentioned in standards speci-
ﬁcations sometimes make it difﬁcult to ﬁnd the correlation between the standard speciﬁcations and the
theoretical results even for the prepared reader.
Due to this fact, the idea of writing the book uniting both the theoretical results and material of
standards on wireless communication was considered as quite fruitful. The goal of this book is to
reveal some regular trends in the latest results on communication theory and show how these trends are
implemented in contemporary wireless communication standards. It is obvious that to carry out this idea
ﬁrst of all it is necessary to collect in one team, not only the specialists on communication theory, but
also people dealing with practical implementation of standards speciﬁcations. We are happy that we did
manage to solve this tricky problem. The present book is the result of the work carried out by this team
of authors.
In line with the above mentioned goal the book consists of two parts. Part 1 is devoted to the review
of the basis of communication theory (Chapters 1–9), and Part 2 to the review of modern wireless
communication standards.
In Chapter 1 the main deﬁnitions in the ﬁeld of communication theory and typical models of commu-
nication channels can be found. In Chapter 2 the main principles of modulation theory are presented and
the main modulation methods used in practice are discussed. Chapter 3 is devoted to the coding theory.
In this chapter the main constructions of block codes and methods of decoding the block codes are
considered. The convolutional and turbo codes are discussed in Chapter 4. In Chapter 5 the materials on
equalization theory and channel estimation are collected. In Chapter 6 the main schemes of systems with

xviii
Introduction
feedback are considered. The principles and algorithms of coding modulation are presented in Chapter
7. Chapter 8 is devoted to the description of multiple antenna systems. In Chapter 9 the multiple access
methods are outlined. Thus, quite thorough review of basis algorithms and technologies of communi-
cation theory can be found in Part 1 of the book. These results are to some extent redundant for the
description of contemporary standards. However, the presence of these results in the book reﬂects the
authors’ conﬁdence that they can be used in industry in the near future.
The usage of layer 1 procedures in the wide range of wireless communication standards is considered
in Part 2. In this part authors try to consider the standards which have the most signiﬁcant impact
(in the authors’ opinion) to evolution of modern wireless communication. In Chapter 10 the review
of communication technologies used in standards IEEE 802.11 and 802.16 can be found. In Chapter
11 the review of 3GPP standards on WCDMA and LTE is presented. Chapter 12 is devoted to layer
1 procedures used in 3GPP2 CDMA2000 standards. Thus, the layer 1 procedures used in the main
standards of wireless communication can be inferred from the second part of the book.
We hope that this book will be useful for communication system designers and specialists in commu-
nication theory as well. Also it may be used by students of communication systems.

1
Channel Models and Reliable
Communication
Evgenii Krouk1, Andrei Ovchinnikov1, and Jussi Poikonen2
1St Petersburg State University of Aerospace Instrumentation, Russia
2Department of Information Technology, University of Turku, Finland
1.1
Principles of Reliable Communication
Ideally, design, development and deployment of communication systems aims at maximally efﬁcient
utilization of available resources for transferring information reliably between a sender and a recipient.
In real systems, typically some amount of unreliability is tolerated in this transfer to achieve a predeﬁned
level of consumption of limited resources. In modern communication systems, primary resources are
time, space, and power and frequency bandwidth of the electromagnetic radiation used to convey
information. Given such resources, systems must be designed to overcome distortions to transmitted
information caused mainly by elements within the system itself, possible external communications, and
the environment through which the information propagates. To achieve efﬁcient utilization of available
resources, knowledge of the mechanisms that cause interference in a given transmission scenario must
be available in designing and analyzing a communication system.
In performance evaluation of wireless communication systems, signiﬁcance of the communication
channel is emphasized, since the degradation of a signal propagating from a transmitter to a receiver is
strongly dependent on their locations relative to the external environment. Wireless mobile communica-
tion, where either the transmitter or the receiver is in motion, presents additional challenges to channel
modelling, as it is necessary to account for variation in the signal distortion as a function of time for
each transmitter–receiver pair. In developing and analyzing such systems, comprehensively modelling
the transmitter–receiver link is a complicated task.
In the following, distortions caused by typical communication channels to transmitted signals are
described. A common property of all communication channels is that the received signal contains
noise, which fundamentally limits the rate of communication. Noise is typically modelled as a Gaussian
stochastic process. The additive white Gaussian noise (AWGN) channel and its effects on typical digital
modulation methods are presented in Section 1.2. Noise is added to transmitted signals at the receiver.
Before arriving at the receiver terminal, signals are typically distorted according to various physical
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

2
Modulation and Coding Techniques in Wireless Communications
characteristics of the propagation medium. These distortions attenuate the received signal, and thus
increase the detrimental effect of additive noise on the reliability of communication. In Section 1.3 to
1.5 typical cases of distortion in wireless communication channels and models for the effects of such
distortion on transmitted signals are presented.
1.2
AWGN
Distortions occurring in typical communication systems can be divided into multiplicative and additive
components. In the following, some remarks and relevant results concerning additive distortion – also
referred to simply as noise – are presented.
Additive noise is introduced to a wireless communication system both from outside sources – such
as atmospheric effects, cosmic radiation and electrical devices – and from internal components of the
receiver hardware, which produce thermal and shot noise [9]. Typically, additive distortion in a received
signal consists of a sum of a large number of independent random components, and is modelled as
additive white Gaussian noise, where the term white means that the noise is assumed to have a constant
power spectral density. The Gaussian, or normal, distribution of noise is motivated by the central limit
theorem (one of the fundamental theorems of probability theory), according to which the distribution of
a sum of a large number of random variables approaches a normal distribution, given that these variables
fulﬁll Lyapunov’s condition (for details, see for example [10]).
In some cases, the received signal is also distorted by a channel-induced superposition of different
components of the useful transmission, or by signals from other transmission systems. Such distortions
are called interference, and differ from additive noise in that typically some source-speciﬁc statistical
characteristics of interference are known. Thus interference is not in all cases best approximated as
an additive white Gaussian process. Interference effects are strongly dependent on the communication
systems and transmission scenarios under consideration. Later in this chapter, interference-causing
effects of wireless communication channels are considered. In the following, we focus on considering
the effects of additive white Gaussian noise on complex baseband modulation symbols. Principles of
digital modulation methods and the effects of noise on the reception of various types of transmitted
signals will be considered in more detail in Chapter 2; the following simple examples are meant to
illustrate the concept of additive noise and its effect on digital communication.
1.2.1
Baseband Representation of AWGN
In the following examples, we consider digital data which is mapped to binary phase shift keying
(BPSK), quaternary phase shift keying (QPSK/4-QAM), and 16-point quadrature amplitude modulation
(16-QAM) symbols. We consider complex baseband signals, that is, for our purposes the transmitted
modulation symbols corresponding to a given digital modulation scheme are represented simply as
complex numbers. The constellation diagrams for these examples are illustrated in Figure 1.1. The effect
of an AWGN channel is to shift these numbers in the complex plane. The receiver has to decide, based
on an observed shifted complex number, the most likely transmitted symbol. This decision is performed
by ﬁnding which, out of the set of known transmitted symbols, is the one with the smallest Euclidian
distance to the received noisy symbol. This is a rather abstract representation of digital signals and noise,
but sufﬁcient for performing error performance analyses of different modulation schemes. For a more
detailed discussion on basic modulation methods and the corresponding signal forms, see Chapter 2.
As outlined above, in complex baseband signal-space representations, the effect of additive white
Gaussian noise in the receiver can be described as a complex number added to each transmitted mod-
ulation symbol value. The real and imaginary parts of these complex numbers are independent and
identically distributed Gaussian random variables with zero mean and variance equal to σ 2
N = ¯PN/2,
where ¯PN denotes the total average power of the complex noise process (that is, the power of the noise

Channel Models and Reliable Communication
3
Figure 1.1
Example of signal constellations corresponding to BPSK, QPSK, and 16-QAM modulation schemes
is evenly distributed into the two signalling dimensions). In the following, the orthogonal components
of the noise process are denoted by a common notation X N ∼N

0, ¯PN/2

.
If the absolute value of either the real or the imaginary noise component is larger than half of the
Euclidian distance d between adjacent modulation symbols, a transmitted symbol may be erroneously
decoded into any symbol within a complex half-plane, as illustrated in the QPSK example of Figure
1.2. The probability of one of the independent and identically distributed noise components having such
values can be written as:
P (X N > d/2) =
 ∞
d/2
1

π ¯PN
exp

−x2
¯PN

dx = 1 −

d
√
2 ¯PN
−∞
1
√
2π
exp

−x2
2

dx
(1.1)
where the ﬁnal expression is given in terms of the cumulative distribution function of a normalized
Gaussian random variable. Error probabilities are usually speciﬁed in this form, since the Q-function
Q (α) = 1 −
 α
−∞
1
√
2π exp(−x2
2 ) is widely tabulated in mathematical reference books, and easily cal-
culated with programs such as Matlab. The expression (1.1) gives directly the probability of error for
BPSK, and can be used to calculate the average probability of error for larger QAM constellations. In
Figure 1.3, the principle of calculating the symbol error probability of QPSK using (1.1) is illustrated.
The same principle is applied in Figure 1.4 to 16-QAM, where several different error cases have to be
considered, and averaged to obtain the total probability of symbol error.
Figure 1.2
The effect of noise on a QPSK signal constellation. Left: imaginary component of noise is larger than
d/2 – transmitted symbols s0 and s3 will be erroneously decoded either as s1 or s2. Right: real component of noise is
larger than d/2 – transmitted symbols s0 and s1 will be erroneously decoded either as s2 or s3

4
Modulation and Coding Techniques in Wireless Communications
Figure 1.3
Principle of calculating the probability of symbol error for a QPSK signal constellation, assuming s0 is
transmitted. Left: 2P(XN > d/2) includes twice the probability of receiving a value in the diagonally opposite quadrant.
Right 2P(XN > d/2)- P(XN > d/2)2 is the correct probability of symbol error
In the preceeding examples, the error probabilities are calculated in terms of the minimum distance
of the constellations and the average noise power. However, it is more convenient to consider error
probabilities in terms of the ratio of average signal and noise powers. For any uniform QAM constellation,
the distance between any pair of neighbouring symbols (that is, the minimum distance) is easily obtained
as a function of the average transmitted signal power ¯PS – which is calculated as the average over the
squared absolute values of the complex-valued constellation points – as:
d =
⎧
⎪⎪⎨
⎪⎪⎩
2
 ¯PS
2

PS/2
2
 ¯PS/10
(BPSK)
(QPSK)
(16 −QAM)
The average symbol error probability for each of the cases above is now obtained by calculating averages
over demodulation error probabilities for the signal sets as a function of the average signal-to-noise
ratio, given by ¯PS/ ¯PN ˆ=λ. Using the equations given above, the average symbol error probabilities are
Figure 1.4
Principle of calculating the probability of symbol error for a 16-QAM signal constellation. Left: for
the four corner symbols, the probability of symbol error is 2P(XN > d/2)-P(XN > d/2)2. Center: for the eight outer
symbols, 3P(XN > d/2)-2P(XN > d/2)2. Right: for the middle symbols, 4P(XN > d/2)-4P(XN > d/2)2. The total
probability of symbol error is the weighted average of these probabilities

Channel Models and Reliable Communication
5
obtained, following the principle outlined in the examples of Figures 1.3 and 1.4, as:
ps (λ) =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
Q
√
2λ

2Q
√
λ

−Q
√
λ
2
3Q

λ/5

−9
4 Q

λ/5
2
(BPSK)
(QPSK)
(16 −QAM)
1.2.2
From Sample SNR to Eb/N0
Assume the transmitted symbols are mapped to rectangular baseband signal pulses of duration Tsymb,
sampled with frequency fsampl, with complex envelopes corresponding to the constellation points of the
signal-space representation used above. These rectangular pulses are then modulated by a given carrier
frequency, transmitted through a noisy channel, downconverted in a receiver and passed to a matched
ﬁlter or correlator for signal detection.
Figure 1.5 shows an example of two BPSK symbols transmitted and received as described above. In
this example, the signal-to-noise ratio per sample is deﬁned as SNR = A2/σ n2, where σ n2 is the sample
variance of the real-valued noise process. It can be seen that, based on any individual sample of the
received signals, the probability of error is quite large. However, calculating the averages (plotted with
dashed lines in Figure 1.5) of the signals over their entire durations (0.1 s, containing 100 samples) gives
values for the signal envelopes that are very close to the correct values −1 and 1, thus reducing the effect
of the added noise considerably. It is clear that in this case, the sample SNR is no longer enough to
determine the probability of error at the receiver. The relevant question is how should the sample SNR
be scaled to obtain the correct error probability? We study this using BPSK as an example.
Figure 1.5
Two noisy signal envelopes and their averages. For this example, Tsymb = 0.1 s, fsampl= 1000 Hz, A1 =
–A0 = 1, Eb/N0 = 15 dB ↔SNR = –5 dB

6
Modulation and Coding Techniques in Wireless Communications
As above, the probability of symbol (bit) error based on the signal-space representation for BPSK
over an AWGN channel is:
Pe = P (N < −A1) =
 −A1
−∞
1
σn
√
2π
exp

−x2
2σ 2
n

dx
where N is a normally distributed random variable with standard deviation σ n and zero mean, and it is
assumed (without loss of generality) that the signal amplitude A1 > 0 (corresponding to a 1 being sent).
This can be thought of as transmitting a single sample of the signal envelope. Sampling a received signal
envelope S(t) + N(t) at k points produces a sequence of samples S(i·Tsampl) + N(i·Tsampl), where Tsampl =
1/fsampl, and i = 1. . .k. A correlator receiver for BPSK may use the following test statistic to decide
whether a 1 was most likely to be transmitted:
Z = A1

k

i=1

S

i · Tsampl

+ N

i · Tsampl


=
k

i=1

A1S

i · Tsampl

+
k

i=1

A1N

i · Tsampl

Assuming that a 1 was indeed sent, a false decision will be made if:
A1
k

i=1
N

i · Tsampl

< −k · A2
1 ⇔1
k N

i · Tsampl

< −A1
or
¯N < −A1
denoting the sample mean of the noise as ¯N. We note that the expression is the same as for the single
sample case, only with the normal random variable replaced by the sample mean of k samples from a
normal distribution. Basic results of statistics state that this sample mean is also normally distributed, in
this case with mean zero and standard deviation σ ¯N = σn/
√
k. We thus ﬁnd that the error probability in
this example is determined by the ratio k · (σ 2
s /σ 2
n ), or k times the sample SNR.
It should be noted that although we used BPSK as an example to simplify the relevant expressions,
the above result is not restricted only to BPSK. In fact, the obtained expression k · (σ 2
s /σ 2
n ) is generally
used in a form derived as follows:
k · σ 2
s
σ 2
n
= Tsymb
Tsampl
·
¯PS
¯PN
=
¯PS · Tsymb

1/fsampl

· N0Bn
= ES
N0
In the above, N0 is the noise power spectral density and Bn is the noise bandwidth. Note that the signal
energy ES = ¯PS · Tsymb, and that Bn = fsampl (this is based on the Shannon-Nyquist sampling theorem
applied for complex samples). Note also that here it is implicitly assumed that the signal bandwidth
corresponds to the Nyquist frequency; if the signal is oversampled, care should be taken in performance
analysis to include only the noise bandwidth which overlaps with the spectrum of the signal. Finally,
the ratio of energy per bit to noise power spectral density Eb/N0, very commonly used as a measure for
signal quality, is obtained as:
Eb
N0
= 1
nb
Es
N0
where nb is the number of bits per transmitted symbol.
1.3
Fading Processes in Wireless Communication Channels
Additive noise is present in all communication systems. It is a fundamental result of information
theory that the ratio of signal and noise powers at the receiver determines the capacity, or maximum

Channel Models and Reliable Communication
7
Figure 1.6
System model for transmitting information through a channel with additive white Gaussian noise
achievable rate of error-free transmission of information, of a channel. Generally, multiplicative effects
of a communication channel, or fading, can be represented as a convolution of the transmitted signal
with the channel impulse response, as illustrated in Figure 1.6. A general effect of fading is to reduce the
signal power arriving at the receiver. Since the noise power at the receiver is independent of the useful
signal, and the noise component does not experience fading, a fading channel generally reduces the ratio
of the signal power to the noise power at the receiver, thus also reducing the transmission capacity.
The distortion, or noise, caused by a communication channel to the transmitted signal can be divided
into multiplicative and additive components; the latter was considered above. Multiplicative noise,
or fading, can be deﬁned as the relative difference between the powers contained in corresponding
sections of the transmitted and received signals. Factors that typically contribute to the fading in wireless
communication systems are the transmitter and receiver antenna and analog front-end characteristics,
absorption of the signal power by the propagation media, and reﬂection, refraction, scattering and
diffraction caused by obstacles in the propagation path. The receiver experiences the combined effect of
all these physical factors, which vary according to the positions of the receiver and transmitter within
the propagation environment. It should be noted that it is generally possible to describe the effects of
a communication channel entirely by its impulse response as illustrated in Figure 1.6. However, it is
typical that estimation of the average power conveyed by a transmission channel is performed separately
from the modelling of the channel’s impulse response, which is then power-normalized. We also apply
this principle in the following discussion on fading processes in wireless channels.
Fading in wireless channels is in literature typically characterized as a concatenation or superposition
of several types of fading processes. These processes are often classiﬁed using the qualitative terms path
loss, shadowing, and multipath fading, which is also often referred to as fast fading. However, these
fading processes cannot in general be considered fully independent of each other, and indeed in many
references (for example in [1],[12]) path loss and shadowing are not considered as separate processes.
Justiﬁcation for this will be subsequently considered in more detail. In the following, fading is primarily
classiﬁed according to the typical variation from the mean attenuation over a spatial region of given
magnitude. The terms large-scale, medium-scale, and small-scale fading are thus used.
Small-scale fading corresponds directly to multipath fading, and involves signal power variations of
magnitude up to 40 dB on a spatial scale of a half-wavelength (for example 50 cm at 300 MHz). Averaging
the total fading in the receiver over a spatial interval signiﬁcantly larger than a half-wavelength provides
information on the medium-scale fading, or shadowing. Over spatial intervals of magnitude hundreds of
meters, medium-scale fading involves signal power variations up to magnitude 20 dB. Again, averaging
the total fading over a spatial interval of several hundred meters provides an estimate for the large-scale
fading, which may vary up to 150 dB over the considered coverage area. [9] These denominations do not
suggest a different origin or effect for the fading types, but rather signify that typically different variation
around the mean attenuation is observed at different spatial scales, or observation windows.
1.3.1
Large-Scale Fading (Path Loss)
Large-scale fading, or path loss, is commonly modelled for signals at a given carrier frequency as a
deterministic function of the distance between the transmitter and receiver, and is affected by several

8
Modulation and Coding Techniques in Wireless Communications
parameters such as antenna gains and properties of the propagation environment between the transmitter
and receiver. Main physical factors that contribute to large-scale fading are free-space loss, or the
dispersion of the transmitted signal power into surrounding space, plane earth loss, and absorption of the
signal power by the propagation medium.
Free-space loss corresponds to dispersion of transmitted signal power into the space surrounding the
transmitter antenna. The most simple free-space loss estimation is obtained by assuming that signals
are transmitted omnidirectionally, that is, power is radiated equally to all directions, and there are no
obstacles within or around the transmission area, which would affect the propagation of electromagnetic
signals. With such assumptions, the power density at a distance d meters from the transmitter can be
written as:
pR =
PT
4πd2 (watts/m2)
where PT is the total transmitted signal power. This expression is obtained simply by dividing the
transmitted power over the surface area of a sphere surrounding the transmitter antenna.
The assumptions speciﬁed above are not practical in most communication scenarios. Ignoring for now
the likely presence of obstacles around the transmitter and receiver, the free-space loss deﬁned above
can be modiﬁed into a more realistic expression by taking into account the antenna characteristics of the
transmitter and receiver. Speciﬁcally, the actual received power depends on the effective aperture area
of the receiver antenna, which can be written as:
AR = λ2G R
4π
(m2)
where λ is the wavelength of the transmitted signal and GR is the receiver antenna gain, which is affected
by the directivity of the antenna – speciﬁcally the antenna radiation patterns in the direction of the
arriving signal. It should be noted that the above expression means that the received power decreases
along with an increase in the carrier frequency. Finally, taking into account the transmitter antenna gain
factor GT, the received power after free-space loss can be written as:
PR = GT pR AR = PT GT G Rλ2
(4πd)2
(W)
Note that in the above, the variables are assumed to be given in the linear scale, that is, not in decibels.
Figure 1.7 shows examples of the received power as a function of distance from the transmitted antenna
for different carrier frequencies, with the antenna gains and transmitted signal power normalized to
unity. Formally, an expression for the path loss PL, that is, attenuation of the transmitted signal, is
obtained from the above in decibels as:
PL,dB = 10 log10
PT
PR
=10 log10
(4πd)2
GT G Rλ2 = 20 log10(4πd) −10 log10(GT ) −10 log10(G R) −20 log10(λ)
Real signals do not follow the simple free-space attenuation model partly due to the presence of the
ground plane close to the transmitter and receiver. This causes so called plane earth loss, where signal
components reﬂected from the ground plane destructively interfere with the received useful signal. The
amount of plane earth loss depends on the distance and heights of the transmitter and receiver antennas.
Another signiﬁcant cause for attenuation is the absorption of signal power by atmospheric gases and
hydrometeors (such as clouds, rain, snow etc.).
In addition to these factors, large-scale fading is typically deﬁned to include the average of the
shadowing and multipath fading effects. Thus the type of propagation environment must be taken into
account in the total power loss. This has been done for example in the widely used Okumura-Hata
[13],[14] and COST 231 [15] models by approximating the parameters for the propagation loss for
speciﬁc environments and transmission setups from sets of ﬁeld measurements [1]. As an example, the

Channel Models and Reliable Communication
9
0
50
100
150
200
-90
-80
-70
-60
-50
-40
-30
-20
-10
0
d (m)
PR/PT (dB)
fC = 30 MHz
fC = 100 MHz
fC = 300 MHz
Figure 1.7
Examples of free-space loss for different carrier frequencies fC, with the antenna gains and transmitted
power normalized to 1
Hata model, which is based on the empirical work of Okumura, gives the following expression for path
loss in urban areas (in dB):
PL,dB(d) = 69.55 + 26.16 log10( fC) −13.82 log10(hT ) −a(h R) +

44.9 −6.55 log10(hT )

log10(d)
where fC is again the carrier frequency, hT and hR are the heights of the transmitter and receiver antennas,
respectively, and a(hR) is a correction factor, which is speciﬁed according to the size of the considered
reception area. For large urban areas with the carrier frequencies of magnitude fC>300 MHz, this
correction factor is given as:
a(h R) = 3.2(log10(11.75h R))2 −4.97
For other propagation scenarios, such as suburban and various rural areas, correction terms for the path
loss expression given above are speciﬁed.
The Hata model is considered to be valid roughly in the carrier frequency range 150—1500 MHz and
for distances d > 1 km, which means that it is not generally valid for example for modelling modern
cellular systems with high carrier frequencies and small cell sizes [19]. In the European COST 231
cooperation, an extension to the Hata model was speciﬁed, where the carrier frequency is restricted
between 1.5 and 2 GHz, the transmitter antenna height between 30 to 200 m, the receiver antenna
between 1 and 10 m, and the transmission distance between 1 and 20 km. With these limitations, the
path loss for an urban scenario according to the COST 231 extension to the Hata model is obtained from
[15] as:
PL,dB(d) = 46.3 + 33.9 log10( fC) −13.82 log10(hT ) −a(h R) +

44.9 −6.55 log10(hT )

log10(d) + C
where a(hR) is as in the Hata model, and C is 0 dB for medium-size urban areas and suburbs, and 3 dB
for metropolitan areas.
The empirical path loss models outlined above are determined by averaging the results of large
sets of measurements performed in propagation environments with speciﬁc characteristics. Similar
path loss models can be obtained using analytic methods by assuming a statistical terrain description,

10
Modulation and Coding Techniques in Wireless Communications
where obstacles of suitable geometry are distributed randomly in the propagation environment, and
by calculating the average propagation loss based on such approximations. For example, [11] contains
a detailed description of deriving functions for path loss in various land environments using analytic
methods. The physical mechanisms that cause the environment-speciﬁc propagation loss are the same
for large-scale fading as for medium-scale fading, and are considered in more detail shortly.
Deterministic large-scale fading models – where estimations of the path loss are obtained as functions
of the propagation distance – are useful in applications where it is sufﬁcient to have rough estimates on
the average attenuation of signal power over a large transmission area, or it is impractical to approximate
signal attenuation in more detail. These models are typically used for example in radio resource manage-
ment and planning of large wireless networks. It should be noted that expressions for large-scale fading
can be obtained for generic environments using statistical methods as outlined above or for speciﬁc
transmission sites by averaging over a site-speciﬁc approximation of medium-scale fading. However,
this is typically a computationally involved task, as described in the following.
1.3.2
Medium-Scale Fading (Shadowing)
As with large-scale fading, methods for modelling medium-scale fading can typically be categorized as
statistical or site-speciﬁc. In the statistical approach, the fading is typically assumed – based on empirical
data – to follow a lognormal distribution. The mean for this distribution can be obtained for a given carrier
frequency and distance from the transmitter using expressions for large-scale fading as outlined in the
previous subsection. The standard deviation and autocorrelation of the lognormal distribution are model
parameters, which must be selected according to the propagation environment. This standard deviation
is known as the location variability, and it determines the range of ﬂuctuation of the signal ﬁeld strength
around the mean value. Its value increases with frequency, and is also dependent on the propagation
scenario – for example, the standard deviation is typically larger in suburban areas than in open areas.
The standard deviation is typically in the range of 5 to 12 dB. Spatial correlation of shadowing is usually
modelled using a ﬁrst-order exponential model [20]:
ρ(d) = e−d/dcorr
where dcorr is the distance over which the correlation is reduced by e−1. This distance is typically of the
same order as the sizes of blocking objects or object clusters within the transmission area.
Anintuitivejustiﬁcationfor theapplicabilityof alognormal model for medium-scale, or shadowfading,
can be obtained by considering the total attenuation of the signal components arriving at the receiver in
an environment with a large number of surrounding obstacles. Typically the signal components arriving
at the receiver have passed through a number of obstacles of random dimensions, each attenuating the
signal power by some multiplicative factor. The product of these fading factors contributes to the total
power attenuation. In the logarithmic scale, the product of several fading components is represented as
the sum of their logarithms, and again according to the central limit theorem the distribution of this sum
approaches a normal distribution. Figure 1.8 shows examples of log-normal medium-scale fading for
standard deviation 10 dB, and correlation distances 20 and 50 meters.
If site-speciﬁc data on the terrain proﬁle and obstructions along the propagation path from the trans-
mitter to the receiver are available, an approximation for medium-scale fading can be calculated as
summarized in [9]:
1. Locate the positions and heights of the antennas.
2. Construct the great circle – or geodesic – path between the antennas. This represents the shortest
distance between the two terminals measured across the Earth’s surface.
3. Derive the terrain path proﬁle. These are readily obtained from digital terrain maps, but it is of course
also possible to use traditional contour proﬁle maps.

Channel Models and Reliable Communication
11
0
50
100
150
200
-20
-15
-10
-5
0
5
10
15
20
d (m)
Lognormal fading coefficient (dB)
Correlation distance 20 m
Correlation distance 50 m
Figure 1.8
Examples of lognormal medium-scale fading processes with standard deviation 10 dB, and correlation
distances 20 and 50 meters
4. Uplift the terrain proﬁle by representative heights for any known buildings along the path.
5. Select a value for the effective Earth radius factor appropriate to the percentage of time being
designed for; modify the path proﬁle by this value. The effective Earth radius factor is a constant
used to increase the effective radius of the Earth as seen by the propagating signal. This is due
to tropospheric refraction, which makes the propagation paths curve slightly towards the ground.
Since the atmospheric refractivity varies with pressure, temperature and water vapour pressure of the
atmosphere, the correct effective Earth radius factor will vary according to location and time.
6. Calculate the free-space loss for the path.
7. If any obstructions exist within 0.6 times the ﬁrst Fresnel zone of the propagation path, calculate
diffraction over these obstructions and account for the excess loss in the fading. The Fresnel zones
can be thought of as containing the main propagating energy in the wave; obstructions occupying less
than 0.6 times the ﬁrst Fresnel zone lead to an approximately 0 dB loss of signal power.
8. Compute the path length which passes through trees and add the corresponding extra loss.
Detailed descriptions for each of the steps above are given in [9]. It should be noted that the approach
outlined above accounts only for obstructions along the direct propagation path between the transmitter
and receiver. Considering propagation paths corresponding to reﬂections from objects not along the
direct path leads to small-scale fading models, considered in the following sections.
1.3.3
Small-Scale Fading (Multipath Propagation)
Small-scale fading is caused by the interference between several reﬂected, diffracted or scattered signals
arriving at the receiver. This effect is commonly called multipath propagation. Since the reﬂected
propagation paths may be of different lengths, corresponding to different arrival times for variously
faded copies of the transmitted signal at the receiver, the effect of small-scale fading is in the digital
domain similar to a ﬁnite impulse response (FIR) ﬁlter with complex-valued coefﬁcients between the
transmitter and receiver. Thus, depending on the path delay proﬁle of the channel, small-scale fading

12
Modulation and Coding Techniques in Wireless Communications
0
50
100
150
200
-20
-15
-10
-5
0
5
10
d (m)
Small-scale fading coefficient (dB)
fC = 30 Hz
fC = 100 Hz
Figure 1.9
Examples of small-scale Rayleigh fading processes with normalized average power, and carrier fre-
quencies of 30 and 100 Hz
may vary rapidly not only in the temporal and spatial domains, but also in the frequency domain. The
rate of spatial variation of small-scale power attenuation is generally dependent on the carrier frequency
of the transmitted signal. Figure 1.9 shows examples of small-scale fading for carrier frequencies 30
and 100 Hz. Figure 1.10 shows an example of the combined effects of large- medium- and small-scale
fading.
Again, small-scale fading models can be divided into statistical and site-speciﬁc approaches. Site-
speciﬁc models typically apply ray-tracing methods, where detailed three-dimensional models of the
propagation environment are used to calculate propagation paths between the transmitter and receiver.
Such techniques were originally developed for indoor environments, but have also been extended to
dense urban outdoor areas [1]. Especially for modelling unconﬁned outdoor environments, ray-tracing
models require large amounts of data and are computationally demanding. In the rest of this chapter we
focus on statistical models for multipath propagation.
The causes of multipath propagation may be different in different channels. For example, it may be
caused by reﬂections from buildings, objects or the ground surface in wireless communication channels,
the reﬂection from walls and objects in wireless local area networks, reﬂections from the ionosphere in
high-frequency radio transmission, and so on. Multipath propagation may be schematically described as
in Figure 1.11, and mechanisms causing it are listed in Table 1.1 [21],[22]. As can be seen from Table
1.1, fading and propagation delay dispersion may arise even during wired transmission.
Small-scale fading is caused by the interference of multiple signals with random relative phases. Such
interference causes random variation of the amplitude of the received signal. This increases the error
probability in the system, since it reduces the signal-to-noise ratio. Dispersion of the delays of signal
components arriving at a receiver is caused by the difference in the lengths of different propagation paths.
If the delay difference is comparable with the symbol period, then the delayed responses from one signal
may impose on the next signal, causing intersymbol interference (ISI) and frequency-selective fading.
One of the most common models for delay-dispersive wireless propagation channels is the representa-
tion of the channel as a linear ﬁlter. The channel is described by a time-varying impulse response h(τ, t).
Applying the Fourier transform to h(τ, t) by the variable τ gives the time-varying frequency response

Channel Models and Reliable Communication
13
0
20
40
60
80
100
120
140
160
180
200
-90
-80
-70
-60
-50
-40
-30
-20
-10
0
d (m)
PR/PT (dB)
Large-scale fading
Large and medium-scale fading
Large, medium, and small-scale fading
Figure 1.10
Combined effects of the three considered fading processes (large/medium/small-scale). The normalized
received power is shown for carrier frequency 300 Hz, transmitted power and antenna gains set to unity, standard
deviation of lognormal shadowing 10 dB with correlation distance 20 m, and average power of Rayleigh-distributed
small-scale fading set to unity
Figure 1.11
Multi-level spreading

14
Modulation and Coding Techniques in Wireless Communications
Table 1.1
Multipath mechanisms
System
Multipath mechanism
1
HF radio
Reﬂection from multiple ionospheric layers
2
Mobile and personal radio
Reﬂection and scattering from buildings, terrain, etc.
3
Microwave point-to-point links
Atmospheric refraction and reﬂection
4
Atmospheric refraction and reﬂection
Ground and building reﬂection
5
Radio LAN/indoor radio
Reﬂection from walls and building structure
6
Diffuse infra-red
Reﬂection from walls
7
Multimode optical ﬁbre
Multimode propagation
8
Telephone/cable network
Reﬂections from terminations
H( f, t), while the Fourier transform of h(τ, t) by the variable t gives the scattering function S(τ, ν),
which determines the Doppler spectrum of received signal as a function of the delay. The mean squared
amplitudes of the channel impulse response deﬁne the power delay proﬁle of the channel. An example of
such a proﬁle is shown in Figure 1.12. In the following section we consider in more detail this statistical
model for multipath propagation outlined above.
1.4
Modelling Frequency-Nonselective Fading
1.4.1
Rayleigh and Rice Distributions
Let µ1, µ2 be two normally distributed random variables with zero mean and variance σ 02: µ1,µ2∼N(0,
σ 02). A random variable R1, deﬁned as R1 =

µ2
1 + µ2
2 has the probability density function:
pR1(r) =
⎧
⎨
⎩
r
σ 2
0
exp

−r 2
2σ 2
0

0
,
r ≥0
r < 0
and is said to be Rayleigh distributed.
Deﬁning a random variable R2 as R2 =

(µ1 + a)2 + µ2
2, a ∈ℜresults in the probability density
function:
pR1(r) =
⎧
⎨
⎩
r
σ 2
0
exp

−r 2 + a2
2σ 2
0

I0
ra
σ 2
0

0
,
r ≥0
r < 0
where I0 is the modiﬁed Bessel function of the ﬁrst kind and zero order. R2 is said to be Rice distributed.
h(τ)
hi
ti
t
Figure 1.12
Impulse response of a delay-dispersive propagation channel

Channel Models and Reliable Communication
15
1.4.2
Maximum Doppler Frequency Shift
In the following, the maximum frequency shift of the received signal experienced by a moving receiver
due to the Doppler effect is denoted as fD, and can be obtained from:
fD = |⃗v|
c fC
(1.2)
where ⃗v is the receiver velocity (a stationary transmitter is assumed), c is the speed of light, and fC
is the carrier frequency of the signal. Of course, different frequency components in wideband signals
experience different Doppler shifts, which causes some spreading of the signal bandwidth, but this
difference is considered small enough to be neglected, as the ratio between the signal bandwidth and
carrier frequency is typically small.
The maximum Doppler shift given by (1.2) is an absolute value that corresponds to situations where
the receiver is moving radially towards (corresponding to a Doppler shift of +fD) or away from the
transmitter (corresponding to −fD). The Doppler shift corresponding to other directions of movement
can be obtained as:
fD,α = fD cos α
where α is the angle between directions of the receiver velocity and the arriving signal.
1.4.3
Wide-Sense Stationary Stochastic Processes
A stochastic process is a family of random variables{Xt}t∈T , where T can be any set. If T = ℵ, the
stochastic process is simply a sequence of random variables Xn. Such a sequence is called strict-sense
stationary if and only if for any n = 0,1, . . . , and any k = 1,2, . . . , (X0, . . . ,Xn) and (Xk, . . . , Xk+n) have
the same distribution. [10]
A stochastic process is said to be wide-sense stationary (WSS) if the mean and autocorrelation of the
random variables Xn are invariant to a shift of the origin. More speciﬁcally, for any n = 0,1, . . . , k =
0,1, . . . , E[Xn] has a constant value and:
E

X ∗
n Xk

= rXX (|n −k|)
where the asterisk denotes complex conjugation and rXX(τ) is an autocorrelation function whose value
depends only on the time shift τ [16]. Wide-sense stationarity is a weaker condition than strict-sense
stationarity, that is, every strict-sense stationary process is wide-sense stationarity, but not vice versa.
For the small-scale fading models described in the following, it is assumed that signals propagate to
the receiver antenna along a horizontal plane. Furthermore, it is assumed that the angles of arrival of
electromagnetic waves at the receiver antenna are uniformly distributed and that the receiver antenna
has a circular-symmetric radiation pattern. As mentioned before, the transmitter antenna is assumed to
be stationary, while the receiver moves with velocity ⃗v.
1.4.4
Rayleigh and Rice Models for Frequency-Nonselective Fading
If the propagation delay differences of the reﬂected and scattered signal components at the receiver
are negligible compared to the symbol interval of the transmission, the channel impulse response can
in practice be approximated by a single delta function multiplied by a random variable that describes
the amplitude fading. Thus there will be no signiﬁcant interference caused by overlapping successive
transmitted symbols at the receiver, or intersymbol interference, ISI. Also, the channel affects all fre-
quency components of the signal similarly, and the term frequency-nonselective fading can be used. In

16
Modulation and Coding Techniques in Wireless Communications
this case, the small-scale fading is wholly characterized by the distribution and time-variant behaviour
of the channel coefﬁcient random variable.
In non-line-of-sight (NLOS) conditions, where there is no direct, unobstructed propagation path from
the transmitter to the receiver, both the in-phase and quadrature parts of the received signal are assumed
to consist of sums of large numbers of independently faded scattered components. Thus, by the central
limit theorem, the fading of the in-phase and quadrature – or real and imaginary – components of the
signal can be approximated as independent normally distributed random variables. As described above,
this leads to a Rayleigh distribution for the amplitude of the complex fading coefﬁcient. The phase for
the complex fading is uniformly distributed between 0 and 2π.
In line-of-sight (LOS) conditions, the received signal can be characterized as a sum of Rayleigh faded
NLOS components as described above, and a coherent LOS component with relatively constant power
determined by the medium-scale fading. This can be approximated by adding a constant representing
the amplitude of the line-of-sight signal contribution to the real part of the complex fading coefﬁcient,
which leads to a Rice distribution for the fading amplitude.
As small-scale fading is a function of the receiver location, it is clear that the rate of variation of the
fading in time is dependent on the speed of the receiver. Analytically, the receiver velocity determines the
Doppler frequency shift of the received signal as given in Section 1.2.3. Based on the maximum Doppler
frequency and the angular probability distribution of the received signal components the probability
density function of the Doppler frequencies can be calculated. This probability density function is
directly proportional to the Doppler power spectral density of the received in-phase and quadrature
signal components, the inverse Fourier transform of which gives the autocorrelation function of the
channel fading coefﬁcient [16]. It should also be noted that the primary detrimental effect of the Doppler
shift in a wireless channel is due to the random directions of arrival of the reﬂected signal components
arriving at the receiver. This randomness means that the received signals are randomly Doppler shifted
between –fD and fD, which causes a nontrivial broadening of the signal spectrum, and corresponding
interference between signal components adjacent in the frequency domain.
Given the assumptions speciﬁed in Section 1.2.3, for the NLOS case the Doppler power spectral
distribution is completely determined by the maximum Doppler frequency shift given by (1.2), and
follows the so called Jakes power spectral density, or Clarke power spectral density. The LOS case
differs from the above in that the Doppler power spectrum also contains a component corresponding to
the power and Doppler shift of the line-of-sight signal component. Figure 1.13 illustrates the probability
density function of the Doppler shifts and the corresponding autocorrelation function for the Rayleigh
fading process. The autocorrelation function can be written as given in [16]:
rXX(τ) = 2σ 2
0 J0 (2π fDτ)
where J0(.) is the zeroth-order Bessel function of the ﬁrst kind. The coherence time TC of the fading
process can be deﬁned as the time interval that fulﬁlls |rXX(TC)| = 0.5 rXX(0), that is, the time interval
after which the value of the autocorrelation has decreased to half of the value at the origin. For the
above, J0 (2π fDτ) ≈0.5 ⇔2π fDτ ≈1.52. Thus TC ≈1.52/(2πfD). It should however be noted that the
coefﬁcient 0.5 assumed above is in no way unique, and also other values for the coherence time could
be assigned. However, regardless of the numerical deﬁnition, it is important to note that the coherence
time is reciprocally proportional to the maximum Doppler frequency fD.
In practice, the time-variant channel coefﬁcient for small-scale frequency-nonselective fading can
be generated by drawing two sequences of normally distributed random numbers – or white Gaussian
noise – corresponding to the components of the desired Rayleigh or Rice fading. One way to obtain the
correct autocorrelation for the fading is then to low pass ﬁlter both of these sequences of random
numbers according to the Jakes Doppler spectrum, producing coloured Gaussian noise. Using the
ﬁltered sequences as the real and imaginary components of the complex fading coefﬁcient results in
approximately the desired probability distribution and autocorrelation described above. Non-ideality

Channel Models and Reliable Communication
17
3
2
1
1
0
0.5
–0.5
0
–1
–0.5
0
f/fD
pf(f )
rXX(τ)
0.5
1
0
5
10
15
20
2π fDt
25
30
Figure 1.13
Probability density function for Doppler frequency shifts corresponding to the Jakes power spectral
density (upper plot), and the corresponding autocorrelation function (lower plot)
arises with this approach mainly from the fact that neither white Gaussian noise nor ideal ﬁlters can be
realized exactly.
In modelling small-scale fading as described above, the mean and autocorrelation function are typically
kept constant, which means that the fading process is wide-sense stationary as deﬁned in Section 1.4.3.
It is clear that the mean value of the small-scale fading is dependent on medium-and large-scale fading
processes, and thus the assumption of wide-sense stationarity is not generally valid. However, it has been
empirically found that small-scale fading can be approximated as a WSS process for short distances (of
order tens of wavelengths).
1.4.5
SNR in Rayleigh Fading Channels
In fading channels, the average power of the received signal should be considered a random variable
as speciﬁed above. Thus, denoting for example the instantaneous signal-to-noise ratio for a Rayleigh
channel by random variable R, the SNR can be written as:
R =
¯PS R2
¯PN
where R is the Rayleigh distributed channel coefﬁcient amplitude. The average SNR, denoted by ρ, is
obtained as:
ρ = E

R2 ¯PS
¯PN
= 2σ 2
0 ¯PS
¯PN
where σ0 is the variance of the Gaussian components used to deﬁne the Rayleigh distribution in Section
1.2.3. In simulations, the average power conveyed by a Rayleigh channel can thus be normalized by
selecting σ0 = 1/
√
2. The probability distribution function of R is obtained as presented for example

18
Modulation and Coding Techniques in Wireless Communications
in reference [9], and can be written as:
p (λR) = 1
ρ exp
−λR
ρ

,
λR > 0
1.5
WSSUS Models for Frequency-Selective Fading
1.5.1
Basic Principles
If the range of propagation delay times from the transmitter to the receiver is not negligible compared
to the symbol duration of the transmitted signal, additional distortions of the received signal, such as
intersymbol interference and frequency-selective fading, are introduced. In such cases, the frequency-
nonselective fading models described above are not generally sufﬁcient to describe the channel.
Adhering to the assumptions given in the previous section, a physical basis for modelling a frequency-
selective channel can be found in the ellipses model illustrated for example in [9] and [16]. In this
simpliﬁed representation of the scattering environment the transmitter and receiver are thought to be at
the focal points of elliptical scattering zones, where each ellipse – or set of points with a ﬁxed value for
the sum of distances to the transmitter and receiver – deﬁnes the geometries of all propagation paths
corresponding to a given propagation delay value. This principle is illustrated in Figure 1.14. Thus it is
possible to consider the signal components corresponding to each discrete delay value as sums of large
numbers of scattered signals with uniform distributions for the angle of arrival at the receiver. This in
turn makes it possible to determine the time-variant fading coefﬁcient for each discrete delay value as
speciﬁed in the previous subsection for frequency-nonselective fading.
Frequency-selective channel models are typically implemented as FIR ﬁlters with time-variant com-
plex coefﬁcients by selecting Nt ﬁxed discrete delay values corresponding to the nonzero ﬁlter coef-
ﬁcients. The average power for each of the Nt delayed signal components is selected according to a
speciﬁc power-delay proﬁle (PDP). Given the average powers of each of the nonzero components of
the FIR ﬁlter, the time-variant complex values for the ﬁlter coefﬁcients are generated as WSS fading
processes, as described in the previous section. The Nt discrete scattering components of the channel
are typically deﬁned as being statistically uncorrelated, which leads to the denomination wide-sense
stationary uncorrelated scattering, or WSSUS, models.
E2
Tx
Rx
(T1, P1)
Delay
Power
(T2, P2)
E1
Figure 1.14
Elliptical scattering zones and a corresponding power delay proﬁle

Channel Models and Reliable Communication
19
The parameters that characterize a WSSUS channel model according to a given transmission scenario
are the PDP, the number and delays of the discrete ﬁlter coefﬁcients, or taps, and the types of fading
processes and Doppler spectra applied for the individual taps. Typically the continuous-time power delay
proﬁle is selected according to an exponential decrease of received signal power as a function of the prop-
agation delay, although sometimes also mixtures of exponential distributions are used. Furthermore, the
tap amplitudes are most commonly modelled as Rayleigh fading processes, with possibly a short-delay
component deﬁned as line-of-sight, and thus Rice distributed. The Doppler spectra for the independent
tap fading processes are typically assumed to have the Jakes distribution, although for long-delay com-
ponents, or far echoes, Gaussian power spectral densities have been found more accurate in some cases.
1.5.2
Deﬁnitions
For
a
channel
with
a
continuous
exponential
power
delay
proﬁle
of
the
form
S (τ) =
(1/α) exp(−τ/α), τ > 0,α > 0, the mean delay is obtained as ¯τ = α and the delay spread SD as the
square root of the second moment S2
D = α2. The Fourier transform of S(τ) is:
ψ ( f ) =
1/α
1/α + j2π f
which gives a measure of the correlation of the fading for a frequency separation of f Hz. The coherence
bandwidth BC can be deﬁned – similarly to the coherence time TC considered previously – as the frequency
interval that fulﬁls |ψ(BC)| = 0.5 ψ(0), which is obtained by writing

(1/α)2 + (2π BC)2 = 2/α, and
results in:
BC =
√
3
2π SD
Again, regardless of the numerical deﬁnition it is clear that the coherence bandwidth is reciprocally pro-
portional to the delay spread of an exponential-PDP WSSUS channel. It is also evident that a continuous
exponential distribution is characterized by the single free parameter α, which can be selected according
to a given delay spread SD or coherence bandwidth BC. After deﬁning the continuous distribution, it still
remains to determine a discrete power-delay proﬁle that sufﬁciently describes the selected distribution.
A discrete power-delay proﬁle consists of sets of propagation delay values τ i, and average scattered
signal powers Pi,i = 1, . . . ,Nt. In the discrete case, the delay spread can be written as:
SD =



 1
PT
Nt

i=1
Piτ 2
i −

1
PT
Nt

i=1
Piτi
2
where PT is the total power conveyed by the channel, given by PT = Nt
i=1 Pi. Unless more speciﬁc
information on the propagation scenario to be modelled is available, it is reasonable to assume that
the delay times between consecutive nonzero components in the discrete PDP follow an exponential
distribution. This means that the number of channel components within a given delay range follows a
Poisson distribution, and those components are uniformly distributed within the given delay range.
References
[1] M. C. Jeruchim, P. Balaban, K. S. Shanmugan, Simulation of Communication Systems, 2nd edition, Kluwer
Academic, New York, 2000.
[2] J. G. Proakis, Digital Communications, 3rd edition, McGraw-Hill, 1995.
[3] R. E. Ziemer, R. W. Peterson, Introduction to Digital Communication, Prentice Hall, 2001.

20
Modulation and Coding Techniques in Wireless Communications
[4] S. Haykin, Communication Systems, John Wiley & Sons, Ltd., 2001.
[5] T. K. Moon, Error Correction Coding – Mathematical Methods and Algorithms, John Wiley & Sons, Ltd., 2005.
[6] Y. Q. Shi, X. M. Zhang, Z.-C. Ni, N. Ansari, “Interleaving for combating bursts of errors,” IEEE Circuits and
Systems Magazine, vol. 4, First Quarter 2004, 29–42.
[7] C. Oestges, B. Clerckx, MIMO Wireless Communications: From Real-World Propagation to Space-Time Code
Design, Elsevier, 2007.
[8] E. Lutz, D. Cygan, M. Dippold, F. Dolainsky, W. Papke, “The Land Mobile Satellite Communication
Channel – Recording, Statistics and Channel Model,” IEEE Trans. Veh. Technol., vol. 40, May 1991, 375–386.
[9] S. R. Saunders, A. Arag´on-Zavala, Antennas and Propagation for Wireless Communication Systems, 2nd edition,
John Wiley & Sons, Ltd., Chichester, 2007.
[10] R. B. Ash, C. A. Dol´eans-Dade, Probability & Measure Theory, Second Edition, Academic Press, San Diego,
2000.
[11] N. Blaunstein, J. B. Andersen, Multipath Phenomena in Cellular Networks, Artech House, Boston, 2002.
[12] B. Sklar, “Rayleigh Fading Channels in Mobile Digital Communication Systems Part I: Characterization,” IEEE
Communications Magazine, September 1997, 136-146.
[13] Y. Okumura, E. Ohmori, K. Fukuda, “Field Strength and its Variability in VHF and UHF Land Mobile Radio
Service,” Rev. Elec. Commun. Lab., vol. 16, 1968, 825–873.
[14] M. Hata, “Empirical Formulae for Propagation Loss in Land Mobile Radio Services,” IEEE Trans. Veh. Technol.,
vol. VT-29, 1980, 317–325.
[15] COST 231, “Urban Transmission Loss Models for Mobile Radio in the 900 MHz and 1800 MHz Bands (rev.
2),” COST 231 TD(90), 119 Rev. 2, Den Haag, 1991.
[16] M. P¨atzold, Mobile Fading Channels, John Wiley & Sons, Ltd., Chichester, 2002.
[17] M. R. Spiegel, Mathematical Handbook of Formulas and Tables, McGraw-Hill, Inc., New York, 1994.
[18] T. J.Wang, J. G. Proakis, E. Masry, J. R. Zeidler, “Performance Degradation of OFDM Systems Due to Doppler
Spreading,” IEEE Trans. Wireless Comm., vol. 5, June 2006, 1422–1432.
[19] A. Goldsmith, Wireless Communications, Cambridge University Press, New York, 2005.
[20] M. Gudmunson, “Correlation Model for Shadow Fading in Mobile Radio Systems,” Electronic Letters, vol. 37,
no. 23, pp. 2145–2146, Nov. 1991.
[21] A. Burr. The multipath problem: an overview. In IEE Colloquium on Multipath Countermeasures. London, 23
May 1996, Colloquium Digest 1996/120.
[22] A. Burr. Modulation and Coding for Wireless Communication. Prentice Hall, 2001.
[23] P. Bello. Characterization of randomly time-variant linear channels. IEEE Transactions on Communication
Systems, CS-11; 36–393, 1963.

2
Modulation
Sergei Semenov
Nokia Corporation, Finland
The aim of modulation is to transfer a source data over a channel in a way most suitable for this channel.
That is, the original data should be translated into a form that is compatible with the channel. Since the
scope of this book is wireless communication only radio channel is under consideration. In this case the
data modulates a radio frequency bearer in the form of a sinusoid which is called a carrier wave. This
kind of modulation is called the bandpass modulation since it deals with a bandpass channel. It is possible
to divide the modulation process into two stages: baseband modulation and bandpass modulation. In
this way the baseband modulation consists of translating the original data (analogue or digital) into some
waveforms of low frequency and bandpass modulation consists of modifying the high frequency carrier
wave, or simply carrier, in accordance with waveforms obtained at the output of the baseband modulation
process. Why do we need such a complicated process? Why not transmit the waveforms directly over the
radio channel? One of the reasons, and possibly the main one, is the antenna size. The typical antenna
size is λ/4, where λ is the wavelength. Assume that the waveform at the output of baseband modulation
is the sinusoid with frequency f = 1000 Hz. Then the corresponding wavelength is λ = c/f , where c is
the speed of light. It is easy to verify that the antenna size in this case should be λ/4 ≈3·108
4·103 = 7.5 · 104
m = 75 km. Obviously, this antenna size is unacceptable. However, if the baseband waveform is used
for bandpass modulation of 2.5 GHz carrier the needed antenna size is only about 3 cm.
2.1
Basic Principles of Bandpass Modulation
The wave carrier can be represented in the following form:
s(t) = A(t) · cos (ωct + φ(t))
(2.1)
where A(t) is the amplitude, ωc = 2π fc is the radian frequency of the carrier ( fc is the carrier frequency),
φ(t) is the phase. The bandpass modulation is based on modifying these parameters. In accordance
with whichever parameter is being varied we can distinguish amplitude modulation (AM), frequency
modulation (FM) and phase modulation (PM) or a combination of some of these basic modulation types.
Actually the carrier frequency in (2.1) is constant and in the case of FM the deviation from the carrier
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

22
Modulation and Coding Techniques in Wireless Communications
frequency is varying. And this deviation is deﬁned by a derivative of the phase. In this sense it is possible
to consider FM just as a case of PM.
It is possible to distinguish between two main types of modulation: analog modulation and digital
modulation. The aim of analog modulation is to transfer analog signal, such as speech or TV signal,
over bandpass channel and in this case there is an inﬁnite number of possible states of analog signal to
modulate some parameter of a carrier. The changing of the carrier parameter in this case is continuous
in time in accordance with the changing of original analog signal. The example of analog amplitude
modulation is represented in Figure 2.1. In the case of digital modulation a digital bit stream should
be transferred over the bandpass channel and there is only a limited number of digital symbols to be
represented by the changing of a carrier parameter(s). Each digital symbol has time duration T and the
changing of carrier parameter occurred on the boundary of this time interval. The analog modulation is
beyond the scope of this book and hereafter we will refer to digital modulation as simply modulation.
The examples of different digital modulation types are depicted in Figure 2.2. Usually, the term
shift keying stands for modulation in names of different modulation types when we are referring to
digital modulation. The amplitude modulation is referred to as amplitude-shift keying (ASK), frequency
modulation as frequency-shift keying (FSK), and so on. Shifting here means the changing (modulation) of
some parameter and the word “keying” reﬂects back to the history of the communication: the telegraph.
Speaking about the demodulation process it is possible to recognize two main types: coherent and
noncoherent demodulation. If the demodulator exploits the reference of each possible transmitted signal
including not only the set of used waveforms but also the carrier reference to detect the signal the
demodulation is coherent. In cases when the demodulator does not require the carrier reference the
demodulation is noncoherent. The noncoherent demodulation reduces the implementation complexity of
a demodulator, but the coherent demodulation provides better performance than the noncoherent one.
2.1.1
The Complex Representation of a Bandpass Signal
Very often it is convenient to represent the bandpass signal as a complex exponential function. Moreover
it is possible to consider the modulated bandpass signal as the product of an exponential function
representing carrier with an exponential function representing a baseband signal. In accordance with
Euler’s formula [1]:
exp( jx) = cos(x) + j · sin(x)
(2.2)
it is possible to write the representation of carrier in (2.1) as follows:
s(t) = A(t) · cos (ωct + φ(t)) = Re {A(t) · exp ( j (ωct + φ(t)))}
= Re {A(t) · exp ( jφ(t)) · exp ( jωct)} = Re {b(t) · exp( jωct)}
(2.3)
where function b(t) = A(t) · exp ( jφ(t)) is the baseband signal, exp( jωct) is an unmodulated carrier and
Re {z} is the real part of the complex number z. The baseband signal b(t) can be a complex function
but amplitude A(t) is a real one. Therefore, the modulated bandpass signal can be represented as the
product of two phasors: A(t) · exp ( jφ(t)) with amplitude A(t) and exp( jωct) with unit amplitude. This
notation is more compact and in many cases is more convenient than (2.1). With the help of phasor
notation it is easy to visualize the bandpass signal since any phasor A · exp ( jθ) with a magnitude A and
a phase θ can be conveniently represented as an Argand diagram, that is, a vector of length A deviated
from the abscissa by angle θ in a complex plane. Actually the signal can be described in two ways: in
polar form, that is, by its magnitude and phase or by its rectangular projections to the axes. If phase
is a function of time θ = ωt then we can regard phasor as a vector rotating counterclockwise at the
constant rate ω as it is depicted in Figure 2.3. The projection of this vector to Cartesian coordinates
is the inphase (real) and the quadrature (imaginary) components of signal that are orthogonal to each
other. These components are used in real-world modulators for generation of modulated bandpass signal.

Modulation
23
Figure 2.1
Amplitude modulation: a) Carrier wave b) Baseband waveform c) Modulated bandpass signal

24
Modulation and Coding Techniques in Wireless Communications
-1
0
1
3
2
1
0
-1
0
1
3
2
1
0
T
T
T
t
T
T
T
t
a)
b)
-1
0
1
3
2
1
0
T
T
T
t
c)
-1
0
1
3
2
0
T
T
T
t
d)
Figure 2.2
Digital modulation types. a) ASK b) FSK c) PSK d) ASK/PSK

Modulation
25
t
ω
θ =
A
A.exp( j θ)
Real part 
(Inphase)
Imaginary part 
(Quadrature)
Figure 2.3
Phasor representation of signal
The magnitude of vector representing the signal can be expressed via inphase (I) and quadrature (Q)
components as A =

I2 + Q2 and the phase as θ = arctan
 Q
I

. Let us consider some examples showing
the usefulness of phasor representation of bandpass signal.
Consider the example of phase modulation. Assume that the baseband signal has the form of sinusoid
having unit amplitude and phase φx(t). In this case it is convenient to represent the modulated carrier
in the general form of (2.1) with φ(t) = φx(t):
sPM(t) = cos (ωct + φx(t)) = Re {exp ( jφx(t)) · exp ( jωct)}
(2.4)
where φ is the instantaneous phase shift and x(t) is some periodic function. It is obvious that at any
time moment t the phase modulation leads just to phase shift of carrier, i.e. to the additional rotation of
the carrier phasor as depicted in (2.4).
Now consider the example of amplitude modulation. Assume that the carrier is modulated with
sinusoid waveform. Let the amplitude of this waveform sinusoid be 1 and radian frequency ωm ≪ωc.
Then the modulated signal can written as follows:
sAM(t) = cos (ωct) + cos (ωct) · cos (ωmt) = cos (ωct) + cos ((ωc + ωm)t)
2
+ cos ((ωc −ωm)t)
2
(2.5)
1
Real part 
(Inphase)
Imaginary part 
(Quadrature)
)
(t
x
∆
φ
t
c
ω
)
(t
x
t
c
∆
+
=
φ
ω
θ
(
)
(
)
)
(
exp
t
x
t
j
c
∆
+φ
ω
(
)t
j
c
ω
exp
Figure 2.4
Phasor representation of phase modulation

26
Modulation and Coding Techniques in Wireless Communications
Real part 
(Inphase)
Imaginary part 
(Quadrature)
t
c
ω
t
m
ω
t
m
ω
−
1
1/2
1/2
(
)
(
)
(
)⎟
⎠
⎞
⎜
⎝
⎛
−
+
+
⋅
2
exp
2
exp
1
exp
t
j
t
j
t
j
m
m
c
ω
ω
ω
(
)t
j
c
ω
exp
Figure 2.5
Phasor representation of amplitude modulation
Using the phasor representation it is possible to write (2.5) as:
sAM(t) = Re

exp ( jωct) + exp ( j(ωc + ωm)t)
2
+ exp ( j(ωc −ωm)t)
2

(2.6)
The (2.6) in turn can be represented as follows:
sAM(t) = Re

exp ( jωct) ·

1 + exp ( jωmt)
2
+ exp (−jωmt)
2

(2.7)
The representation of bandpass signal in the form of (2.7) helps to visualize the modulation process.
Now we can see as depicted in Figure 2.5 that the phasor exp( jωct) representing the unmodulated
carrier is variated by two sideband terms exp( jωmt)
2
and exp(−jωmt)
2
rotating counterclockwise and clockwise
correspondingly. These sideband terms deviate the carrier phasor in both sides by the same angle as
can be seen in Figure 2.5. As a result the phase and frequency of the carrier remains the same but the
amplitude is changed in accordance with sidebands’ radian frequency ωm.
The next example is narrowband frequency modulation. Assume that the carrier is modulated by a
sinusoid waveform having unit amplitude and radian frequency ωm ≪ωc. In this case the modulated
signal is:
sFM(t) = cos (ωct) −β sin (ωct) · sin (ωmt) = cos (ωct) −β cos ((ωc −ωm)t)
2
+ β cos ((ωc + ωm)t)
2
(2.8)
where β ≪1 is the modulation index. With the help of phasor representation (2.8) can be written as:
sFM(t) = Re

exp ( jωct) ·

1 −β
2 exp (−jωmt) + β
2 exp ( jωmt)

(2.9)
In this case again as can be seen in Figure 2.6 the carrier phasor is variated by two sideband terms but now
the terms have opposite signs which leads to different symmetry of sideband terms in comparison with
AM case. Actually the sideband terms are rotated by π/2 radians in comparison with AM sidebands.
Due to this the resulting phasor is rotated relatively to the carrier phasor. This rotation is changing
in accordance with sidebands’ radian frequency ωm and modulation index β. The magnitude of the
resulting phasor differs from the magnitude of the carrier phasor but since the modulation index β ≪1
the difference is almost negligible. So, we can say that the amplitude of the modulated signal in the case
of narrowband frequency modulation remains basically the same.

Modulation
27
Real part 
(Inphase)
Imaginary part 
(Quadrature)
t
c
ω
t
m
ω
t
m
ω
−
1
t
(
)
j
c
ω
exp
2
/
β
2
/
β
(
)
(
)
(
)⎟
⎠
⎞
⎜
⎝
⎛
+
−
−
⋅
t
j
t
j
t
j
m
m
c
ω
β
ω
β
ω
exp
2
exp
2
1
exp
Figure 2.6
Phasor representation of frequency modulation
Note that all the considered examples are the examples of the analog modulation. In the case of
digital modulation the phasor movement is restricted to “jumps” between several points on the plane
corresponding to the limited number of used waveforms.
2.1.2
Representation of Signal with Basis Functions
Consider the power limited signals, that is, signals s(t) for which the following condition holds:
T

0
|s(t)|2dt < ∞
(2.10)
It was shown in the previous section that any real signal s(t) can be represented as a complex function.
Then we can treat the signals as “square-integrable” complex-valued functions on the real interval [0,
T]. It is known that these functions can be considered as an example of a Hilbert space [7]. The main
things that distinguish the Hilbert space from the vector space are the existence of inner product except
multiplication and addition and the completeness. Actually, our interest is to ﬁnd some tool to measure
how “far” or how “close” some particular signals (for example, the received and the transmitted signals)
are, that is, to ﬁnd the “distance” between two signals. We can deﬁne a distance formally as a metric on
a set of signals. Metric or distance function maps any pair of set elements to some real number. Denote
the set by X, then for all x, y, z ∈X distance d(·, ·) must satisfy the following conditions:
1) Non-negativity
d(x, y) ≥0
2) Identity
d(x, y) = 0 iff x = y
3) Symmetry
d(x, y) = d(y, x)
4) Triangle inequality
d(x, z) ≤d(x, y) + d(y, z)
However, this is a very general deﬁnition which ﬁts any set. Recall that we are using Hilbert space as a
model of signals. Then, it is the inner product that helps to measure the distance between signals. Inner

28
Modulation and Coding Techniques in Wireless Communications
product is a generalization of dot product. Let x(t) and y(t) be complex valued functions with t ∈[a, b].
Then the inner product can be deﬁned as:
⟨x(t), y(t)⟩≡
b

a
x(t)y∗(t)dt
(2.11)
If the interval [a, b] is not speciﬁed then t ∈[−∞, ∞]. The inner product has the following properties:
1) Positivity
⟨x(t), x(t)⟩≥0 for all x(t)
2) Deﬁniteness
⟨x(t), x(t)⟩= 0 iffx(t) = 0
3) Additivity in ﬁrst slot
⟨x(t) + y(t), u(t)⟩= ⟨x(t), u(t)⟩+ ⟨y(t), u(t)⟩
4) Homogeneity in ﬁrst slot
⟨ax(t), y(t)⟩= a ⟨x(t), y(t)⟩
5) Conjugate interchange
⟨x(t), y(t)⟩= ⟨y(t), x(t)⟩∗
Functions x(t) and y(t) are said to be orthogonal if ⟨x(t), y(t)⟩= 0. The distance in Hilbert space is
measured by calculating the norm. The norm of function x(t) is deﬁned as:
∥x(t)∥=

⟨x(t), x(t)⟩
(2.12)
We can consider norm as a “length” of x(t). There are the following properties of norm:
1) ∥ax(t)∥= |a| ∥x(t)∥.
2) Pythagorean Theorem: If x(t) and y(t) are orthogonal then:
∥x(t) + y(t)∥2 = ∥x(t)∥2 + ∥y(t)∥2
3) Cauchy-Bunyakovsky-Schwarz inequality:
|⟨x(t), y(t)⟩| ≤∥x(t)∥∥y(t)∥
4) Triangle inequality:
∥x(t) + y(t)∥≤∥x(t)∥+ ∥y(t)∥
5) Parallelogram equality:
∥x(t) + y(t)∥2 + ∥x(t) −y(t)∥2 = 2 ∥x(t)∥2 + 2 ∥y(t)∥2

Modulation
29
For any Hilbert space it is possible to ﬁnd a set of N orthogonal functions {ψi(t)}N
i=1 called basis functions,
such that any function x(t) from this space can be expressed as a linear combination of basis functions:
x(t) =
N
	
i=1
aiψi(t)
(2.13)
If (2.13) is satisﬁed, it is said that the set of basis functions {ψi(t)}N
i=1 spans the corresponding Hilbert
space. In principle the set of basis functions can comprise an inﬁnite set, that is, N = ∞, then the
corresponding Hilbert space is inﬁnite-dimensional. If the basis comprises a ﬁnite number of basis
functions the corresponding Hilbert space is ﬁnite-dimensional. If all we know about the signal s(t) is
that it is a power limited signal deﬁned on the interval [0, T] then we can consider s(t) to belong to the
N-dimensional Hilbert space of complex functions deﬁned on the interval [0, T]. This Hilbert space is
usually called signal space. The properties of inner product and norm of signal space are very useful for
calculation of signal energy and the distance between two signals. In accordance with (2.13) any signal
s(t) can be represented as a linear combination of basis functions. To form a basis these functions must
satisfy the orthogonality condition:
T
0
ψi(t)ψ j(t)dt = Kiδij,
Ki ̸= 0,
0 ≤t ≤T,
i, j = 1, . . . , N,
δij =
 1,
i = j,
0,
i ̸= j
(2.14)
If the basis functions are normalized, i.e. Ki = 1,
i = 1, . . . , N, then the signal space is called an
orthonormal space and the corresponding basis is called the orthonormal basis. Orthonormal basis is
particularly easy to work with, as illustrated by the next orthonormal basis’ properties:
1) If {ψi(t)}N
i=1 is an orthonormal basis, then:

N
	
i=1
aiψi(t)

2
=
N
	
i=1
|ai|2
(2.15)
2)
∥s(t)∥2 =
N
	
i=1
|⟨s(t), ψi(t)⟩|2
(2.16)
The representation of a signal as a linear combination of orthonormal basis functions corresponds to
the the representation of signal as a vector in orthonormal signal space. An example of this kind of
representation in orthonormal signal space generated by the set of two basis functions {ψi(t)}2
i=1 is
depicted in Figure 2.7. The signal s1(t) = a11ψ1(t) + a12ψ2(t) corresponds to vector s1 = (a11, a12) and
the signal s2(t) = a21ψ1(t) + a22ψ2(t) corresponds to vector s2 = (a21, a22).
Vector components aij are the projections of the signal si(t) to the corresponding basis function ψ j(t):
aij =
T

0
si(t)ψ j(t)dt
(2.17)

30
Modulation and Coding Techniques in Wireless Communications
ψ2 (t)
ψ1 (t)
2
E
1
E
S1 = (a11, a12)
S2 = (a21, a22)
2
1,S
Sd
Figure 2.7
Signal representation as a vector in orthonormal signal space
As mentioned above the norm of signal ∥si(t)∥shows the length of the corresponding vector si . Then
the signal energy can be calculated in accordance with (2.15) as:
Ei = ∥si(t)∥2 =
N
	
i=1
aij
2
(2.18)
The Euclidian distance between two signals s1(t) and s2(t) can be calculated in orthonormal signal space
as follows:
ds1(t),s2(t) = ds1,s2 = ∥s1(t) −s2(t)∥=




N
	
i=1
(a1 j −a2 j)2
(2.19)
The correlation between two signals s1(t) and s2(t), which is the measure of similarity between these two
signals, is given by:
Rs1(t),s2(t) =
⟨s1(t), s2(t)⟩
∥s1(t)∥∥s2(t)∥= ⟨s1(t), s2(t)⟩
√E1E2
(2.20)
The more typical case for the communication system is where s(t) is one of M possible signals s1(t),
s2(t), . . ., sM(t). Then signal s(t) from the set {si(t)}M
i=1 can be considered to belong to the N-dimensional
orthonormal space, where N ≤M. The orthonormal basis {ψi(t)}N
i=1 of this N-dimensional orthonormal
space can be found with the help of the Gram-Schmidt procedure [7]:
1) Deﬁne ψ1(t) =
s1(t)
∥s1(t)∥= s1(t)
√E1
2) For i = 2, . . . , M compute gi = si(t) −
i−1
	
j=1

si(t), ψ j(t)

ψ j(t),

ψi(t) =
gi
∥gi∥,
if ∥gi∦= 0
stop,
if ∥gi∥= 0
When the orthonormal basis is known the set of signals can be visualized with the help of a signal space
diagram which is also often called a constellation diagram where the signals are represented in a plot
of one basis function against another and so on, as in Figure 2.7. Of course, it helps to visualize the
signals only in case the dimension of signal space is no more than 3. However, many signals in today’s
communication systems can be expressed in only 2-dimensional signal space [5] which makes the signal
space diagram quite useful for visualization of signals.

Modulation
31
Additive white Gaussian noise (AWGN) can be represented as a linear combination of basis functions
in the same way as signals [5]. We will consider the zero-mean AWGN. The noise can be split in two
components:
n(t) = ˆn(t) + ˜n(t)
(2.21)
where ˆn(t) is the noise projected to the signal space and ˜n(t) is the noise outside the signal space. In
this case the signal is affected only by ˆn(t). This splitting can be considered, for example, as a result
of applying low-pass ﬁltering at the receiver input which ﬁlters out the part of noise outside the signal
bandwidth. Then in accordance with (2.13) ˆn(t) can be expressed as:
ˆn(t) =
N
	
i=1
niψi(t)
(2.22)
where ni = ⟨n(t), ψi(t)⟩and ⟨˜n(t), ψi(t)⟩= 0 for all i = 1, . . . , N.
White noise has a two-sided power spectral density equal to a constant N0
2 , for all frequencies from
−∞to ∞. Then the noise variance is given by:
σ 2 =
∞

−∞
N0
2 dt = ∞
(2.23)
However, the variance of ﬁltered noise is ﬁnite. For example, if we consider the noise projection to one
of orthonormal functions, the variance of this ﬁltered AWGN is as follows [5]:
σ 2
i = var(ni) = E
⎧
⎪⎨
⎪⎩
⎡
⎣
T

0
n(t)ψi(t)dt
⎤
⎦
2⎫
⎪⎬
⎪⎭
= N0
2
(2.24)
Then ˆn(t) can be represented as vector ˆn(t) = n = (n1, n2, . . . , nN) each component of which ni is
independent zero-mean Gaussian random variable with variance σ 2
i .
2.1.3
Pulse Shaping
Consider the baseband waveforms for the representation of original digital information. As was mentioned
in section 2.1.1 each symbol has the same time duration T. Then the easiest and compact in time domain
way of representation of digital information in baseband signal is to use the rectangular pulses. Since
any digital information can be regarded as sequence of bits we may assume that we deal with bitstream.
Then, for example, bit 1 can be represented by positive rectangular pulse and bit 0 by negative rectangular
pulse of amplitude A as it is depicted in Figure 2.8.
The use of rectangular pulses as was mentioned above leads to very compact representation of
bitstream in time domain. The rectangular pulse is a strictly time limited signal, that is, all signal power
is concentrated in some limited time interval. Outside this time interval the power of the signal is
equal to zero. However, in frequency domain this signal occupies the inﬁnite bandwidth. In other words
rectangular pulse is not a strictly bandlimited signal, that is, the power of this signal is not concentrated in
some limited frequency interval. The representation of signal in frequency domain B(f) can be obtained
from the time domain representation b(t) with the help of Fourier transform [2]:
B( f ) =
∞

−∞
b(t) · exp(−j2π f t)dt
(2.25)

32
Modulation and Coding Techniques in Wireless Communications
T
2T
3T
4T
5T
6T
t
-A
A
1
1
1
0
0
0
Figure 2.8
Representation of bitstream with rectangular pulses
It is easy to verify that rectangular function and sinc function forms the Fourier transform pair, where
sinc(x) = sin(πx)
πx
. That is, if signal in time domain is represented by the rectangular function (rectangular
pulse) then in frequency domain it is represented by the sinc function, conversely if signal is represented
by the sinc function in time domain (Nyquist pulse), in frequency domain it is represented by the
rectangular function. Actually, any strictly time limited signal cannot be strictly bandlimited and vice
versa signals that are strictly bandlimited cannot be strictly time limited [3]. The rectangular pulse in
time domain is depicted in Figure 2.9a and in frequency domain in Figure 2.9b. The Nyquist pulse in
time domain is depicted in Figure 2.10a and in frequency domain in Figure 2.10b.
The problem is that in real life the radio channel always is limited to some bandwidth due to different
regulations. In this case the inﬁnite bandwidth associated with a rectangular pulse is not acceptable. To
cope with this problem it is possible to apply a low-pass ﬁltering to the rectangular pulse. This ﬁltering
can change the shape of rectangular pulse and make it close to the shape of Nyquist pulse. This kind
of ﬁltering is called pulse shaping. On the other hand, as was discussed above any strictly bandlimited
signal has the inﬁnite time duration. This fact causes the effect called intersymbol interference (ISI). That
means the pulses can overlap one another which results in distortion of the received symbols. However,
it is possible to avoid the ISI with the help of one quite simple method. The idea of this method belongs
to Nyquist [4]. It is not possible to get rid of ISI if the Nyquist pulses are transmitted since the span of
each Nyquist pulse is inﬁnite. However, as can be seen in Figure 2.11 if Nyquist pulses are shifted by
integer multiples of symbol period T there are some points where ISI is zero.
Figure 2.9
Example of strictly time limited signal. Rectangular pulse. a) Time domain. b) Frequency domain

Modulation
33
Figure 2.10
Example of strictly bandlimited signal. Nyquist pulse. a) Time domain. b) Frequency domain
Since the Nyquist pulse passes through zero at all points t = ±kT , k = 0, 1, 2, . . . the ISI also is zero
at these points if pulses are shifted by integer multiples of symbol period T. That means if the receiver
will sample the received signal exactly in the centre of each symbol period (for example, at time t = 2T
for the ﬁrst pulse and at t = 3T for the second pulse depicted in Figure 2.11) the received symbol will
not be affected by other symbols. Then, assuming that the sampling timing is perfect no ISI is introduced
by using Nyquist pulses for information transmission. Actually, this effect can be reached not only with
the help of Nyquist pulse but with any waveform b(t) obeying the following Nyquist criterion in time
domain:
b(kT ) =
 A,
k = 0
0,
k ̸= 0
(2.26)
The necessary and sufﬁcient condition for b(t) to satisfy (2.26) is that its Fourier transform B(f) satisfy
[3]:
∞
	
k=−∞
B

f + k
T

= AT, | f | ≤1
2T
(2.27)
The condition in (2.27) is called the Nyquist criterion in frequency domain.
Figure 2.11
Nyquist pulses shifted by T

34
Modulation and Coding Techniques in Wireless Communications
The bandwidth of Nyquist pulse as can be seen in Figure 2.10b W = 1
T = Rs, where Rs is the symbol
rate. Therefore, it is possible to provide the transmission with the help of Nyquist pulses without ISI
by transmitting 1 symbol per second per hertz. Nyquist showed in his work [4] that it is the maximum
possible transmitting rate per hertz to transmit signals without ISI. Actually for baseband channel the
symbol rate per hertz
Rs
W called symbol-rate packing is twice that of bandpass channel because for
baseband signal only the nonnegative part of signal in frequency domain can be considered [5].
As already mentioned above it is possible to transmit the information with the help of Nyquist pulses (or
applying Nyquist ﬁltering to rectangular pulses) without ISI only in the case of perfect synchronization
of receiver and transmitter. Even a small error at the receiver sample timing leads to introducing quite a
large amount of ISI due to the fact that the tails of Nyquist pulse have large amplitude near the main lobe.
So, the communication system using Nyquist pulse provides the optimum bandwidth utilization but it
suffers a lot from timing errors. On the other hand, the transmission with the help of rectangular pulses
suffers much less from the synchronization errors. To decrease the impact of non-perfect synchronization
and still use bandlimited signals it is necessary to ﬁnd some trade-off between smoothness of signal
shape and used bandwidth. This kind of trade-off provides raised-cosine ﬁlter. The raised-cosine ﬁlter
belongs to the class of Nyquist ﬁlters, which means the impulse response of such a ﬁlter passes through
zero at the same points as the Nyquist pulse. The impulse response h(t) of raised-cosine ﬁlter is given by:
h(t) =
sin
πt
T

πt
T
·
cos
πtβ
T

1 −
2tβ
T
2
(2.28)
and the frequency function of this ﬁlter is:
H( f ) =
⎧
⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎩
T,
| f | ≤1 −β
2T
T
2 ·

1 + cos
πT
β

| f | −1 −β
2T

,
1 −β
2T
< | f | < 1 + β
2T
0,
| f | ≥1 + β
2T
(2.29)
where 0 ≤β ≤1 is the roll-off factor. The roll-off factor shows the excess bandwidth of the ﬁlter W in
comparison with the bandwidth of Nyquist ﬁlter W0 β = W−W0
W0 .
Then the total bandwidth of raised-cosine ﬁlter is:
W = (1 + β) · W0 = 1 + β
T
= (1 + β) · Rs
(2.30)
Applying the raised-cosine ﬁlter to pulse shaping rather than Nyquist ﬁlter allows a trade-off between
bandwidth and smoothness of the ﬁlter impulse response. The frequency function of raised-cosine ﬁlter
for different values of roll-off factor is shown in Figure 2.12 and impulse response in Figure 2.13.
When roll-off factor β = 0 the raised-cosine ﬁlter coincides with the Nyquist ﬁlter and when β = 1
the frequency function comprises simply a cosine function raised above the abscissa. When roll-off factor
is zero, (2.30) describes the minimum required bandwidth for pulse shaping providing zero ISI. As was
mentioned previously in this case the synchronization should be perfect. If we would like to make the
receiver more tolerant to synchronization errors and still provide zero ISI we have to sacriﬁce bandwidth
by increasing the roll-off factor and in doing so we decrease the ripples both before and after the pulse
interval. Since ﬁltering is a linear operation the pulse shaping ﬁltering can be applied to the output of
bandpass modulation rather than to the output of the baseband modulation. Taking into account that
usually in real life wireless communication systems the baseband and bandpass modulation are joined
in one block called modulator, the pulse shaping is applied to the modulated signal at the output of the
modulator.

Modulation
35
Figure 2.12
Raised-cosine ﬁlter frequency function
Figure 2.13
Raised-cosine ﬁlter impulse response
2.1.4
Matched Filter
The general view of typical wireless communication system is represented in Figure 2.14. As can be seen
in Figure 2.14 the output of the modulator is ﬁltered by the transmitter ﬁlter with frequency function HTx,
then the signal is transmitted over a radio channel, which can be represented as a ﬁlter with frequency
function HC and after that the signal is ﬁltered by the receiver ﬁlter with frequency function HRx. The
transmitter ﬁlter is a bandlimiting (pulse shaping) ﬁlter and the aim of the receiver ﬁlter is to minimize
the noise. Consider the extreme case when the channel frequency function is constant, the channel is a
AWGN channel. The receiver ﬁlter is followed by a sampler that provides estimates of signal once per

36
Modulation and Coding Techniques in Wireless Communications
Figure 2.14
Wireless communication system as a cascade of ﬁlters
symbol period T. Then the task of the receiver ﬁlter is to maximize the signal to noise ratio (SNR) at the
end of the symbol period t = T . That means the ﬁlter should maximize signal instantaneous power at
time t = T and minimize noise average power:
SNR = s2(T )
σ 2
0
(2.31)
where s(T) is the transmitted signal at the output of the receiver ﬁlter at time t = T and σ0 is variance
of ﬁltered noise. Then the design of an optimum receiver ﬁlter maximizing SNR (2.31) can be derived
as follows [5].
The signal at the ﬁlter output s(t) can be expressed in terms of frequency function of receiver and
transmitter ﬁlter:
s(t) =
∞

−∞
HTx( f )HRx( f ) exp( j2π f t)d f
(2.32)
The power of ﬁltered noise can be written as follows:
σ 2
0 = N0
2
∞

−∞
|HRx( f )|2 d f
(2.33)
where N0 is the noise power spectral density and the coefﬁcient 1
2 indicates that power spectral density
is double sided. Then substituting (2.32) and (2.33) into (2.31) obtain:
SNR =

∞
−∞
HTx( f )HRx( f ) exp( j2π f t)df

2
N0
2
∞
−∞
|HRx( f )|2 df
(2.34)
Now applying the Cauchy-Bunyakovsky-Schwarz inequality [6] stating that for any two functions f1(x)
and f2(x):

∞

−∞
f1(x) f2(x)dx

2
≤
∞

−∞
| f1(x)|2 dx
∞

−∞
| f2(x)|2 dx
(2.35)
to the nominator in (2.34) obtain the following estimate of SNR:
SNR ≤
∞

−∞
|HTx( f ) exp( j2π f t)|2 df
∞

−∞
|HRx( f )|2 df
N0
2
∞

−∞
|HRx( f )|2 df
=
2
∞

−∞
|HTx( f ) exp( j2π f t)|2 df
N0
(2.36)

Modulation
37
Since the complex exponential exp( j2π f t) has the unit magnitude the integral in the nominator of (2.36)
the energy of the transmitted signal E =
∞
−∞
|HTx( f )|2 df. Thus, the SNR at the output of a receiver ﬁlter
depends only on the transmitted signal energy E and the power spectral density of the noise N0 and not
on the shape of the signal. The equality in (2.35) holds if f1(x) = k f ∗
2 (x), where k is a constant. Then
the maximum possible value of SNR can be obtained if:
HRx( f ) = kH ∗
Tx( f ) exp(−j2π f T )
(2.37)
that is, |HRx( f )| = |HTx( f )| and the receiver ﬁlter maximizes the SNR at its output at time t = T if the
receiver frequency function matches the transmitter frequency function. Due to this fact the optimum
receiver ﬁlter is called matched ﬁlter. In the time domain the matched ﬁlter impulse response obtained
as inverse Fourier transform of (2.37) can be written as:
hRx(t) =
 hTx(T −t),
0 ≤t ≤T
0,
otherwise
(2.38)
If the receiver ﬁlter is matched to the transmitter ﬁlter the equality in (2.36) holds and SNR at the output
of matched ﬁlter in case of AWGN channel is:
SNR = 2E
N0
(2.39)
Actually the matched ﬁlter can be implemented in a correlator form rather than in a direct form provided
by (2.38). Consider the output of the receiver ﬁlter:
z(t) = r(t)∗hRx(t) =
t
0
r(u) · hRx(t −u)du
(2.40)
where r(t) = s(t) + n(t) is the received signal, n(t) is the AWGN. Then substituting (2.38) in (2.40)
obtain:
z(t) =
t
0
r(u) · hTx(T −t + u)du
(2.41)
and at the time t = T (2.41) can be written as:
z(T ) =
T

0
r(u) · hTx(u)du
(2.42)
That means at the end of the symbol period the output of the matched ﬁlter coincides with the output of
the corresponding correlator. And in this sense the matched ﬁlter can be implemented as a correlator.
Now recall the pulse shaping. It helps to eliminate the ISI at the output of a pulse shaping ﬁlter. As was
discussed previously, to make it possible to do this the ﬁlter frequency function should obey the Nyquist
criterion (2.27). It is convenient to choose the raised-cosine ﬁlter as a pulse shaping ﬁlter. However, our
goal is to eliminate the ISI at the output of a receiver ﬁlter rather than at the output of the transmitter
ﬁlter. That means the frequency function of the cascade of all three ﬁlters (transmitter ﬁlter, channel and
receiver ﬁlter) must be the frequency function of raised-cosine ﬁlter HRC( f ) (2.29):
HRC( f ) = HTx( f ) · HC( f ) · HRx( f )
(2.43)
In the special case where the channel is ideal, that is, HC( f ) = 1, | f | ≤W, we have:
HRC( f ) = HTx( f ) · HRx( f )
(2.44)

38
Modulation and Coding Techniques in Wireless Communications
On the other hand, the receiver ﬁlter should match the transmitter ﬁlter to provide maximum SNR:
HRx( f ) = H ∗
Tx( f )
(2.45)
Substituting (2.45) into (2.44) obtain:
|HTx( f )| = |HRx( f )| =

|HRC( f )|
(2.46)
Thus, the overall raised-cosine spectral characteristic is split evenly between the transmitter ﬁlter and
the receiver ﬁlter. This kind of ﬁlter is called root raised-cosine ﬁlter.
In case the channel is not ideal the receiver ﬁlter must also compensate the distortions inserted into
the signal by the channel. These distortions also lead to ISI but this time channel-induced. Usually it is
possible to cope with this problem by adding one more ﬁlter to the receiver design: an equalizing ﬁlter.
Then the equalizing ﬁlter frequency function HE( f ) should be the reversal to the channel frequency
function:
HE( f ) =
1
HC( f )
(2.47)
In this case the overall frequency function of the cascade of channel and equalizer is 1 and (2.46) still
holds true.
2.2
PSK
Phase shift keying (PSK) comprises the manipulation of a carrier’s phase in accordance with the trans-
mitted bitstream. The general expression for PSK is:
si(t) = hTx(t) cos (ωct + φi) , i = 1, . . . , M
(2.48)
where hTx(t) is the impulse response of the pulse shaping ﬁlter, M is the number of possible values of a
phase and φi usually is chosen as:
φi = 2πi
M
(2.49)
In some cases it is more convenient to use more general expression of (2.49):
φi = 2πi
M + φ0
(2.50)
where φ0 is an arbitrary constant phase. An alternative expression of (2.48) is:
si(t) = Re {exp( jφi)hTx(t) exp(ωct)} , i = 1, . . . , M
(2.51)
First consider some particular cases of PSK.
2.2.1
BPSK
For binary phase shift keying (BPSK) system M = 2 and φ1 = 0, φ2 = π (or φ1 = φ0, φ2 = π + φ0).
Then the corresponding signals are:
si(t) =
 hTx(t) cos (ωct) ,
if 1 is emitted
−hTx(t) cos (ωct) ,
if 0 is emitted
(2.52)

Modulation
39
Assuming that the pulse shaping ﬁlter has the impulse response in the form of rectangular pulse (2.52)
can be written as:
si(t) =
 A cos (ωct) ,
if 1 is emitted
−A cos (ωct) ,
if 0 is emitted
(2.53)
The average power of sinusoidal signal is P = A2
2 , so that A =
√
2P. Then (2.53) can be represented as:
si(t) = ±
√
2P cos (ωct) = ±
 
2E
T cos (ωct)
(2.54)
where E = P · T is the energy of signal per symbol period.
The example of BPSK signalling in this case is depicted in Figure 2.15a. Of course in real life this kind
of signal is not possible to use since the bandwidth in this case is inﬁnite. The BPSK signal after pulse
shaping with raised-cosine ﬁlter is depicted in Figure 2.15b. The bandwidth in this case in accordance
with (2.30) can be expressed as:
W = (1 + β) · Rb
(2.55)
where Rb is bit rate. For BPSK one symbol comprises one bit and therefore bit rate coincides with symbol
rate.
Figure 2.15
BPSK signal. a) Rectangular pulse shaping b) Raised-cosine pulse shaping

40
Modulation and Coding Techniques in Wireless Communications
Figure 2.16
Constellation diagram of BPSK signals
Applying the Gram-Schmidt procedure to the set of signals s1(t), s2(t) obtains the orthonormal basis
consisting of one basis function ψ1(t) =
!
2
T cos (ωct). Then the constellation diagram of the signals
comprises just two dots in one line corresponding to function ψ1(t) as depicted in Figure 2.16.
As can be seen from Figure 2.16 the BPSK signals lie totally in one axis, there is no y-axis projection.
The vector ﬂip-ﬂops on the x-axis depending on the value of the transmitted bit.
The BPSK modulator is represented in Figure 2.17. Depending on input data bit value one of two
inputs multipliers is chosen
!
2E
T or −
!
2E
T .
Two possible demodulation schemes for BPSK are depicted in Figure 2.18 and Figure 2.19.
The correlator demodulator using two correlators is depicted in Figure 2.18. In this case the received
signal is correlated with two possible transmitted signals s1(t) and s2(t). Then the correlator output zi(T )
with maximum value deﬁnes the decision about which signal was transmitted. It is possible to decrease
the number of correlators to one if the received signal is correlated with basis function ψ1(t) rather
than with the set of possible transmitted signals. This solution is depicted in Figure 2.19. In this case
the correlator output z(T ) comprises the projection of the transmitted signal si(t) to the basis function
ψ1(t) corrupted by the AWGN. Then it is enough to check the sign of z(T ) to make the decision. The
performance of both solutions is the same. Also the performance will not change if the correlators
were replaced by the matched ﬁlters, as was shown in section 2.1.4 where a correlator can be regarded
simply as a form of a matched ﬁlter. Note that in all these cases the coherent demodulation is used
since the demodulator utilizes the modulated carrier signals as a reference. Now consider the correlation
demodulator with one correlator. As was mentioned above the correlator output can be expressed as:
z(T ) = ai(T ) + n1(T )
(2.56)
where ai(T ) is the projection of the transmitted signal to the function ψ1(t) and n1(T ) is the projection
of the Gaussian noise n(t) to the same function. The ﬁltered noise n1(t) is also a Gaussian process and
ai(T ) is a constant (
√
E or −
√
E). That means the correlator output z(T ) is a random Gaussian variable
Figure 2.17
BPSK modulator

Modulation
41
Figure 2.18
BPSK demodulator. Two correlators
with mean
√
E or −
√
E. The corresponding conditional probability density functions can be written as
follows:
p (z |s1 ) =
1
σ
√
2π
exp
⎛
⎝−1
2
$
z −
√
E
σ
%2⎞
⎠
(2.57)
p (z |s2 ) =
1
σ
√
2π
exp
⎛
⎝−1
2
$
z +
√
E
σ
%2⎞
⎠
(2.58)
where σ 2 is the noise variance. The plots of these pdfs are represented in Figure 2.20.
It can be seen from this plot that the demodulator makes the erroneous decision when the value of the
correlator output z(T ) is less than zero, given the signal s1(t) was transmitted or greater than zero, given
the signal s2(t) was transmitted. The probabilities of these events correspond to the shadowed areas in
Figure 2.20. These probabilities can be expressed as follows:
P(s1 →s2) =
0

−∞
p (z |s1 ) dz
(2.59)
P(s2 →s1) =
∞

0
p (z |s2 ) dz
(2.60)
Figure 2.19
BPSK demodulator. 1 correlator

42
Modulation and Coding Techniques in Wireless Communications
0
E
E
d
z(T)
−
)
(
1s
z
p
)
(
2s
z
p
)
(
1
2
s
s
P
→
)
(
2
1
s
s
P
→
Figure 2.20
Conditional pdfs of the correlator output
Since the pdf p (z |s2 ) is just a shifted copy of p (z |s1 ), the probabilities of these two events are equal:
P(s2 →s1) = P(s1 →s2)
(2.61)
Then substituting (2.58) into (2.60) obtain:
P(s2 →s1) =
∞

0
1
σ
√
2π
exp
⎛
⎝−1
2
$
z +
√
E
σ
%2⎞
⎠dz = Q
$√
E −(−
√
E)
2σ
%
= Q
 d
2σ

(2.62)
where d is the Euclidean distance between signals s1(t) and s2(t) in signal space and Q(x) is the function
deﬁned as:
Q(x) =
∞

x
1
√
2π
exp

−z2
2

dz
(2.63)
The Q-function is related to the complementary error function:
Q(x) = 1
2 erfc
 x
√
2

(2.64)
Then taking in account (2.61) and that the probability of transmitting the signals s1(t) and s2(t) is equal
to 1
2 the symbol error probability for BPSK under the conditions of AWGN channel is:
Pe = P(s1)P(s1 →s2) + P(s2)P(s2 →s1) = 1
2 Q
 d
2σ

+ 1
2 Q
 d
2σ

= Q
 d
2σ

= Q
$(
2E
N0
%
(2.65)
Since the symbol in BPSK comprises one bit the bit error probability Pb coincides with Pe.

Modulation
43
2.2.2
QPSK
The quadrature phase shift keying (QPSK) is a simple extension of the BPSK. In this case M = 4 and
φi = πi
2 , (i = 1, . . . , 4). Assuming the rectangular pulse shaping the QPSK signal can be written as:
si(t) =
 
2E
T cos

ωct + πi
2

(2.66)
Applying to (2.66) the trigonometric identity cos(x + y) = cos x cos y −sin x sin y obtain:
si(t) =
 
2E
T

cos (ωct) cos
πi
2

−sin (ωct) sin
πi
2

(2.67)
It is easy to verify with the help of the Gram-Schmidt procedure that the set of functions:
ψ1(t) =
 
2
T cos (ωct) ,
ψ2(t) =
 
2
T sin (ωct)
(2.68)
forms the orthonormal basis for QPSK signals. The constellation diagram of QPSK signals corresponding
to (2.67) is depicted in Figure 2.21. With this choice of basis functions the projection of signal to function
ψ1(t) corresponds to the real (Inphase) component of the signal and the projection to function ψ2(t)
corresponds to the imaginary (Quadrature) component.
In accordance with (2.50) the QPSK signals can be written in the following form:
si(t) =
 
2E
T cos

ωct + πi
2 + π
4

(2.69)
The corresponding constellation diagram is represented in Figure 2.22. As can be seen the constellation
diagram depicted in Figure 2.22 is simply the rotation of the constellation diagram in Figure 2.21. This
rotation does not change any properties of the corresponding system. And both constellations represent
the QPSK. However, more often the representation depicted in Figure 2.22 is used.
Two possible methods of QPSK modulator design are represented in Figure 2.23 and Figure 2.24.
In the method corresponding to the polar representation of QPSK modulation ﬁrst the phase shift of
the carrier signal φi = πi
2 + π
4 , (i = 1, . . ., 4) is calculated. Since there are four possible phase shifts in
Figure 2.21
QPSK constellation diagram

44
Modulation and Coding Techniques in Wireless Communications
Figure 2.22
Another form of QPSK constellation diagram
QPSK each 2 bits of the input data stream deﬁnes the transmitted signal that is the phase shift φi. Then the
phase modulator provides the phase shift of the carrier signal. This is the most straightforward method
of the implementation of the QPSK modulation but it requires more operations (since it is necessary to
change directly the carrier’s phase) than the quadrature method. In the quadrature method the concept
of I and Q channels is used. That is the modulated signal is obtained as a sum of its projections to basis
functions. It is easy to verify that each channel I or Q comprises simply the BPSK modulation. The
example of signals corresponding to the QPSK I and Q channels are depicted in Figure 2.25a and b. The
QPSK signal si(t) depicted in Figure 2.25c can be obtained as si(t) = I(t) −Q(t).
It can be seen from Figure 2.22 that the constellation points of QPSK can be represented as two
orthogonal sets of BPSK constellation points. The quadrature method is easier to implement and for this
reason it is more frequently used in real life QPSK modulators.
The QPSK demodulator can be designed with the help of the same schemes which were discussed
above for BPSK demodulation (depicted in Figures 2.18 and 2.19). In this case the demodulator based
on the correlation of the set of possible transmitted signals requires four correlators (or matched ﬁlters)
and the demodulator based on the correlation of the basis functions requires only two correlators.
The error probability per symbol in AWGN channel can be calculated in the same way as for QPSK.
As can be seen from Figure 2.22 the minimum Euclidean distance between two signals d = 2
!
E
2 . Then
the probability that the demodulator makes the incorrect decision due to the fact that noise displaces the
Figure 2.23
Polar form of QPSK modulation

Modulation
45
Figure 2.24
Quadrature form of QPSK modulation
Figure 2.25
Representation of QPSK as a sum of I and Q channels: a) I channel, b) Q channel, c) QPSK signal (I
– Q)

46
Modulation and Coding Techniques in Wireless Communications
received signal to the nearest signal across one of the axis can be calculated as Q
 d
2σ

= Q
)!
E
N0
*
.
However, the error can occur if noise displaces the received signal across any of two axes rather than just
one as in the case of BPSK. Taking into account that the probability of displacement across the axis I is
the same as across the axis Q the probability that both I and Q component will be estimated correctly is

1 −Q
 d
2σ
2 = 1 −2Q
 d
2σ

+ Q
 d
2σ
2. Then the overall symbol error probability is as follows:
Pe = 2Q
 d
2σ

−Q
 d
2σ
2
(2.70)
Usually the term Q
 d
2σ
2 is almost negligible and more often (2.70) is used in the form of:
Pe ≈2Q
 d
2σ

= 2Q
$(
E
N0
%
(2.71)
The bit error probability depends on the code used to put in correspondence the bits and signals, that is,
on labelling the constellation points. For example, the labelling depicted in Figure 2.26a is not the best
one since in this case if the signal was incorrectly detected as the adjacent one, two bits can be corrupted.
In Figure 2.26b the constellation points are labelled in accordance with the Gray code providing the
Hamming distance of 1 between adjacent code words. This is used to make sure that adjacent symbols
differ by only a single digit, and in this case the symbol error (the probability of misinterpreting the
symbol which is not directly adjacent is negligible) causes the corruption of only 1 bit.
Of course the labeling, with the help of the Gray code, is preferable since it provides the smallest bit
error probability (BER). Assuming that constellation points are labelled in accordance with Gray code
the bit error probability is on average half the symbol error probability:
Pb = Pe
2 ≈Q
$(
E
N0
%
(2.72)
Note that for BPSK the energy per symbol is the same as the energy per bit. For QPSK, the energy per
symbol is twice the energy per bit, because there are two bits per symbol E = 2Eb. Then the QPSK BER
Figure 2.26
Different labeling of QPSK constellation points

Modulation
47
can be expressed as follows:
Pb = Pe
2 ≈Q
$(
2Eb
N0
%
(2.73)
That means QPSK provides the same BER as BPSK. This has not come as a surprise taking in account the
fact that the QPSK signals can be regarded as a set of two orthogonal BPSK signals. On the other hand,
this fact shows that BPSK utilizes the bandwidth in quite an inefﬁcient way since the QPSK provides
the same BER with twice the bit rate.
2.2.3
M-PSK
The general expression for M-PSK signals is given by (2.48)–(2.50). It can be expressed in the same way
as for QPSK with the help of a set of the same two basis functions deﬁned in (2.68) or I and Q channels:
si(t) =
√
E

ψ1 (t) cos
2πi
M

−ψ2 (t) sin
2πi
M

, i = 1, . . . , M
(2.74)
The example of 8-PSK constellation is depicted in Figure 2.27.
Taking into account (2.48)–(2.50) and (2.74) the modulators depicted in Figures 2.23–2.24 can be used
(with little changes) for modulation of M-PSK signals. In the same way the demodulators depicted in
Figures 2.18–2.19 can be generalized for demodulation of M-PSK signals. In the case of implementing
the demodulator depicted in Figure 2.18 the bank of M correlators (matched ﬁlters) should be used. In
the case of the correlation of basis functions only two correlators are needed, but the complexity of logic
block selecting the signal which better corresponds to the output of basis function correlators increases
with increasing M.
The symbol error probability under the conditions of AWGN channel can be calculated with the help
of the same technique as was used for calculation error probability for QPSK. In the case of M-PSK
each constellation point has two adjacent points and it is possible to assume that the probability of
misinterpreting the symbol which is not directly adjacent is negligible (however, this assumption is not
Figure 2.27
8-PSK constellation

48
Modulation and Coding Techniques in Wireless Communications
1.00E-08
1.00E-07
1.00E-06
1.00E-05
1.00E-04
1.00E-03
1.00E-02
1.00E-01
1.00E+00
20
15
10
5
0
Eb/No (dB)
BER
BPSK/QPSK
8-PSK
16-PSK
Figure 2.28
BER curves for BPSK, QPSK, 8-PSK and 16-PSK
correct for high values of M). Then the symbol error probability can be calculated in the same way:
Pe ≈2Q
 d
2σ

(2.75)
As can be seen from Figure 2.27 the Euclidean distance between the adjacent constellation points can
be expressed as:
d = 2
√
E sin
θ
2

(2.76)
where θ in accordance with (2.49) is 2π
M . Then (2.75) can be written as:
Pe ≈2Q
$
sin
) π
M
* (
2E
N0
%
= 2Q
$
sin
) π
M
* (
2Eb log2 M
N0
%
(2.77)
Assuming that the constellation points are labelled with the help of Gray code the symbol error (that is,
misinterpreting the correct symbol as the adjacent one) causes the corruption of only 1 bit out of log2 M
bits comprising the symbol. Therefore, the BER for M-PSK can be estimated as:
Pb =
Pe
log2 M ≈
2
log2 M Q
$
sin
) π
M
* (
2Eb log2 M
N0
%
(2.78)
In practice the high-order PSK with M > 8 is not used since the BER becomes too high and in this case
the usage of for example, quadrature amplitude modulation is more beneﬁciary. The comparison of PSK
schemes performance is represented in Figure 2.28.
2.2.4
DPSK
The methods of PSK demodulation considered above represent the coherent demodulation. That means
the demodulator exploits the carrier reference to detect the signal. To be more precise the demodulator
utilizes the knowledge of the carrier signal phase and then calculates the phase shift between the
modulated signal and the carrier. It is possible to decrease the demodulator implementation complexity
if using the noncoherent demodulation. In this case the demodulator uses the previous symbol as a phase
reference for the current symbol and the knowledge of the carrier phase is not required. To make the

Modulation
49
Figure 2.29
DBPSK as an example of differential encoding
signal independent of the carrier phase the transmitted data is differentially encoded. The differential
encoding consists in changing the phase of the current transmitting signal in accordance with the input
bitstream relative to the phase of the previous transmitted signal rather than to the phase of the carrier.
For example, in differentially encoded BPSK the transmission of a binary “1” corresponds to the phase
shift of the current signal by π relative to the previous signal and in the case of transmitting a binary
“0” the phase of the signal remains the same as it was in the previous signal. This kind of modulation
is called the differential phase shift keying (DPSK). The example of DBPSK signal is represented in
Figure 2.29.
Actually it is possible to use the coherent demodulation for the detection of the DPSK. In this case
the same demodulator as for demodulation of PSK can be used to detect the signal and then transmitted
data can be derived by comparing the phase of the current signal with the phase of the previous one.
The performance of this method is a little bit worse than the performance of the coherent demodulation
of the PSK. This small degradation is explained by differential encoding, since single detection error
can cause two decision errors. The complexity of the demodulator is slightly increased due to the fact
that the additional comparator is required to detect the phase difference between two successive signals.
However, this method is quite often used to prevent the error propagation due to carrier recovery failure
[8].
More often the noncoherent demodulation is used for the DPSK detection. The noncoherent demod-
ulation of DPBSK is depicted in Figure 2.30.
As can be seen from Figure 2.30 the delayed version of the received signal is used as a reference signal
and the correlator output z(T ) =

 T
0 r(t)r ∗(t −T )dt is positive if the current signal has the same phase
as the previous one (i.e., 0 was transmitted) and negative otherwise (i.e., 1 was transmitted). Actually the
complex conjugate block is not needed since for BPSK r ∗(t) = r(t) but for the higher order modulations
Figure 2.30
DBPSK demodulator

50
Modulation and Coding Techniques in Wireless Communications
0.0001
0.001
0.01
0.1
1
10
8
6
4
2
0
Eb/No (dB)
BER
BPSK/QPSK
coherent DBPSK
noncoherent DBPSK
Figure 2.31
BER curves for BPSK/QPSK, coherent DBPSK and noncoherent DBPSK
(DQPSK, D8PSK, etc.) the complex conjugate of the delayed reference signal should be used. In this
case the output of the correlator will correspond to the phase difference of received signal and the delayed
version of the signal and the comparison should be done with several thresholds. Still the implementation
complexity of the noncoherent demodulation remains quite low in comparison with the complexity of
the coherent demodulation. The symbol error probability under the conditions of AWGN channel for the
coherent detection of differential encoded PSK is given by [3]:
Pe = Pb = 2Q
$(
2Eb
N0
%
·
$
1 −Q
$(
2Eb
N0
%%
(2.79)
And the symbol error probability for the noncoherent detection of DBPSK is given by [3]:
Pe = Pb = 1
2 exp

−Eb
N0

(2.80)
The BER for coherent and noncoherent detection in AWGN are plotted in Figure 2.31. As can be
seen from these plots the performance of noncoherent detection of DBPSK is less than 1 dB worse
than coherent detection of differentially encoded BPSK and about 2 dB worse than the performance
of coherent detection of BPSK/QPSK at low values of SNR, with high SNR values the difference in
performance becomes less visible.
2.2.5
OQPSK
Offset quadrature shift keying (OQPSK) is a minor variation of QPSK. In OQPSK the I and Q channels
are shifted by half symbol and thus I and Q channel signals do not transition at the same time. It is done
to decrease the signal envelope variations. The reason for this is the nonlinearity of the ampliﬁer. In most
cases the ampliﬁer transfer function is linear only in some range of amplitude. That means the ampliﬁer
inserts some distortion in signal when crossing the boundary of this range. The more the signal amplitude
varies, the more distorted is the signal at the ampliﬁer output. Due to this fact the most beneﬁcial is
the usage of the signals with constant envelope. The example of I and Q channel signals of OQPSK is
represented in Figure 2.32.

Modulation
51
Figure 2.32
OQPSK: a) I channel signal, b) Q channel signal
As can be seen from Figure 2.32 the transitions in I and Q channels do not occur simultaneously.
That means the only possible transition in constellation diagram is the transition to the adjacent symbol.
This is depicted in Figure 2.33. Comparing the possible transitions in QPSK constellation diagram and
OQPSK constellation diagram one can see that in QPSK the transitions between all symbols are possible,
whereas in OQPSK the transitions crossing zero point do not exist.
The examples of QPSK and OQPSK signals are shown in Figure 2.34. The phase shifts by π in QPSK
signal are highlighted. As can be seen the OQPSK signal is smoother than the QPSK. The maximum
possible phase change in OQPSK signal is π
2 . Unlike the QPSK where transitions can occur in every
symbol, in OQPSK they can occur more frequently: every half-symbol.
The performance of OQPSK coincides with the performance of the QPSK if the linear ampliﬁer is
used in the transmitter. In cases where the nonlinear ampliﬁer is used the OQPSK provides better results.
The obvious problem with using OQPSK is that it implies more strict limitations on symbol timing
recovery due to staggering of I and Q channels. Sometimes OQPSK is called staggered QPSK (SQPSK).
2.2.6
π/4-QPSK
The π/4-QPSK comprises two QPSK rotated by the angle π/4. The π/4-QPSK solves the same problem
as OQPSK: decreasing the phase shifts to make the signal smoother. The constellation diagram of

52
Modulation and Coding Techniques in Wireless Communications
Figure 2.33
Possible transitions between symbols: a) in QPSK, b) in OQPSK
Figure 2.34
a) QPSK modulated signal. b) OQPSK modulated signal

Modulation
53
Figure 2.35
π/4-QPSK. a) Two constellation sets, b) π/4-QPSK allowed transitions
π/4-QPSK depicted in Figure 2.35a looks like 8-PSK constellation but in the same way as in OQPSK
not all possible transitions existing in 8-PSK are allowed in π/4-QPSK. Unlike 8-PSK where we have
eight possible symbols (or signals) to transmit in π/4-QPSK we have two sets of four signals and these
sets are used in turn. For example, if the sequence 10 00 11 01 . . . is transmitted the ﬁrst symbol 10 is
transmitted with the help of set A, the second 00 with the help of set B, third 11 with the help of set A,
the fourth with the help of set B and so on. Since two QPSK constellation sets are used in an interleaved
way the symbol rate and bit rate and BER for π/4-QPSK is exactly the same as for QPSK.
The possible transitions in π/4-QPSK are represented in Figure 2.35b. Since only transitions between
set A and set B are allowed the transitions do not cross the centre of the constellation diagram. Due to
this fact the phase transitions are less than in QPSK and the signal is smoother. Unlike the OQPSK the
π/4-QPSK does not add restrictions to symbol timing recovery but the carrier recovery may suffer from
the increased constellation size.
The example of π/4-QPSK signal is represented in Figure 2.36.
-1
-0.8
-0.6
-0.4
-0.2
0
t
0.2
0.4
0.6
0.8
1
Figure 2.36
π/4-QPSK modulated signal

54
Modulation and Coding Techniques in Wireless Communications
2.3
MSK
Minimum shift keying (MSK) can be considered as a modiﬁcation of the frequency shift keying (FSK) or
as a modiﬁcation of OQPSK due to the dual nature of FSK and PSK. Here we will consider MSK as the
evolution of OQPSK. MSK can be considered as OQPSK with one signiﬁcant change: each channel I
and Q is pulse shaped with a half-sinusoid. The impulse response h(t) of the pulse shaping ﬁlter is given
by:
h(t) = A · rect
t −T
2T

· sin
 πt
2T

(2.81)
where rect () is the rectangular function, rect (x) =
 0,
if |x| ≥0.5
1,
if |x| < 0.5 . Therefore, the period of pulse
shaping is twice the symbol period and the lag between I and Q channel is T. That means the bit rate
of MSK is twice as low as the QPSK bit rate, that is, MSK can be regarded as the binary modulation
scheme rather than the quadrature one. The MSK signal can be written as follows:
si(t) = ai,I(t) cos
)
ωct + π
4
*
cos
 πt
2T

−ai,Q(t) sin
)
ωct + π
4
*
sin
 πt
2T

(2.82)
where ai,I(t) takes values ±
!
2E
T (depending on i value) on the interval (2k −1)T ≤t < (2k + 1)T , (k =
0, 1, 2, . . .), and ai,Q(t) takes values ±
!
2E
T (depending on i value) on the interval 2kT ≤t < (2k + 2)T .
Figure 2.37 shows the MSK I and Q channels.
As can be seen from Figure 2.37 MSK can be regarded as shaped OQPSK. The MSK modulation
makes the phase change linear and limited to ± (π/2) over a bit interval T. The MSK signal is represented
in Figure 2.38.
Fourier transform of (2.81) is given by:
H( f ) = A · 4T cos(2π f T )
π

1 −(4 f T )2 · exp (−j2π f T )
(2.83)
Then, the power spectral density (PSD) of MSK can be calculated as follows [5]:
G( f ) = 16T A2
π 2
·
 cos(2π f T )
1 −(4 f T )2
2
(2.84)
The comparison of the MSK spectrum with the spectrum of QPSK/OQPSK is represented in Figure
2.39. In this case it is assumed that QPSK is shaped by the rectangular pulse. Obviously, MSK, having
a smoother pulse, has lower side-lobes than QPSK and OQPSK.
However, the MSK spectrum has side-lobes extending well above the data rate. And for wireless
systems which require more efﬁcient use of RF channel bandwidth, it is necessary to reduce the energy
of the upper side-lobes. Moreover, as can be seen from Figure 2.39, the MSK spectrum has a wider main-
lobe than QPSK and OQPSK due to the fact that the symbol period of MSK is twice that of QPSK/OQPSK.
These drawbacks can be avoided by using a pre-modulation ﬁlter. The PSK demodulator depicted in
Figure 2.19 can be used for the detection of MSK signal. The only difference is that the matched ﬁlters
or correlators should match (2.81). In case the linear ampliﬁer is used the performance of MSK is the
same as the performance of QPSK.
2.3.1
GMSK
Gaussian minimum shift keying (GMSK) is the development of MSK. The difference from the MSK is
that in GMSK the Gaussian pulse is used for pulse shaping instead of half sinusoid. The impulse response

Modulation
55
t
t
1
0
0
1
0
0
1
1
0
1
0
1
0
1
a)
b)
T
3T
5T
7T
9T
11T
13T
2T
4T
6T
8T
10T
12T
14T
-1
0
1
14
12
10
8
6
4
2
0
-1
0
1
14
12
10
8
6
4
2
0
ai,I(t)
ai,I(t)·cos(πt/(2T))
ai,Q(t)
ai,Q(t)·sin(πt/(2T))
Figure 2.37
MSK: a) I channel, b) Q channel
t
-1
0
1
14
12
10
8
6
4
2
0
Figure 2.38
MSK modulated signal

56
Modulation and Coding Techniques in Wireless Communications
Figure 2.39
Spectrum of MSK and QPSK/OQPSK
of the Gaussian ﬁlter is given by:
h(t) = 1
2T

Q

2π B t −0.5T
√
ln 2

−Q

2π B t + 0.5T
√
ln 2

(2.85)
where Q(x) is the function deﬁned in (2.63), B is the ﬁlter bandwidth. The Fourier transform of the
Gaussian ﬁlter is given by:
H( f ) = 1
2 · sinc(fT) · exp

−f 2 ln 2
2B2

· exp (−jπfT)
(2.86)
The spectrum of a Gaussian shaped signal has low side lobes and a narrower main lobe than the spectrum
of rectangular pulse. The impulse response of Gaussian ﬁlter is depicted in Figure 2.40 and the GMSK
spectrum in Figure 2.41. Usually instead of bandwidth of low-pass Gaussian ﬁlter it is more convenient
to use the normalized bandwidth, which is the product of the ﬁlter bandwidth B and the symbol period T.
This normalized bandwidth or simply time-bandwidth product BT plays the same role for the Gaussian
ﬁlter as the roll-off factor does for the raised cosine ﬁlter.
As can be seen from Figure 2.40 the Gaussian ﬁlter with BT = ∞corresponds to the rectangular
ﬁlter. The small values of BT provide improvement in bandwidth efﬁciency, but on the other hand the
power efﬁciency with very low values of BT degrades signiﬁcantly. Usually values of BT from 0.3 to 0.5
are used for GMSK. These values provide a good compromise between bandwidth and power efﬁciency.
The GMSK modulator is represented in Figure 2.42.
Data at the modulator input is represented by the rectangular antipodal pulses as it is depicted in
Figure 2.43.
The Gaussian pulses corresponding to input data represented in Figure 2.43 are depicted in
Figure 2.44.
At the output of the Gaussian low-pass ﬁlter the individual pulses are summed up and forms function
a(t) depicted in Figure 2.45.
The output of the Gaussian ﬁlter is integrated from time t to inﬁnity. The result of integration b(t) is
represented in Figure 2.46.
The inphase and quadrature channels obtained from function b(t) are depicted in Figure 2.47a and
2.47b correspondingly. The modulated GMSK signal is depicted in Figure 2.47c.

Modulation
57
Figure 2.40
Impulse response of the Gaussian ﬁlter
Figure 2.41
GMSK spectrum
Figure 2.42
GMSK modulator

58
Modulation and Coding Techniques in Wireless Communications
Figure 2.43
Data at the input of the GMSK modulator
1
–2
0
2
4
6
8
10
12
t
1
0
1
1
1
1
0
0
0
1
1
Figure 2.44
Individual Gaussian shaped pulses corresponding to the data in Figure 2.43

Modulation
59
Figure 2.45
Output of the Gaussian low-pass ﬁlter
GMSK can be coherently detected with the help of the same type of demodulator as is used for
coherent detection of OQPSK or GMSK. In the case of GMSK demodulation the demodulator matched
ﬁlter of course should match the Gaussian pulse. As was mentioned above the power efﬁciency of GMSK
degrades with decreasing the value of BT product. Due to this fact the performance provided by the
GMSK with low values of BT product is slightly worse than the performance of MSK or BPSK/QPSK.
The BER curves for MSK and GMSK are represented in Figure 2.48.
As can be seen from Figure 2.47c there are no discontinuous phase changes in GMSK modulated
signal. This fact makes GMSK very attractive for using with high power ampliﬁers. The usage of high
Figure 2.46
Integrator output b(t)

60
Modulation and Coding Techniques in Wireless Communications
-2
0
2
4
6
8
10
12
-0.5
0
0.5
1
t
-2
2
4
6
8
12
10
-1
-0.5
0
0.5
1
t
a)
b)
-2
2
4
6
8
10
12
-1
-0.5
0
0.5
1
c)
t
-1
Figure 2.47
GMSK modulation: a) Inphase channel, b) Quadrature channel, c) modulated signal
power ampliﬁers as well as the low sideband power of GMSK is especially important for wireless
communication. GMSK with BT = 0.3 is used in GSM and HIPERLAN standards, and with BT = 0.5
is used in DECT standard.
2.4
QAM
Quadrature amplitude modulation (QAM) can be considered as an extension of QPSK. In the same
way as in QPSK the signal in QAM can be represented as a combination of inphase and quadrature
components but the constellation points are distributed over the whole area of the constellation diagram
rather than over the circle like in PSK. This is achieved by multilevel amplitude modulation of each I

Modulation
61
0.0001
0.001
0.01
0.1
10
8
6
4
2
0
Eb/No (dB)
BER
MSK
GMSK, BT = 0.5
GMSK, BT = 0.3
Figure 2.48
BER curves for GMSK and MSK modulation
and Q component. The M-QAM signal can be written as follows:
si(t) = bi,I(t) · cos(ωct)
+
,-
.
Ii (t)
−bi,Q(t) · sin(ωct)
+
,-
.
Qi (t)
, i = 1, . . . , M
(2.87)
where M = 2k is the modulation cardinality, k is the number of bits per symbol, bi,I(t) and bi,Q(t) are
√
M-level amplitude modulated baseband signals corresponding to I and Q channel. The typical QAM
modulator is depicted in Figure 2.49.
Each M-QAM symbol corresponds to the block of k bits. The data ﬂow is split in blocks by k/2
bits, this process generates two independent signals, which are fed to I and Q channels. The map-
per maps the block of k
/
2 bits to the
√
M-level amplitude modulated baseband signal. Usually the
pulse shaping is done with a baseband signal but it can be done with a bandpass signal too. Then
inphase baseband signal is multiplied by cos(ωct) and quadrature baseband signal by sin(ωct) and
summed up. The orthonormal basis for QAM coincides with PSK orthonormal basis (2.68). Obvi-
ously, the QPSK modulation can be represented as 4-QAM modulation with bipolar baseband signaling.
Figure 2.49
M-QAM modulator

62
Modulation and Coding Techniques in Wireless Communications
-3
-2
-1
0
1
2
3
0
t
-3
-2
-1
0
1
2
3
0
t
-5
-4
-3
-2
-1
0
1
2
3
4
5
0
t
a)
b)
c)
Figure 2.50
16-QAM modulation: a) bi,I(t) and Ii(t), b) bi,Q(t) and Qi(t), c) si(t)

Modulation
63
(t)
1
ψ
(t)
2
ψ
(I)
(Q)
d
(t)
1
ψ
(t)
2
ψ
(I)
(Q)
d
Figure 2.51
16-PSK and 16-QAM constellation
The examples of baseband signals bi,I(t), bi,Q(t) and I and Q channels for 16-QAM are depicted in
Figure 2.50a and b. The resulting 16-QAM signal si(t) = Ii(t) −Qi(t) is depicted in Figure 2.50c.
Due to more effective use of signal space in QAM it is possible to increase the minimum distance
between the constellation points in comparison with PSK, which leads to better performance. The
comparison of 16-PSK and 16-QAM constellations is represented in Figure 2.51.
Multiplication of the signal si(t) by the term cos(ωct) allows extracting the value of bi,I(t) from the
signal. Using trigonometric identities:
cos2(x) = 1 + cos(2x)
2
;
sin2(x) = 1 −cos(2x)
2
;
sin(x) · cos(x) = sin(2x)
2
(2.88)
it can be shown that:
si(t) · cos(ωct) = bi,I(t) · cos2(ωct) −bi,Q(t) · sin(ωct) · cos(ωct) =
= 1
2bi,I(t) + bi,I(t) · cos(2ωct) −bi,Q(t) · sin(2ωct)
2
(2.89)
Then the low-pass ﬁlter can remove the high frequency terms from the signal. Thus the term bi,I(t) can
be recovered from the signal. In the same way, multiplying the signal by the term −sin(ωct) obtain:
si(t) · (−sin(ωct)) = bi,Q(t) · sin2(ωct) −bi,I(t) · sin(ωct) · cos(ωct) =
= 1
2bi,Q(t) −bi,Q(t) · cos(2ωct) + bi,I(t) · sin(2ωct)
2
(2.90)
and the low-pass ﬁltering in this case also solves the problem of extracting the value of bi,Q(t) from the
signal. This property can be used in the demodulation process. The corresponding M-QAM demodulator
is depicted in Figure 2.52. It should be mentioned that the receiver matched ﬁlter itself is a low-pass ﬁlter
and in real life the low-pass ﬁltering and matched ﬁltering usually is combined in one block. The obtained
estimates of inphase and quadrature baseband signals are compared with thresholds to extract the bit
estimates. It is not enough like in QPSK demodulation to check the sign of the inphase or quadrature
component to obtain the information about the corresponding transmitted bit. For example, for 16-QAM
the threshold corresponding to the value of 2a (see Figure 2.53) should be calculated. This is especially
important under the conditions of fading channel where the QAM constellation is “pumping” due to the

64
Modulation and Coding Techniques in Wireless Communications
Figure 2.52
M-QAM demodulator, M = 2k
automatic gain control (AGC) procedure, thus the threshold values should be recalculated on ﬂy. After
comparison with the thresholds the bit estimates corresponding to the inphase and quadrature component
can be obtained. As can be seen the demodulation procedure for QAM is pretty simple and the same is
regarded for the implementation complexity. However, the receiver should have exact information about
the carrier, that is, the demodulation is coherent.
The calculation of error probability for QAM is not as straightforward as for PSK. As can be seen
from Figure 2.53 the QAM signals have different power and different number of neighbouring signals
(constellation points). For example, the constellation point with Gray code label 1100 has four neighbours
at distance d = 2a, while the points labelled 1010 and 1111 have only three and two neighbours at the
same distance. So, the size of decision regions for these points differs from each other. Correspondingly
the error probability for point 1100 under the conditions of AWGN channel can be estimated as 4Q
 d
2σ

,
Figure 2.53
Gray code labelling for 16-QAM constellation

Modulation
65
for point 1010 as 3Q
 d
2σ

and for point 1111 as 2Q
 d
2σ

, where Q (x) is the function deﬁned in (2.63).
Again in this case we do not take into account the case when the error causes the transition to the symbol,
which is not the nearest one.
For 16-QAM there are four inner points with error probability 4Q
 d
2σ

, four corner points with error
probability 2Q
 d
2σ

and eight points with error probability 3Q
 d
2σ

. Assuming all symbols are equally
likely, the total symbol error probability can be estimated as:
Pe ≈1
4 · 2Q
 d
2σ

+ 1
2 · 3Q
 d
2σ

+ 1
4 · 4Q
 d
2σ

= 3Q
 d
2σ

(2.91)
Assuming the constellation points are labelled with the help of Gray code, for example as in Figure 2.53,
the symbol error corrupts only one bit out of four. Then the bit error rate under the conditions of AWGN
channel can be written as:
Pb ≈3
4 Q
 d
2σ

(2.92)
Taking into account that in 16-QAM constellation each of the four inner points has energy 2a2, each
of the four corner points 18a2, and each of the other eight points 10a2 the average signal energy for
16-QAM can be calculated as follows:
E = 4 · 2a2 + 4 · 18a2 + 8 · 10a2
16
= 10a2 = 5d2
2
(2.93)
Then (2.91) can be written as:
Pe ≈3Q
$(
E
5N0
%
= 3Q
$(
4Eb
5N0
%
(2.94)
where Eb is the average energy per bit. In the same way (2.92) can be written as:
Pb ≈3
4 Q
$(
4Eb
5N0
%
(2.95)
In general, the constellation points of M-QAM can be represented as:
α = a
)
2K −
√
M + 1
*
+ ja
)
2L −
√
M + 1
*
,
K, L = 0, . . . ,
√
M −1
(2.96)
Then the average signal energy can be calculated as follows [8]:
E =
√
M−1
0
K=0
√
M−1
0
L=0
a2 )
2K −
√
M + 1
*2
+ a2 )
2L −
√
M + 1
*2
M
= 2(M −1)
3
a2
(2.97)
The minimum distance between constellation points d = 2a. The number of corner constellation points
with error probability 2Q
 d
2σ

is 4, the number of inner constellation points with error probability
4Q
 d
2σ

is
)√
M −2
*2
, and the number of constellation points lying on the outer constellation border
except the corners with error probability 3Q
 d
2σ

is 4
)√
M −2
*
. Then the total symbol error probability
is given by:
Pe ≈4
M · 2Q
 d
2σ

+
4
)√
M −2
*
M
· 3Q
 d
2σ

+
)√
M −2
*2
M
· 4Q
 d
2σ

= 4

1 −
1
√
M

Q
 d
2σ

(2.98)

66
Modulation and Coding Techniques in Wireless Communications
0.0001
0.001
0.01
0.1
25
20
15
10
5
0
Eb/No (dB)
BER
BPSK/QPSK
16-PSK
64-PSK
16-QAM
64-QAM
Figure 2.54
BER curves for BPSK/QPSK, 16-PSK, 64-PSK, 16-QAM, 64-QAM. AWGN channel
Taking into account (2.97) (2.98) can be written as:
Pe ≈4

1 −
1
√
M

Q
$(
3E
(M −1)N0
%
= 4

1 −
1
√
M

Q
$(
3Eb log2 M
(M −1)N0
%
(2.99)
Assuming the constellation points are labelled with the help of Gray code, the BER for M-QAM under
the conditions of the AWGN channel is given by:
Pb ≈
4
log2 M

1 −
1
√
M

Q
$(
3Eb log2 M
(M −1)N0
%
(2.100)
See BER curves represented in Figure 2.54 to compare the performance of QAM and PSK, recall that
the QPSK can be considered both as PSK and as 4-QAM. Obviously, QAM system outperforms PSK
system with the number of levels greater than four.
2.5
OFDM
Orthogonal frequency division multiplexing (OFDM) as it suggests from its name is the extension of the
frequency division multiplexing (FDM) technique. The basic idea of the FDM is to divide the available
bandwidth into many narrow sub-bands and to use a large number of parallel narrow-band subcarriers
rather than a single wide-band carrier to transfer the information as is shown in Figure 2.55 [9].
The main advantage of FDM is the robustness against frequency-selective fading and narrowband
interference. If the number of subcarriers is large enough, each subcarrier deals with ﬂat fading rather
than with frequency-selective fading as a wideband carrier does. And the narrowband interference will
affect only one or two subcarriers of the whole bunch of subcarriers. The other subcarriers will not
be corrupted by the interference. Another advantage of the FDM is the much greater symbol length in
comparison with wideband carrier. Due to this fact the intersymbol interference in the case of FDM
is comparatively short, which helps to cope with this problem. Unfortunately the spectral efﬁciency of
FDM is quite low due to guard intervals (see Figure 2.55b). To eliminate this problem it is possible to
use the orthogonal subcarriers as shown in Figure 2.56. Note that at the point corresponding to the peak
of each subcarrier’s spectrum all other spectra cross the zero, that is, the subcarriers are orthogonal.
The use of orthogonal subcarriers allows the subcarriers’ spectra to overlap. Due to the orthogonality
it is possible to recover the individual subcarriers’ signals despite the overlapping spectra and thus

Modulation
67
f
Guard interval
f
W
W
a)
b)
Figure 2.55
FDM principle. a) Wideband carrier b) FDM narrowband carriers
there is no need in guard intervals as in FDM. The usage of the orthogonal subcarriers also helps to
decrease the implementation complexity of both transmitter and receiver. In FDM each subcarrier needs
a separate pair of matched ﬁlters at the transmitter and the receiver to make it possible to eliminate the
inter-carrier interference. In OFDM the inter-carrier interference is eliminated due to the orthogonality
of the subcarriers and there is no need to use separate ﬁlters for each subcarrier. The idea of using
orthogonal subcarriers was suggested more than 40 years ago [10], [11], [12] but in practice it was not
used for a long time mostly due to its complexity.
Note that the set of OFDM subcarriers forms the set of orthogonal sinusoids. This is quite common
with discrete Fourier transform (DFT) where the set of orthogonal sinusoids is used for the representation
of the signal. The DFT is given by the following formula:
Xk =
N−1
	
n=0
xn · exp

−2π j
N kn

=
N−1
	
n=0
xn · cos
2π
N kn

−j
N−1
	
n=0
xn · sin
2π
N kn

,
k = 0, . . . , N −1
(2.101)
f
Figure 2.56
OFDM subcarriers

68
Modulation and Coding Techniques in Wireless Communications
-0.4
-0.3
-0.2
-0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
t
f
b)
a)
6
5
4
3
2
1
0
Figure 2.57
The representation of signal: a) Time domain, b) Frequency domain
That is, the DFT correlates the input signal with each of set of orthogonal sinusoids or basis functions.
If the input signal has some energy at a certain frequency k, it will be reﬂected at the correlation of the
input signal and this frequency, that is, in the value of spectrum for kth frequency Xk. In other words
the DFT converts the time domain representation of signal to the frequency domain representation. The
examples of the time domain and frequency domain representation of the same signal are depicted in
Figure 2.57.
The inverse DFT (IDFT) converts the signal spectrum, that is, the frequency domain signal represen-
tation to the time domain. IDFT is given by:
xn = 1
N
N−1
	
k=0
Xk · exp
2π j
N kn

= 1
N
N−1
	
k=0
Xk · cos
2π
N kn

+ j 1
N
N−1
	
n=0
Xk · sin
2π
N kn

,
n = 0, . . . , N −1
(2.102)
The simple OFDM system without usage of DFT is depicted in Figure 2.58.
The input of this system is QAM modulated signal Xk = Ik + j Qk with symbol rate R. In fact, it is
not necessary to use QAM modulated signal as input, other modulation types can also be used. With the
help of a serial-to-parallel convertor the block of N input QAM symbols X0, . . . , X N−1 simultaneously
modulates N orthogonal subcarriers exp( jωkt) = cos(ωkt) + j sin(ωkt), k = 0, . . . , N −1. Notice that
the symbol rate of subcarriers Rs is N times less than the symbol rate of the input signal Rs = R
N . In other
words the subcarriers’ sampling rate is N times less than the input signal sampling rate. The obvious
choice of the set of N orthogonal subcarriers is to choose the subcarrier frequencies in accordance with
the following rule:
ωk = kω0 = 2πk f0
(2.103)
where f0 = Rs. For the sake of simplicity we can assume that the transmitter ﬁlters have the rectangular
impulse responses. Then the transmitted signal x(t) can be represented as follows:
x(t) =
1
√
N
N−1
	
k=0
Xk · exp ( j2πk f0t)
(2.104)
The scaling factor
1
√
N is used for the power normalization. Recall that the subcarrier symbol period T is N
times longer than the input symbol period. Now introduce the discrete time t = nt (n = 0, . . . , N −1)
covering the period T, where t =
1
fs is the reciprocal of the sampling frequency fs. Since T = Nt the

Modulation
69
High Data Rate
Xk = Ik + jQk
S/P
Low Data Rate
X0
X1
X2
XN 1
Channel
I0
Q0
cos(ω0t)
sin(ω0t)
IN 1
QN 1
cos(ωN 1t)
sin(ωN 1t)
X0 = I0 + jQ0
XN 1 = IN 1 + jQN 1
.
.
.
.
.
.
.
.
xn
High Data Rate
X’k = I’k + jQ’k
P/S
Low Data Rate
X’0
X’1
X’2
X’N 1
I’0
Q’0
cos(ω0t)
sin(ω0t)
I’N 1
Q’N 1
cos(ωN 1t)
sin(ωN 1t)
X’0 = I’0 + jQ’0
X’N 1 = I’N 1 + jQ’N 1
.
.
.
.
.
.
.
.
Tx Filter
Tx Filter
Tx Filter
Tx Filter
.
.
.
.
Rx Filter
Rx Filter
Rx Filter
Rx Filter
Figure 2.58
A Simple OFDM system
sampling frequency fs should correspond to the input symbol rate R. Then fs = R = N · Rs = N · f0
and:
t = 1
fs
=
1
N f0
(2.105)
Substituting (2.105) in (2.104) obtain:
xn = x(nt) =
1
√
N
N−1
	
k=0
Xk · exp
2π j
N kn

,
n = 0, . . . , N −1
(2.106)

70
Modulation and Coding Techniques in Wireless Communications
Comparing (2.106) and (2.102) one can see that OFDM signal can be represented in the form of IDFT.
The only difference is the scaling
1
√
N instead of 1
N but it can be taken into account at the receiver. Thus,
if there were N OFDM subcarriers, it is possible to treat the modulated symbols of these carriers as
frequency domain symbols. These symbols are used as input for the N-dimension IDFT to obtain the
time domain OFDM symbol to be transmitted over the channel. At the receiver it is possible to use the
DFT function to extract the frequency domain symbols Xk from the received time domain signal [13].
If the number of subcarriers N is big enough the implementation complexity of the transmitter and the
receiver using the simple form of OFDM becomes unaffordable. However, if the DFT form is used it
is possible to use fast Fourier transform (FFT) instead of discrete Fourier transform and in this case
the implementation complexity signiﬁcantly decreases. The FFT is mathematically equivalent to DFT
but it is much more efﬁcient for the implementation. The only restriction implied by the FFT is that
the transform length N should be the power of two N = 2m. The OFDM system using FFT and IFFT
functions is depicted in Figure 2.59.
The input of the system is the QAM modulated data with high symbol rate R. The symbol period of
the input data is t. After serial-to-parallel processing N symbols Xk treated as the frequency domain
symbols are taken as input for the IFFT block that converts it to time domain block of N symbols xn.
The block of N output symbols xn forms the OFDM symbol of period T = Nt. The stream of OFDM
symbols has the symbol rate Rs = R
N . Then after the low-pass ﬁltering the OFDM symbol is transmitted
over the channel. At the receiver the time domain OFDM symbol distorted by the channel is used as
the input for the FFT block, which transforms it to frequency domain and the obtained estimates ˆXk
after parallel-to-serial processing forms the data stream with high rate R, which is demodulated by the
QAM demodulator. If the channel is noiseless the estimates ˆXk coincide with the original symbols Xk.
Actually, as was mentioned above it is not necessary that all subcarriers are modulated in the same way.
For example, some subcarriers can be modulated with the help of QPSK and others with the help of
16QAM or higher order modulations.
Most wireless systems are characterized by the presence of a multipath channel. The multipath channel
is the origin of the two types of interference in the OFDM system. The ﬁrst type is the intersymbol
interference (ISI). This type of interference occurs when the received OFDM symbol is distorted by the
previously transmitted OFDM symbol. It is a common problem for both single-carrier and multicarrier
systems but the multicarrier systems are more robust in this case since the symbol period T for the
multicarrier system is much longer than the symbol period of the single-carrier system. If the number of
subcarriers N is big enough the OFDM symbol period T is longer than the time span of the channel. In
this case only part of the received OFDM symbol will be corrupted by the delayed copy of the previously
transmitted symbol. Whereas the single-carrier symbol will be corrupted by the several previously
transmitted symbols due to the short symbol period, which should be used to keep the same high data
rate as in a multicarrier system. The very simple method of coping with ISI in OFDM system is the
usage of guard intervals. If the time span of the channel is Tc < T then as was mentioned above only
the ﬁrst part of duration Tc of each OFDM symbol is corrupted by the ISI. In this case it is enough to
add the guard interval of length Tg ≥Tc in the beginning of each symbol to get rid of ISI. This can be
considered simply as an extension of the OFDM symbol period as shown in Figure 2.60.
The guard interval does not contain any information and should be discarded at the receiver. That
means the data rate is decreased
)
1 + Tg
T
*
times. However, if the length of the guard interval is relatively
small in comparison with the original OFDM symbol period T this loss is not severe.
Another type of interference caused by the multipath channel is the inter-carrier interference (ICI).
The ICI occurs as a result of the fact that the multipath channel impacts the subcarriers in such a way
that they lose the orthogonality. Consider the multipath channel model as a ﬁlter of length L with the
coefﬁcients h = (h0, . . . , hL−1). For simplicity consider the channel model without AWGN. Assume
that the OFDM symbol comprising block of N samples xn, n = 0, . . . , N −1 is extended with guard
interval of L zeros. Now the OFDM symbol transmitted over the multipath channel comprises block of

Modulation
71
Figure 2.59
OFDM system using FFT

72
Modulation and Coding Techniques in Wireless Communications
ISI from the previous
OFDM symbol
Tc
Tg
Tg + T
T
T
a)
b)
Figure 2.60
Extension of an OFDM symbol to cope with ISI. a) Impact of the ISI to the OFDM symbol of length
T, b) Extended OFDM symbol of length T+Tg, ISI is eliminated
N + L samples:
 zn = 0,
n = 0, . . . , L −1
zn = xn−L,
n = L, . . . , N + L −1
(2.107)
The received OFDM symbol is the convolution of the transmitted OFDM symbol with the channel:
rn =
L−1
	
l=0
hl · zn−l,
n = 0, . . . , N + L −1
(2.108)
At the receiver the ﬁrst L samples of the received OFDM symbol r are discarded to avoid ISI. Then the
input of the DFT comprises the block of N samples rn, n = L, . . . , N + L −1. The DFT output in this
case can be written as follows:
ˆXk =
N−1
	
n=0
rn+L · exp

−2π j
N kn

,
k = 0, . . . , N −1
(2.109)
Substituting (2.108) in (2.109) obtain:
ˆXk =
N−1
	
n=0
L−1
	
l=0
hl · zn+L−l · exp

−2π j
N kn

,
k = 0, . . . , N −1
(2.110)
Notice that for l = 0 zn+L−l values are taken from x0 to xN−1, for l = 1 zn+L−l takes values 0, x0, . . . ,
xN−2, and for l = L - 1 zn+L−l takes values 0, . . . , 0
+ ,- .
L−1
, x0, . . . , xN−L+1. Then (2.110) can be written

Modulation
73
Figure 2.61
Extension of an OFDM symbol with cyclic preﬁx (CP)
as follows:
ˆXk =
N−1
	
n=0
L−1
	
l=0
hl · x(n−l) mod N · exp

−2π j
N kn

−
L−2
	
n=0
L−1
	
l=n+1
hl · xN−l+n · exp

−2π j
N kn

+
,-
.
ICI
,
k = 0, . . . , N −1
(2.111)
The ﬁrst term in the expression (2.111) is the desired signal from which as will be shown later the
transmitted symbol Xk can be easily extracted. The second term in (2.111) is the ICI. Obviously
the ICI in this case can be easily eliminated if the zeros in the guard interval, that is, the elements
zn = 0, n = 0, . . . , L −1 in (2.107) will be substituted by the last L samples of the OFDM symbol
xN−L, . . . , xN−1 as shown in Figure 2.61. The sequence xN−L, . . . , xN−1 transmitted in the guard period
is called cyclic preﬁx [14]. The number of samples in the cyclic preﬁx LCP should be no less than the
channel length LCP ≥L.
In this case the obtained OFDM symbol before the transmission is extended with the cyclic preﬁx of
length LCP ≥L and no guard interval is used. Then (2.107) takes the form of:
 zn = xN−LCP+n,
n = 0, . . . , LCP −1
zn = xn−LCP,
n = LCP, . . . , N + LCP −1
(2.112)
Then the extended OFDM symbol is convolved with the channel of length L (L ≤LCP) as described in
(2.108). Now let us consider the multipath channel model including AWGN. Then the samples of the
received OFDM symbol can be written as follows:
rn =
L−1
	
l=0
hl · zn−l + wn,
n = 0, . . . , N + L −1
(2.113)
where wn is AWGN. Now at the receiver the ﬁrst LCP rather than L samples of the received OFDM
symbol r are discarded. Obviously, by this the ISI is eliminated since the length of cyclic preﬁx
is greater than the channel span. Then the input of the DFT comprises the block of N samples rn,

74
Modulation and Coding Techniques in Wireless Communications
n = LCP, . . . , N + LCP −1, and the DFT output is given by:
ˆXk =
N−1
	
n=0
rn+LCP · exp

−2π j
N kn

,
k = 0, . . . , N −1
(2.114)
Substituting (2.113) in (2.114) obtain:
ˆXk =
N−1
	
n=0
L−1
	
l=0
hl · zn+LCP−l · exp

−2π j
N kn

+
N−1
	
n=0
wn+LCP · exp

−2π j
N kn

,
k = 0, . . . , N −1
(2.115)
Taking into account (2.112) the expression (2.115) can be written as:
ˆXk =
N−1
	
n=0
L−1
	
l=0
hl · x(n−l) mod N · exp

−2π j
N kn

+ wk,
k = 0, . . . , N −1
(2.116)
where wk = 0N−1
n=0 wn+LCP · exp

−2π j
N kn

, k = 0, ..., N −1 is the result of the DFT operation on N
AWGN samples. The DFT of AWGN results in AWGN. So, wk can be regarded simply as an AWGN
sample. As can be seen from (2.116) the usage of cyclic preﬁx allows the circular convolution to be
faked. Then substituting (2.102) in the expression (2.116) yields the following formula:
ˆXk =
N−1
	
n=0
$L−1
	
l=0
hl · 1
N
N−1
	
m=0
Xm · exp
2π j
N m(n −l)
%
· exp

−2π j
N kn

+ wk,
k = 0, . . . , N −1
(2.117)
Taking in account that hl = 0 for l ≥L, we can allow l to take values from 0 to N −1 instead of L −1.
Then changing the order of summation by l and k the expression (2.117) can be written as follows:
ˆXk =
N−1
	
n=0
$
1
N
N−1
	
m=0
$N−1
	
l=0
hl · exp

−2π j
N ml
%
· Xm · exp
2π j
N mn
%
· exp

−2π j
N kn

+ wk,
k = 0, . . . , N −1
(2.118)
Notice that 0N−1
l=0 hl · exp

−2π j
N ml

is simply the DFT of the channel coefﬁcients and the ﬁrst part of
the expression (2.118) contains the IDFT of Xk nested in DFT, which gives Xk. Then (2.118) may be
rewritten in the following way:
ˆXk = Hk · Xk + wk,
k = 0, . . . , N −1
(2.119)
where Hk = 0N−1
l=0 hl · exp

−2π j
N kl

. Due to the usage of the cyclic preﬁx it is quite easy now to recover
the original symbols Xk. It is enough to calculate the DFT of channel estimates and obtain the estimates
of values Hk, which can be used for the simple channel equalization consisting of the division of values
ˆXk by these estimates, that is, it is enough to use just the one tap equalizer. The OFDM system using
cyclic preﬁx is depicted in Figure 2.62.
As was mentioned above the usage of cyclic preﬁx decreases the system efﬁciency due to some
capacity loss, since no new data is transmitted in the cyclic preﬁx. Except for the loss in data rate there
is some loss in SNR due to insertion of the cyclic preﬁx. This loss is caused by the fact that the number
of samples in the extended OFDM symbol increases with the same signal energy. The SNR loss due to
cyclic preﬁx SNRCP can be calculated as follows:
SNRCP =
T
TCP + T =
N · t
LCP · t + N · t =
N
LCP + N
(2.120)

Modulation
75
Figure 2.62
OFDM system with cyclic preﬁx (CP)

76
Modulation and Coding Techniques in Wireless Communications
Because of this the cyclic preﬁx length LCP should be chosen as short as possible. The best choice of LCP
is to set it exactly equal to the channel length L. However, in wireless communication the channel length
L is not constant and the system designer should choose the cyclic preﬁx length LCP just taking into
account some reasonable constraints. Then in some cases it may appear that the channel length during
some period of time will be greater than the cyclic preﬁx length. This of course leads to the appearance
both ISI and ICI. If LCP < L the residual ISI for the kth sample of the DFT is given by [15]:
I SIk =
N−1
	
n=0
L−1
	
l=LCP+n+1
hl · xn−l · exp

−2π j
N nk

=
N−1
	
n=0
L−n−1
	
l=LCP+1
hn+l · x−l · exp

−2π j
N nk

(2.121)
Notice that here x−l refers to the samples of previously transmitted OFDM symbol. Assuming that
N ≥L −LCP −1 and changing the order of summation (2.121) can be rewritten as follows:
ISIk =
L−1
0
l=LCP+1
x−l·
L−1
0
m=l
hm · exp

−2π j
N (m −l)k

=
=
L−1
	
l=LCP+1
x−l · exp
2π j
N lk

·
L−1
	
m=l
hm · exp

−2π j
N mk

=
L−1
	
l=LCP+1
x−l · exp
2π j
N lk

·Hk,l
(2.122)
where Hk,l = 0L−1
m=l hm · exp

−2π j
N mk

is the DFT of the tail of channel impulse response. Then the ISI
power spectral density is given by [15]:
PISI,k = E
1
ISIk · ISI∗
k
2
=
L−1
	
l=LCP+1
L−1
	
m=LCP+1
Hk,l · H ∗
k,m · E
1
x−l · x∗
−m
2
· exp
2π j
N lk

= σ 2
x ·
L−1
	
l=LCP+1
Hk,l
2
(2.123)
The ICI appears in case LCP < L because the cyclic preﬁx is not long enough to mimic the convolution
of an extended OFDM symbol with the channel as a cyclic convolution. To do this the length of cyclic
preﬁx should be extended at least up to the length of the channel L. Then the ICI is easy to calculate
as the negative of the convolution of hypothetic extension of the cyclic preﬁx length up to L with the
channel [15]:
IC Ik = −
N−1
	
n=0
L−1
	
l=LCP+n+1
hl · x(n−l) mod N · exp

−2π j
N nk

(2.124)
The expression (2.124) is very similar to (2.121). The only difference is that in this case xi refers to
the samples of the current OFDM symbol not involving a computation of the samples of the previously
transmitted OFDM symbol as in (2.121). Assuming that samples of all OFDM symbols have the same
distribution it is possible to say that the ICI power spectral density coincides with PI SI,k:
PIC I,k = PI SI,k
(2.125)
Unfortunately the OFDM is quite sensitive to some system impairments, for example, to the frequency
offset, which can be caused by non-perfectly synchronized oscillators at the transmitter and the receiver.
This leads to a frequency shift of the received signal spectrum. Due to this fact the IDFT and DFT
operation in the transmitter and receiver does not correspond exactly to each other anymore. This
effect is called the “DFT leakage”. It is easier to explain it using the OFDM system model without DFT.

Modulation
77
Recall the representation of the OFDM as a set of N subcarriers ψn = exp ( j2πnf0t) = exp
 j2πnt
T

, n =
0, . . . , N −1 as in (2.104). Consider two subcarriers with indexes k and k + m. To restore the data
transmitted by these subcarriers the received signal should be multiplied by the complex conjugate of
the corresponding subcarriers ψ∗
k = exp

−j2πkt
T

and ψ∗
k+m = exp

−j2π(k+m)t
T

. Now assume that the
subcarriers’ pulses are generated at the receiver with some frequency offset δ, (|δ| < 0.5), that is instead
of pulse ψ∗
k+m the offset pulse ψ∗
k+m+δ = exp

−j2π(k+m+δ)t
T

is generated. In this case the subcarriers
are losing orthogonality and the ICI arises, that is, the energy from one subcarrier leaks into adjacent
subcarriers. Then the ICI between subcarriers k and k + m can be written as follows:
ICIm,δ =
T

0
ψk · ψ∗
k+m+δdt =
T

0
exp
 j2πkt
T

· exp

−j2π(k + m + δ)t
T

dt =
= T (1 −exp(−j2πδ))
j2π(m + δ)
(2.126)
The power of interference between subcarriers k and k + m is given by:
PICIm,δ = ICIm,δ · ICI∗
m,δ = T 2 sin2(πδ)
π 2(m + δ)2
(2.127)
In Figure 2.63 the “leakage” of the energy from the kth subcarrier to the (k + m)th subcarrier (actually
the power of ICI) for the case where there is no frequency shift and for the case δ = 0.1 is plotted. As can
be seen from the plot if there were no frequency shift (δ = 0), all the subcarrier energy is concentrated in
the frequency corresponding to the kth subcarrier and the energy does not spill into adjacent subcarriers
at all. In the case of frequency shift mostly the adjacent subcarriers suffer from the ICI.
The dependence of the ICI power on the frequency offset is depicted in Figure 2.64. As can be seen
from the plot the ICI power grows exponentially with the growth of the frequency offset.
The overall ICI energy from N – 1 subcarriers to the kth subcarrier can be estimated as follows:
EICI(k, δ) =
−1
	
m=−k
PIC Im,δ+
N−k−1
	
m=1
PIC Im,δ
(2.128)
0.000001
0.00001
0.0001
0.001
0.01
0.1
1
15
10
5
0
-5
-10
-15
m
PICI
δ = 0.1
δ = 0
Figure 2.63
ICI caused by the frequency offset

78
Modulation and Coding Techniques in Wireless Communications
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
0.4
0.3
0.2
0.1
0
-0.1
-0.2
-0.3
-0.4
PICI
δ
Figure 2.64
ICI power vs. frequency offset
The plot of ICI energy against the position of subcarrier k is depicted in Figure 2.65. Obviously, the ICI
energy in this case is less for the subcarriers, which are closer to the border of an OFDM symbol since at
this position the subcarrier has less adjacent subcarriers. However, as can be seen from the plot for most
subcarriers the overall ICI caused by the frequency offset and originated from over N – 1 subcarriers is
very similar and in many cases can be represented as an AWGN.
The most popular way to cope with the ICI caused by the frequency offset is to estimate the frequency
offset and then to compensate it. Usually it is done with the help of a phase-locked loop (PLL).
In the mobile radio environment, the relative movement between transmitter and receiver causes
Doppler frequency shifts in the received signal. This effect is another source of ICI in an OFDM system.
Actually, that means the multipath channel model cannot be considered simply as a ﬁlter of length L with
the coefﬁcients hl,l = 0, . . . , L −1 anymore. Now the channel coefﬁcients are changing with time.
δ = 0.1
δ = 0.05
δ = 0.01
k
EICI
0.0001
0.001
0.01
0.1
1000
800
600
400
200
0
Figure 2.65
Selective mapping

Modulation
79
Then (2.113) can be rewritten as:
rn =
L−1
	
l=0
hl,n · zn−l + wn,
n = 0, . . . , N + L −1
(2.129)
where hl,n is the value of the channel impulse response at the position l and instant n. Then the
demodulated symbols can be written as follows [16]:
ˆXk =
N−1
	
n=0
L−1
	
l=0
Xn · Hl(n −k) · exp

−2π j
N nl

+ wk,
k = 0, . . . , N −1
(2.130)
where
Hl(n −k) = 1
N
N−1
	
m=0
hl,LCP+(m−LCP) mod N · exp
2π j
N m(n −k)

(2.131)
Let us denote:
Hk =
L−1
	
l=0
Hl(0) · exp

−2π j
N kl

(2.132)
and
ICIk =
N−1
	
n̸=k
L−1
	
l=0
Xn · Hl(n −k) · exp

−2π j
N nl

(2.133)
Then (2.130) can be written as follows:
ˆXk = Xk · Hk + ICIk + wk,
k = 0, . . . , N −1
(2.134)
where Hk is the DFT of the tail of channel impulse response and ICIk is the inter-carrier interference
caused by the Doppler shift and wk is the AWGN. Obviously, if the channel were time-invariant, that
is, hl,k = hl, then ICIk = 0 and (2.134) coincides with (2.119). It is shown in [16] that with sufﬁciently
large value of N the inter-carrier interference ICIk can be represented as a Gaussian random variable
with zero mean and variance:
C2
0 = Es −Es
N 2
$
N + 2
N−1
	
i=1
(N −i) · J0(2π fDTi)
%
(2.135)
where fD is the maximum Doppler frequency, Es is the symbol energy and J0() is the zero-order Bessel
function of the ﬁrst kind.
The most common method to cope with ICI is the frequency domain equalization with the help
of training signals. In this case it is not enough to use the simple one-tap equalizer and the receiver
implementation complexity signiﬁcantly increases since it is necessary to use N equalizers. Moreover,
the bandwidth efﬁciency is reduced by training signals.
Another method is the time-domain windowing method comprising the multiplying of the transmitted
time-domain signals by a well-designed windowing function. Actually the extension of the OFDM
symbol with cyclic preﬁx is also the time-domain windowing. The drawback of this method is that some
additional subcarriers are needed for windowing, which are discarded at the receiver. Because not all of
the received signal power is being used in generating data estimates, the method has a reduced overall
SNR compared with OFDM without windowing.
The third method is so called self ICI cancellation [17]. This method maps the data to be transmitted
onto adjacent pairs of subcarriers with a 180-phase difference between them rather than onto single
subcarriers. The disadvantage of this method is that it is less bandwidth efﬁcient as two subcarriers are

80
Modulation and Coding Techniques in Wireless Communications
used to transmit one complex value. To some extent the efﬁciency of this method can be increased if
some groups of subcarriers are used for mapping rather than just adjacent pairs [18].
Another serious problem arising for an OFDM system is high peak to average power ratio (PAPR).
If the signal comprises the sum of N sinusoids each of maximum amplitude A, then it is possible that
at some point all sinusoids will be added with the maximum amplitudes and the amplitude of resulting
signal at this point will be NA. These large peaks disturb out of band energy and therefore increase
in-band noise and can cause the saturation in power ampliﬁers, leading to increasing BER when the
signal has to go through the ampliﬁer non-linearity. Of course, it is pretty unlikely that all N subcarriers
will be added at their maximum point (especially if N is large enough) but still it is possible. Therefore,
it is desirable to reduce the PAPR. The mathematical deﬁnition of the PAPR is given by [19]:
PAPR =
max
t∈[0,T ] |s(t)|2
E
1|s(t)|22
(2.136)
where s(t) is the modulated OFDM signal and E {} is the expectation. For large values of N assuming
that s(t) is the sum of N sinusoids it is possible to apply the central limit theorem to s(t). In accordance
with central limit theorem the real and imaginary part of s(t) have the Gaussian distribution. That means
the amplitude of the OFDM signal has a Rayleigh distribution with zero mean and a variance of Nv,
where v is the variance of one subcarrier. Then the cumulative distribution function for the PAPR per
OFDM symbol is given by [19]:
Pr {PAPR > γ } = 1 −(1 −eγ )N
(2.137)
The expression (2.137) conﬁrms that large peaks occur quite rarely. However, even rare large peaks can
distort signal signiﬁcantly. Assume N = 1024 and each subcarrier has the power of 1. Then the maximum
PAPR can reach 30 dB and even the average PAPR can be around 15 dB.
One obvious approach to reduce PAPR is clipping. Since the probability of large peaks occurring
is quite low it is possible just to clip the signal at some desirable level. However, clipping leads to so
called clipping noise, which degrades BER, and out of band noise, which reduces the spectral efﬁciency.
Filtering after clipping can reduce the out of band noise but may also cause some peak regrowth [20].
A different approach is to apply some shaped window with good spectral properties to the large signal
peak [21]. Since the OFDM signal is multiplied with several of these windows the resulting spectrum is
a convolution of the original OFDM spectrum with the spectrum of the applied window. So, ideally, the
window should be as narrow band as possible. On the other hand, the window should not be too long in
the time domain, because otherwise many signal samples are affected, which in turn increases BER.
Another approach usually called selective mapping consists in mapping the data by a set of codes, then
taking the IDFT of the obtained signals and picking the one providing least PAPR [22], [23], [24], [25]
as is shown in Figure 2.66. Usually the data sequence with evenly distributed ones and zeros provides
the signal with lower PAPR. So, the codes used in this method should have this property. However, the
drawback of this method is that the use of codes with this property decreases the data rate. Also the side
information to restore data from the demodulated sequence should be transmitted, which decreases the
spectral efﬁciency. Moreover, as the number of subcarriers increases this method becomes less attractive
since the memory needed to store the codebook and the CPU time needed to ﬁnd the corresponding
sequence grows exponentially with the number of subcarriers.
One more very popular method of decreasing the PAPR is the usage of artiﬁcial signals in empty
subcarriers together with convex optimization [26], [27]. In literature this method quite often is called
tone reservation. In many cases when transmitting data with the help of N-point DFT and IFFT, not all
N frequencies carry data. Thus, we have a few empty carriers per OFDM symbol. The basic premise of
this technique is to add sine waves at these empty carrier frequencies in such a way that the composite
OFDM symbol will have a lower PAPR. If a data vector contains zeros on positions Xj = 0 for j ∈{j1,. . .
jL}, then the transmitter can add any vector C that satisﬁes, Cj = 0 for j ̸∈{j1,. . . jL} to the data vector

Modulation
81
r1
rM
.
.
.
IFFT
IFFT
IFFT
.
.
.
.
r2
Select Sequence 
with lowest PAPR
Data
Figure 2.66
Selective mapping
and remove it at the receiver. The IDFT of sum of vectors X and C results in sum of IDFT of vector X
and IDFT of vector C:
IDFT(X + C) = x + c
(2.138)
To minimize the PAPR of (x + c), we must compute the vector c0 that minimizes the maximum peak
value:
c0 : max
j
x j + c0, j
2 = min
c

max
j
x j + c j
2

,
j = 0, . . . , N −1
(2.139)
With this formation, optimizing the time domain signal leads to a convex optimization problem that can
be transformed into a linear programming (LP) problem. Solving the LP problem exactly leads to PAPR
reduction of 6-10dB, but a simple gradient algorithm could achieve most of this reduction after a few
iterations.
References
[1] Trott, M. The Mathematica Guidebook for Programming. New York: Springer-Verlag, 2004.
[2] Bracewell, R. The Fourier Transform and Its Applications, 3rd edn. New York: McGraw-Hill, 1999.
[3] Proakis, J.G. Digital Communications, 3rd edn., McGraw-Hill, 1995.
[4] Nyquist, H. Certain Topics of Telegraph Transmission Theory. AIEE Transactions, vol. 47, Apr. 1928, pp.
617–644.
[5] Sklar, B. Digital Communications. Fundamentals and Applications, 2nd edn., Prentice Hall, 2001.
[6] Bityutskov, V.I. Bunyakovskii Inequality, in Hazewinkel, M., Encyclopaedia of Mathematics, Kluwer Academic
Publishers, 2001.
[7] Debnath, L. and Mikusinski, P., Hilbert Spaces with Applications, 3rd edn., Elsevier, 2005.
[8] Burr. A. Modulation and Coding for Wireless Communications, Prentice Hall, 2001.
[9] Doelz, M.L., Heald, E.T., Martin, D.L., Binary Data Transmission Techniques for Linear Systems. Proc. IRE,
vol. 45, May. 1957, pp. 656–661.
[10] Franco, G.A., Lachs, G., An Orthogonal Coding Technique for Communications. IRE Int. Conv. Rec., vol. 9,
1961, pp. 126–133.

82
Modulation and Coding Techniques in Wireless Communications
[11] Chang, R.W., Synthesis of Band-Limited Orthogonal Signals for Multichannel Data Transmission. Bell Syst.
Tech. J., vol. 45, Dec. 1966, pp. 1775–1796.
[12] Saltzberg, B.R., Performance of an Efﬁcient Parallel Data Transmission System. IEEE Trans. Commun. Tech.,
vol. 15, Dec. 1967, pp. 805–811.
[13] Weinstein, S.B., Ebert. P.M., Data Transmission by Frequency-Division Multiplexing Using the Discrete Fourier
Transform. IEEE Trans. Commun., vol. 19, May 1971, pp. 628–634.
[14] Peled, A., Ruiz. A., Frequency Domain Data Transmission Using Reduced Computational Complexity Algo-
rithms. IEEE International Conf. on Acoustics, Speech and Signal Proc. (ICASSP’80), 1980, pp. 964–967.
[15] Henkel, W., Taub¨ock. G., ¨Odling, P., B¨orjesson, P.O., Petersen, N., Johansson, A., The Cyclic Preﬁx of
OFDM/DMT – An Analysis. IEEE International Zurich Seminar on Broadband Communications, Feb. 2002, pp.
221–223.
[16] Russell, M., Stuber. G.L., Interchannel Interference Analysis of OFDM in a Mobile Environment. IEEE Vehicular
Technology Conference, Jul. 1995, vol. 2, pp. 820–824.
[17] Zhao, Y. and H¨aggman, S.G., Sensitivity to Doppler Shift and Carrier Frequency Errors in OFDM Systems-The
Consequences and Solutions. IEEE Vehicular Technology Conference, Jul. 1996, pp. 2474–2478.
[18] Armstrong, J., Analysis of new and existing methods of intercarrier interference due to carrier frequency offset
in OFDM. IEEE Trans. Comm., Vol. 47, No 3, Mar. 1999, pp. 365–369.
[19] Muller, S.H., Huber, J.B., A novel peak power reduction scheme for OFDM. IEEE Intern. Symposium on
Personal, Indoor and Mobile Radio Communications, Sep. 1997, vol. 3, pp. 1090–1094.
[20] Bahai, A.R.S., Singh, M., Goldsmith, A.J., Saltzberg, B.R., A new approach for evaluating clipping distortion
in Multicarrier systems. IEEE Journal on Selected Areas in Communications, vol. 20, 2002, pp. 3–11.
[21] Van Nee, R., Wild, A., Reducing the Peak to Average Power Ratio of OFDM. IEEE Vehicular Technology
Conference, Jul. 1998, pp. 2072–2076.
[22] Jones, A.E, Wilkinson, T.A, Barton, S.K, Block coding scheme for reduction of peak to mean envelope power
ratio of multicarrier transmission schemes. Electronics Letters, Dec. 1994, vol.30, No. 25, pp. 2098–2099.
[23] Eetvelt, P.V., Wade, G. and Tomlinson, M., Peak to Average Power Reduction for OFDM Schemes by Selective
Scrambling. IEE Electronics Letters, Aug. 1996, vol.32, No. 21, pp. 1963–1964.
[24] Braithwaite, R.N., Using Walsh code selection to reduce the power variance of band-limited forward link CDMA
waveforms. IEEE Journal on Selected Areas in Communications, vol. 18, 2000, pp. 2260–2269.
[25] Baml, R.W., Fischer, R.F.H. and Huber, J.B., Reducing the Peak to Average Power Ratio of Multicarrier
Modulation by Selected Mapping. IEE Electronics Letters, vol. 32, No. 22, Sep., 2000, pp. 2056–2057.
[26] Tellado, J., Ciofﬁ, J., Peak power reduction for multicarrier transmission. Proceedings Globecom’98, Sydney,
Australia, 1998.
[27] Yang Jun, Yang Jiawei, Li Jiandong, Reduction of the peak-to-average power ratio of the multicarrier signal
via artiﬁcial signals. Intern. Conf. on Communication Technology WCC - ICCT 2000., vol. 1, No. 22, 2000,
pp. 581–585.

3
Block Codes
Grigorii Kabatiansky1, Evgenii Krouk2, Andrei Ovchinnikov2, and
Sergei Semenov3
1Institute for Information Transmission Problems, Russian Academy of Sciences, Russia
2St Petersburg State University of Aerospace Instrumentation, Russia
3Nokia Corporation, Finland
This chapter introduces the theory of block codes. Here we will describe mainly the features of block
codes which correct the independent errors. The importance of considering this class of codes can be
explained by its signiﬁcance for practice and by the fact that analyses of these codes allows the main
methods and results of coding theory to be shown.
3.1
Main Deﬁnitions
Let us consider in accordance with Shannon [1] the model of data transmission system represented in
Figure 3.1. A data source generates messages u1, . . . , uM and a receiver needs to receive them correctly
(with high reliability). The data source and the receiver are connected by a channel allowing transmitting
symbols from an input alphabet (set) A transmitting in a sequential way. However, due to some noise in
the channel the output sequence may differ from the input one. Moreover, in general the input alphabet A
and the output alphabet B do not coincide. The probabilistic model of the channel is given by transition
probabilities P(b|a) that an output sequence (of symbols) is b under condition that an input sequence
was a. We restrict our consideration to the case already well explored in coding theory q-ary memoryless
channels, for which:
r input and output alphabets coincide;
r cardinal number of the input (and the output) alphabet equals to q;
r statistic characteristics of the output symbol are fully deﬁned by the input symbol (that is, there is no
memory in the channel);
r statistic characteristics of the output symbol do not depend on time.
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

84
Modulation and Coding Techniques in Wireless Communications
Source
Channel
encoder
Channel
Sink
Channel
decoder
u
Α
∈
v
Β
∈
w
uˆ
Figure 3.1
Model of data communication system
An important case of this kind of channels is a binary symmetric channel (BSC), where the probability
that output (binary) symbol coincides with the input symbol is equal to Q and the probability that output
symbols differ from the input symbol is equal to P = 1 −Q.
To provide the reliable data transmission messages should be encoded, that is, to each message ui
corresponds a ﬁnite sequence vi = (vi1, . . . , vini ) of symbols of the alphabet A. This sequence is called
codeword. The codeword is transmitted over the channel. The set of all codewords is called a code and
the mapping ϕ : u →v is called an encoding procedure. If codewords consist of the same number of
symbols (ni = n), then a code is called a block code of length n. We assume that an encoding maps
different messages to different codewords. Hence a block code is an arbitrary subset V (of cardinality
M) of the vector space En
q of all q-ary words of length n.
The receiver tries to restore the source message u relying on the received output sequence w. The
corresponding mapping  : w →ˆu is called the decoding procedure. This mapping to some extent is
the reverse mapping to encoding. Devices, which realize encoding and decoding procedures, are called
the encoder and the decoder respectively. Due to the presence of noise in the channel w may differ
from v. In this case message (w) = ˆu may differ from source message u as well. This event is called
the decoding error. Since there is reciprocation between the messages and the codewords, then it is
possible to consider the mapping ψ = ϕ ◦ : w →ˆv = ϕ(ˆu) instead of mapping . Mapping ψ is also
called the decoding procedure. It is more convenient to consider the mapping ψ, because the deﬁnition
of ψ is equivalent to a partition of the set An of all words of length n on decision regions i, so
that An =
M
∪
i=1 i; i ∩ j = ø, i ̸= j, where i = {w ∈An : ψ(w) = vi}. It is intuitively clear that to
minimize the probability of decoding error it is necessary to include in i words of An, which are “close
enough” to vi; where the measure of “closeness” should be agreed with the channel in the sense that the
closer two words are, the more probable that one word will be received from the output of the channel
if another word was fed to the channel input. Such a kind of measure of “closeness” for BSC is the
Hamming distance [2].
The Hamming distance d(a, b) between words a = (a1, . . . , an) ∈An and b = (b1, . . . , bn) ∈An is
deﬁned as the number of positions where these words are different.
It is easy to verify that Hamming distance is the metric, that is:
d(a, b) > 0, a ̸= b, d(a, a) = 0;
d(a, b) = d(b, a);
d(a, c) ≤d(a, b) + d(b, c)
⎫
⎬
⎭
(3.1)

Block Codes
85
By deﬁnition the Hamming distance between transmitted and received words is equal to the number of
errors which occurred during transmission over the channel. Therefore we can say that a decoding ψ of
a code V corrects t errors, if the decoding result is always correct, on condition that there were no more
than t errors during the data transmission over the channel, that is, ψ(w) = v, if d(w, v) ≤t. One of the
most important decoding procedures is the minimum distance (MD) decoding, which for a given received
word w outputs the closest (in Hamming distance) to codeword ˆv (if there are several such codewords,
then any of them).
The following notion in many ways characterizes the capability of a code to correct errors. The
minimum distance (shortly, distance) d(V ) of a code V is the minimum of pairwise Hamming distances
between different codewords, that is:
d(V ) =
min
v,v′∈V ;v̸=v′ d(v, v′)
(3.2)
Let us denote a code of length n, cardinal number M and distance d as (n, M, d) code.
It is easy to check that a decoding ψ corrects t errors if and only if for any i ∈1, . . . , M the decision
region i contains the n-dimensional (hyper)sphere:
An
t (vi) = {x ∈An : d(x, vi) ≤t}
(3.3)
of radius t and with the centre at the point vi. Since decision regions i and  j do not intersect for i ̸= j,
then the corresponding spheres do not intersect either; and this fact, by virtue of properties of metric
(3.1), is equivalent to the property: d(vi, v j) > 2t for all i ̸= j. So we derive one of the fundamental
results of coding theory: code V corrects t errors if and only if d(V ) ≥2t + 1.
For many applications it is convenient to extend the deﬁnition of encoding procedure by allowing
“denial decoding”, that is, to deﬁne one more decision region ∗consisting of received words for which
no decision about the transmitted word was done. This kind of decoding is called partial decoding
(different from the full decoding described above) and it is the mapping ψ : An →An ∪{∗}. The most
important example of partial decoding is the error detection ψ0 which refuses to output a codeword if a
given received word is not from the code (that is, produce error detection mark ∗) and in case a received
word is a codeword it is assumed that this word was uncorrupted. Thus, ψ0(vi) = vi and ψ0(w) = ∗for
w /∈V . The generalization of error detection is decoding procedure ψt, which corrects no more than t
errors. For this method of decoding the decision regions i coincide with spheres An
t (vi) of radius t
around vi and ∗= An\
M
i=1 An
t (vi)

, that is, an error will be detected if the distance between the
received word and arbitrary codeword is more than t.
We will say that the decoding procedure ψ of code V is capable of correcting t errors and detecting
s errors s > t if the decoding result is the transmitted codeword in cases where no more than t errors
occur during transmission, or the decoding result is the error detection in cases where more than t but no
more than s errors occur. It is obvious that this is equivalent to the following condition: i = An
t (vi) and
An
t (vi) ∩An
s (v j) = 0 for all i ̸= j. And the obtained condition, in turn, is equivalent to d(V ) > t + s.
Thus the code V is capable of correcting t errors and detecting s errors s > t if and only if its distance
d(V ) ≥t + s + 1.
Example 3.1
Consider a binary code V = {v0 = (00000), v1 = (11111)} of length 5 and cardinal
number 2. The distance of this code is 5. The decision region 0 = A5
2(v0) for MD (minimum dis-
tance) decoding consists of those binary sequences of length 5 in which the number of zeros is more
than the number of ones; and, vice versa, 1 = A5
2(v1) consists of sequences in which the number
of ones is more than the number of zeros. In other words, the MD decoding in this case is the ma-
jority decoding, that is, ψ2(w) = vi, where i = maj(w1, w2, w3, w4, w5). The decoding procedure ψ1
with the decision regions 0 = A5
1(v0) = {(00000), (10000), (01000), (00100), (00010), (00001)} and

86
Modulation and Coding Techniques in Wireless Communications
1 = A5
1(v1) = {(11111), (01111), (10111), (11011), (11101), (11110)} is capable of correcting one er-
ror and detecting two and three errors.
From the above it follows that the greater the code distance, the more errors the code can correct.
Thus, one of the main tasks of coding theory is to ﬁnd optimal codes. An (n, M, d) code is called
optimal if for two ﬁxed parameters (of n, M and d) it is impossible to “improve” the third one, that is,
to increase the cardinal number, to increase the distance or to decrease the length. Usually this task is
formulated as to ﬁnd the code with maximum cardinal number M = mq(n, d) for given code length n
and distance d. Moreover the solution of this problem helps to ﬁnd the solution of two other problems
(
min
V :|V |=M,d(V )=d n(V ) and
max
V :|V |=M,n(V )=n d(V )).
Note that there is little known about optimal codes as well as about the behaviour of the function
mq(n, d) (see Section 3.5).
The capability of a code to correct and/or to detect the errors is connected to redundancy. Since for
transmission of M messages over the noiseless channel it is enough to use q-ary k-tuples (k =

logq M

,
where ⌈x⌉denotes the least integer greater or equal to x) then the value r = n −k symbols is called the
redundancy of a code.
The code rate, deﬁned as R = R(V ) = logq M
	
n, is an important parameter, which characterizes
the “slowing down” of the information transmission due to redundancy. The fundamental result of
information theory - noisy channel coding theorem by Shannon, states that for any rate R less than the
channel capacity C the probability of decoding error for best codes (in fact for almost all codes) tends
(exponentially) to zero with increasing of code length; and vice versa, in case R > C the probability
of decoding error greater than some constant a = a(R, C) for any code. Thus, for a given acceptable
probability of decoding error P∗
acc. and code rate R∗(R∗< C), it is possible to search for the code with
minimum code length of a set of codes V such that for any code V ∈V, P(V ) ≤P∗
acc. and R(V ) ≤R∗.
Note that this problem is close to the above mentioned extreme problem
min
V :|V |=M, d(V )=d n(V ); and the
minimum code length means decreasing of the decoding time, connected to accumulation of all n symbols
in the decoder. However, from the practical point of view the complexity of the encoding and decoding
procedures is a more important factor.
Until now we considered codes as the arbitrary sets of codewords without any restrictions on a code
structure. It is obvious that utilization of codes, deﬁned in such a way, is very restricted. For example,
even implementation of an encoding procedure, which usually has much less complexity than decoding,
demands the table of mapping messages to codewords to be stored in the memory. In some cases when
k ≥50, the size of such a table becomes unacceptably large. Because of this, great attention is given
to codes which have some algebraic structure, providing the opportunity to simplify the realization of
these codes as well as their construction. The most important class of such kinds of codes is the class of
linear codes. To describe these codes we need some information about algebraic structures, stated in the
following section.
3.2
Algebraic Structures
In this section we brieﬂy describe such algebraic structures as groups, ﬁelds and vector spaces. This
knowledge is useful for understanding the following sections. For more detail information see [3] or
any comprehensive book on modern algebra. One of the most simple algebraic structures is a semigroup
deﬁned as a set M with binary operation ◦that assigns to each pair of elements a, b ∈M a uniquely
deﬁned element, denoted as a ◦b. The binary operation ◦should be associative, that is, for any a, b, c ∈
M:
(a ◦b) ◦c = a ◦(b ◦c)
(3.4)

Block Codes
87
A group is deﬁned as a semigroup G which, at ﬁrst, contains an identity element e such that, for any
a ∈G:
a ◦e = e ◦a = a
(3.5)
and, secondly, for any element a ∈G, there exists a uniquely inverse element, denoted as a−1 such that:
a ◦a−1 = a−1 ◦a = e
(3.6)
If in addition the following condition satisﬁes:
a ◦b = b ◦a
(3.7)
for all a, b ∈G, then a group G is said to be commutative or Abelian.
The binary operation on the group is called (by convention) the multiplication or the addition and is
denoted by · or by + respectively. The cardinal number of group G (the number of elements in group)
is called the order of the group and is denoted by |G|. A mapping ϕ of group G to group G′ is called a
homomorphism if, for all g1, g2 ∈G:
ϕ(g1 ◦g2) = ϕ(g1) ◦ϕ(g2)
(3.8)
If, moreover, ϕ is the one-to-one mapping, then it is called the isomorphism; and groups G and G′ are
called isomorphic groups (that is, algebraic identical).
The important example of a group is the group S(X) of one-to-one mappings of the set X to itself
with the superposition of mappings as the binary operation ◦, that is, ( f ◦g)(x) = f (g(x)), x ∈X. Let
X = {1, 2, . . . , n} be the ﬁnite set of n elements, then the group S(X) is called the symmetric group of
order n; and its elements, that is, mappings σ : X →X are called permutations and denoted as tables:

 1
2
. . .
n
i1
i2
. . .
in

,
where
ik = σ(k)
For the group G with the “multiplication” it is possible to raise the elements to integer power, that is
g0 = e,
gi = g ◦gi−1 for i > 0, gi = (g−1)−i for i < 0. A group is called cyclic if each element is a
power of some element a, which is called a generator element, that is, G =

ai :
i ∈Z

. For example,
set Z of integers is the cyclic group under the addition with the generator element 1 (or -1). Another
example of cyclic group is group Z +
q of elements, which are integers (residues) 0, 1, . . . , q −1; and the
binary operation addition on modulo q is deﬁned as:
(i + j) mod q =
 i + j,
If
i + j < q
i + j −q,
otherwise
(3.9)
Any cyclic group G is either isomorphic to Z if |G| = ∞, or to Z +
q where |G| = q.
A subset H ∈G is called a subgroup of G if h1 ◦h2 ∈H for any h1, h2 ∈H, that is, the set H is a
group relative to the binary operation ◦.
Example 3.2 The subset < g >=

gi :
i ∈Z

is always the subgroup, which is called the subgroup
generated by the element g; and the order of < g > is said to be the order of element g. If this order is
ﬁnite, then it is equal to the minimal positive integer n such that gn = e.
A subset g ◦H = {g ◦h : h ∈H} is called a left coset of group G on subgroup H. Any two cosets either
coincide or do not intersect each other, that is, they deﬁne the partition of G; and all of them have the
same order |H|. Hence, |H| is the divisor of |G|, that is, the order of any subgroup is a divisor of the
order of the group. This is the statement of the famous Lagrange theorem. Therefore, the order of any
element is the divisor of the order of the group; and, for all g ∈G:
g|G| = e
(3.10)

88
Modulation and Coding Techniques in Wireless Communications
A subgroup H is said to be normal if g ◦h ◦g−1 ∈H, for all g ∈G, h ∈H; or that is the equivalent
statement, the left coset g ◦H coincides with the right coset H ◦g for all g. Obviously any subgroup of
a commutative group is normal. For the normal subgroup H the binary operation on the group G induces
the binary operation on the set G/H of the cosets, that is, g1H ◦g2H = (g1 ◦g2)H; and relevant to this
operation the set G/H is the group, called factor-group. For instance, let G be the group Z of all integers
with addition as the binary operation; and let H be the subgroup qZ of integers divisible by q. Then the
corresponding factor-group is isomorphic to the above-mentioned group Z +
q .
In some early works on coding theory the so-called binary group codes were considered. These codes,
deﬁned as arbitrary subgroups of the group Z n
2 of binary sequences of length n with the binary operation
of symbol-by-symbol addition by modulo 2. The attempts to transpose these results to the case of an
arbitrary ﬁnite alphabet of q elements, for example by changing the set En
q of q-ary sequences of length
n to the group with the binary operation of symbol by symbol addition on modulo q, showed that the
group structure is not enough; and the set En
q should be regarded (if it is possible) as n-dimension vector
space on the ﬁeld Fq of q elements and the linear subspaces should be chosen as the codes.
Informally saying a ﬁeld is a set on which it is possible to add, to subtract, to multiply and to divide (by
nonzero elements) preserving the “usual” properties of these operations. Well-known examples of ﬁelds
are the ﬁeld Q of rational numbers; the ﬁeld R of real numbers; and the ﬁeld C of complex numbers.
On the other hand, if we deﬁne on the set {0, 1} the addition on modulo 2 and conjunction as the
binary operations of addition and multiplication respectively, then we obtain the ﬁeld F2 consisting of
two elements (i.e. 0 + x = x, 1 + 1 = 0, 0 · x = 0, 1 · x = x). This ﬁeld plays a very important role
in the discrete mathematics, close to the role of the ﬁelds R and C in the classic mathematics. To
make certain that F2 is a ﬁeld despite it being unlike the ﬁelds Q, R or C, let us give the formal
deﬁnition.
A set K of more than one element is called a ﬁeld if for any two elements a, b ∈K there are deﬁned
their sum a + b ∈K and their product a · b ∈K with the following properties:
1.1
(a + b) + c = a + (b + c)
1.2
a + b = b + a
1.3
there exists element 0 such that a + 0 = a
1.4
there exists element (−a) such that a + (−a) = 0
2.1
(a · b) · c = a · (b · c)
2.2
a · b = b · a
2.3
there exists element 1 such that a · 1 = a,
a ̸= 0
2.4
there exists element a−1 such that a · a−1 = 1,
a ̸= 0
3
(a + b) · c = a · c + b · c
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
(3.11)
The axioms of the ﬁrst section mean that a ﬁeld is a commutative group relative to addition (see Equations
3.4–3.7); and the axioms of the second section mean that a ﬁeld without element “0” is a commutative
group relative to multiplication.
If we relax the axioms of the second section by excluding conditions 2.2 and 2.4, then we obtain
the deﬁnition of an associative ring with unit. We can deﬁne the homomorphism (isomorphism) for the
rings, as it was done for groups, with the natural demand that the condition (3.8) should be valid for both
operation of addition and multiplication.
A ﬁnite ﬁeld of q elements is denoted by Fq or GF(q). In particular, the set of residues by modulo
p, where p is the prime number forms the ﬁeld Fp (or in other notation Z p). The ﬁeld Fp consists of
integers 0, 1, . . . ,
p −1; and to add or to multiply two elements of Fp means to add (or to multiply)
these two elements just as integers, and then to ﬁnd the remainder after division by p (this remainder is
called the residue by modulo p).
If the equation n · 1K = 0K (n ∈Z) has only zero solution n = 0 in a ﬁeld K, then the ﬁeld K is said
to be a ﬁeld of zero characteristic. Otherwise, the ﬁeld K is said to be the ﬁeld of characteristic p, where
p is the minimal positive integer such that n · 1K = 0K. Thus, p is the order of the element 1K as an

Block Codes
89
element of the additive group of the ﬁeld K. It is easy to show that p should be a prime number. A ﬁeld
K of characteristic p contains the subﬁeld K(1) = {n · 1K, n ∈Z}, which is isomorphic to Fp; and a
ﬁeld K of zero characteristics contains the subﬁeld, which is isomorphic to Q. In particular, a ﬁnite ﬁeld
of q elements exist if and only if q is a power of prime number p where p is the characteristic of that
ﬁeld itself, and the ﬁeld is unique (up to isomorphism).
For any ﬁeld of characteristic p the following unusual identity (“truncated” Newton identity):
(a + b)p = a p + bp
(3.12)
is true. Moreover, by virtue of Lagrange theorem another useful identity is valid. Namely, for any
a ∈Fq, a ̸= 0:
aq−1 = 1
(3.13)
It is known as Fermat’s “small theorem”. This identity is equivalent to:
aq = a
(3.14)
for any a ∈Fq.
Many applications of ﬁnite ﬁelds in coding theory are based on the fact that it is possible to regard the
ﬁnite ﬁeld Fpm as m-dimension vector space on the ﬁeld Fp; and vice versa.
A set V is called vector (linear) space over a ﬁeld K if:
1. V is an Abelian group under addition.
2. For any v ∈V and λ ∈K, the multiplication of vector by scalar (or scalar multiplication) λ · v ∈V
is deﬁned. Moreover,
2.1 λ · (v1 + v2) = λ · v1 + λ · v2;
2.2 (λ1 + λ2) · v = λ1 · v + λ2 · v;
2.3 (λ1 · λ2) · v = λ1 · (λ2 · v);
2.4 1K · v = v.
As an example of a vector space we can consider so called “n-dimension coordinate (arithmetic) space
K n”, the elements of which are the sequences a = (a1, . . . , an), ai ∈K; and the operations of the addition
and the scalar multiplication are deﬁned as follows:
a + b = (a1 + b1, . . . , an + bn)
λ · a = (λ · a1, . . . , λ · an)
(3.15)
Vector n
i=1 λi · vi is called a linear combination of vectors v1, . . . , vn; and λi are called coefﬁcients of
linear combination. The basis of vector space V over ﬁeld K is the set of vectors v1, . . . , vm ∈V such
that any vector x ∈V can be represented uniquely as the linear combination:
x =
m

i=1
λi · vi,
λi ∈K
(3.16)
The coefﬁcients λi are called coordinates of vector x in the basis {vi, i = 1, . . . , m}. All bases of given
vector space V consist of the same number of vectors, which is referred to as the dimension of vector
space V and is denoted by dim V . The vector space V is called m-dimension vector space, where
m = dim V .
A set of vectors {vi} is said to be linear independent if a linear combination of these vectors is equal
to 0 only if all coefﬁcients of the linear combination are zeros. Otherwise the set {vi} is said to be linear
dependent. Another deﬁnition of the basis is that it is the maximal (in the sense of being the maximal set
under inclusion) set of linear independent vectors.

90
Modulation and Coding Techniques in Wireless Communications
The set of vectors {fi, i = 1, . . . , m} with the coefﬁcients fij in the basis v1, . . . , vn (i.e. fi =  fij · v j)
is the basis of the space if and only if det( fij) ̸= 0; calculation of the determinant should be done in the
ﬁeld K.
A mapping A : V →U of vector space V to vector space U is said to be linear if for any v, v′, v′′ ∈
V, λ ∈K:
A(v′ + v′′) = A(v′) + A(v′′)
A(λ · v) = λ · A(v)
(3.17)
A linear mapping is a homomorphism over the ﬁeld K; and as in the case of groups and rings, the
vector spaces V and U are called the isomorphic vector spaces if there exist the one-to-one mapping
A : V →U. Since there exists the one-to-one mapping of any vector v ∈V to coordinates of this vector
v in some ﬁxed basis, an n-dimension vector space over the ﬁeld K is isomorphic to the n-dimension
coordinate space. Therefore, all vector spaces of the same dimension over the same ﬁeld are isomorphic.
In particular, any n-dimension vector space over the ﬁeld Fq consists of |K n| = qn vectors.
Let v1, . . . , vn be the basis of V and u1, . . . , um be the basis of U, then every linear mapping
A : V →U corresponds to (m × n) matrix [aij], i = 1, . . . , m;
j = 1, . . . , n, which coefﬁcients are
deﬁned by the following equation:
A(v j) =
m

i=1
aij · ui,
j = 1, . . . , n
(3.18)
An important case of linear mapping is a linear functional f : V →K 1, which in accordance with (3.18)
can be represented as f (x) =  fi · xi, where fi = f (vi), x =  xi · vi. The set of linear functionals
forms a vector space V ∗under the operations of an addition of functionals and their multiplication
by elements of the ﬁeld K. This vector space is said to be dual to V and it has the same dimension:
dim V ∗= dim V .
Another important case is the linear mapping A : V →V , called a linear operator over V . In this
case ui = vi (only single basis is used); and the linear operator A corresponds to a square (n × n) matrix
[aij] such that:
A(v j) =
n

i=1
aij · vi,
j = 1, . . . , n
(3.19)
It is possible not only to add linear operators and multiply them by an element of the ﬁeld, but also to
multiply operator by operator (as mappings). In this case the operator E : E(v) = v, referred to as a unit
operator, is the unit (the neutral element under multiplication), since for any operator A, E A = AE = A.
The matrix of operator E in any basis can be written as:
En = [δij]
where δij =
 1
if
i = j
0
if
i ̸= j
(3.20)
The existence of the inverse operator A−1: A · A−1 = A−1 · A = E is equivalent to any one of the
following conditions:
r Ker A = {v ∈V :
A(v) = 0} = {0}(Nonsingular)
r Im A = {A(v) :
v ∈V } = V
r det(aij) ̸= 0
The set of nonsingular operators form the group under multiplication, which is called the general linear
group and denoted by GL(n, K). If a metric is deﬁned on V , then the subset of nonsingular linear

Block Codes
91
operators such that any of them preserves the distance between points of V , forms the subgroup. Such
an operator is called isometry operator, and the corresponding group is called the isometry group. For
Hamming metric this subgroup consists of linear operators σ · 	, where σ is the linear operator of
permutation (σ(ei) = eσ(i)); 	(e j) = λ j · e j is the “diagonal” operator; and ei is the i th row of matrix
En, ei has only one nonzero component at i th position.
The subset L ∈V is said to be a linear subspace of the space V if L is the subgroup of V under
addition, and for any l, l1, l2 ∈L,
λ ∈K, the following statement is correct: λ · l ∈L. In other words,
L is the linear space under the operations of vector addition and multiplication by scalar, deﬁned on the
whole set V . Therefore, the basis l1, . . . , lk exists in L, where k = dim L. Thus we obtain the deﬁnition
of subspace L as follows:
L =

x;
x =
k

i=1
λi · li

(3.21)
An important fact is that any basis of a subspace could be extended up to the basis of the full space.
A linear subspace can also be described as solutions of some system of linear equations. Deﬁne
the subspace L∗of the dual space V ∗, which consists of all linear functionals such that any of these
functionals equal to zero for any vector of L:
L∗= { f ∈V ∗:
f (l) = 0,
l ∈L}
(3.22)
This subspace is said to be dual to L. Then for any basis f1, . . . , fr of space L∗, where r = dim L∗=
n −dim L, L is the set of solutions of system of r linear equations:
L = {x ∈V :
fi(x) = 0,
i = 1, 2, . . . ,r}
(3.23)
Deﬁne the scalar product of two vectors x =  xi · vi and y =  yi · vi, xi, yi ∈K as:
(x, y) =
n

i=1
xi · yi
(3.24)
Then an arbitrary linear functional f can be represented as:
f (x) = (F, x)
(3.25)
where F = ( f (v1), . . . , f (vn)). The equation (3.25) establishes the isomorphism between V and V ∗. In
this case dual subspace L∗corresponds to so-called orthogonal complement to L, denoted by ¯L and
deﬁned as:
¯L = {x ∈V, l ∈L :
(x, l) = 0}
(3.26)
Note that for the ﬁelds of ﬁnite characteristic the “usual” (for ﬁelds of zero characteristic, like the ﬁeld of
complex numbers) property L ∩¯L = 0 is not correct; and it is possible that L intersect ¯L. Furthermore,
L could belong to ¯L and such subspace is called self-orthogonal.
Example 3.3
Consider 5-dimensional vector space V of all 5-tuples over the ﬁnite ﬁeld F2. The
operations of vector addition and scalar multiplication are deﬁned according to (3.15) and the scalar
product of two vectors is deﬁned by (3.24). The following four vectors form a 2-dimensional subspace
L of V :
(00000) ,
(00011) ,
(01100) ,
(01111)
The orthogonal complement ¯L consists of the following eight vectors:
(00000) ,
(00011) ,
(01100) ,
(01111) ,
(10000) ,
(10011) ,
(11100) ,
(11111)

92
Modulation and Coding Techniques in Wireless Communications
The dimension of ¯L is 3. Since L ∩¯L ̸= 0, L ⊂¯L, and hence, the subspace L is the self-orthogonal
subspace.
For any subspace L of any vector space V , ¯L = L and dim L + dim ¯L = dim V . For any linear
mapping A : V →U, the dimension of the kernel Ker A ⊂V is connected with the dimension of the
image Im A ⊂U by the following equation:
dim Ker A + dim Im A = dim V
Now we will pay special attention to the ring of polynomials and its quotient rings. The most important
example of associative rings is the ring of integers Z. Another very important example, which is very
close to the previous one, is the ring K[x] of the polynomials with coefﬁcients from the ﬁeld K. The
elements of the K[x] are the polynomials, that is, the sequences f = ( f0, f1, . . .), where fi ∈K
and no all coefﬁcients are equal to zero. The maximal m such that fm ̸= 0 is called the degree of the
polynomial and denoted by deg f (x), where f (x) is more usual representation of the polynomial with one
variable x:
f (x) = f0 + f1x + . . . + fmxm
(3.27)
If fm = 1 then a polynomial is called normalized. Two polynomials can be added and multiplied in
accordance with standard formulas:
f (x) + g(x) = ( f0 + g0) + ( f1 + g1)x + . . . + ( fi + gi)xi + . . .
(3.28)
f (x) · g(x) = h0 + h1x + . . . + hixi + . . . , where, hk =

i+ j=k
fi · g j
(3.29)
and:
deg( f (x) + g(x)) ≤max (deg f (x), deg g(x)) ,
deg ( f (x) · g(x)) = deg f (x) + deg g(x)
(3.30)
Example 3.4 f (x) = x4 + 3x2 + 4,
g(x) = 2x2 + x + 3,
K = F5
f (x) + g(x) = x4 + (3 + 2)x2 + x + (4 + 3) = x4 + x + 2
f (x) · g(x) = (1 · 2)x6 + (1 · 1)x5 + (1 · 3 + 3 · 2)x4 + (3 · 1)x3 + (3 · 3 + 4 · 2)x2 + (4 · 1)x + 4·
3 = 2x6 + x5 + 4x4 + 3x3 + 2x2 + 4x + 2
It is easy to verify that zero element and unit element of the ring K[x] are polynomials 0 = (0, . . . , 0)
and 1 = (1, 0, . . . , 0) respectively, and f (x) · g(x) = 0 if and only if f (x) = 0 or g(x) = 0. The latter
property means that there are no divisors of zero in K[x]. Moreover, the ring K[x] as well as the ring
Z is an example of the Euclidean ring. The commutative ring L is said to be Euclidean if there is a
nonnegative integer function µ() deﬁned on L\{0} such that:
1. µ(a · b) ≥µ(a) for all a, b ̸= 0 from L;
2. for any a, b ∈L,
b ̸= 0 there exist q, r ∈L (the quotient and the reminder) such that
a = q · b + r, where µ(r) < µ(b)
or r = 0.
The reminder r is also called the residue of a by modulo b and denoted by a mod b.
For Z this function is |a| and for K[x] µ( f (x)) = deg f (x). The property 2) can be realized by the
usual algorithm of division of polynomials.

Block Codes
93
Example 3.5 a(x) = x7 −2x5 + 4x3 + 2x2 −2x + 2
b(x) = 2x5 + 3x + 4,
K = F5
3x2 −1
2x5 + 3x + 4) x7
−2x5
+ 4x3 + 2x2 −2x + 2
x7
+ 4x3 + 2x2
−2x5
−2x
+ 2
−2x5
−3x −4
x + 1
As the result of the division a(x) by b(x) we obtain the quotient q(x) = 3x2 −1 and the remainder
r(x) = x + 1, that is:
a(x) = q(x) · b(x) + r(x) = x7 −2x5 + 4x3 + 2x2 −2x + 2 = (3x2 −1) · (2x5 + 3x + 4) + x + 1
A subgroup I ⊂L of the additive group of the ring L is called an ideal of the commutative ring L if for
all a ∈L,
v ∈I:
a · v ∈I
The set L/I of cosets {I + a} is the ring under the operations of addition and multiplication, deﬁned
on the ring L: {a + I} + {b + I} = {a + b + I}; {a + I} · {b + I} = {a · b + I}. The ring L/I is called
quotient ring or residue class ring by modulo of ideal I. The simplest example of an ideal is the principal
ideal V = {a · v :
a ∈L}, generated by an element v ∈L. Any Euclidian ring is the ring of principal
ideals, that is, there are no ideals except the principal ones; and the elements of the quotient ring L/V
can be represented as elements r ∈L such that µ(r) < µ(v) or r = 0 if we deﬁne operations as follows:
(r1 + r2)L/V = (r1 + r2) mod v,
(r1 · r2)L/V = (r1 · r2) mod v
(3.31)
For example, for the ring K[x] and the principal ideal generated by g(x), elements of the quotient ring
K[x]/g(x) are the polynomials of the degree less than n = deg g(x). These elements can be added as
usual polynomials; and the multiplication of polynomials by modulo g(x) is chosen as the operation of
multiplication.
It is a well known fact that any positive integer can be uniquely represented as the product of prime
numbers. This statement can be generalized to any ring of principal ideals, in particular to the Euclidean
rings. Let us restrict our attention to the case of the ring K[x]. The polynomial f (x), deg f (x) ≥1 is
said to be irreducible over the ﬁeld K if it cannot be represented as a product of two polynomials (with
coefﬁcients of K) of nonzero degree.
Example 3.6
f1(x) = x2 −2 is the irreducible polynomial over Q, f2(x) = x2 + 1 is the irreducible
polynomial over R, f3(x) = x2 + x + 1 is the irreducible polynomial over F2. Notice that the ﬁeld of
the coefﬁcients is signiﬁcant. For instance, f1(x) is reducible polynomial over R, f2(x) can be reduced
over C and f3(x) can be reduced over F4.
Theorem 3.1
Any polynomial f (x) ∈K[x] can be uniquely represented as the product of the element
of the ﬁeld K and the irreducible normalized polynomials.
Notice that for the ring K[x] there are known simple algorithms (with the polynomial complexity) of
factorization of polynomials to irreducible polynomials, as distinguished from the case of Z [3].

94
Modulation and Coding Techniques in Wireless Communications
Consider calculations over ﬁnite ﬁelds since it is a very important issue for the main part of codes
constructed with the help of algebraic coding theory. Let us outline several useful (for calculations)
properties of ﬁnite ﬁelds. First of all, the ﬁeld Fpm can be represented as the m-dimension vector space
over the ﬁeld Fp, where p is a prime number. That means the addition of the elements in Fpm can be
regarded as the addition by modulo p of the m-tuples. Secondly, the multiplicative group of the ﬁeld Fq
consist of q −1 elements and it is the cyclic group, that is, there is at least one primitive element γ ∈Fq
such that a = γ i,
0 ≤i < q −1, for any a ∈Fq,
a ̸= 0; the number i is called the logarithm of a to
the base γ and denoted by logγ a. In fact, there are ϕ(q −1) primitive elements of the ﬁeld Fq, where ϕ()
is the Euler’s function. This property allows us to use the “logarithmic” representation of the elements
in the process of the multiplication:
log(a · b) = (log a + log b) mod (q −1)
(3.32)
One more useful (but unusual in comparison with ﬁelds Q, R and C) property of the ﬁnite ﬁeld Fpm was
mentioned above (3.12), (3.14):
(a + b)p = a p + bp
(3.33)
for any a, b ∈Fpm:
(λ · a)p = λ · a p
(3.34)
for any a ∈Fpm, λ ∈Fp. Therefore, the mapping σp : Fpm →Fpm (a →a p) is a linear operator on
Fpm regarded as the m-dimension vector space over the ﬁeld Fp. Moreover, the mappings σpi , i =
0, 1, . . . , m −1 are the automorphisms of the ﬁeld Fpm and form the group.
3.3
Linear Block Codes
Let us return to the model of reliable data communication system, described in Section 3.1. A discrete
memoryless channel (we restrict consideration to this class of channels) is deﬁned by the crossover
probability p(x/y) that is the (conditional) probability of receiving a q-ary symbol y as a channel’s
output if a q-ary symbol x was transmitted. Let an additive group structure be deﬁned on the q-ary
channel alphabet A (for instance, consider A as the group Z +
q of residues by modulo q). If the received
word y = (y1, . . . , yn) does not coincide with the transmitted word x = (x1, . . . , xn) then it is said that
the error (or error vector) occurs during the data transmission over the channel. If:
P(y|x) = P(y −x|0) = P(y −x)
(3.35)
then such kind of channel is called a channel with additive noise.
It is natural to use for a channel with additive noise codes correcting some set of errors E. A code
V ⊂An can correct a set of errors E = {0, e1, . . . , em} if any equation v + e = v′ + e′, where v, v′ ∈V ,
e, e′ ∈E has unique solution v = v′ and e = e′. Choice of a set of correctable errors E should depend
on the probability distribution of errors P. Since the code V with a set of correctable errors E guarantees
the decoding error probability Pe no more than 1 −
e∈E P(e) then a suitable set E usually is formed
in such a way to include the most probable error patterns. Therefore the problem of construction of
corresponding optimal code, that is, the code with maximum cardinal number (or with maximum code
rate) should be investigated. Nevertheless, let us note that such a kind of choice of E is not necessarily
the best in the sense of maximum code rate for a given decoding error probability Pe.
The Hamming weight of vector x = (x1, . . . , xn), as the number of nonzero components of x. If a
group under addition is deﬁned on alphabet A, and a set An of all words of length n is regarded as a
group denoted by wt(x), is deﬁned under component-wise addition, then the relation between Hamming
distance and Hamming weight can be written as follows:
d(x, y) = wt(x −y)
(3.36)

Block Codes
95
Consider codes, which are the subgroups of An and called group codes. To calculate the distance of a
group code by virtue of property (3.36) it is enough to ﬁnd the minimum weight of its nonzero codewords,
i.e.:
d(V ) =
min
v∈V,v̸=0 wt(v)
(3.37)
The group structure on A is not enough to construct good codes in An; and the main results of coding
theory are obtained in cases where q is a prime power when the alphabet A can be regarded as the ﬁnite
ﬁeld Fq, and An is regarded as n-dimension vector space Fn
q over Fq. By the deﬁnition, a q-ary linear
block (n, k) code is an arbitrary k-dimension subspace of vector space Fn
q .
Since a linear block code is a group code, the equation (3.37) is correct for any linear block code.
Notice that in cases where q = p, where p is a prime number, the deﬁnition of a linear code coincides
with the deﬁnition of a group code.
Since the number of vectors in arbitrary k-dimension subspace of vector space Fn
q over the ﬁeld Fq
is equal to qk, the same is the number of messages M, which is possible to transmit by a q-ary (n, k)
code. It is convenient to represent these M = qk messages as k-dimension vectors ui = (u1
i , . . . , uk
i ),
i = 1, . . . , M, from Fk
q , that is, {u1, . . . , uM} = Fk
q .
In the previous section two methods of description of linear subspaces were presented. Let us start
with the ﬁrst of them. Consider an (n, k) code V and k × n matrix G, where rows are vectors v1, . . . , vk
forming a basis of the subspace V , that is:
G = [gij], where (gi1, . . . , gin) = vi
Matrix G is called a generator matrix of the code. Every (n, k) code has exactly
k−1

i=0
(qk −qi) bases and,
therefore, the same number of generator matrices. Each generator matrix deﬁnes the encoding procedure
ϕG :
Fk
q →V by the following formula:
ϕG(u) = ϕG(u1, . . . , uk) = u · G =
k

i=1
ui · vi
(3.38)
which is a linear mapping. Let G be some generator matrix of an (n, k) code V . Then an arbitrary
generator matrix G′ of this code can be represented as G′ = C · G, where C is a nonsingular k × k
matrix. Let us split the generator k × n matrix into matrices G1 and G2:
G = [G1|G2]
(3.39)
where G1 is k × k matrix, and G2 is k × (n −k) matrix. If G1 is a nonsingular matrix, then matrix G′:
G′ = G−1
1 · G = [Ik|G′
2],
G′
2 = G−1
1 · G2
(3.40)
is also a generator matrix of the code V and deﬁnes in accordance with (3.38) the encoding procedure:
ϕG(u1, . . . , uk) = (v1, . . . , vk, vk+1, . . . , vk+r) = (u, u · G′
2)
(3.41)
Such encoding procedure is called a systematic encoding, because the ﬁrst k symbols of any codeword
coincide with the corresponding symbols of an uncoded message (vi = ui,
i = 1, . . . , k). A code with
generator matrix G′ is called a systematic code. Not every linear code is systematic, because matrix G1
in (3.39) may appear to be a singular matrix. However, it is always possible to ﬁnd k linear independent
columns of the matrix G (since rank over the columns coincides with rank over the rows). Therefore, it
is possible to transform the code V to a systematic form with by some permutation of coordinates, that
is, any (n, k) code is equivalent to a systematic one. Hereafter, we often assume that considered (n, k)
codes are systematic.

96
Modulation and Coding Techniques in Wireless Communications
Let code V be a systematic code and matrix G′ has the same form as in (3.40), then V can be deﬁned
as aforementioned as the set of solutions of the following system of linear equations:
H · v = 0
(3.42)
where H = [−G′
2|Ir]. It means that the matrix H is a generator matrix of the subspace
¯V =
{x ∈L : (x, v) = 0,
v ∈V }, which is called the dual code. This statement immediately follows from
the substitution of (3.41) in (3.42), which shows that (3.42) is correct for any codeword and from
the comparison of the dimensions (dim V + dim ¯V = n). The matrix H satisfying (3.42) is called
a parity-check matrix of the code V . The equation (3.42) is the equation of linear dependence be-
tween those columns hi of matrix H, where vi ̸= 0. It leads immediately to the following useful
result.
Lemma 3.1
(Bose criterion). The minimum distance of a code V is no less than d if any d −1 columns
of its parity-check matrix H are linear independent.
It follows from Lemma 3.1 that to construct the code correcting one error, the matrix H with non-
collinear columns should be constructed. For instance, such kind of maximal (in number of columns)
matrix H can be constructed by induction:
Hr =
 1
. . .
1
∗

0
0
. . .
0
Hr−1

or, what is the same:
Hr =
⎡
⎢⎢⎢⎣
1
. . .
1
Fr−1
q

0
0
. . .
0
1
1
...
0
Fr−2
q
1
⎤
⎥⎥⎥⎦
(3.43)
The equation (3.43) allows errors to be detected in a very simple manner. Namely, it is enough to calculate
vector S called a syndrome:
S = b · HT
(3.44)
where b is the received vector, and check if S is equal to zero or not since S = 0 if and only if b belongs
to the code. Notice that the value of the syndrome depends not only on vector b but also on the form of
the parity-check matrix of the code. This fact we will use later when considering decoding algorithms
of linear codes.
Of course, nontrivial code (that is, code which consists of more than one word) cannot correct any
errors. In particular, if errors which occurred in the channel, form a codeword, then the received vector
b is a codeword but not the transmitted one. This kind of error cannot even be detected, because the
syndrome of the received vector is equal to zero. Let us introduce the concept of a standard array to
describe errors, which can be corrected and detected by the code.
Let V be an (n, k) linear binary code (n −k = r). Let v0, v1, . . . , v2k−1 be all codewords of the code:
V =

v0, v1, . . . , v2k−1

where v0 is the all-zero word. Let us form the table of 2k columns and 2r rows as follows. Any row
consists of 2k vectors. The ﬁrst row we constrain all codewords with v0 as the ﬁrst element of the row.
Then we take any n-vector e1, which does not belong to the code; and the second row consists of elements
that are the sum e1 + vi, i = 0, . . . 2k −1. Then we choose an element e2, which does not belong to the
ﬁrst and the second row; and form the third from the sums e2 + vi. We continue this process until all

Block Codes
97
vector space has been exhausted. As the result of this procedure we obtain an array, which is called a
standard array:
v0
v1
v2
. . .
v2k−1
e1 + v0
e1 + v1
e1 + v2
. . .
e1 + v2k−1
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . .
. . .
. . . . . . . . . . . . . . . .
e2r −1 + v0
e2r −1 + v1
e2r −1 + v2
. . .
e2r −1 + v2k−1
(3.45)
It is obvious that different rows of this array do not contain the same elements. Therefore, the number of
rows is equal to 2r. The syndromes of all vectors in the same row are identical:
(ei + v j1) · HT = (ei + v j2) · HT = ei · HT
and the syndromes of the elements from the different rows are different.
The standard array is the method of writing of the whole n-dimension vector space. Any error vector
in the channel can occur, but the code can correct only one received vector from the row of the standard
array, because the vectors, placed in the same row has identical syndromes. The rows of the standard
array are usually called the cosets of the code and the elements in the ﬁrst column are called coset
leaders. Any element in the row (in the coset) can be used as the coset leader.
A binary linear code can correct only 2r vectors, which is signiﬁcantly less than the overall number of
possible error vectors 2n. However, in most channels the different error vectors have different probability.
In any channel it is necessary to choose the most probable error vectors as the coset leaders to realize the
decoding on maximum likelihood. In particular, in the channel with independent errors the vectors with
minimum Hamming weight should be chosen as the coset leaders.
If e0, e1, . . . , e2r −1 (e0 is the all-zero vector) are the coset leaders of code V , then the decoding error
probability, provided by this code Pe is:
Pe = 1 −
2r −1

i=0
P(ei)
(3.46)
where P(ei) is the probability of vector ei being the error vector in the channel. A code can be used in
the channel if:
1 −Pe.acc. <
2r−1

i=0
P(ei)
where Pe.acc. is the acceptable error probability.
To calculate the error probability with the help of formula (3.46) it is necessary to calculate 2r prob-
abilities, which is, as usual, a highly complex problem. Notice that the coding theorems of information
theory shows that there should be a subset of coset leaders among the long enough codes with a code rate
less than the channel capacity, which includes the set of most probable channel error vectors. That is,
there exist the code, providing an arbitrary small value of error probability Pe. The formula (3.34) deﬁnes
the exact value of error probability, provided by the code in the channel with independent errors with
minimum distance decoding. The estimations of error probability, based on use of minimum distance
can be obtained for the case of decoding in hypersphere of radius ν. Let us ﬁnd out the size of radius ν to
provide the decoding in hypersphere to be very close (in the sense of error probability) to the minimum
distance decoding.
Let An be the set of n-tuples with symbols from the alphabet A; and let Er be the set of qr most
probable error vectors e∈An. Let V be the (n, k)-code (n −k = r) over A. Let EV be the set of leader
cosets of code V, and let P(B) be the probability of error vector in the channel and a vector from some
set B.

98
Modulation and Coding Techniques in Wireless Communications
Lemma 3.2
[6]:
P(An\(EV ∩Er)) ≤2P(An\EV )
Proof. Since the number of elements in Er is equal to the number of elements in EV, then |Er\(EV ∩Er)| =
|EV \(EV ∩Er)|. Therefore, in accordance with the deﬁnition of set Er:
P(Er\(EV ∩Er)) ≥P(EV \(EV ∩Er))
(3.47)
Then from the obvious inclusion:
An\EV ⊇Er\(EV ∩Er)
and in accordance with (3.47) it follows that:
P(EV \(EV ∩Er)) ≤P(An\EV )
(3.48)
From the equation:
An\(EV ∩Er) = (An\EV ) ∪(EV \(EV ∩Er))
and from the inequality (3.48) obtain:
P(An\(EV ∩Er)) = P(An\EV ) + P(EV \(EV ∩Er)) ≤2P(An\EV )
Lemma 3.2 shows that decoding only those coset leaders which belong to the set Er (instead of decoding all
error vectors, which can be corrected by the code) leads to the fact that the error probability P(An\(EV ∩
Er)) will not exceed the double error probability for decoding on maximum likelihood 2P(An\EV).
The decoding in hypersphere of radius ν means that the received vector is decoded to the nearest
codeword, which is at a distance no more than ν from the received vector. Moreover, the received vector
is compared only with coset leaders of weight no more than ν. Therefore, to make it possible that the
error probability for decoding in hypersphere does not exceed more than two times the error probability
for maximum likelihood decoding, it is necessary to choose the minimum value of ν, satisfying:
An
ν(0) ⊇Er ∩EV
where AN
v (0) is the hypersphere of radius ν and with the centre in all-zero vector.
In particular, it is enough if AN
ν (0) ⊇Er; and for BSC it means that
An
ν(0)
 = ν
i=0

 n
i

≥2r.
Notice that given proof does not depend on the errors model, that is, this proof is applicable to any
additive channel. Moreover, the proof does not depend on the method of full decoding, that is, the proof
is correct for any full decoding algorithm, not only for the maximum likelihood decoding.
3.4
Cyclic Codes
The cyclic codes form the most explored subclass of the linear codes. The greatest number of known
good codes are the cyclic codes also. There is the simple encoding procedure for these codes; and simple
decoding procedures for many of cyclic codes are also known.
Deﬁnition 3.1
A linear code is called a cyclic code if every cyclic shift of a codeword is also a codeword.
Thus, if a(a0, a1, . . . , an1) is the codeword of the cyclic code of length n, then the cyclic shift of this
codeword T(a) = (an1, a0, a1, . . . , an2) is the codeword of the same code. Let each n-dimension vector
f = (f 0, f 1, . . . , fn1), fi∈K correspond to the polynomial f (x) = f0 + f1x + . . . + fn−1xn−1 ∈K[x].
Then each n-tuple corresponds to the polynomial of degree no more than n −1. Hereafter we will not
distinguish vector and the corresponding polynomial.

Block Codes
99
Let a(x) be the codeword of the cyclic code of length n. Consider the polynomial xa(x) mod(xn −1):
xa(x) = an−1xn + an−2xn−1 + . . . + a1x2 + a0x
and the residue of xa(x) on modulo (xn −1) is equal to:
xa(x) mod (xn −1) = an−2xn−1 + . . . + a1x2 + a0x + an−1
(3.49)
The right side of (3.49) is the cyclic shift of codeword a(x). Therefore, xa(x) mod(xn −1) is the codeword
of the cyclic code. Considering the cyclic shifts of vector a(x): xa(x) mod(xn −1), x2a(x) mod(xn −1),
and so on, obtain that any polynomial xia(x) mod(xn −1) is the codeword. Since the cyclic code is the
linear code, each linear combination of its codewords also is the codeword, that is, all polynomials:

i, j
λi · x ja(x) mod (xn −1), λi ∈K
(3.50)
are the code words. Thus, the set of codewords is an ideal in the ring K[x]/(xn −1). As was mentioned
above K[x]/f(x) is the ring of principal ideals. Therefore, there exists the element g(x)∈K[x]/(xn −1)
such that I =< g(x) >, that is, this element generates the cyclic code I. It is convenient to choose
nonzero normalized polynomial of minimum degree as the element g(x). Then it is easy to verify that
any codeword v(x) of the code I can be represented uniquely as:
v(x) = m(x) · g(x),
deg m(x) < n −deg g(x)
(3.51)
Let us consider the division of v(x) by g(x):
v(x) = m(x) · g(x) + r(x)
where deg r(x)< deg g(x) or r(x) = 0. The ﬁrst statement can not be correct since in that case r(x) =
v(x) −m(x) · g(x) ∈I, that is, r(x) is the codeword (polynomial) of degree less than degree of g(x);
and this fact contradicts the choice of g(x). The fact that the polynomial m(x)·g(x) belongs to the code
follows from the properties of an ideal. The uniqueness of the representation (3.51) follows from the fact
that there are no divisors of zero in the ring of polynomials. The polynomial g(x) is called the generator
polynomial of the code. Notice that the generator polynomial g(x) is the divisor of the polynomial xn−1.
Since the degree of the polynomial xn−deg g(x) g(x) is equal to n, then it can be represented as:
xn−deg g(x)g(x) = xn −1 + r(x)
(3.52)
where r(x) = (xn−deg g(x)g(x)) mod (xn −1). In accordance with (3.50) r(x) is the codeword, that is, g(x)
is the divisor of r(x). Then from (3.52) it follows that xn−1 also is divisible by g(x).
We showed that all codewords could be represented as in (3.51); the number of such kind of words is
equal to the number of possible choices of the information polynomial m(x), that is, qn−deg g(x) = qk. The
number of information symbols of the code k = n −deg g(x). The generator matrix G of the cyclic code
can be formed in accordance with (3.51) by the cyclic shifts of g(x):
G =
n

 
!
⎡
⎢⎢⎢⎢⎣
g0
·
·
·
·
gr
g0
gr
·
·
·
·
g0
·
·
·
·
gr
⎤
⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
k,
(3.53)
where r = n −k. Any cyclic code is deﬁned by the corresponding generator polynomial g(x), which is
the divisor of xn−1. The opposite is also true, that is, if we choose the polynomial g(x) and form the code
from the words of form (3.51) then we obtain the cyclic (n, k) code, where n is such positive integer that
g(x) is the factor of xn −1 and k = n −deg g(x).
The above results can be formulated as the theorem [4]:

100
Modulation and Coding Techniques in Wireless Communications
Theorem 3.2
Any q-ary cyclic (n, k) code is generated by the normalized polynomial g(x) over GF(q)
of degree n −k, where g(x) is the factor of xn −1. And vice versa, any normalized polynomial g(x) over
GF(q) of degree n −k, where g(x) is the factor of xn −1, generates the cyclic (n, k) code.
Let polynomial h(x) be:
h(x) = xn −1
g(x)
(3.54)
Then the multiplication of any codeword v(x) = m(x) · g(x) by h(x) is equal to:
v(x) · h(x) = m(x) · h(x) · g(x) = m(x) · (xn −1) = 0 mod (xn −1)
This equation deﬁnes the parity-check sums for codewords, and the polynomial h(x) is called the parity
polynomial. The parity-check matrix of the cyclic code can be represented with the help of h(x) as
follows:
H =
n

 
!
⎡
⎢⎢⎢⎢⎣
hk
·
·
·
·
h0
hk
h0
·
·
·
·
hk
·
·
·
·
h0
⎤
⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
n −k
(3.55)
A minimum distance of the cyclic code can be found using the parity-check matrix with the help of the
Lemma 3.1.
Example 3.7 Consider the polynomial g(x) = x10 + x8 + x5 + x4 + x2 + x + 1. It is easy to verify that
the minimal n, for which xn−1 is divisible by g(x), is equal to 15. Then the polynomial g(x) generates
(15, 5) cyclic code over F2, and h(x) = x15−1
g(x) = x5 + x3 + x + 1. Therefore:
G =
15

 
!
⎡
⎢⎢⎢⎢⎣
1
1
1
0
1
1
0
0
1
0
1
0
0
0
0
0
1
1
1
0
1
1
0
0
1
0
1
0
0
0
0
0
1
1
1
0
1
1
0
0
1
0
1
0
0
0
0
0
1
1
1
0
1
1
0
0
1
0
1
0
0
0
0
0
1
1
1
0
1
1
0
0
1
0
1
⎤
⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
5
(3.56)
H =
15

 
!
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
1
0
1
0
1
1
0
0
0
0
0
0
0
0
0
0
1
0
1
0
1
0
0
0
0
0
0
0
0
0
0
0
1
0
1
0
1
0
0
0
0
0
0
0
0
0
0
0
1
0
1
1
1
0
0
0
0
0
0
0
0
0
0
0
1
0
0
1
1
0
0
0
0
0
0
0
0
0
0
0
1
1
0
1
1
0
0
0
0
0
0
0
0
0
0
0
0
1
0
1
1
1
0
0
0
0
0
0
0
0
0
1
0
1
0
1
1
1
0
0
0
0
0
0
0
0
0
1
0
1
0
0
1
1
0
0
0
0
0
0
0
0
0
1
0
1
1
0
1
1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
10
(3.57)

Block Codes
101
The generator and the parity matrices can be reduced to the systematic form:
G =
15

 
!
⎡
⎢⎢⎢⎢⎣
1
0
0
0
0
1
1
1
0
1
1
0
0
1
0
0
1
0
0
0
0
1
1
1
0
1
1
0
0
1
0
0
1
0
0
1
1
0
1
0
1
1
1
1
0
0
0
0
1
0
0
1
1
0
1
0
1
1
1
1
0
0
0
0
1
1
1
0
1
1
0
0
1
0
1
⎤
⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎭
5
(3.58)
H =
15

 
!
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
1
0
1
0
1
1
0
0
0
0
0
0
0
0
0
1
1
1
1
1
0
1
0
0
0
0
0
0
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
1
0
0
1
1
0
0
0
0
1
0
0
0
0
0
1
1
1
0
0
0
0
0
0
0
1
0
0
0
0
0
1
1
1
0
0
0
0
0
0
0
1
0
0
0
0
0
1
1
1
0
0
0
0
0
0
0
1
0
0
1
0
1
1
0
0
0
0
0
0
0
0
0
1
0
0
1
0
1
1
0
0
0
0
0
0
0
0
0
1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
10
(3.59)
To detect the errors in the received word b(x) it is enough to check the condition:
b(x) · h(x) = 0 mod (xn −1)
(3.60)
We show that the generator polynomial of the cyclic code is the factor of (xn −1). Therefore, it is
necessary to consider all combinations of the factors of the polynomial (xn−1) in order to enumerate all
cyclic codes of length n. It is well known that if the characteristic p of the ﬁeld is not the divisor of n,
then the polynomial (xn−1) can be factored by the irreducible divisors:
xn −1 = f1(x) · . . . f1|(x)
Therefore, it is possible to choose any polynomial of form:
g(x) = fi1(x) · . . . fis(x),
i1 < i2 < . . . < is,
s < l
as the generator polynomial. Each of these polynomials corresponds to the code with some values of k
and d; and there are 2l −2 nontrivial cyclic codes of length n at all.
Example 3.8 Construct all binary cyclic codes of length 7. The polynomial x7 −1 can be factored as
follows:
x7 −1 = (x + 1) · (x3 + x + 1) · (x3 + x2 + 1)
The corresponding six cyclic codes of length 7 are deﬁned by the following polynomials:
g1(x) = (x + 1), g2(x) = (x3 + x + 1), g3(x) = (x3 + x2 + 1)
g4(x) = (x + 1) · (x3 + x + 1), g5(x) = (x + 1) · (x3 + x2 + 1)
g6(x) = (x3 + x + 1) · (x3 + x2 + 1)

102
Modulation and Coding Techniques in Wireless Communications
Table 3.1
Parameters of some cyclic codes
n
k
d
Generator polynomial g(x)
7
4
3
13 ∗)
15
11
3
23
9
3
171
7
5
721
5
7
2467
31
26
3
45
21
5
3551
16
7
107657
11
11
5423325
6
15
313365047
63
57
3
103
51
5
12471
45
7
1701317
39
9
166623567
30
13
157464165547
16
23
6331141367235453
7
31
5231045543503271737
127
120
3
211
85
13
130704476322273
71
19
6255010713253127753
22
47
123376070404722522435445626637647043
255
247
3
435
187
19
52755313540001322236351
139
31
461401732060175561570722730247453567445
47
85
2533542017062646563033041377406233175123334145446045005066024552543173
∗All generator polynomials are given in the octal format, for example. 138 = 1011 = x + x + 1.
It is easy to verify (for instance, by enumerating the codewords) that the codes corresponding to these
polynomials have the following parameters:
G1 :
k = 6, d = 2;
G2, G3 :
k = 4, d = 3;
G4, G5 :
k = 3, d = 4;
G6 :
k = 1, d = 7
The parameters of some binary cyclic codes are listed in Table 3.1.
One of the most important operations for the implementation of the cyclic codes is the calculation of
the remainder resulting from dividing one polynomial by another.
This operation can be executed with the help of a tapped ﬁlter, that is, a device containing delay
elements with taps, adders in ﬁeld GF(q) and multipliers in ﬁeld GF (q) (Figure 3.2).
The state of the delay element is s(t) = s at the time t if at the moment t we obtain symbol s∈GF
(q) at the output of this delay element. Let r be the number of delay elements in the ﬁlter. Then vector
s(t) = (s(t)
1 , . . . , s(t)
r ), where s(t)
i
is the state of the i th element at time t, is called the state of the ﬁlter at
time t.
Hereafter we will consider the ﬁlters with one input and one output. The input and output signals of
the ﬁlters will be the sequences of symbols from GF(q).

Block Codes
103
S1
C11
C12
C1r
S2
C21
C22
C2r
Sr
Cr1
Cr2
Crr
Input
Output
S'1
S'2
S'r
......
.................................. ........ ............ ............ ........
Figure 3.2
General structure of ﬁlter
Notice that such a kind of ﬁlter is the linear ﬁlter, that is, the ﬁlter response (the output signal) to the
sum of input signals is the sum of ﬁlter responses to each input signal (sum in GF(q)).
Let s = (s1, . . . , sr) be the preceding and s′ = (s′
1, . . . , s′
r) be the succeeding states of the ﬁlter. Then
to deﬁne the ﬁlter it is necessary to deﬁne the following equations:
s′
1 = c11 · s1 + . . . + c1r · sr;
. . . . . . . . . . . . . . . . . . . . . . . . . . .
s′
r = cr1 · s1 + . . . + crr · sr
(3.61)
where cij is the coefﬁcient deﬁned by the structure of the ﬁlter; the addition and the multiplication is
carried out in GF (q). That means the preceding state fully deﬁnes the succeeding state in cases where
there is no signal at the ﬁlter input.
Assume that the input signal appears at the input of the ﬁrst delay element. Then if the input signal is
equal to α, ﬁlter from the state s = (s1, . . . , sr) goes to the state s′ = (s′
1, . . . , s′
r) deﬁned by the equations:
s′
1 = c11 · s1 + . . . + c1r · sr + α;
. . . . . . . . . . . . . . . . . . . . . . . . . . .
s′
r = cr1 · s1 + . . . + crr · sr
(3.62)
Let us consider the synthesis of the calculator of the remainder. The (r × r) matrix C = [cij] is called the
transfer matrix. This matrix deﬁnes the ﬁlter. The general view of the ﬁlter deﬁned by matrix C is shown
in Figure 3.2.
This is put in correspondence to the j th column of matrix C the polynomial c j(x) =
r
i=1
cijxi−1.
Theorem 3.3
Let ci(x) = xi mod g(x) be the i th column of the matrix C, where g(x) is an arbitrary
polynomial of degree r. Then if signal α appears at the ﬁlter input:
s′(x) = α + xs(x) mod g(x)
(3.63)
where s′(x) = r
i=1 s′
ixi−1.

104
Modulation and Coding Techniques in Wireless Communications
Proof. It follows from (3.62) that:
s′(x) = s1 · c1(x) + s2 · c2(x) + . . . + sr · cr(x) + α
Then substituting expressions for ci(x) obtain:
s′(x) = α + s1x mod g(x) + s2x2 mod g(x) + . . . + srxr mod g(x) =
= (α + s1x + s2x2 + . . . + sr xr) mod g(x) = (α + x(s1 + s2x + . . . + sr xr−1)) mod g(x) =
= (α + xs(x)) mod g(x)
Thus, for the arbitrary polynomial g(x) and the input signal α in Theorem 3.3 the ﬁlter goes to the
state s′ deﬁned by (3.63). Let the initial state of the ﬁlter be all-zero and the elements an−1, an−2, . . . ,a0,
which are the coefﬁcients of the polynomial a(x) = n−1
i=0 aixi, consecutively appear at the input of the
ﬁlter. Then the ﬁlter will consecutively go to the states:
s(0)(x) = 0,
s(1)(x) = an−1,
s(2)(x) = (an−2 + an−1x) mod g(x)
s(3)(x) = (an−3 + an−2x + an−1x2) mod g(x), . . . ,
s(n)(x) = (a0 + a1x + . . . + an−1xn−1) mod g(x)
but s(n)(x) is the remainder resulting from dividing a(x) by g(x).
Example 3.9 g(x) = x3 + x + 1,
a(x) = x6 + x3 + 1,
GF(2). The transfer matrix is:
C =
⎡
⎣
0
0
1
1
0
1
0
1
0
⎤
⎦
The ﬁlter deﬁned by the matrix C is shown in Figure 3.3. The states of the ﬁlter are:
s(0)(x) = 0,
s(1)(x) = an−1 = a6 = 1,
s(2)(x) = a5 + a6x = x,
s(3)(x) = x2,
s(4)(x) = x,
s(5)(x) = x2,
s(6)(x) = x + 1,
s(7)(x) = x2 + x + 1
The remainder resulting from dividing a(x) by g(x) is equal to x2 + x + 1.
All codewords of a cyclic code can be represented in form of (3.51), where m(x) is the information
message and m(x)·g(x) is the corresponding codeword. Such encoding procedure corresponds to the
generator matrix of form (3.53). There is no necessity to keep the whole matrix (3.53) for the encoding.
It is enough to keep only the ﬁrst row of this matrix, that is, the generator polynomial. Thus, the realization
S1
S2
S3
Input
Output
6
a
0 
0 
1 
5
a
0 
1 
0 
4
a
1 
0 
0 
3
a
0 
1 
0 
2
a
1 
0 
0 
1a
0 
1 
1 
0
a
1 
1 
1 
Figure 3.3
Filter for the division by g(x) = x3 + x + 1

Block Codes
105
of the encoding reduces to the realization of multiplication of two polynomials. However, the encoding
procedure:
m(x) →m(x) · g(x)
(3.64)
deﬁnes the nonsystematic code. It is impossible to select the information symbols in the codeword
m(x)·g(x); and it is necessary to divide the codeword by g(x) in order to obtain the information message
m(x). Here we will show two methods of systematic encoding of the cyclic codes, for which the
information symbols are the coefﬁcients of most signiﬁcant powers of the polynomial corresponding to
the codeword.
Let a(x) = n−1
i=0 aixi be the codeword and h(x) = k
i0 hixi be the parity polynomial of the (n, k)
cyclic code. Consider the product of a(x) by h(x):
f (x) = a(x) · h(x) = m(x) · g(x) · h(x) = xnm(x) −m(x) =
mk−1xn+k−1 + . . . + m0xn −mk−1 −. . . −m0
(3.65)
It follows from the deﬁnition of the parity polynomial that the coefﬁcients of the polynomial f (x) =
n+k−1
i=0
fixi for xi, k ≤i ≤n −1 are equal to zero. Now substituting coefﬁcients of m(x) and h(x) to fi
obtain:
fi =
k

j=0
h j · ai−j,
k ≤i ≤n −1
(3.66)
Since hk = 1, then we can derive the following equation:
ai−k = −
k

j=0
h j · ai−j,
k ≤i ≤n −1
(3.67)
The
equation
(3.67)
deﬁnes
the
recurrent
formula
for
the
sequential
calculation
of
an−1−k, an−1−k−1, . . . , a0 using the information symbols an−1, an−2, . . . , an−k. Thus, (3.67) deﬁnes the
method of systematic encoding for cyclic code.
The circuit implementing the calculation by the formula (3.67) is shown in Figure 3.4. The operation
of the circuit can be described as follows:
Initially gate 1 is switched on and gate 2 is switched off. The information symbols αn−1, αn−2, . . . , αn−k
sequentially are shifted into the register. As soon as k information symbols entered the shift register,
gate 1 is switched off and gate 2 is switched on. Symbol αn−1 appears at the output of the encoder; and
the new symbol is fed to the input. This new symbol is the inverted sum of products of symbols from
the register elements by the corresponding coefﬁcients hi, that is, as follows from Equation 3.67 αn−1−k.
an-k
Input
Output
......
an-k+1
hk-1
hk-2
an-2
an-1
h1
h0
-1
Gate 1
Gate 2
......
Figure 3.4
The encoder of cyclic code with k delay elements

106
Modulation and Coding Techniques in Wireless Communications
During the next shifts the symbols αn−2, αn−3, . . . will appear at the output of encoder; and the symbols
αn−2, αn−k−3, . . . will be fed to the input of the register. After n shifts we obtain the whole codeword at
the output of the encoder. Notice that multiplication and addition should be executed in the ﬁeld GF(q),
so we have to have the special devices for these operations.
The encoder considered above uses k delay elements (or k-stage shift register). Let us consider the
encoder with (n −k) delay elements. It is obvious that such a kind of encoder will be more economic in
case k > n −k.
Let us represent the information symbols as the polynomial αn−1xn−1 + αn−2xn−2 + . . . + αn−kxn−k.
In accordance with the algorithm of division:
αn−1xn−1 + αn−2xn−2 + . . . + αn−kxn−k = m (x) · g (x) + r (x)
(3.68)
where degr (x) < deg g (x) = n −k. It follows from (3.68) that the polynomial:
αn−1xn−1 + αn−2xn−2 + . . . + αn−kxn−k −r (x)
is the codeword. Therefore, it is enough to obtain the remainder resulting from dividing αn−1xn−1 +
αn−2xn−2 + . . . + αn−kxn−k by g (x) in order to calculate the parity-check symbols. The device imple-
menting this algorithm is shown in Figure 3.5
The device is operating as follows. Initially gate 1 and gate 2 are switched on and gate 3 is switched
off. The information symbols αn−1, αn−2, . . . , αn−k are fed to the input of shift register and appear at
the output of the encoder simultaneously. After n −k shifts symbol αn−1 appears at the output of the
shift register and multiplied by the coefﬁcients gn−k−1, gn−k−2, . . . , g0 is subtracted from the elements
αn−2, αn−3, . . . , αk−1 correspondingly. This step corresponds to the ﬁrst operation in the algorithm of the
division of polynomials. After k shifts gate 1 is switched off. After n shifts from the start of operation
the remainder r (x) we obtain the whole codeword at the output of the encoder.
Notice that in the case of binary code the described circuits contain adders on modulo 2 and binary
memory elements. The multiplication by “1” is realized by the presence and the multiplication by “0”
by the absence of the feedback.
Example 3.10 Consider the (15, 4) binary cyclic code with parity polynomial h (x) = x4 + x + 1. The
k-stage encoder is shown in Figure 3.6.
Let αn−1 = αn−3 = 1,
αn−2 = αn−4 = 0. The work of the encoder is explained by Table 3.2.
Output
Input
Gate 1
ak
ak+1
-g0
-g1
an-2
-gn-k-2
an-1
-gn-k-1
1/gn-k
Gate 2
Gate 3
......
......
Figure 3.5
The encoder of cyclic code with (n-k) delay elements

Block Codes
107
0
Input
Output
1
0
1
Gate 1
Gate 2
Figure 3.6
The k-stage encoder of the (15, 4) code
Example 3.11 Consider the (15, 11) binary cyclic code with generator polynomial g (x) = x4 + x3 + 1.
The (n −k)-stage encoder of this code is shown in Figure 3.7.
Let α14 = α13 = α10 = α9 = α5 = α4 = 1,
α12 = α11 = α8 = α7 = α6 = 0. The work of the en-
coder is explained by Table 3.3.
In the example above the division by the polynomial g (x) begins only when the symbol αn−1 occupy
the last (right) delay element in the shift register. From the other hand it takes an additional four cycles
to obtain the calculated parity symbols at the output of the encoder. Hence, the overall encoding time
is equal to 19 cycles (the same as for the scheme shown in Figure 3.6). It is possible to decrease the
Table 3.2
The work of the encoder of (15, 4) code
No. of
shift
State
Feedback
symbol
Output
symbol
0
0
0
0
1
1
0
0
2
0
0
0
3
1
0
0
4
0
0
0
5
1
1
1
6
1
1
0
7
1
1
1
8
1
1
0
9
0
0
1
10
0
0
1
11
0
0
1
12
1
1
1
13
0
0
0
14
0
0
0
15
1
1
0
16
1
1
1
17
0
0
0
18
1
1
0
19
0
0
1
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎭
The result of
the encoding

108
Modulation and Coding Techniques in Wireless Communications
Output
Input
Gate 1
1
1
1
0
Gate 2
Gate 3
Figure 3.7
The (n-k)-stage encoder of the (15, 11) code
encoding time if we start the division by the generator polynomial simultaneously with feeding the
information symbols. Such a kind of encoder is shown in Figure 3.8.
This encoder executes the multiplication of the information polynomial by xn−k (which is equivalent
to (n −k) shifts of the information symbols in the shift register) due to feeding the information symbols
at point A. The encoding time of the encoder in Figure 3.8 is equal to n cycles.
In order to detect the error with the help of the cyclic code it is enough to calculate the remainder
resulting from division of the received word b (x) by the generator polynomial g (x) and to compare it
(the remainder) with zero.
The remainder resulting from the division of the received word b (x) by the generator polynomial
g (x) is called syndrome. Let us denote the syndrome by S (x). Then:
S (x) = b (x) mod g (x)
(3.69)
If the syndrome of the received word is equal to zero, then the received word is regarded as codeword
and it is assumed that no error occur during the transmission of this word over the channel (or the
undetectable error occur). If the syndrome is not equal to zero the error is detected.
Table 3.3
The work of the encoder of (15, 11) code
No. of
shift
State
Feedback
symbol
0
0
0
1
1
0
2
1
0
3
0
0
4
0
0
5
0
1
6
1
0
7
0
0
8
0
0
9
0
0
10
0
1
11
0
1
12
1
1
13
1
1
14
1
1
15
1
1

Block Codes
109
Output
Input
Gate 1
ak
ak+1
-g0
-g1
an-2
-gn-k-2
an-1
-gn-k-1
1/gn-k
Gate 2
Gate 3
......
......
A
Figure 3.8
The (n-k)-stage encoder of cyclic code with the premultiplication by xn−k
The syndrome can be calculated with the help of (n −k)-stage circuit with premultiplication by xn−k
used for the calculation of parity-check symbols.
Example 3.12 Consider the circuit for error detection for binary (15, 9) cyclic code with the generator
polynomial g (x) = x6 + x5 + x4 + x3 + 1. The circuit is shown in Figure 3.9. In 15 shifts the remainder
resulting from division of the received word by the generator polynomial g (x) will be stored in the shift
register, that is, the syndrome of the received word. If at least one coefﬁcient of the syndrome is not
equal to zero, then the signal of error detection appears at the output of the OR gate.
The correction of the error pattern also can be done with the help of syndrome. In general case to solve
this problem it is needed to keep in memory the table, in which every syndrome corresponds to the error
pattern.
For cyclic codes the solution is not so complex, because it is possible to keep in memory not all
syndromes but only those which correspond to error patterns containing nonzero symbol in the ﬁrst
position. Using the cyclic shifts of the received word b (x) we obtain word b′ (x) with the error symbol
in the ﬁrst position and syndrome of this word is stored in memory and can be used to correct the error
pattern.
Let us describe the process of the error correction for cyclic code in detail. Let S be the set of syndromes
of correctable error patterns with nonzero symbol in the ﬁrst position. Let us denote by S(ν) the subset of
S, which contain the syndromes of error patterns with symbol ν (ν ̸= 0, ∈GF (q)) in the ﬁrst position.
Input
OR
Error detection signal
Figure 3.9
The error detector for the (15, 9) code

110
Modulation and Coding Techniques in Wireless Communications
It is obvious that S = q−1
ν−1 S(ν). The algorithm of decoding the cyclic code consists of the following
steps:
1. For received vector b there are computed syndromes Si (i = 0, . . . , n −1) of the cyclic shift of vector
b by i positions.
2. For each Si the sets S(ν) are formed ν = 1, . . . , q −1 such that Si ∈S(ν). Then the i th element of
error pattern ei is assumed to be equal to v. If for none of v the condition Si ∈S(ν) is correct, then ei
is assumed to be zero.
3. When all ei, (i = 0, . . . n = 1) are obtained vector b is added with computed vector e.
Step 2 is usually called the selection and the device executing this operation is called selector. The
most difﬁcult part of realization of the syndrome decoding is the design of the selector. As usual the
complexity of this device is very high. Usually the syndrome decoding is used for short codes or in case
we tend to correct the small number of errors. For instance, the selector for correction of one error is a
very simple device.
The list of cyclic codes is restricted by the fact that for most, but not all, values of n and k there exist
the polynomial g (x) of degree n −k, which is the factor of xn −1. Moreover, for some values of n all
cyclic codes are inefﬁcient. For example, for all even n the (n, k) cyclic code has the distance d = 2
independently of the value of k. The list of codes may be extended if we consider the shortened cyclic
codes.
The shortened cyclic (n −i, k −i) code is the code which is constructed from the cyclic (n, k) code
by the rejection of i high-order information symbols of each codeword. The length of the obtained code
is n −i and the number of information symbols is k −i. The distance of the shortened code is no less
than distance of original cyclic code.
The shortened code is not the cyclic code because it contains the words which are not the cyclic shift of
some codeword. However, all codewords of the shortened code are divisible by the generator polynomial
of the original code, because the codewords of the shortened code are the codewords of the original code,
for which the i high-order information symbols are equal to zero. Because of this fact the same circuits
as those employed by the original cyclic code can accomplish the encoding of the shortened cyclic code.
It is also possible to use the decoder of the original (n, k) cyclic code to error detection and error
correction of the shortened (n −i, k −i) code. It is enough to add i zeros to the word of shortened code
to do it. However, the decoder of the original code needs in n shifts to calculate the syndrome; and the
decoding of the shortened code can be done with n −i shifts.
Let symbols 0, 0, . . . , 0,
 
!

i
bn−1−i, bn−2−i, . . . , bo consecutively appear at the input of the syndrome
calculator. This device is executing the division of polynomial b (x) = 0 · xn−1 + 0 · xn−2 + . . . + 0 ·
xn−i + bn−1−ixn−1−i + bn−2−ixn−2−i + . . . + bo by the polynomial g (x); and the operation takes n shifts.
However, since the i high-order coefﬁcients of b (x) are equal to zero the feedback signal of the shift
register is equal to zero during the ﬁrst i shifts; and, in fact, there is no operation of the division of
polynomials executed during these ﬁrst i shifts. To avoid this inefﬁcient operation it is possible by
preliminary shifting of b (x) i times to correspond to premultiplication of b (x) by xi on modulo g (x).
Considering the premultiplication by xn−k, which is necessary to compute the syndrome of the original
code in n shifts, the calculator of the syndrome of the shortened (n −i, k −i) code needs preliminary
multiplication of the received word b (x) by xn−k+i.
Let polynomial f (x) be f (x) = fn−k−1xn−k−1 + fn−k−2xn−k−2 + . . . + foxn−k+i mod g (x), then the
premultiplication of b (x) by f (x) corresponds to the multiplication by xn−k+i. This operation can be
executed with the help of the circuit shown in Figure 3.10.
The syndrome calculator for shortened cyclic code executing the multiplication by f (x) and the
division by g (x) is shown in Figure 3.11.

Block Codes
111
Output
Input
f0
f1
fr-2
fr-1
......
Figure 3.10
The circuit for multiplication by f (x)
Example 3.13 Consider the syndrome calculator of (10, 6) code obtained by shortening by ﬁve symbols
the original cyclic (15, 11) code with the generator polynomial g (x) = x4 + x + 1.
f (x) x15−11+5 mod g (x) = x9 mod
"
x4 + x + 1
#
= x3 + x. Figure 3.12 shows the syndrome calcu-
lator for this code.
The cyclic codes can be used for burst-error correction. Here we will show the simple burst-error-
correcting decoder.
Let a (x) be the transmitted codeword of (n, k) cyclic code, e (x) be the polynomial corresponding to
error vector. Then the received word b (x) can be represented as:
b (x) = a (x) + e (x)
(3.70)
Noticethat if theburst-error occur ontheparity-checksymbols of thedecodingword, thendeg e (x) ≤n −
k −1 (the parity-check symbols correspond to less signiﬁcant digits of the word). Then S (x) = b (x) mod
Output
Input
f0
f1
fn-k-2
fn-k-1
......
-g0
-g1
-gn-k-2
-gn-k-1
1/gn-k
Figure 3.11
The circuit for calculation of shortened cyclic code syndrome

112
Modulation and Coding Techniques in Wireless Communications
Input
Figure 3.12
The syndrome calculator of shortened (10, 6) code
g (x) = a (x) mod g (x) + e (x) mod g (x) = e (x) mod g (x) = e (x), since a (x) mod g (x) = 0 and
deg e (x) < deg g (x). In this case it is enough to calculate the syndrome S (x) and to add it with
b (x):
a (x) = b (x) + S (x)
(3.71)
If the burst-error occur on the information symbols it is possible to shift it to the parity-check symbols
by shifting the received codeword. Let:
b (x) = a (x) + e (x) · xi
where deg e (x) < deg g (x) = n −k and i satisﬁes the relation:
deg
"
e (x) · xi#
= i + deg e (x) ≥n −k
Then the polynomial:
"
x−i · b (x)
#
mod (xn −1) =
"
x−i · a (x) + e (x)
#
mod (xn −1)
is the sum of the codeword a′ (x) =
"
x−i · a (x)
#
mod (xn −1) and the burst-error e (x) on the parity-
check symbols positions.
Now by shifting the received word we shift the burst-error on the parity-check symbols positions, and
then by adding
"
x−i · b (x)
#
mod (xn −1) with the corresponding syndrome we obtain the polynomial
x−i · a (x). Then we obtain the codeword a (x) with the help of i cyclic shifts. However, it is not clear on
which cyclic shift of the received word b (x) the burst-error appears at the parity-check positions.
Theorem 3.4
Let code corrects the burst-errors of length b or less and let the decoding word f (x) be
the sum of the codeword a (x) and burst-error e (x) of length no more than b, f (x) = a (x) + e (x). In
order to the degree of e (x) be no more than b −1 it is necessary and sufﬁcient that the degree of the
syndrome of word f (x) be no more than b −1.
Proof. The necessity immediately follows from the fact that if deg e (x) ≤b −1 ≤n −k −1, then
S (x) = e (x).
The sufﬁciency we will prove by contradiction. Let deg e (x) ≤b and deg S (x) ≤b. In accordance
with deﬁnition of S (x):
f (x) = m1 (x) · g (x) + S (x)
on the other hand:
f (x) = m2 (x) · g (x) + e (x)
Therefore:
e (x) mod g (x) = S (x) mod g (x)
(3.72)

Block Codes
113
The equation (3.72) means that e (x) and S (x) belong to the same coset. But this fact in turn means that
the code is capable of correcting only one burst-error from two of length no more than b (S (x) or e (x)).
And this fact contradicts the condition of the theorem.
Thus, the algorithm of decoding of burst errors consists in the shift of the decoding word and calculation
of the syndrome until the degree of the syndrome become less than b. Then addition of the shifted word
and the syndrome results in the shifted codeword. The last step is the reverse cyclic shift of the obtained
codeword. The algorithm can be formulated as follows:
1. Calculation of the syndromes Si (x) = x−i f (x) mod g (x) , i = 0, 1 . . . until:
deg Si (x) ≤b −1
(3.73)
2. If Si (x) satisfy (3.73) then calculate:
ai (x) = x−i f (x) + Si (x)
(3.74)
3. Calculation of the decoding result ˆa (x) in form of:
ˆa (x) xiai (x) mod (xn −1)
(3.75)
4. If Si (x) does not satisfy (3.73) for no one of i = 0, 1, . . . , n −1, then it is assumed that the unde-
codable error occur.
To calculate the syndromes Si (x) we need the following result.
Theorem 3.5
The syndrome of the i-fold cyclic shift (i = ± 0, ± 1, . . .) of the received word is equal
to i-fold cyclic shift of the syndrome of the received word:
"
xi f (x)
#
mod g (x) = xi ( f (x)) mod g (x)
(3.76)
Proof. In accordance with the deﬁnition of the syndrome:
f (x) = m (x) · g (x) + S (x)
Then
"
xi f (x)
#
mod g (x) =
"
xim (x) · g (x) + xi S (x)
#
mod g (x) = xi S (x) mod g (x)
The described algorithm of burst errors correcting can be implemented with the help of the device
shown in Figure 3.13. The logic element OR NOT in this decoder has n −k −b inputs that are fed by
the output of the syndrome calculator. If all these inputs are equal to zero it means that b less signiﬁcant
digits of the syndrome form the error burst of length b or less, which can be corrected. In this case the
feedback of the syndrome calculator is broken with the help of Gate 4 and the shifted word is added
with the syndrome. After this the corrected word is shifted n −i times (which is equivalent to i reverse
shifts).
Example 3.14 The binary cyclic (15, 9) code with the generator polynomial g (x) = x6 + x5 + x4 +
x3 + 1 is capable of correcting burst-errors of length 3. Let e (x) = x7 + x6 + x5 be the burst-error of
length 3. The syndrome of word e (x) is:
S (x) = e (x) mod g (x) = x4 + x

114
Modulation and Coding Techniques in Wireless Communications
Shift Register
Gate 2
Gate 3
Syndrome Calculator
Gate 4
b
OR NOT
....
....
Gate 1
Input
Figure 3.13
The decoder for burst error correction
If we shift this syndrome to the less signiﬁcant digits, then the contents of the syndrome register will be
as follows:
Shift
Content of the syndrome register
0
x4 + x
1
x3 + 1
2
x5 + x4 + x3
3
x4 + x3 + x2
4
x3 + x2 + x
5
x2 + x + 1
After ﬁve shifts n −k −b = 15 −9 −3 = 3 most signiﬁcant digits of the syndrome are equal to zero;
and less signiﬁcant digits form the burst-error. It is possible to correct the error by shifting the decoding
word ﬁve times to the less signiﬁcant digits and adding it with the content of the syndrome register on
modulo 2. The decoder is shown in Figure 3.14.
3.5
Bounds on Minimum Distance
In this section we recall some well-known bounds on the minimum code distance. Let V be a binary code
of length n, consisting of M codewords and capable of correcting t errors. If a code can correct t errors
then the minimum distance of this code d satisﬁes the inequality d ≥2t + 1 or, what the equivalent, the
spheres of radius t surrounding all codewords are disjointed. The number of binary vectors of length n
at distance exactly i from a given binary vector (of the same length n) equals
"n
i
#
. Then each of these
spheres of radius t contains t
i=0
"n
i
#
vectors (assuming that
"n
0
#
= 1). On the other hand, the number
of all binary vectors of length n equals to 2n. This gives the sphere-packing bound known also as the
Hamming bound [5]:

Block Codes
115
Gate 1
Input
Gate 2
Gate 4
Gate 3
OR NOT
Figure 3.14
The decoder of (15, 9) code
Theorem 3.6
For any binary code of length n, consisting of M code words and capable of correcting
t-fold errors:
M ·
t
i=0

 n
i

≤2n
(3.77)
For a q-ary code (3.77) can be written as follows:
M ·
t
i=0
(q −1)i ·

 n
i

≤qn
(3.78)
For linear q-ary (n, k) code M = qk and its code rate R = k
n =
logq M
n
. Therefore, for an arbitrary code
its rate is deﬁned as R =
logq M
n
. Taking this into account (3.78) can be represented in the following
form:
n −k ≥log
t
i=0
(q −1)i ·

 n
i

(3.79)
For t < (q−1)n
q
the sum in (3.79) can be upper estimated as (q −1)t ·
"n
t
#
since:
(q −1)i ·

 n
t

>
t−1

i=0
(q −1)i ·

 n
i

(3.80)
Applying Stirling’s formula to binomial coefﬁcient
"n
t
#
obtain the following approximation:

 n
t

≈

 n
nδ/2

≈qnH4(δ/2)
(3.81)
where δ = d
n is the relative minimum distance, 0 < δ < 1, Hq (x) = −x logq x −(1 −x) logq (1 −x) is
the q-ary entropy function. Most of the results in this section are given in asymptotic, as n →∞. In this
case it is more convenient to use the asymptotic code rate R (δ) as a function of relative minimum distance,

116
Modulation and Coding Techniques in Wireless Communications
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
1
0.9
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
x
H2(x)
Figure 3.15
Binary entropy function H2(x)
that is, the code rate of code of maximal cardinality as function of δ = d
n with n →∞. Altogether it
gives that for any q-ary code its asymptotic rate R (δ):
R (δ) ≤1 −δ
2 logq (q −1) −Hq (δ/2) ,
0 < δ < 1
(3.82)
For binary case (3.82) simpliﬁes to the following form known as asymptotic Hamming bound:
R (δ) ≤1 −H2

δ
2

,
0 < δ < 1
(3.83)
The binary entropy function is presented in Figure 3.15.
The codes achieving the Hamming bound are called perfect codes. Hence spheres of radius t surround-
ing codewords of a perfect code contain all vectors of the corresponding vector space. It means that a
perfect code can correct any error pattern of weight no more than t, and cannot correct any error pattern
of weight more than t. For example, binary Hamming codes are perfect codes.
For a code, capable of correcting t errors, the ratio of the overall number of vectors in all spheres of
radius t surrounding the code words to the number of vectors of the whole vector space is called the
packing density of a code. That is, the packing density is the ratio of “volume” of all spheres of radius
t surrounding the code words to the “volume” of vector space and the Hamming bound means that the
packing density of any code is at most 1. For perfect codes the packing density is equal to 1, that is, a
perfect code correcting t errors is capable of packing the whole vector space by the spheres of radius t.
The Hamming bound is an upper bound on the code rate of the code with given (relative) minimum
distance. Now we consider the Gilbert-Varshamov bound, which is a lower bound that shows an existence
of good codes [5], in particular, among linear codes.

Block Codes
117
Theorem 3.7
If the following inequality holds true:
qn−k >
d−2

i=0
(q −1)i ·

 n −1
i

(3.84)
then there exists a linear block q-ary code of length n with number of information symbols k that has the
minimum distance no less than d.
The proof of the theorem can be found in [5]. The asymptotic Gilbert-Varshamov bound has form:
R (δ) ≥1 −δ logq (q −1) −Hq (δ) ,
0 < δ < q −1
q
(3.85)
where δ = d
n < q−1
q . It is known that codes satisfying Gilbert-Varshamov bound not only exist, but almost
all linear coders satisfying it are asymptotically tight. Therefore it was a very surprising discovery of
construction of algebraic-geometry codes for which [7]:
R (δ) ≥1 −δ −
1
√q −1
(3.86)
These codes are even asymptotically better than Gilbert-Varshamov bound for q ≥49. Recently very
effective algorithms of generation of such codes [8] as well as their decoding (and even beyond of d/2
[9]) were discovered and this is what makes this class of codes very attractive for practical applications.
For q = 2 (3.85) can be written as:
R (δ) ≥1 −H2 (δ) ,
0 ≤δ < 1
2
(3.87)
On the other hand, there is a very popular conjecture that for binary codes the Gilbert-Varshamov is
asymptotically tight, that is:
R (δ)
?= 1 −H2 (δ) ,
0 ≤δ < 1
2
Now we have the upper Hamming bound (3.82) and the lower Gilbert-Varshamov bound (3.85). The
next few theorems address the largest gap between these bounds.
Theorem 3.8
(Plotkin bound) The minimum distance d of any q-ary code block code of length n
containing M words satisﬁes the following inequality:
d ≤(q −1) nM
q (M −1)
(3.88)
The proof of Theorem 3.8 can be found in [4]. There is a simple recursion: Aq (n, d) ≤qn−n′ Aq (n′, d),
where Aq (n, d) is the maximal cardinality of a q-ary code of length n and distance d. This recursion
together with Theorem 3.8 leads to a more general form of the Plotkin bound: Aq (n, d) ≤d · qn−q(d−1)
q−1
or, in asymptotic form:
R (δ) ≤1 −
q
q −1δ
(3.89)
as n →∞. This bound is more tight than Hamming bound for low code rates.
The next step was taken by P. Elias and L. Bassalygo [10], [11]:
Theorem 3.9
(Elias-Bassalygo bound) For any q-ary (n, M, d) code the following inequality holds
true:
R (δ) ≤1 −Hq


1 −1
q

·

1 −
$
1 −
q
q −1δ

,
0 < δ < q −1
q
(3.90)
The proof of Theorem 3.9 can be found in [5].

118
Modulation and Coding Techniques in Wireless Communications
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
1
0.8
0.6
0.4
0.2
0
d/n
R = k/n
Hamming
Plotkin
McEliece at. all  I
Gilbert-Varshamov
Elias-Bassalygo
Figure 3.16
Bounds for binary block codes
The Elias-Bassalygo bound is better than Hamming and Plotkin bounds for any 0 < δ < q−1
q . At
the present time the latest step towards tightening the upper bounds is the McEliece-Rodemich-Rumsey-
Welch bound derived with the help of Linear Programming method (see [5]). It consists of two parts. Let
us consider them as two theorems:
Theorem 3.10
[5, 12] For any binary block code of length n with the minimum distance d the code
rate R satisﬁes the following inequality as n →∞:
R (δ) ≤H2

1
2 −
%
δ (1 −δ)

(3.91)
The discussed bounds for binary block codes are represented in Figure 3.16.
As can be seen from plots in Figure 3.16, for values of δ > 0.1 all codes are between Gilbert-Varshamov
and McEliece-Rodemich-Rumsey-Welch I bound. And for low values of δ the Hamming bound is less
optimistic than McEliece-Rodemich-Rumsey-Welch I bound. In this region of δ values the second part
of McEliece-Rodemich-Rumsey-Welch bound (or McEliece-Rodemich-Rumsey-Welch II bound) can
be used:
Theorem 3.11
[5, 12] For any binary block code of length n with the minimum distance d the code
rate R satisﬁes the following inequality as n →∞:
R (δ) ≤B (δ)
(3.92)
where
B (δ) = min B (u, δ) ,
0 < u ≤1 −2δ,
B (u, δ) = 1 + h
"
u2#
−h
"
u2 + 2δu + 2δ
#
h (x) = H2

1
2 −1
2
√
1 −x


Block Codes
119
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
0.5
0.45
0.4
0.35
0.3
0.25
0.2
0.15
0.1
0.05
0
d/n
R(d/n)
Hamming
McEliece at. all I
McEliece at. all II
Figure 3.17
First and second McEliece-Rodemich-Rumsey-Welch Bounds for binary block codes
The bound given by (3.92) improves the ﬁrst McEliece-Rodemich-Rumsey-Welch bound in the region
of low values of δ (it coincides with the ﬁrst bound for δ ≥0.273). The comparison of ﬁrst and second
McEliece-Rodemich-Rumsey-Welch bound with Hamming bound is depicted in Figure 3.17.
3.6
Minimum Distance Decoding
Usually we take the words minimum distance decoding to mean the procedure of searching the codeword,
which is the closest one to the received word. This kind of procedure can be realized by the exhaustive
search on the set of codewords or on the set of syndromes of probable error vectors.
The exhaustive search algorithm on the set of codewords consists of a comparison of the received
word with all codewords and choice of the closest codeword.
The exhaustive search algorithm on the set of syndromes of error vectors can be realized in the case
where we have the table T, in which syndromes correspond to coset leaders. The algorithm is as follows:
1. Calculation of the syndrome s of the received word b;
2. The search of the syndrome s and the corresponding coset leader e in the table T;
3. Calculation of decoded vector ˆa:
ˆa = b + e
The ﬁrst algorithm usually needs a greater number of operations, which is related to the need to generate
all codewords (to execute qk encoding procedures) and to compare them with the received word (qk
comparisons). The decoding on the syndromes leads to needing to keep in memory the table with qr
words of length n.
Usually it is hard to implement these algorithms in practice due to the high complexity. Now we will
consider those algorithms with less complexity, which, however, can not provide the full decoding, that
is, the decoding of all errors, which is possible to correct with the help of given codes (all coset leaders).

120
Modulation and Coding Techniques in Wireless Communications
3.7
Information Set Decoding
The key concept for many general methods of decoding is the concept of information set of the
code. It is a known fact that for systematic code ﬁrst k symbols a0, . . . , ak−1 fully deﬁne the word
a0, . . . , ak−1, ak, . . . , an−1 of the (n, k) code. That means there is only one word in the code where the
symbols a0, . . . , ak−1 occupy the positions {0, . . . k −1}.
However, the set of positions {0, . . . , k −1} is not the unique one. For every code there exist many
other sets { j1, . . . , jk}, 0 ≤j1 < . . . < jk ≤n −1, such that for any a j1, . . . , a jk there exist only one
word in the code where the symbols a j1, . . . , a jk occupy the positions { j1, . . . , jk}. Hence, the symbols
on the positions { j1, . . . , jk} also fully deﬁne the codeword.
Deﬁnition 3.2
The set of positions { j1, . . . , jk}, (0 ≤j1 < . . . < jk ≤n −1) is called the information
set of the code V if the symbols a j1, . . . , a jk uniquely deﬁne the codeword from V.
Let G be the generator matrix of code V. Let us denote by G (γ ) the matrix constructed from the
columns of G enumerated by the elements of set γ . It is obvious that the set γ is the information set
if and only if the mapping fγ : V →Ak, which put in correspondence to the codeword it coordinates
with numbers from γ , is one-to-one mapping. This fact is equivalent, as was shown in Section 3.3, to the
nonsingularity of the matrix of mapping fγ , which is the matrix G (γ ) in the basis {v1, . . . , vk}. Thus,
the following statement is correct:
Lemma 3.3
The set of positions γ = { j1, . . . jk} is the information set if and only if the matrix G (γ )
is nonsingular.
If in the received erroneous word there is at least one information set without erroneous symbols (that
is, symbols with indexes from this information set do not contain errors), then the transmitted word can
be restored on the basis of this information set. In this case the decoding procedure can be regarded as
the search of information set, which is free of errors. As this takes place, the issue of the “stop rule” is
very important, that is, we should choose the rule in accordance with which it is possible to identify the
fact that the information set free of errors is found. Hereafter we will consider the decoding of t-fold
errors.
Let us describe now the decoding algorithm based on the information sets. Let γ = { j1, . . . jk} be the
information set of the code V, and let G and H be the generator and the parity matrix of this code. Let
us denote by Gγ the matrix:
Gγ = (G (γ ))−1 · G
(3.93)
It is obvious that the columns of matrix Gγ with numbers { j1, . . . , jk} form the identity (k × k)-matrix.
Multiplying the vector (a j1, . . . , a jk) by matrix Gγ results in the codeword with symbols a j1, . . . , a jk on
the positions { j1, . . . , jk}:
"
a j1, . . . , a jk
#
· Gγ =
"
a j1, . . . , a jk
#
·
⎡
⎢⎢⎢⎢⎣
j1
j2
jk
··
1
· · ·
0
· · ·
0
··
··
0
· · ·
1
· · ·
0
··
··
··
· · ·
··
· · ·
··
··
··
0
· · ·
0
· · ·
1
··
⎤
⎥⎥⎥⎥⎦
=

j1
j2
jk
·· a j1 ··, a j2 ··, a jk , ··

Let us put matrix Gγ in correspondence to parity matrix:
Hγ = (H ( ¯γ ))−1 · H
(3.94)

Block Codes
121
where ¯γ = {1, 2, . . . , n} \γ , that is, the set of positions, which are not included in γ , and H ( ¯γ ) is the
matrix formed by the columns of matrix H with indexes from ¯γ . The columns of matrix Hγ with indexes
not included in γ form the identity (r × r)-matrix. Hence, if all nonzero elements of error vector e are
located in the set ¯γ (that is, γ is free of errors), then the weight of the syndrome:
sγ (e) = e · HT
γ
(3.95)
is equal to the weight of error vector. Therefore, the algorithm of information set decoding of v-fold
errors, ν ≤t =
 d−1
2

, can be formulated as follows:
Information Set Decoding:
Let  = {γ1, γ2, . . . , γl} be the set of information sets of the code. Let us assume that the set  contains
a reasonable number of information sets to correct the v-fold errors.
1. Calculation of the syndromes sγi (b), where b = (b0, b1, . . . , bn−1) is the received vector, b = a + e,
a is the transmitted vector and e is the error vector, until information set γ = { j1, j2, . . . , jk} is found
such that the weight of the corresponding syndrome:
w
"
sγ (b)
#
≤ν
(3.96)
2. If the condition (3.96) is satisﬁed the codeword ˆa is regarded as the decoded word:
ˆa = b(γ ) · Gγ = (b j1, b j2, . . . , b jk) · Gγ
(3.97)
3. If no one information set γ i satisﬁes the condition (3.96) the calculation (3.97) is not executed and it
is assumed that an uncorrectable error is detected.
Example 3.15 Consider the decoding of the binary (7, 4) code with d = 3. Let the generator matrix G
and the parity matrix H be as follows:
G =
⎡
⎢⎢⎣
1
0
0
0
1
0
1
0
1
0
0
1
1
1
0
0
1
0
1
1
0
0
0
0
1
0
1
1
⎤
⎥⎥⎦;
H =
⎡
⎣
1
1
1
0
1
0
0
0
1
1
1
0
1
0
1
1
0
1
0
0
1
⎤
⎦
(3.98)
The set of symbols γ ′={0,1,2,6} is the information set of the code and the set γ ′′ = {0,1,2,4} is not the
information set of the code because the determinant of the matrix G(γ ′):
|G(γ ′)| =

1
0
0
1
0
1
0
1
0
0
1
0
0
0
0
1

̸= 0
and the determinant of the matrix G(γ ′′):
|G(γ ′′)| =

1
0
0
1
0
1
0
1
0
0
1
1
0
0
0
0

= 0

122
Modulation and Coding Techniques in Wireless Communications
In the same way we can verify that γ (0) = {0, 1, 2, 3}, γ (1) = {3, 4, 5, 6}, γ (2) = {0, 1, 2, 6} are the
information sets. For these information sets Hγ (0) = H, Gγ (0) = G:
Hγ (1) = (H(0, 1, 2))−1 · H =
⎡
⎣
1
1
1
0
1
1
1
1
0
⎤
⎦
−1
· H =
⎡
⎣
1
1
0
1
1
1
1
0
1
⎤
⎦·
⎡
⎣
1
1
1
0
1
0
0
0
1
1
1
0
1
0
1
1
0
1
0
0
1
⎤
⎦
=
⎡
⎣
1
0
0
1
1
1
0
0
1
0
0
1
1
1
0
0
1
1
1
0
1
⎤
⎦
Gγ (1) = (G(3, 4, 5, 6))−1 · G =
⎡
⎢⎢⎣
1
0
1
1
0
0
0
1
1
1
0
1
0
0
1
1
0
0
0
1
0
0
1
1
0
0
0
1
⎤
⎥⎥⎦;
Hγ (2) = (H(3, 4, 5))−1 · H =
⎡
⎣
1
1
0
1
0
0
1
1
1
1
0
1
0
0
1
0
1
0
0
1
1
⎤
⎦;
Gγ (2) = (G(0, 1, 2, 6))−1 · G =
⎡
⎢⎢⎣
1
0
0
0
1
0
1
0
1
0
0
1
1
1
0
0
1
0
1
1
0
0
1
1
0
0
0
1
⎤
⎥⎥⎦
The set of information sets  = {γ (0), γ (1), γ (2)} allows decoding any 1-fold errors in (7, 4) code. Let
a = (0, 0, 0, 0, 0, 0, 0) be the transmitted word and b = (0, 0, 0, 1, 0, 0, 0) be the received word. The
decoding procedure in accordance with the described above algorithm is as follows:
sγ (0)(b) = b · HT
γ (0) = (0, 1, 1) ⇒w(sγ (0)(b)) = 2 > 1 = d −1
2
;
sγ (1)(b) = b · HT
γ (1) = (1, 0, 1) ⇒w(sγ (1)(b)) = 2 > 1 = d −1
2
;
sγ (2)(b) = b · HT
γ (2) = (1, 0, 0) ⇒w(sγ (2)(b)) = 1 = d −1
2
With the help of the information set γ (2) we can calculate the decoded word:
ˆa = (b0, b1, b2, b6) · Gγ (2) = (0 0 0 0) ·
⎡
⎢⎢⎣
1
0
0
0
1
0
1
0
1
0
0
1
1
1
0
0
1
0
1
1
0
0
0
0
1
0
0
1
⎤
⎥⎥⎦= (0 0 0 0 0 0 0) = a
In general the cardinal number of set , that is, the number of information sets, which is required for
decoding, increases very quickly with the increasing of the code length and the number of correctable
errors. And since each information set γ from  needs to keep or calculate matrices Gγ and (or) Hγ ,
then the complexity of the algorithm is growing up. The simpliﬁcation of the information set decoding is
associated with two modiﬁcations of this algorithm - permutation decoding and decoding with the help
of covering polynomials (or covering-set decoding).
As was deﬁned above the permutation π (π∈Sn) is the one-to-one self-mapping of set {1, 2, . . . , n}.
Each permutation π ∈Sn corresponds to linear operator on space An, that is, π(a1, . . . , an) = (aπ (1), . . . ,
aπ (n)). The arbitrary permutation transfers the word of the code V to some other word (in general this
word does not belong to the code V). However, permutations do exist which transfer any codeword to
the codeword of the same code. This kind of permutation is said to be preserving code permutation, and
the code is said to be invariant relative to this permutation. It is easy to verify that the set of permutations

Block Codes
123
preserving the code V forms the subgroup in the group Sn of all permutations. This subgroup is denoted
as AutV.
Example 3.16 Consider the binary linear (3, 2)-code consisting of four words (000), (110), (100), (010).
The permutation of the ﬁrst and the second symbol of any codeword transfers it to the codeword, but the
permutation of the second and the third symbol transfer the codeword (110) to the word (101), which do
not belong to the code.
Let G be the generator matrix and H be the parity matrix of the code V:
G =
⎡
⎢⎢⎣
g1
·
·
gk
⎤
⎥⎥⎦;
H =
⎡
⎢⎢⎣
h1
·
·
hr
⎤
⎥⎥⎦
It is a necessary and sufﬁcient condition for some permutation π to preserve the code V if matrix:
π(G) =
⎡
⎢⎢⎣
π(g1)
·
·
π(gk)
⎤
⎥⎥⎦
satisﬁes the following equation:
π(G) · HT = 0
Let π be the permutation preserving the code V. Then for any vector b = a + e, a∈V:
π(b) = π(a) + π(e) = a′ + e′
where a′ is some codeword and e′ is the error vector, which has the same weight as vector e. If the weight
of vector e is no more than t, then the weight of vector e′ also is no more than t.
With the help of permutations preserving the code, the information set decoding can be realized as
follows. Let G be the generator matrix and H be the parity matrix of code V, and let both these matrices
be in systematic form, that is, they correspond to the information set γ (0) = {0,1, . . . , k−1}. Let AutV =
{π1, . . . , π l} be the set of permutations preserving the code. Let us calculate the syndromes of vectors
π i(b) with the help of information set γ (0):
s(πi(b)) = πi(b) · HT
(3.99)
then we calculate the weight of syndromes (3.99). If some permutation π transfer vector e to vector e′,
where all nonzero components are located on the positions {k, . . . , n −1}, then the information set γ (0)
is free of errors, and the weight of the corresponding syndrome is no more than t. In this case it is enough
to use the permutation π −1 to vector a′ to restore the transmitted codeword.
Example 3.17 Consider the permutation decoding of (7, 4)-code with d = 3, which was deﬁned in
Example 3.15. This code is invariant relative to the cyclic permutation T, T(i) = (i + 1)mod 7. Really:
T (G) =
⎡
⎢⎢⎣
1
1
0
0
0
1
0
1
0
1
0
0
1
1
0
0
0
1
0
1
1
1
0
0
0
1
0
1
⎤
⎥⎥⎦
T (G) · HT = 0

124
Modulation and Coding Techniques in Wireless Communications
Let us decode the word b = a + e = (1011 0 0 0) + (010 0 0 0 0) = (11110 0 0). Calculate sγ (0)(T i(b))
for i = 0, 1, . . . , 6 since T7 = I = T0:
sγ (0)(b) = b · HT = (111) ⇒w(sγ (0)(b)) = 3 > 1 = d −1
2
;
sγ (0)(T (b)) = T (b) · HT = (110) ⇒w(sγ (0)(T (b))) = 2 > 1 = d −1
2
;
sγ (0)(T 2(b)) = T 2(b) · HT = (011) ⇒w(sγ (0)(T 2(b))) = 2 > 1 = d −1
2
sγ (0)(T 3(b)) = T 3(b) · HT = (100) ⇒w(sγ (0)(T 3(b))) = 1 = d=1
2 , and the condition (3.96) is satisﬁed.
With the help of information set γ (0) calculate the word a′ = T 3(ˆa), ˆa is the decoded word:
a′ = T 3(ˆa) = (0001) · G = (0001011)
and
ˆa = T −3(a′) = (1011000) = a
Another way of “clearing” the information set from errors is the covering of errors in the information
set. This method is called the decoding with the help of covering polynomials1 .
Let θ be the vector (covering polynomial), which coincide with error vector e on the positions of the
information set γ and with zeroes on the other positions. Then for vector (b−θ) the information set γ is
free of errors, and the weight of corresponding syndrome:
sγ (b −θ) = (e −θ) · HT
is
w(sγ (b −θ)) ≤t −w(θ)
(3.100)
If we search vectors θ in increasing order of their weights (starting with θ 0 = (0. . .0)) until some θ
∗
satisfy (3.100), then it will be possible to restore the transmitted vector with the help of vector b
∗=
(b −θ
∗) and the information set γ (of course, if the weight of error vector does not exceed t).
Example 3.18 Let us use the decoding with the help of covering polynomials for the case considered in
Example 3.15. Let the set of covering polynomials be
θ0 = (0000000), θ1 = (1000000), θ 2 = (0100000), θ 3 = (0010000), θ4 = (0001000). Consider the
information set γ (0). Let the received vector be b = (0001000) = a + e = (0000000) + (0001000).
Calculate the syndromes:
sγ (0)(b −θ0) = (0001000) · HT = (011) ⇒w(sγ (0)(b −θ0)) = 2 > 1 = d −1
2
;
sγ (0)(b −θ1) = (1001000) · HT = (110) ⇒w(sγ (0)(b −θ1)) = 2 > 1 = d −1
2
−w(θ1);
sγ (0)(b −θ2) = (0101000) · HT = (100) ⇒w(sγ (0)(b −θ2)) = 1 > 0 = d −1
2
−w(θ2);
sγ (0)(b −θ3) = (0011000) · HT = (101) ⇒w(sγ (0)(b −θ3)) = 2 > 0 = d −1
2
−w(θ3);
sγ (0)(b −θ4) = (0000000) · HT = (000) ⇒w(sγ (0)(b −θ4)) = 0 = d −1
2
−w(θ4)
1 The term ⟨⟨covering polynomial⟩⟩well-established in coding theory is not exactly correct. The more proper term is ⟨⟨covering
vector⟩⟩or ⟨⟨covering word⟩⟩.

Block Codes
125
Then θ
∗= θ4, b∗= (b −θ∗) = (0 0 0 0 0 0 0), and the transmitted word can be restored with the help of
γ (0) and vector b
∗:
ˆa = (b∗
0, b∗
1, . . . , b∗
k−1) · Gγ (0) = (0 0 0 0 0 0 0) = a
The best results can be obtained with the joint use of the algorithms considered above. Let
 = {γ (0), . . . , γ (m)} be the set of the information sets of code V and θ (0), . . . , θ(m) be the sets
of covering polynomials corresponding to information sets γ (0), . . . , γ (m): θ (0) = {θ00, . . . , θ0l0}, . . .,
θ (m) = {θm0, . . . , θmlm} with θj0 = 0 and w(θ j0) < w(θ j1) ≤. . . ≤w(θ jl j ), j = 0, . . . , m. The
decoding algorithm based on the joint use of information sets and covering polynomials is as
follows:
Covering-Set Decoding:
1. Calculate the vector ˜bij = b −θij and the syndrome sγ (i) = (˜bij) = ˜bij · HT for each pair γ (i), θij (i =
0, . . . , m; j = 0, . . . , lj) until the pair i
∗, j
∗is found, which satisfy the following condition:
w(sγ (i∗)(˜bi∗j∗−θ)) ≤t −w(θi∗j∗)
(3.101)
2. If the condition (3.101) is satisﬁed, calculate:
ˆa = ˜b(γ (i∗)) · Gγ (i∗)
where ˜b(γ (i∗)) is the subvector of vector ˜bi∗j∗combined from the elements of vector ˜bi∗j∗, which
belong to the information set γ (i∗)
3. If any pair γ (i∗), θij does not satisfy the condition (3.101), then it is assumed that the transmitted word
was corrupted by the uncorrectable error.
The set of set  and sets of the covering polynomials  = {θ (0), . . . , θ(m)} is called the decoding set and
is denoted as DS = {,}.
Quite often it is convenient to use for decoding not all covering polynomials, but only those with a
weight no more than ν, that is, vectors with nonzero elements located on the positions of set γ , and the
number of these nonzero elements does not exceed ν. This kind of vectors we denote as θ γ (ν).
Example 3.19
Consider (7, 4) code from Example 3.15. Consider γ 0 = {0, 1, 2, 3}. The set of
polynomials θγ (0)(1) consists of ﬁve polynomials θ00 = (0 0 0 0 0 0 0), θ 01 = (10 0 0 0 0 0), θ02 =
(0100000), θ 03 = (0010000), θ 04 = (0001000).
It is easy to verify that if γ is the information set of the code V and π is the permutation preserving
the code, then the set π(γ ) is also the information set of the code V.
Example 3.20 Consider the decoding of the (15, 5) Hamming code with distance d = 7. It is possible to
use the decoding set DS = {,(1)} to decode this code, where  = {γ (0), γ (1) = T5(γ (0))}, γ (0) = {0,
1, 2, 3, 4}, and T5(γ (0)) = {5, 6, 7, 8, 9} is the cyclic shift of the information set γ (0) by ﬁve positions.
Let the received word b be b = a + e = (001110110010100) + (010100010000000), that is, the received
word is corrupted in the ﬁrst, third and seventh position. Calculate s0 j(b) = ˜b0 j · HT
γ (0) with the help of
information set γ (0):
˜b00 = b + θ00 = b + (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0),
s00(b) = ˜b00 · HT
γ (0) = (0011110110) ⇒w(s00(b)) = 6 > 3 = d −1
2
−w(θ00);
˜b01 = b + θ01 = b + (10 0 0 0 0 0 0 0 0 0 0 0 0 0 0),

126
Modulation and Coding Techniques in Wireless Communications
s01(b) = ˜b01 · HT
γ (0) = (1101000100) ⇒w(s01(b)) = 4 > 2 = d −1
2
−w(θ01);
......................................................................................................................
˜b05 = b + θ05 = b + (000010000000000),
s05(b) = ˜b05 · HT
γ (0) = (1110010011) ⇒w(s05(b)) = 6 > 2 = d −1
2
−w(θ05)
Now let us use the information set γ (1) = T 5(γ (0)), and the corresponding matrices Gγ (1) = T 5(Gγ (0) and
Hγ (1) = T 5(Hγ (0)) are:
Gγ (1) =
⎡
⎢⎢⎢⎢⎣
1
0
0
1
0
1
0
0
0
0
1
1
1
0
1
1
1
0
0
1
0
1
0
0
0
0
1
1
1
0
1
1
1
1
0
0
0
1
0
0
1
1
0
1
0
0
1
1
1
1
0
0
0
1
0
0
1
1
0
1
0
0
1
0
1
0
0
0
0
1
1
1
0
1
1
⎤
⎥⎥⎥⎥⎦
Hγ (1) =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
0
0
0
0
1
0
1
0
1
1
0
0
0
0
0
0
0
0
0
1
1
1
1
1
0
1
0
0
0
0
0
0
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
0
0
1
1
0
1
0
0
0
1
0
0
0
0
0
0
1
0
0
1
1
0
0
0
0
1
1
0
0
0
0
1
1
1
0
0
0
0
0
0
0
0
1
0
0
0
0
1
1
1
0
0
0
0
0
0
0
0
1
0
0
0
0
1
1
1
0
0
0
0
0
0
0
0
1
0
1
0
1
1
0
0
0
0
0
0
0
0
0
0
1
0
1
0
1
1
0
0
0
0
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
Calculate s1 j(b) = ˜b1 j · HT
γ (1) with the help of information set γ (1):
˜b10 = b + θ110 = b + (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0),
s10(b) = ˜b10 · HT
γ (1) = (1101010100) ⇒w(s10(b)) = 5 > 3 = d −1
2
−w(θ10);
˜b11 = b + θ11 = b + (0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0),
s11(b) = ˜b11 · HT
γ (1) = (0011100110) ⇒w(s11(b)) = 5 > 2 = d −1
2
−w(θ11);
.........................................................................................
˜b13 = b + θ13 + b + (0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0),
s13(b) = ˜b13 · HT
γ (1) = (0000001010) ⇒w(s13(b)) = 2 = d −1
2
−w(θ13)
With the help of the word ˜b13 and the information set γ (1) we can restore the word ˆa:
ˆa = ˜b13(γ (1)) · Gγ (1) = (01100) · Gγ (1) = (001110110010100) = a
In example the decoding set can be constructed with the help of the permutation T5 rather than the usage
of the information set γ (1). In this case the decoding algorithm consists of calculation of s0j(b) and then
the calculation of s0j(T5(b)).

Block Codes
127
Actually ﬁnding the set  is very difﬁcult. A few nontrivial examples are found in [13], [14], and [15];
see also [16]. Therefore, to implement the general information-set decoding algorithm, we have to specify
a way of choosing information sets. One obvious suggestion is to take random uniformly distributed
k-subsets of set {0,1, . . . , n−1}. We call the following algorithm generalized covering-set decoding
because it, in essence, produces a random covering design and can be regarded as the generalization of
the algorithms considered above.
Generalized Covering-Set Decoding:
1. Set ˆa = 0.
2. Choose randomly a k-subset γ . Form a list of codewords M(γ ) = {c ∈V |c(γ ) = b(γ )}.
3. If there is a c ∈M(γ ) such that:
dist(c, b) < dist(ˆa, b)
4. assign ˆa ←c.
5. Repeat the last two steps Ln(k) times. Output ˆa.
The number of steps Ln(k) needed to execute the algorithm will be discussed later.
An improvement of this algorithm was achieved in two steps in [17], [18]. The idea in [17] is to
organize the syndrome table more economically by computing the syndrome separately for the “left”
and “right” part of the received vector b.
Suppose for a while that the actual number of errors is t. Let us split the set {0,1, . . . , n−1} into two
parts, l = {0,1, . . . , m−1}and r = {m, m+1, . . . , n−1}, and let [Hl|Hr] be the corresponding partition of
the parity-check matrix H. Any error vector e = (el|er) with e · HT = el · H T
l + er · H T
r = s is a plausible
candidate for the decoding output. Assume, in addition, that the number of errors within the subset l
equals u, where the numbers u and m are chosen in accordance with the natural restrictions u ≤m, t
−u ≤n −m. For every possible m-vector el, compute the product sl = el · HT
l and store it, together
with the vector el, as an entry of the table Xl. Likewise, form the table Xr and look for a pair of entries
(sl,sr) that add up to the received syndrome s. Therefore, for every given sr occurring in Xr, we should
inspect Xl for the occurrence of s −sr. One practical way to do this is to order Xl with respect to the
entries sl.
However, in reality we know neither the number of errors nor their distribution. Therefore, we have
to repeat the described procedure for several choices of m and u. In doing so, we may optimize on the
choice in order to reduce the total size of memory used for the tables Xl and Xr. For every choice of m
there are not more than t different options for the choice of u. Hence, by repeatedly building the tables,
though not more than nt times, we shall capture any distribution of t errors. Finally, the entire procedure
should be repeated for all t = 1, 2, . . . , d until we ﬁnd the error vector that has the “received” syndrome
s. Let us give a more formal description of the algorithm.
Split Syndrome Decoding:
Precomputation stage: For every weight t, 1 ≤t ≤d ﬁnd the point m such that the tables Xl and Xr
have an (almost) equal size. Store the pair (m, u) in the set E(t).
1. Compute s = b · HT and set t = 1
2. For every entry of E(t), form the tables Xl and Xr as described.
3. Order Xl with respect to the entries sl.
4. For every entry of Xr check whether Xl contains the vector sl = s −sr. If this is found, then output
ˆa = b −(el|er) and STOP.
5. Otherwise, set t = t + 1 and repeat Steps 2–5 while t < d.

128
Modulation and Coding Techniques in Wireless Communications
3.8
Hamming Codes
The Hamming codes are capable of correcting single error. These codes were invented by R.W. Hamming
and his paper [19] is considered to be the ﬁrst work on the coding theory. The code construction can be
easily explained with the help of Bose criterion (Lemma 3.1). In accordance with this criterion a linear
code is capable of correcting single error if and only if a parity-check matrix H of this code does not
contain collinear columns. In binary case that means matrix H consists of distinct nonzero columns.
The total number of different nonzero columns of dimension r is 2r−1. Hence, any r × (2r −1) matrix
Hr combined from these columns deﬁnes the linear Hamming code with length n = 2r−1, number of
information symbols k = 2r−r−1 and minimum distance d = 3. Any (not necessarily linear) code of
length n = 2r−1 capable of correcting single error has in accordance with Hamming bound (see Section
3.5) the cardinality of no more than
2n
n+1 = 2n−r code words. Therefore, the binary Hamming codes are
perfect. Recall that codes achieving Hamming bound are called perfect and they are optimal. It is known
that there are no perfect codes capable of correcting t-fold errors (t > 1) except of binary (23, 12, 7)
Golay code, correcting triple errors, and ternary (11, 6, 5) Golay code, correcting double errors [5].
It is convenient to arrange the columns of matrix H in such a way that a column hj be the binary
representation of its own index j. Then to decode the received word x (to correct a single error) it is
necessary to calculate the syndrome s = H · x = (s0, . . . , sr−1) and the number S = s0 + 2s1 + . . . +
2r−1Sr−1 is the index of the corrupted symbol. If S = 0, that is, s is the all-zero vector then it is assumed
that no error occurs. If n+1 is not the power of 2 then it is possible to consider the shortened Hamming
code, that is, a code deﬁned by the parity-check matrix obtained from matrix Hr by deletion of some
i (i = 2r−1−n) from 2r−1 columns, where r = [log2(n + 1)]. The shortened Hamming codes cannot
be improved in the class of linear codes, that is, k(n, d) = n−[log2(n + 1)]. Also it is known that the
shortened Hamming codes of length n = 2r−1−i, i = 1, 2, 3 are optimal in the class of all codes [20].
On the other hand for i = λ · 2r(0⟨λ > 0.5) and for large n there exist nonlinear codes with d = 3, which
have about (1−λ)−1 times more code words than the shortened Hamming codes of the same length.
These nonlinear codes asymptotically achieve Hamming bound [21].
Now consider nonbinary codes capable of correcting single errors over the alphabet B the cardinality
of which q = |B| is the power of prime number, that is, q = pm and B = Fq. Then, as it was pointed
above, matrix H should not contain the collinear columns. As an example of this kind of matrix with
maximal possible number nr = qr −1
q−1 of r-dimensional columns consider the matrix:
Hr,q =
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
1
. . .
1
...
0
. . .
0
...
...
0
...
1
. . .
1
...
...
. . .
...
...
. . .
...
0
Fr−1
q
...
Fr−1
q
...
...
1
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
(3.102)
where Fl
q is l × ql matrix the columns of which are all ql l-dimensional vectors over the ﬁeld Fq.
Arrange the columns of matrix Fl
q in such a way that the column with index j be the q-ary representation
of number j. A code deﬁned by the matrix Hr,q is called Hamming code. The decoding algorithm of the
q-ary Hamming code is as follows:
1. Calculate the syndrome of the received vector x: s = (s0, . . . , sr−1) = Hr,q · x.
2. Find nonzero element si with minimal index i, then the error value e = si and the error position j
coincides with the position of column s′ = ( s0
si , . . . , sr−1
si ) in matrix Hr,q (division in the ﬁeld Fq). If
s = 0 it is assumed that no error occurred.
As in the binary case the q-ary Hamming codes are optimal because they reach the Hamming bound
|V | ≤
qn
1+(q−1)·n , and the shortened Hamming codes are optimal in a class of linear codes. However, if

Block Codes
129
q = pm and m > 1 then shortened Hamming codes are not optimal already in a class of group codes. In
a class of all codes capable of correcting single errors the Hamming codes of length n = qr −1
q−1 · (1 −λ)
have about (1 −λ) times less code words than optimal codes (0 < λ < 1 −1/q), which as it is proved in
[21] reach the Hamming bound asymptotically.
More often the Hamming codes are used in the cyclic representation. Recall that the minimum distance
of a binary cyclic code is no less than 3 if and only if the code length n is equal to the smallest positive
integer (called period of g(x)) for which generator polynomial g(x) divides xn −1. Therefore, if g(x)
is the primitive polynomial of degree m we obtain the cyclic code Vg(x) of length n = 2m −1 with the
number of parity symbols m and with minimum distance d ≥3. The parity-check matrix of this code
contains all possible nonzero m-vectors as columns, that is, it differs from the parity-check matrix Hm
only by a permutation of columns. Thus, a binary Hamming code is equivalent to the cyclic code with
the primitive generator polynomial.
For q-ary codes the answer on the corresponding question depends on the fact that numbers (q −1)
and m are relatively prime or not. If they are then the q-ary Hamming code of length n = qm−1
q−1 is
equivalent to the cyclic code with the generator polynomial g(x) = fβ(x), where β ∈Fqm and the period
of β is qm−1
q−1 (i.e. β = αq−1, where α is the primitive element of Fqm), fβ(x) is the minimal polynomial
over Fq of β (that is, the monic polynomial of the lowest possible degree from Fq[x] for which β is the
root). In other cases the q-ary Hamming code is not equivalent to any cyclic code.
Consider now the construction of near optimal single-error-correcting codes. Very useful for construc-
tion of codes with better parameters than shortened Hamming codes is the structure called a subcode
over subset.
Let alphabet B (|B| = q) be the subset of the alphabet B (|B| = Q > q) and V be a code of length
n with minimum distance d and cardinal number M = |V | over the alphabet B. Then q-ary code
VB = {v = (v0, . . . , vn−1) : vi ∈B, v ∈V } consisting of B-ary words of code V is called a subcode
of code V over subset B. Obviously, the length of the code VB is equal to n and the distance is not
less than d because VB is the subcode, that is, VB ⊂V . In general it is quite difﬁcult to estimate
the cardinal number of the particular code VB. Instead of this consider the family of q-ary codes
VB,b = {V + b}B = {x = (x0, . . . , xn−1) xi ∈B, x −b ∈V }. Since code {V + b} has exactly the same
parameters n, M, d as code V, the distance of the subcode of this code d
"
VB,b
#
≥d and the mean cardinal
number of code ¯M in this family is equal to:
¯M = 1
Qn ·

b∈En
Q
|VB,b| =

v∈V

a∈En
Q
1 =

 q
Q
n
· |V |
(3.103)
Hence, there exists a code VB,b in this family, such that |VB,b| ≥¯M.
Example 3.21 [21, 22]. Construct a 4-ary single-error-correcting code of length 6. Let q = 4, Q = 5
and code V be the 5-ary Hamming code of length 6 with 54 code words. It follows from (3.103) that
¯M ≥46
52 and hence, there exists a code {V + b} such that its 4-ary subcode has at least
&
46
52
'
= 164 code
words. Notice that the shortened 4-ary Hamming code of the same length has only 43 = 64 code words.
With the help of subcode over subset construction it is possible to construct from the Hamming codes
over large alphabet the q-ary single-error-correcting codes with packing density asymptotically no less
than q−1
ˆq−1, where ˆq is the minimum integer greater than q that can be represented as the power of the
prime number.
The other useful structure for the construction of error-correcting codes is the coset. Let H be the parity-
check r × n matrix of some q-ary (n, n-r) code C with minimum distance d = 2t + 1 (now we again
assume that q-ary alphabet is the ﬁeld Fq). Then all linear combinations of t or less columns of matrix H are
distinct vectors. Denote this set of r-dimensional vectors as UH (0 ∈UH as a result of linear combination

130
Modulation and Coding Techniques in Wireless Communications
with all-zero coefﬁcients), where |UH| = t
i=0

 n
i

· (q −1)i. Let V be a q-ary code of length r capable
of correcting the set of errors UH, that is, it follows from u + v = u′ + v′,
u, u′ ∈UH,
v, v′ ∈V that
u = u′,
v = v′. Then the following statement holds true:
Theorem 3.12
Code CV =

x = (x0, . . . , xn−1) ∈En
q :
H · x ∈V

is capable of correcting t errors
and has |CV | = |C| · |V | code words.
Proof. Let us prove this statement by reductio ad absurdum. Assume that there exist the error vectors e and
e′: ∥e∥≤t, ∥e′∥≤t and vectors x ̸= x′ ∈CV such that x + e = x′ + e′. Multiplying both parts of this
equation by matrix H obtain H · x + H · e = H · x′ + H · e′, where H · x + H · x′ ∈V, H · e, H · e′ ∈
UH. Then H · e = H · e′, because the code V is capable of correcting errors from the set UH. Recall that
all linear combinations of t or less columns of matrix H are distinct; hence e = e′, which means that
x = x′ and this statement contradicts the assumption. The code CV is the union over all v of solutions of
the equation H · x = v, v ∈V , where r is the rank of matrix H. Since for any v the number of solutions
is the same and equals to qn−r = |C|, we have that the overall number of solutions for all v equals to
|C| · |V |.
For the particular case of single-error-correcting codes it is possible to choose as UH any homogeneous
(that is, u ∈UH ⇒λ · u ∈UH, λ ∈Fq) subset of En
q. The corresponding construction is called the
method of homogeneous packing [21], since it is possible to construct from the code V capable of
correcting the homogeneous set of errors UH the code VH of length |UH|
q−1 capable of correcting single
errors, and it is easy to verify that the packing density in this case does not decrease.
The important example of the homogeneous set is the set Ul,N of those vectors from the space E N·l
q
for which the nonzero positions are grouped in one of N phased packets of length l, that is, Ul,N =
N−1
j=0 {x = (x0, . . . , xN·l−1) :
xi ̸= 0, i ∈{ j · l, . . . , j · l + l −1}}. The code capable of correcting the
set of errors Ul,N is called the code capable of correcting single phased packets of length l. Since the
elements of the ﬁeld Fql can be regarded as l-dimensional vectors over ﬁeld Fq, this correspondence
speciﬁes the isomorphism of the spaces E N
ql and E Nl
q where q-ary code of length N · l capable of correcting
single phased packets of length l corresponds the ql-ary code of length N capable of correcting single
errors. The union of this structure with subcodes over subsets and with the method of homogeneous
packing gives us the class of asymptotically optimal single-error-correcting codes [21].
Example 3.22 Construct the binary single-error-correcting code of length 18. Consider the 4-ary code
of length 6 of Example 3.21 as a binary code of length 12 capable of correcting single phased error
packets of length 2 and consisting of M ≥164 code words. From the latter code with the help of cosets
construction obtain a binary code of length n = 6.3, consisting of M · 26 code words. This is the single-
error-correcting code of length 18 with 28.41 code words which is 1.28 times greater than the number of
code words in the shortened Hamming code [21, 22].
As usual for coding theory in cases when q is not a prime power there is a lack of information. During
the single-error-correcting codes the best parameters have the codes of length n deﬁned by the following
system of equations:
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
n

i=0
xi = α mod (2q −1)
n

i=0
ixi = β mod p
(3.104)

Block Codes
131
where p is a prime number greater than n. These codes are an analog of Varshamov-Tenengoltz codes
for correcting single asymmetric errors [23]. The best of the codes deﬁned by the system (3.104) has the
number of code words Mopt no less than the mean over α and β, that is:
Mopt ≥¯Mα,β =
qn
p · (2q −1)
(3.105)
Since lim
n→∞
p(n)
n
= 1, where p(n) is the minimum prime number greater than n, then the packing density
of these codes (that is, the ratio of the cardinal number to the value of Hamming bound) with large n is
about
q−1
1q−1, that is, less than 1
2.
As was mentioned above the structure of subcode over subset allows codes of a large size to be
constructed, that is, with packing density asymptotically no less than q−1
ˆq−1 [21], where ˆq is the minimal
prime power such that ˆq ≥q. It is shown in [24] that if there exist perfect (reaching the Hamming
bound) q-ary code single-error-correcting code of length q + 1, then with n →∞there exist codes
asymptotically reaching the Hamming bound, that is, the packing density of the optimal codes tends to
increase the code length in a general q-ary case also.
3.9
Reed-Solomon Codes
The Reed-Solomon (RS) codes invented in 1960 [25] are still one of the most applicable class of codes
and despite (or maybe due to) their simplicity are the basis of the new deep generalizations. Lets start
the discussion of RS codes from the following simple remark. The rank of a parity-check matrix H of
the (n, n-r) code with minimum distance d is no less than d-1 since any of its d-1 columns are linearly
independent. On the other hand, the rank of matrix is no more than the number of rows, and hence for
any (n, n-r) code the following Singleton bound holds true:
d ≤r + 1
(3.106)
Note that the bound (3.106) holds true for any (not necessary linear) code, namely:
Mq(n, d) ≤qn−d−1
(3.107)
The code reaching the bound (3.107) is an optimal code and it is called a maximum distance separable
(MDS) code. Thus, in the parity-check r × n matrix of MDS code any r columns are linearly independent.
The example of such kind of matrix is the matrix H =
+
hij
,
=
+
αi
j
,
, i = 0, . . . ,r −1, j = 0, . . . , n −1,
where α0, . . . , αn−1 are distinct elements of the ﬁeld Fq (n ≤q). In other words, the ith row of matrix H
consists of the values of the term zi calculated in the points α0, . . . , αn−1 of the ﬁeld Fq:
Hr =
1
z
...
zr−1

⎡
⎢⎢⎣
1
1
. . .
1
α0
α1
. . .
αn−1
. . .
. . .
. . .
. . .
αr−1
0
αr−1
1
. . .
αr−1
n−1
⎤
⎥⎥⎦
(3.108)
Let us show that any r columns in matrix (3.108) are linearly independent. Lets assume this is not the
case, and the columns h j1, . . . , h jr are linearly dependent. This means det
"
h j1, . . . , h jr
#
= 0. Hence,
the rows of this minor determinant H j1, . . . , jr also are linearly dependent.
The linear dependence of rows of this minor determinant with coefﬁcients λ0, . . . , λr−1 means that
the polynomial λ0 + λ1 · z + . . . + λr−1 · zr−1 of degree less than r has r different roots µ j1, . . . , µ jr ,
and that is impossible.

132
Modulation and Coding Techniques in Wireless Communications
It is easy to obtain from the statement about matrix (3.108) that in matrices Ha,r of more general form
with the rows deﬁned by the values of term z j ( j = a, a + 1, . . . , a + r −1) on elements α j ∈Fq\0:
Ha,r =
⎡
⎢⎢⎣
αa
0
. . .
. . .
αa
n−1
. . .
. . .
. . .
. . .
. . .
. . .
. . .
. . .
αa+r−1
0
. . .
. . .
αa+r−1
n−1
⎤
⎥⎥⎦
(3.109)
any r columns are linearly independent. The codes deﬁned by the matrices (3.109) are called Reed-
Solomon (RS) codes. More often RS codes are deﬁned as cyclic codes. Let elements α0, . . . αn−1 form a
subgroup. This subgroup should be a cyclic subgroup because the group under multiplication of the whole
ﬁnite ﬁeld is the cyclic group. Hence, there exists element β ∈Fq such that αi = βi, i = 0, . . . , n −1.
Then the matrix (3.109) can be converted to the form:
Ha,r,β =
⎡
⎢⎢⎢⎣
1
βa
. . .
βa(n−1)
n−1
1
βa+1
. . .
β(a+1)(n−1)
. . .
. . .
. . .
. . .
1
βa+r−1
. . .
β(a+r−1)(n−1)
n−1
⎤
⎥⎥⎥⎦
(3.110)
Since the cyclic shift of any row of matrix Ha,r,β (this shift can be obtained by the multiplication of the
row by βa(n−1)) belongs to the linear space of rows of this matrix, the code deﬁned by the matrix Ha,r,β
is the cyclic code (as well as the corresponding dual code). The condition that vector v is the codeword
of the code deﬁned by the matrix Ha,r,β :
Ha,r,β · v = 0
is equivalent to the following condition:
v(β j) = 0,
j = a, . . . , a + r −1
(3.111)
where v(x) is the polynomial corresponding to vector v. Therefore, the generator polynomial of this code
is:
g(x) = L.C.M

fβ j (x)

,
j = a, . . . , a + r −1
(3.112)
where fγ (x) is the minimal polynomial of the element γ . In the considered case fγ (x) = x −γ and
therefore:
g(x) =
a+r−1
-
j=a
"
x −β j#
(3.113)
The most interesting case is when β is the primitive element of ﬁeld Fq. Then n = q −1 and such kind
of codes most often are called RS codes [5]. The code deﬁned by the matrix (3.108) has the length q
when {α0, . . . , αn−1} = Fq and is called 1-extended RS code. It is possible to extend this kind of code
by one symbol more if we add symbol ∞to the set {α0, . . . , αn−1} = Fq with formal deﬁnition ∞j = 0
for j = 0, 1, . . . ,r −2 and ∞r−1 = 1. The question about possibility of construction of nontrivial MDS
codes (that is, 2 < d < n) of length n + 1 is the unsolved problem throwing back to the projective
geometry. A well-accepted hypothesis maintains that these codes do not exist except in the cases when
q = 2m, n = q + 2 and either code with distance d = 4 or its dual code with distance d = n.
Example 3.23 Specify the code of length q + 2 with the help of systematic encoding that is, match
up to the set of information symbols a0, . . . , aq−2 three parity-check symbols b0, b1, b2 computed in

Block Codes
133
accordance with formula:
b0 =
q−2

i=0
ai; b1 =
q−2

i=0
ai · αi+1; b2 =
q−2

i=0
ai · α2(i+1)
where α is the primitive element of the ﬁeld Fq. It is easy to verify that for q = 2m the distance of this
code is 4, that is, this is the nontrivial MDS code of length q + 2.
Let V be an (n, n-r) RS code deﬁned by the parity-check matrix (3.109) over the ﬁeld FQ, Q = qm.
Since the ﬁeld Fq may be deﬁned as the subﬁeld of the ﬁeld FQ consider a subcode Vq of the code V
over subﬁeld Fq. This code is no more than q-ary BCH code [5]. It follows from the general relations
of subcode over subset that
Vq
 ≥qn−rm. In this particular case the given estimation can be improved
by considering the ﬁeld FQ as an m-dimensional vector space over Fq and the elements of the matrix
Ha,r as m-dimensional columns (vectors) over the ﬁeld Fq. Then the rank (q-ary) of the new matrix H(q)
a,r
equals to the number of parity-check symbols of code Vq. It is a known fact [5] that there exists normal
basis in the ﬁeld FQ, that is, the element γ such that the elements γ, γ q, . . . , γ qm−1 are the basis of the
vector space FQ over the ﬁeld Fq. In this basis the “block” of m rows of the matrix H(q)
a,r corresponding to
the row z j·q of the matrix Ha,r can be obtained by the cyclic shift (downward) of the rows of the “block”
corresponding to the row z j. From this follows the estimations of a number of parity-check symbols r (q)
of the q-ary code Vq of length n ≤qm and with minimum distance no less than d, which we will write
for two particular cases:
r (q) ≤m ·

d −1
.d −1
q
/
for a = 1
(3.114)
r (q) ≤1 + m ·

d −2 −
.d −2
q
/
for a = 0
(3.115)
Substituting q = 2 and d =2t + 1 in (3.114) obtain that the number of parity-check symbols of
BCH code of length n capable of correcting t errors is no more than t ·
0
log2 n
1
. It follows from this
statement and from Hamming bound that BCH codes are asymptotically optimal “on redundancy”, that
is, lim
n→∞
rBC H
r(n, 2t + 1) = 1.
Substituting q = 3 and d = 5 in (3.115) obtain that the number of parity-check symbols of the
corresponding 3-ary BCH codes of length n capable of correcting two errors is no more than 1 + 2 ·
0
log3 n
1
. In particular, Hamming bound shows that for n = 3n these codes are optimal in the class
of linear codes. It is known in addition that there is one more class of codes – 4-ary codes capable of
correcting two errors [26, 27], which satisﬁes the Hamming bound for a number of parity-check symbols.
There are no known classes of codes with parameters q and t except the mentioned above that satisﬁes
the following equation:
lim
n→∞
q,t=const
r
t · logq n = 1
(3.116)
The BCH codes do not satisfy (3.116) with q < 2 (except the case q = 3, t = 2) and for the case t = 2
there are exist codes asymptotically better than BCH codes, that is, for these codes the left part of (3.116)
has value 7/6 which is better than 1.5 for BCH codes [28]. For an extended discussion of the BCH codes
see the next section.
3.10
BCH Codes
For the estimation of the minimum distance the following description of the cyclic codes is very useful.
Let g(x) be the generator polynomial of the cyclic (n, k) code V over the ﬁeld Fq. As before we

134
Modulation and Coding Techniques in Wireless Communications
assume that the code is nontrivial, that is, 2 < d < n and, therefore, n is the period of the polynomial
g(x), that is, g(x)|xn −1 and g(x) does not divide xn′ −1 for n’ < n. Let the code length n and the
characteristic p of ﬁeld Fq be relatively prime. Then the polynomial xn −1 has no repeated roots since
LC D
"
xn −1, d
dx (xn −1)
#
= 1. Hence the polynomial g(x) also has no repeated roots because it is the
divisor of the polynomial xn −1. Let m be the minimal positive integer such that n divides qm −1. Then
Fqm is the minimal ﬁeld containing all roots of g(x). The following theorem called BCH bound holds
truth.
Theorem 3.13
Let α be an element of the ﬁeld Fqm and let αa, αa+1, . . . , αa+s−1 be the roots of the
polynomial g(x). Then the minimum distance of the cyclic code V with the generator polynomial g(x)
is no less than s + 1.
Proof. Any codeword v ∈V
can be considered as a polynomial v(x) and the elements
αa, αa+1, . . . , αa+s−1 are the roots of this polynomial because g(x) is the divisor of v(x), that is, v(α j) = 0
for j = a, . . . , a s −1. In accordance with (3.111) that means the codeword v belongs to the cyclic RS
code with the minimum distance s + 1.
More often this theorem is used for a particular case when α is the primitive element of the ﬁeld Fqm. The
corresponding statement says that the minimum distance of a cyclic code is more than the length of the
maximal “set of consecutive roots”, that is, the maximum number of consecutive powers j0, . . . , js−1,
where α j0, . . . , α js−1 are the roots of the polynomial g(x). The parameter s + 1 usually is called the
designed distance of a BCH code.
Example 3.24 Consider binary cyclic code V with the generator polynomial g(x) = x7 + x6 + x5 +
x2 + x + 1. Find the parameters of this code. To obtain the code length we have to ﬁnd xn of minimal
power such that the remainder of division xn by g(x) is equal to 1. The remainder of x7 divided by g(x)
is:
x7 = x6 + x5 + x2 + x + 1
mod g(x)
Now multiply by x on modulo g(x) both left and right part of this equation
x8 = x7 + x6 + x3 + x2 + x = x6 + x5 + x2 + x + 1 + x6 + x3 + x2 + x = x5 + x3 + 1 mod g(x)
In the same manner we will calculate remainders of division terms x9, x10, . . . by g(x) until the
remainder become equal to 1:
x9 = x6 + x4 + x
x10 = x6 + x + 1
x11 = x6 + x5 + 1
x12 = x5 + x2 + 1
x13 = x6 + x3 + x
x14 = x6 + x5 + x4 + x + 1
x15 = 1
⎫
⎪⎪⎪⎪⎪⎪⎪⎪⎬
⎪⎪⎪⎪⎪⎪⎪⎪⎭
mod g(x)
Thus, the code length is n = 15. The number of information symbols k equals to the difference of code
length and the degree of the generator polynomial:
k = n −deg g(x) = 15 −7 = 8
Since g(x) is the divisor of xn −1, all roots of g(x) belong to the ﬁeld GF(24). Let γ be the primitive
element of this ﬁeld such that γ 4 + γ + 1 = 0. It is easy to verify that the roots of g(x) are γ 0 =
1, γ 5, γ 6, γ 9, γ 10, γ 12. The longest set of consequent powers consists of two elements γ 5, γ 6 or γ 9, γ 10.
It follows from the lower BCH bound that the minimum distance of given code d ≥3. Use the theorem

Block Codes
135
3.13 with α = γ 5. Then α0, α1 = γ 5, α2 = γ 10 are the roots of the polynomial g(x). Hence, the minimum
distance of the code is no less than 4 and the exhaustive search shows that it is the real minimum distance
of the code.
Now let us introduce the classical deﬁnition of the BCH code [2]. Let n be the divisor of qm −1 and n
is not divisor of qi −1 for i < m. Then the q-ary BCH code with the designed distance d is the cyclic
code of length n with the generator polynomial:
g(x) = LCM {ϕαa(x), ϕαa+1(x), . . . , ϕαa+d−2(x)}
(3.117)
where α is the primitive nth root of unit in the ﬁeld Fqm, ϕγ (x) is the minimal polynomial of the element
γ . If n = qm −1 and a = 1, then the code is called a primitive BCH code.
Using (3.117), (3.113) and (3.112) it is easy to verify that this deﬁnition of BCH code coincides with
that given in Section 3.9’s deﬁnition of BCH code as a q-ary subcode of a qm-ary RS code. The theorem
3.13 gives only the lower bound of the distance of BCH code and the real minimum distance can be
greater than the design distance. The meaning of the design distance is in fact that there exist effective
algorithms capable of correcting the corresponding to the design distance number of errors.
3.11
Decoding of BCH Codes
Let V be a cyclic (n, k) BCH code over the ﬁeld Fq with the design distance d = 2t + 1 and g(x) being
the generator polynomial of this code. Let γ, γ 2, . . . , γ 2t be the roots of the generator polynomial g(x).
Then the parity-check matrix of the code can be written in the form:
H =
⎡
⎢⎢⎣
1
γ
γ 2
. . .
γ n−1
1
γ 2
(γ 2)2
. . .
(γ n−1)2
. . .
. . .
. . .
. . .
. . .
1
γ 2t
(γ 2)2t
. . .
(γ n−1)2t
⎤
⎥⎥⎦
(3.118)
Let b(x) be the received word equal to the sum of the codeword a(x) and the error pattern e(x):
b(x) = a(x) + e(x)
(3.119)
and the error polynomial:
e(x) = e0 + e1x + . . . + en−1xn−1
(3.120)
contains exactly ν ≤t nonzero coefﬁcients ei1, . . . , eiv. Multiplying e(x) by H obtain the syndrome
vector with the components:
s j = b(γ j),
j = 1, . . . 2t
(3.121)
Since a(γ j) = 0 for any codeword, (3.121) can be written as follows:
s j = ei1 · (γ j)i1 + ei2 · (γ j)i2 + . . . + eiv · (γ j)iv
(3.122)
The error polynomial (3.120) is fully deﬁned by the set of pairs

ei1, i1

,

ei2, i2

, . . . ,

eiν, iν

. Denote
eim by Ym and γ im by Xm, then:
s j = X j
1Y1 + X j
2Y2 + . . . + X j
νYν,
j = 1, . . . , 2t
(3.123)
Ym is called error-value and Xm is called error-location number. The syndrome components s j can
be calculated directly from the received vector, therefore (3.123) can be regarded as the system of 2t
nonlinear equations relative to 2ν unknowns X1, X2, . . . , Xν,
Y1, Y2, . . . , Yν. If t ≥ν system (3.123)
has the unique solution that should be found to decode the received word.

136
Modulation and Coding Techniques in Wireless Communications
However, it is not so easy to solve the system of nonlinear equations directly. To avoid some difﬁculties
with the direct solving of this system consider the polynomial σ(x):
σ(x) = 1 + σ1x + . . . + σνxν = (1 −x X1) · (1 −x X2) · . . . · (1 −x Xν)
(3.124)
The polynomial σ(x) called error-location polynomial is the polynomial of minimal degree such that the
roots of this polynomial are values X −1
1 , X −1
2 , . . . , X −1
ν , that is, the reciprocals of the error-locations.
If the coefﬁcients σ1, . . . , σν of the polynomial σ(x) are known then we should ﬁnd the roots of this
polynomial to calculate the error-locations. Hence the problem of calculation of the error-locations can
be solved in two steps: ﬁrst, to ﬁnd the coefﬁcients of the polynomial σ(x) and second, to ﬁnd the roots
of σ(x).
To ﬁnd the coefﬁcients σ1, . . . , σν it is necessary to show the relation of these coefﬁcients (unknown val-
ues) with the known syndrome components s j,
j = 1, . . . , 2t. Substituting values X −1
1 , X −1
2 , . . . , X −1
ν
in σ(x) obtain the system of equations:
1 + σ1 · (X −1
j ) + σ2 · (X −1
j ) + . . . + σν · (X −1
j )ν = 0,
j = 1, . . . , ν
(3.125)
Multiplying the left and right parts of (3.125) by X ν+1
1
Y1,
X ν+1
2
Y2, . . . ,
X ν+1
ν
Yν correspondingly
obtain:
⎧
⎨
⎩
Y1X ν+1
1
+ σ1Y1X ν
1 + σ2Y1X ν−1
1
+ . . . + σνY1X1 = 0
· · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · ··
Yν X ν+1
ν
+ σ1Yν X ν
ν + σ2Yν X ν−1
ν
+ . . . + σνYν Xν = 0
(3.126)
Adding equations (3.126) obtain:
(Y1X ν+1
1
+ . . . + Yν X ν+1
ν
) + σ1(Y1X ν
1 + . . . + Yν X ν
ν) + . . . + σν(Y1X1 + . . . + Yν Xν) = 0
(3.127)
Taking into account (3.123) we can write (3.127) as follows:
sν+1 + σ1sν + . . . + σνs1 = 0
(3.128)
Now multiplying the left and right parts of the equations (3.125) by X ν+2
j
Y j,
X ν+3
j
Y j, . . . and with
the same manipulations as above obtain the system of equations that deﬁnes the relation between the
syndrome components and the coefﬁcients of the error-location polynomial:
⎧
⎪⎪⎨
⎪⎪⎩
s1σν + s2σν−1 + . . . + sνσ1 = −sν+1
s2σν + s3σν−1 + . . . + sν+1σ1 = −sν+2
· · · · · · · · · · · · · · · · · · · · · · · · · · · · · · ··
sνσν + sν+1σν−1 + . . . + s2ν−1σ1 = −s2ν
(3.129)
The system (3.129) unlike (3.123) is the system of linear equations and there are well-known methods
of solving it.
However, to obtain the system (3.129) it is necessary to know the value of ν. The following theorem
allows ν to be obtained.
Theorem 3.14
The determinant of the matrix Mµ:
Mµ
⎡
⎢⎢⎣
s1
s2
. . .
sµ
s2
s3
. . .
sµ+1
. . .
. . .
. . .
. . .
sµ
sµ+1
. . .
s2µ−1
⎤
⎥⎥⎦
is nonzero
Mµ
 ̸= 0 if µ is equal to the number of errors µ = ν. If µ > ν then
Mµ
 = 0.

Block Codes
137
Proof.
Let X j = 0 for j > ν and let:
Wµ =
⎡
⎢⎢⎣
1
1
. . .
1
X1
X2
. . .
Xµ
. . .
. . .
. . .
. . .
X µ−1
1
X µ−1
2
. . .
X µ−1
µ
⎤
⎥⎥⎦
be the Vandermonde matrix. Denote by Dµ the diagonal matrix:
Dµ =
⎡
⎢⎢⎣
Y1X1
0
. . .
0
0
Y2X2
. . .
0
. . .
. . .
. . .
. . .
0
0
. . .
YµXµ
⎤
⎥⎥⎦
It is easy to verify that in accordance with (3.123):
Mµ = Wµ · Dµ · WT
µ
where WT
µ is the transposed Vandermonde matrix. Then the determinant of matrix Mµ is:
Mµ
 =
Wµ
 ·
Dµ
 ·
WT
µ

(3.130)
If µ = ν then all the elements X1, . . . , Xµ,
Y1, . . . Yµ differ from zero and X1, . . . , Xµ are the distinct
elements. Then all determinants in the right part of (3.130) differ from zero and
Mµ
 ̸= 0. If µ > ν then
Wµ
 = 0 and
Mµ
 = 0.
With the help of Theorem 3.14 it is possible to ﬁnd the value of ν in the following way. Consider matrices
Mµ for µ = t, t −1, t −2 and so on, until µ0 is found such that
Mµ0
 ̸= 0. Then µ0 = ν is the true
number of errors.
For given ν it is possible to solve the system (3.129) (for example, with the help of Gauss method)
and obtain the coefﬁcients of the error-location polynomial σ(x). Now it is enough to ﬁnd the roots of
σ(x) and we can obtain the error-location numbers just by inverting these roots. To ﬁnd the roots of the
polynomial σ(x) in the ﬁnite ﬁeld we can just substitute in σ(x) all ﬁeld elements in turn (this procedure
for searching the roots of a polynomial is called Chien’s search).
To calculate error values Y1, . . . , Yν it is enough to solve the system of ﬁrst v equations (3.123) after
substituting in them the known values of X1, . . . , Xν.
Thus, the algorithm of decoding a BCH code, which is usually called Peterson-Gorenstein-Zierler
algorithm or the direct method of decoding a BCH code, consists of four steps:
r syndrome calculation;
r ﬁnding the coefﬁcients of the error-location polynomial;
r ﬁnding the roots of the error-location polynomial;
r calculation of error-values.
The formal algorithm is as follows:
1. Calculate the syndrome components s j = b(γ j),
j = 1, . . . , 2t, where b(x) is the received
polynomial.
2. Consider determinants |Mt| , |Mt−1| , . . . until ﬁnd ν such that |Mν| ̸= 0.
3. Calculate the coefﬁcients of the error-location polynomial σ1, . . . , σν:
(σν, . . . , σ1) = (−sν+1, . . . , −s2ν) ·
"
M−1
ν
#T
4. Find the roots of the error-location polynomial σ(x) with the help of Chien’s search.

138
Modulation and Coding Techniques in Wireless Communications
5. Calculate error-values:
⎡
⎢⎢⎢⎣
Y1
Y2
...
Yν
⎤
⎥⎥⎥⎦=
⎡
⎢⎢⎣
X1
X2
. . .
Xν
X 2
1
X 2
2
. . .
X 2
ν
. . .
. . .
. . .
. . .
X ν
1
X ν
2
. . .
X ν
ν
⎤
⎥⎥⎦·
⎡
⎢⎢⎢⎣
S1
S2
...
Sν
⎤
⎥⎥⎥⎦
The most computation complexity in this algorithm has step 3 associated with solving the system (3.129).
However, (3.129) is not the arbitrary system, the coefﬁcients of the equalities in this system are well
structured. All known methods of simpliﬁcation of the direct decoding are based on this structure.
However, these simpliﬁed methods do not help to clarify the understanding of the process of decoding a
BCH code.
One of the best methods of implementation of step 3 is believed to be the iterative Berlekamp-Massey
algorithm. The idea of this algorithm is that the polynomial σ(x) is calculated with the help of the
sequential approximations σ (0)(x),σ (1)(x), and so on, until σ (ν)(x) = σ(x) and in doing so σ (j)(x) is
chosen as the reﬁnement of σ (j−1)(x).
It follows from (3.129) that the syndrome components can be expressed in the form of the recursive
equation:
Sj = −
ν

i=1
σi · s j−i,
j = ν + 1, . . . , 2ν
(3.131)
We will say that the polynomial σ (j)(x). generates S1,. . .Sj if the equation:
Sj = −
L

i=1
σ ( j)
i
· Sj−i
holds true, where L is the degree of the polynomial σ (j)(x) and σ ( j)
i
are the coefﬁcients of this polynomial.
Then the solution of the system (3.129) is equivalent to the ﬁnding of the polynomial σ(x)of minimal
degree that generates the syndrome components S1, S2, . . . , S2t. The iterative search of σ(x) starts with
σ (0)(x) and is as follows: for given σ (j−1)(x) that generates S1, S2, . . . , Sj−1 verify the capability of σ (j−1)(x)
to generate sj; if it is so then σ (j)(x) is assumed to be equal σ (j−1)(x), otherwise σ (j)(x) is chosen as:
σ ( j)(x) = σ ( j−1)(x) +  j(x)
where j(x) is the correction polynomial for the jth step. The process is repeated until the polynomial
that generates all the syndrome components is found.
Let us present the formal Berlekamp-Massey algorithm by searching the polynomial σ(x). It contains
some auxiliary polynomials B(x) and T(x), which do not have meaningful interpretation. L is the degree
of the current polynomial σ(x) at the jth step:
1. Set the initial parameters σ (0)(x) = 1, j = 0, L = 0, B(x) = 1.
2. j = j + 1.
3. Calculate the jth discrepancy  j = s j + L
i=1 σ ( j−1)
i
· Sj−1.
4. Verify if σ (j−1)(x) generates sj or not: compare j with zero. If j = 0, then σ (j)(x) = σ (j−1)(x) and
go to step 9.
5. Calculate T(x) = σ (j−1)(x) −j·x·B(x).
6. Check is it necessary to increase the degree of the current polynomial. Compare 2L with j−1. If
2Lj−1 then go to step 8.
7. Calculate new B(x), σ(x) and L. B(x) = −1
j
· σ ( j−1)(x); σ (j)(x) = T(x); L = L−j. Go to step 10.
8. Calculate σ (j)(x) = T(x).

Block Codes
139
9. Calculate B(x) = x·B(x).
10. Check the condition j = 2t. If j < 2t go to step 2.
11. Check the condition deg σ(x) = L. If deg σ(x) = L then go to step 13.
12. Stop the Berlekamp-Massey algorithm, σ(x) = σ (j)(x). Go to the next decoding stage.
13. Stop the Berlekamp-Massey algorithm; the uncorrectable error pattern is detected.
Example 3.25 Consider Berlekamp-Massey algorithm for decoding 16-ary (15, 9) Reed-Solomon code
capable of correcting triple errors. Let the transmitted polynomial be a(x) = 0, the received polynomial
be b(x) = a(x) + e(x) = e(x) = αx7 + α5x5 + α11x2. S1 = α · α7 + α5 · α5 + α11 · α2 = α12, s2 = 1,
s3 = α14, s4 = α13, s5 = 1, s6 = α11. The steps of the Berlekamp-Massey algorithm are listed in Table
3.4.
Table 3.4
j
j
T(x)
B(x)
σ (i)(x)
L
0
1
1
0
1
α12
1 + α12x
α3
1 + α12x
1
2
α7
1 + α3x
α3x
1 + α3x
1
3
1
1 + α3x + α3x2
1 + α32x
1 + α3x + α3x2
2
4
1
1+ α14x
x + α3x2
1+ α14x
2
5
α11
1+ α14x + α11x2 + α14x3
α4 + α3x
1 + α14x + α11x2 + α14x3
3
6
0
1 + α14x + α11x2 + α14x3
α4 + α3x
1 + α14x + α11x2 + α14x3
3
Then σ(x) = 1 + α14x + α11x2 + α14x3 = (1 + α7x) · (1 + α5x) · (1 + α2x), the roots are α−7, α−5,
α−2; and the error-location numbers are α7, α5, α2.
3.12
Sudan Algorithm and Its Extensions
The Sudan algorithm for decoding some low rate Reed-Solomon codes beyond half of their minimum
distance d was invented in 1997 [29]. Later Guruswami and Sudan [9] managed to signiﬁcantly improve
this algorithm to make it capable of decoding almost all Reed-Solomon (RS) codes beyond d/2 limit. The
main idea of these works was based on the fact that if more than [ d−1
2 ] errors have occurred in a received
word, then the decoding may not be unique, so the decoder may output a list of codewords within a
certain distance from the received word. The ﬁnal decision can be carried out using some additional
information, for example “soft” information from the demodulator. Some other authors Roth-Ruckenstein
[30], K¨otter [31, 32], and Nielsen [33, 34] succeeded in decreasing the complexity of Guruswani-Sudan
(GS) algorithm.
Following P. Elias [35] deﬁnition a list decoding algorithms of decoding radius T should produce for
any received vector y the list LT (y) = {c ∈C :
d(y, c) ≤T } of all vectors c from a code C, which
are at distance at most T apart from vector y. Bounded distance decoding, that is, correcting up to [ d−1
2 ]
errors, is a particular case of list decoding when T = [ d−1
2 ] and any list contains no more than one code
vector.
Let us consider the problem of list decoding of Reed-Solomon codes, one of the most widely used and
well-studied classes of error-correcting codes. There are many ways to deﬁne the Reed-Solomon code,
one of them was considered in Section 3.9. Here it is convenient to use the “dual” deﬁnition:
Consider ﬁnite ﬁeld GF(q) and some set X = {x1, . . . , xn} of its distinct elements. The (n, k) RS code
consists of all vectors f = (f(x1), . . . , f(xn)), where f (x) = f0 + f1x + . . . + fk−1xk−1 is a polynomial
over GF(q) of degree less than k. Since the number of roots of f(x) does not exceed deg f(x) we have

140
Modulation and Coding Techniques in Wireless Communications
the Hamming weight wt(f) ≥n −deg f (x) ≥n −k + 1. Hence, the minimum distance of RS code
d≥n−k+1, and by the Singleton bound (3.106) we have d = n−k+1.
According to the general deﬁnition a list decoding algorithm for (n, k) RS code can be reformulated
in the following way. For any given received vector y = (y1, . . . , yn) ﬁnd all polynomials p(x) of degree
deg p(x) < k such that p(xs) = ys for at least n−T values xs. We call such p(x) T-consistent. Denote
ˆk = k −1, which is more convenient to use in the formulae given below.
The original breakthrough of Sudan’s algorithm [29] exploits two very simple mathematical facts:
– a homogenous system of linear equations has nontrivial, that is, nonzero solution if the number of
equations is less than the number of variables;
– if a polynomial has more roots than its degree, then this is identically zero polynomial.
Geometrically list decoding of RS code means to ﬁnd all curves y −p(x) = 0, which pass through at
least n −T points (xs, ys) of the “plane” F2
q . Consider instead some general algebraic curve:
Q(x, y) =

qijxi yi
which passes through all n points (xs, ys), that is:
Q(xs, ys) = 0,
1 ≤s ≤n
(3.132)
Deﬁnition 3.3
Deﬁne weighted degree of Q(x, y) as:
deg{1,ˆk} Q(x, y) =
max
{i, j}:Qij̸=0 i + ˆk j
This deﬁnition becomes clear due to the following
Lemma 3.4
If n −T > deg{1,ˆk} Q(x, y) and p(x) is T-consistent, then y −p(x) divides Q(x, y).
Proof. Consider a univariate polynomial g(x) = Q(x, p(x)). The degree of g(x) does not exceed weighted
degree deg{1,ˆk) Q(x, y) of Q(x, y). On the other hand, g(xs) = 0 for every s such that ys = p(xs). Hence,
g(x) has at least n −T roots and under Lemma’s condition it leads to g(x) ≡0. The least means that
(y−p(x))|Q(x, y) or, saying in other words, that p(x) is a root of Q(x, y) considered as a univariate
polynomial ˆQ(y) on y with coefﬁcients from the ring Fq[x].
The next lemma shows that desired Q(x, y) of relatively low weight degree exist.
Lemma 3.5
For any l such that l2 ≥2ˆkn there exists Q(x, y) of weighted degree deg{1,ˆk} Q(x, y) ≤l
satisfying (3.132).
Proof. Consider (3.132) as a system of linear equations for unknown “variables” qij. Namely:

i, j
qij · xi
s · y j
s = 0,
1 ≤s ≤n
(3.133)
Since i + ˆk j ≤l there are
l + 1 “variables” qi,0,
0 ≤i ≤l,
l + 1 + ˆk “variables” qi,1,
0 ≤i ≤l −ˆk,
. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . .. . ..
l + 1 −ˆk[ 1
ˆk ] “variables” qi, [l/ l
ˆk ],
0 ≤i ≤l −ˆk[ 1
ˆk ].

Block Codes
141
Hence, there are totally M variables, where
M = |l/ˆk
ν=0 (l + 1 −ν ˆk) =
"
[ l
k + 1]
#
· (l + 1) −
ˆk [l/ˆk
ν=0 ν =
2
[ l
ˆk + 1]
3
·
2
l + 1 −1
2 ˆk.[ l
ˆk ]
3
> l2
2ˆk . Therefore, if l2
2ˆk > n then the number of unknown vari-
ables is greater than the number of equations and hence, there exist nontrivial, that is, nonzero solution
of (3.132).
Combining these two lemmas obtain the original Sudan algorithm. Namely, for any T and l such that
n−T l and l2 ≥2ˆkn
1) Find a bivariate polynomial Q(x, y) of deg{1,ˆk} Q(x, y) ≤l satisfying (3.132). It can be done by solving
the linear system (3.133), for instance with the help of Gauss elimination procedure.
2) Find all “roots” p(x) of ˆQ(y), that is, all divisors (y −p(x))|Q(x, y).
3) Output only T-consistent roots p(x), that is, those that satisfy d(y, p(x)) ≤T.
The best choice l = [
%
2ˆkn] gives the list decoding algorithm with decoding radius T = n −1 −[
%
2ˆkn].
The main difference between the GS and the original Sudan algorithm is that in the GS algorithm it is
not sufﬁcient to say Q(xi, yi) = 0. It is required that every point (xi, yi) is a singularity of Q. Informally, a
singularity is a point where the curve given by Q(xi, yi) = 0 intersects itself. Then in the ﬁrst phase of GS
algorithm the additional constraints will force us to increase the allowed degree of Q. However, we gain
in the second phase. In this phase we look for roots of Q and now we know that p passes through many
singularities of Q, rather than just points on Q. In such a case we need only half as many singularities as
regular points, and this is where the advantage comes from [9].
The singularities of a bivariate polynomial over a ﬁnite ﬁeld can be deﬁned as follows.
Deﬁnition 3.4
A polynomial Q(x, y) has a singularity of order r at point (α, β) if the “shifted”
polynomial Q(x + α, y + β) has no monomials of ordinary total degree ((1; 1) weighted degree) less
than r.
To calculate the order of Q(x, y) at point (α, β), we need to be able to express Q(x + α, y + β) as
a polynomial in x and y. The following propositions, due to H. Hasse [36], tell us one way to do this
[37].
Proposition 3.1. If Q(x) = 
i
qixi ∈F[x], then for any α∈F, we have:
Q(x + α) =

j
Q j(α)xi
(3.134)
where
Q j(x) =

i

 i
j

qixi−j
(3.135)
The function Qj(x) in the left part of equation (3.135) is called the jth Hasse derivative of Q(x).
Note that (3.134) is Taylor’s series (without reminder) when ﬁeld F has characteristic 0, since in
that case:
Q j(x) = 1
j! · d j
dx j Q(x)

142
Modulation and Coding Techniques in Wireless Communications
Proposition 3.2. Let Q(x, y) = 
i, j
qi, jxi yi ∈F[x, y]. For any (α, β), we have:
Q(x + α, y + β) =

u,v
Qu,v(α, β)xu, yv
(3.136)
where
Qu,v(x, y) =

i, j

 i
u
 
 j
v

qi, jxi−u yi−v
(3.137)
The function Qu,v(x, y) in the left part of (3.137) is called the (u, v)th Hasse (mixed partial) derivative
of Q(x, y).
Proof. Using the binomial theorem, we express Q(x+α, y+β) as a polynomial in x and y:
Q(x + α, y + β) =

i, j
qi, j(x + α)i(y + β) j =

i, j
qi, j
4
u

 i
u

xuαi−u
5 4
v

 j
v

yvβ j−v
5
=

u,v
xu yv
⎛
⎝
i, j

 i
u
 
 j
v

qi, jαi−uβ j−v
⎞
⎠=

u,v
Qu,v(α, β)xu yv
Corollary. A polynomial Q(x, y) has a root of multiplicity (order) r at a point (α, β) iff all its Hasse
derivatives at (α, β) of total order less than r are equal to zero, that is, Qu,v(α, β) = 0 for all u and v such
that 0 ≤u + v ≤r.
Now we can give a formal description of the Guruswami-Sudan algorithm.
The inputs of the algorithm are the code length n, code dimension k, the interpolation points {(xs, ys)},
s = 1 ... n, and the required root multiplicity r.
1. Compute a non-zero polynomial Q(x, y) of minimal possible (1, k −1) weighted degree l such that:
Q j1, j2(xi, yi) =

j′
1≥j1

j′
2≥j2

 j′
1
j1
 
 j′
2
j2

q j′
1, j′
2, x j′
1−j1 y j′
2−j2 = 0,
j1 + j2 < r,
i = 1 . . . n
(3.138)
2. Find all polynomials p(x) ∈GF(q)[x] of degree deg(p(x)) < k such that p is a root of Q, that is, Q(x,
p(x)) = 0 or y −p(x) is a factor of Q(x, y). For each of these polynomials check if p(xi) = yi for at
least t values of i = 1 . . . n, and if so, include p in output list.
Obviously, the algorithm can be executed in time polynomial in n since the underlying problems are
solving the system of linear equations (3.138) and factorization (or, which is even simpler, ﬁnding roots)
of a polynomial. The last problem is not a simple one since we need to factorize bivariate polynomials.
The next two lemmas are generalizations of Lemma 3.4.
Lemma 3.6
If (xi, yi) is an input point of the algorithm, and p(x) is a polynomial such that p (xi) = yi,
then (x −xi)r divides g(x) = Q(x, p(x)).
Proof. Let p′(x) = p(x + xi) −yi. Since p′(0) = 0, p′(x) = xp′′(x) for some polynomial p′′(x).
Let Q(i)(x, y)) = Q(x + xi; y + yi) and:
g′(x) = Q(i)(x, p′(x))
(3.139)

Block Codes
143
Compute g(x) = Q(x, p(x)) = Q(i)(x −xi, p(x) −yi)) = Q(i)(x −xi, p’(x −xi)) = g’(x −xi). Since Q(i)(x,
y) must not have any coefﬁcients of total degree less than r, substitution of p′(x) = xp′′(x) into (3.135)
leads to a polynomial g′(x) divisible by xr. Thus, (x −xi)r divides g(x).
Lemma 3.7
If p(x) is a polynomial of degree less than k such that yi = p(xi) for at least t values of xi
and rt > l = deg{1,ˆk} Q(x, y), (ˆk = k −1) then y −p(x) divides Q(x, y).
Proof. Consider the polynomial g(x) = Q(x, p(x)). Obviously, deg g(x) ≤l = deg{1,ˆk} Q(x, y). In
accordance with Lemma 3.6, for every i such that yi = p(xi), (x −xi)r divides g(x). Therefore,
π(x) =

i:p(xi )=yi
(x −xi)r divides g(x). It follows from deg π(x) ≥rt > l = deg g(x) that g(x) = 0,
which means that y = p(x) is a root of Q(x, y).
The only problem remaining is the selection of such parameters (actually, the only parameter is r) of
the algorithm that the polynomial Q(x, y) does exist. In fact, the only requirement is that the number
of equations in (3.135), which equals to n

r + 1
2

, must be greater than the number of variables (that
is, coefﬁcients in the polynomial), which is at least l2
2ˆk (see Lemma 3.5). It leads to a simple quadratic
inequality. In [9] authors show that:
r = 1 +
:
(k −1)n +
%
((k −1)n)2 + 4(t2 −(k −1)n
2(t2 −(k −1)n)
;
guarantees the existence of polynomial Q(x, y) of small enough degree (rt −1).
Theorem 3.15
The Guruswami-Sudan algorithm returns all p(x) such that p(xi) = yi for at least
n −T > √(k −1)n values of xi.
Proof. If t > √(k −1)n, one can always select r to be large enough to ensure the existence of Q(x, y)
of small degree. By Lemma 3.7 all polynomials of a degree less than k such that yi = p(xi) for at least t
values of xi divide such a polynomial should thus be discovered at the second step of the algorithm.
Since r affects the running time of the algorithm one can set r to be less than is required to handle as
many errors as possible. This will signiﬁcantly reduce the computational complexity at the cost of some
performance degradation.
Now let us consider some developments of the GS algorithm.
One of the serious improvements of the GS algorithm deals with invention of the efﬁcient algorithm
for ﬁnding roots of a bivariate polynomial. It is possible to show [30], that the roots of a bivariate
polynomial can be expressed as roots of a number of univariate polynomials. The algorithm exploiting
this fact is presented below. This algorithm uses as a subroutine a procedure for ﬁnding roots of a
univariate polynomial. The algorithm takes as input a bivariate polynomial Q(x, y) and positive integer
k, and returns as output φ the set of all y-roots of Q(x, y) of degree ≤k. The pseudocode of the
Roth-Ruckenstein algorithm of ﬁnding roots of a bivariate polynomial can be written as follows
RECONSTRUCT(Q(x, y), k, i,φ)
1. Find the largest r such that xr divides Q(x, y)
2. M(x, y) := Q(x, y)/ xr;
3. Find all roots mj of a univariate polynomial M(0, y);
4. for Each root mj
5. do φ[i] := mj;
6. if i = k −1

144
Modulation and Coding Techniques in Wireless Communications
7.
then return φ;
8. else ˆM(x, y) := M(x, xy + m j);
9. RECONSTRUCT ( ˆM(x, y), k, i + 1, φ).
Another natural extension of the GS algorithm is the case of weighted curve ﬁtting. In the GS algorithm
one does not need to make all points to be singularities of the same order. Each point (xi, yi) may be
assigned with an integer weight wi and (3.138) should be modiﬁed as follows:
Q j1, j2(xi, yi) =

j′
1≥j1

j′
2≥j2

 j′
1
j1
 
 j′
2
j2

q j′
1 j′
2x j′
1−j1 y j′
1−j2 = 0,
j1 + j2 < r × wi,
i = 1 . . . n
(3.140)
for some integer r. Again, one can select such parameters of the algorithm (weights wi and r) that the
polynomial Q(x, y) does exist and the second step of the algorithm returns all polynomials p(x): deg p(x)
< k. such that:

i:p(xi )=yi
wi ≥t
(3.141)
In [9] it is shown that t >
<
k n
i=1 w2
i is sufﬁcient to solve this problem. Note, that xi values need NOT
to be distinct ones and there may be as many interpolation points n as one needs provided the number of
constraints is less than the number of coefﬁcients in the polynomial Q(x, y).
This algorithm can be used for the soft decision decoding of Reed-Solomon and some other codes.
In [32] authors suggested an algorithm, which can be used for soft-decision decoding of Reed-Solomon
codes. As input the algorithm accepts a matrix  = [πij] : πij = Pr{yi = α j}, that is, the cells of the
matrix deﬁne a-posteriori probability distribution of each symbol in the received word. The algorithm
presented below computes integer weights mij, i, j = 1 ... n (multiplicity matrix) for the polynomial
reconstruction problem as stated above. The main idea of it is to set greater weights mij for most probable
pairs (xi; yj).
The algorithm must be provided with code parameters n, k, n × n matrix  and a total number of
interpolation points to be generated. The algorithm has not been proved to be optimal (in fact, authors in
[32] prove that the problem of construction of an optimal multiplicity matrix M is NP-hard), however,
with carefully selected parameters it provides signiﬁcant performance gain [38]. The pseudocode of the
algorithm of soft decision decoding of RS code can be presented as follows:
SoftRSDecode(n, k, , s)
1. 
∗: = ;
2. M := 0;
3. while s < 0
4. do
5.
Find a position (i, j) of the greatest entry π ∗
ij in ∗;
6.
π ∗
ij :=
πij
mij+1;
7.
mij := mij + 1;
8.
s: = s −1;
9. Solve the system (3.140) with weights deﬁned by M and ﬁnd a polynomial Q(x, y);
10. Find its roots pi(x) : deg pi(x) < k and corresponding codewords Yi = {y1, . . . , yn}.
11. Select as output the most probable codeword Y = arg maxi
n
k=1

k yik.
One more improvement of the GS algorithm is the Nielsen interpolation algorithm [33, 34]. The algorithm
presented in [33] exploits the structure of the system of linear equations (3.138). Here we describe an
improved version of the algorithm found in [34].

Block Codes
145
The main idea of the algorithm is to split the set of all possible solutions of the interpolation problem
into a number of disjointed classes and iteratively construct an interpolation polynomial of minimal
degree for each class. Finally one can select the smallest one as a solution of the interpolation problem.
Let us introduce lexicographic monomial ordering as:
xαyβ ≤lex xa yb ⇔α < a ∨(α = α ∧β ≤b)
Since the GS algorithm requires construction of an interpolation polynomial having minimal possible
weighted degree, one has to introduce the weighted-degree monomial ordering:
f ≤wdeg g ⇔wdeg(1,k)( f ) < wdeg(1,k)(g) ∨(wdeg(1,k)( f ) −wdeg(1,k)(g) ∧f ≤wdeg g)
Let LT f(x, y) denote the leading term of a polynomial f(x, y) with respect to ≤wdeg monomial ordering.
Then:
f (x, y) ≤wdeg g(x, y) ⇔LT f (x, y) ≤wdeg LTg(x, y)
In order to obtain a non-zero solution of the system (3.138) it is sufﬁcient to consider polynomials of
form Q(x, y) = N
i=0 qimi, where N = n
"r+1
2
#
is the total number of equations in the system and mi are
all distinct monomials xj1yj2 ordered by their weighted degree:
m0 ≤wdeg m1 ≤wdeg . . . ≤wdeg mi ≤wdeg . . .
It can be easily shown that:
wdeg(0,1) mi ≤ρr −1,
i ≤N
where

 ρr
2

≤
n

r + 1
2

k
<

 ρr + 1
2

that is, one can consider only polynomials Q(x, y) with degree in y less than ρr. Let us split the set of poly-
nomials Q(x,y): wdeg(0,1)mi ≤ρr −1 into a number of disjointed classes G j{Q(x, y)|wdeg(0,1)(LTQ) =
j},
k = 0 . . . ρr −1. Let us sequentially process constraints (3.138) and at each step for each class
Gj construct the minimal with respect to wdeg(1;k) polynomial Qj(x, y) ∈Gj satisfying all processed
constraints. Allowed operations are:
1. Add to Qj(x, y) ∈Gj another polynomial γ · Q j0(x, y) Q j0(x, y) ≤wdeg Q j(x, y), Q j0(x, y) ∈G j0,
j ̸= j0,
γ ∈GF(q). Clearly, this operation does not increase the order of Qj(x, y) and keeps it in
the same class Gj .
2. Multiply Q j0(x, y) ∈G j0 by (x −δ),
δ ∈GF(g). This operation introduces the minimal possible
increase in degree of the polynomial but keeps it in the same class.
The pseudocode of the Nielsen interpolation algorithm is as follows:
IterativeInterpolation (n, {(xi, yi), i = 1 . . . n},r, ρr)
1. for i := 0 to ρr−1
2. do Qi(x, y): yt;
3. for i := 1 to n
4. do for β := 0 to r −1
5.
do for α := 0 to r −β −1
6.
do Compute  j := coeff(Q j(x + xi, y + yi), xαyβ),
j = 0 . . . ρr −1
7.
Find j0 = arg min
j:j̸=0 Q j(x, y)
8.
for j̸=j0
9.
do Q j(x, y) := Q j(x, y) −
 j
 j0 Q j0(x, y);
10.
Q j0(x, y) := Q j0(x, y)(x −xi);
11. return min
i
Q j(x, y)

146
Modulation and Coding Techniques in Wireless Communications
The proof of the algorithm can be found in [33].
The complexity of the algorithm can be estimated as follows. At each step (a) evaluation of Hasse
derivatives is performed and (b) polynomials Qj(x, y) are multiplied by scalar values and summed.
From (3.137) one can see that for a bivariate polynomial having s terms O(s) operations are required
to compute its Hasse derivative at any point. Number of terms in polynomials Qs(x, y) grows from 1 at
algorithm startup to O

n

r + 1
2

. Thus, the overall complexity of evaluation of Hasse derivatives
is O
2
n
" r(r+1)
2
#2 ρr
3
= O
2
n2 " n
k
#1/2 r 53
.
Similarly, complexity of manipulations with polynomials at each step is O(ρr, s) and the overall
complexity is O
2
n2 " n
k
#1/2 r 53
.
3.13
LDPC Codes
Low-density parity-check codes (LDPC-codes) were ﬁrst suggested by R. Gallager [39, 40], and were
investigated further in [41, 42, 43, 44]. Traditionally, LDPC-code is deﬁned by its parity-check matrix
H, which has the sparse property, that is, its rows and columns have a low number of non-zero elements
compared to matrix size. More precisely, we deﬁne (n, γ, ρ)-code as a linear code of length n, with
parity-check matrix containing the columns of weight γ and the rows of weight ρ.
The parity-check matrix H contains:
r = nγ/ρ
(3.142)
rows, and therefore, the code rate is lower-limited as [39]:
R ≥1 −γ/ρ
(3.143)
The example of (16, 3, 4)-code is shown in Figure 3.18.
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
Figure 3.18
Example of LDPC matrix

Block Codes
147
Figure 3.19
LDPC Tanner graph
Besides the traditional deﬁnition of a code as a zero-space of its parity-check matrix, LDPC-codes are
often deﬁned by means of the incidence graph of H matrix (the so-called Tanner graph [45]). Such an
incidence graph is a bipartite graph with two sets of nodes: n symbol nodes, which correspond to columns,
and r check nodes, which corresponds to the rows of the parity-check matrix. The edges of the graph are
correspondent to non-zero positions in H. An example of such a graph is presented in Figure 3.19.
The quality of LDPC construction is deﬁned by different characteristics: minimum Hamming distance
d0, the minimum length of the cycle in Tanner graph (girth) g0, weights distributions of rows and columns
in parity-check matrix.
LDPC-codes with the same number of ones in rows and columns are called regular [39, 41], while the
codes with an unequal number of ones are called irregular [46]. Weights distributions can be deﬁned by
means of generating functions λ(x) and ρ(x) [46]:
λ(x) =
dv

i=2
λixi−1
ρ(x) =
dc

i=2
ρixi−1
(3.144)
where λi is the ratio of parity-check columns with weight i, ρi is the ratio of rows in H with weight i,
and dv, dc are the maximum weights of columns and rows, correspondingly. For example in Figure 3.18,
λ(x) = x3, ρ(x) = x4.
Let us deﬁne [46]:

i≥2
λi/i =
1
=
0
λ(x) dx
Then (3.142) and (3.143) can be written as:
r = n
= 1
0
ρ(x) dx
= 1
0
λ(x) dx
(3.145)
R ≥1
= 1
0
ρ(x) dx
= 1
0
λ(x) dx
(3.146)

148
Modulation and Coding Techniques in Wireless Communications
Table 3.5
Properties of regular LDPC codes
LDPC properties
1.
each row of parity-check matrix H contains exactly ρ ones
2.
each column of parity-check matrix H contains exactly γ ones
3.
the number of nonzero positions common to any two columns, no more than 1
Usually, constructing the good irregular codes uses probability methods, analysis of such codes is made
in asymptotic, while the regular constructions are based on the objects with known properties, and can be
analyzed using these properties. Suitably chosen, weights distributions of irregular codes can give gain
especially with low SNRs (in AWGN channel), when the quality of the code is deﬁned by its average
characteristics. By increasing SNR, the distance properties of the code become determinative in the error
probability, and here the gain can be obtained using regular constructions, which allow analyzing their
minimum distance, and to construct codes with better spectral properties.
3.13.1
LDPC Constructions
In this section the review and description of some LDPC constructions are presented. These LDPC
constructions are those that are well known at the moment and give the lower error probability in the
AWGN channel.
The following characteristics can be selected to compare different constructions:
1. minimum distance d0;
2. girth g0;
3. ﬂexible selection of parameters: code length n and rate R;
4. error probability in AWGN channel.
The basis of our consideration is the regular constructions. The properties of regular constructions are
presented in Table. 3.5. Additional property 3 assures that the girth g0 is greater than 4.
We shall consider the following LDPC constructions: Euclidean-geometry codes (EG-LDPC), codes
based on Reed-Solomon codes (RS-LDPC), generalized Gilbert codes based on Vandermonde matrix
(W-LDPC), PEG construction. All these constructions except the latter are regular.
3.13.1.1
LDPC codes based on ﬁnite geometries
Error-correcting codes based on ﬁnite geometries: projective geometry PG or Euclidean geometry EG,
were described in [5, 47]. However, as low-density codes these codes were also considered in [48, 49],
and compare to other known regular LDPC constructions these codes based on ﬁnite geometries show
good performance in AWGN channel.
The drawback of these constructions is their inﬂexibility in parameters selection, which is the conse-
quence of ﬁnite geometries properties. The decoding of LDPC codes based on ﬁnite geometries can be
done by the majority-logic decoder [47, 50, 51, 52] with hard or soft decisions. Besides, any common
LDPC decoding procedure is suitable for decoding these codes (see also Section 3.13.2).
Here we describe the constructions of Euclidean-geometry low-density codes and give their known
basic characteristics and results.
Euclidean-geometry codes are deﬁned as incidence system of geometry EG(m, q), q = ps. Since the
number of ones in parity-check matrix of Euclidean-geometry code is small compared to matrix size,
this code can be considered as LDPC-code.

Block Codes
149
points
lines
HEG =
Figure 3.20
Parity-check matrix of EG-code
The LDPC-code based on Euclidean geometry with parity-check matrix HEG, is constructed in the
following way. The rows of parity-check matrix correspond to lines in Euclidean geometry, while the
columns correspond to points in EG(m, ps). The elements of HEG are deﬁned from incidence vectors
of Euclidean geometry lines (Figure 3.20):
HEG(i, j) =
 1, if point j is on the line i,
0 otherwise
(3.147)
The parity-check matrix HEG has:
n = qm
(3.148)
columns and:
r = qm−1(qm −1)/(q −1)
(3.149)
rows. Each column contains:
γ = (qm −1)/(q −1)
(3.150)
ones, and each row contains:
ρ = ps
(3.151)
ones (all parameters follow from the properties of Euclidean geometry, see (3.A1)-(3.A5)).
Usually, the Euclidean-geometry codes with p = 2, not including zero point, are considered [48, 49].
Such codes are sometimes called the EG-codes of type 0, and are cyclic codes [2, 47] with the parameters:
n = 2ms −1
r = (2(ms−1)s −1)(2(ms) −1)/(2s −1)
The number of information symbols of such codes is estimated in [53].
Besides deﬁning the parity-check matrix as in Figure 3.20, the EG-code with parity-check matrix
transposed to (3.147) can be considered. Then the rows are correspondent to geometry points, the
columns to geometry lines. In both cases the geometry properties and (3.148)–(3.151) provide the
required characteristics of regular LDPC-code, formulated in Table 3.5:
1. each row contains ρ ones;
2. each column contains γ ones;
3. any two columns have no more than one non-zero position in common (since only one line can be
passed through two points);
4. any two rows have no more than one non-zero position in common (since two lines intersect at no
more than one point).

150
Modulation and Coding Techniques in Wireless Communications
Additional property 4 means that the code with the parity-check matrix HT
EG is also a regular LDPC-code
satisfying all required parameters.
Since the columns of parity-check matrix (3.147) have no more than one non-zero position in common,
any γ columns of parity-check matrix are linearly independent, and hence can not form the zero syndrome.
The minimum distance of the code with parity-check matrix (3.147) is estimated as:
d0 ≥γ + 1
(3.152)
The girth of EG-LDPC codes is:
g0 = 6
3.13.1.2
Construction Based on Reed-Solomon Codes
One more scheme based on the incidence system was suggested in [54]. While the combinatorial objects:
ﬁnite geometries, were used for preceding construction, here the words of Reed-Solomon code are used.
The code parameters are selected in such a way to ensure the properties of Table 3.5.
Let us consider the Reed-Solomon codes (RS-codes) over GF(q). RS-codes are the MDS codes, and
therefore they have minimum distance dRS = n −k + 1, where n = q −1 is code length, k is the number
of information symbols. Shortening of the RS-code on n −ρ information symbols gives (ρ, 2, ρ −1)-
code C p of length ρ with two information symbols. All non-zero code words of this code have weight ρ
or ρ −1.
Let us choose codeword a of weight ρ and form the sub-space of the code:
C(1)
ρ
= {βa : β ∈GF(q)}
The set C(1)
ρ consists of q vectors, and each non-zero vector from C(1)
ρ has weight ρ, and each two vectors
differ in all positions.
Let us construct the cosets C(1)
ρ , . . . , C(q)
ρ of space Cρ, based on subspace C(1)
ρ . Any two vectors in any
coset differ in all positions, two vectors from different cosets differ in ρ −1 or ρ positions.
The constructed cosets give the base for the incidence system, from which the parity-check matrix
HRS-LDPC of LDPC code is constructed. The parity-check matrix consists of γ horizontal stripes-
submatrices, γ ∈{1, . . . , q}, and has a form:
HRS–LDPC =
⎡
⎢⎢⎣
H(1)
H(2)
· · ·
H(r)
⎤
⎥⎥⎦
(3.153)
where H(t) is deﬁned by coset C(t)
p as follows. Let a(t)
j (s) be the j-th symbol of s-th vector from the set
C(t)
ρ , j ∈{0, . . . , q −1}, s ∈{1, . . . , q}. Let c(α) be the incidence vector of ﬁeld element α ∈GF(q),
that is:
c j(α) =
 1,
if j = α
0,
otherwise
(3.154)
Then H(t) can be deﬁned as:
H(t) =
⎡
⎢⎢⎢⎣
c(α(t)
0 (1))
c(α(t)
1 (1))
· · ·
c(α(t)
q−1(1))
c(α(t)
0 (2))
c(α(t)
1 (2))
· · ·
c(α(t)
q−1(2))
· · ·
· · ·
· · ·
· · ·
c(α(t)
0 (q))
c(α(t)
1 (q))
· · ·
c(α(t)
q−1(q))
⎤
⎥⎥⎥⎦
(3.155)

Block Codes
151
or, in other words, it follows from (3.154) and (3.155) that elements of H(t) are:
H(t)(i, j) =

1,
if α(t)
⌊j/q⌋(i) ≡j mod q
0,
otherwise
(3.156)
It follows from the properties of shortened RS-code C p, cosets C(t)
p and construction method (3.153)-
(3.156) that if α(t)
⌊j/q⌋≡j mod q then LDPC-code deﬁned by the parity-check matrix HRS-LDPC has the
properties formulated in Table 3.5.
In [54] the estimate of minimum distance is given:
d0 ≥
 γ + 1,
if γ is odd
γ + 2,
if γ is even
(3.157)
which is the same estimate as for ﬁnite-geometries constructions relative to the weight γ of columns in
parity-check matrix. This estimation is also based on the number of orthogonal parity-checks. In practice
the true minimum distance of RS-LDPC code can be much higher than the estimate (3.157).
The parameters of RS-LDPC codes are rather ﬂexible. However, there are no known expressions for
the rates of RS-LDPC codes.
3.13.1.3
Gilbert Codes and Their Generalizations
The Gilbert codes are low-density parity-check codes (LDPC-codes). They were suggested by Gilbert
[55] to correct error bursts. The burst-correcting capability of these codes was considered in [47, 56, 57],
where the estimation of maximal correctable burst length was obtained.
A Gilbert code is deﬁned by its parity-check matrix Hl:
Hl =
 Im
Im
Im
. . .
Im
Im
C
C2
. . .
Cl−1

(3.158)
where Im is (m × m)-identity matrix, C is the (m × m)-matrix of cyclic permutation:
C =
⎡
⎢⎢⎢⎢⎣
0
0
0
. . .
0
1
1
0
0
. . .
0
0
0
1
0
. . .
0
0
. . .
. . .
. . .
. . .
. . .
. . .
0
0
0
. . .
1
0
⎤
⎥⎥⎥⎥⎦
(3.159)
where l ≤m [56]. Clearly, a Gilbert code is (2, l) regular LDPC-code with the γ = 2 ones in column
and ρ = l ones in row. The code length is n = ml, the number of redundant symbols is estimated as
r = 2m −1 [56].
The minimum distance d0 of Gilbert code is connected with girth g0:
d0 = g0/2
(3.160)
The spectral and distance properties of Gilbert codes are estimated using the following statements.
Theorem 3.16
Let Hl be the matrix of (3.158), Zℓ= {0, 1, . . . ℓ−1} be the set of residues modulo
ℓ−1. Then, if the sets of integers {ai}, {bi} such that equation:
ω−1

i=0
(−1)i(ai −bi) = 0 mod m

152
Modulation and Coding Techniques in Wireless Communications
holds, where:
ai ∈Zℓ,
bi ∈Zℓ,
a0 ̸= b0,
ai ̸= ai−1,
aω−1 ̸= bω−1,
bi ̸= bi−1
then the code with parity-check matrix Hl contains the codeword of weight 2ω.
Theorem 3.17
The minimum distance and girth of Gilbert code with ℓ≥3 are:
d0 = 4,
g0 = 8
As follows from Theorem 3.17, the Gilbert code has very low minimum distance, and hence, cannot be
used to correct the independent errors. However, the generalizations of Gilbert codes can be deﬁned as
follows. Consider the parity-check matrix:
Hs,l =
⎡
⎢⎢⎢⎢⎢⎣
Im
Im
Im
. . .
Im
C0
C1
C2
. . .
Cl−1
Ci(3)
0
Ci(3)
1
Ci(3)
2
. . .
Ci(3)
l−1
. . .
. . .
. . .
. . .
. . .
Ci(s)
0
Ci(s)
1
Ci(s)
2
. . .
Ci(s)
l−1
⎤
⎥⎥⎥⎥⎥⎦
(3.161)
where Hs,l is s × l-matrix, i(k)
j
∈{0, . . . , m} is the degree of the cyclic permutation matrix C in j-th
block of k-th stripe. Since one of parameters of LDPC-code is the girth, the numbers i(k)
j
of any stripe
k should not repeat. Then the set {i(k)
j
: j = 0, . . . , ℓ−1} is deﬁned by the permutation of different
residues modulo m.
Construction (3.161) can be the basis for deﬁning regular LDPC codes. Notice that not only the cyclic
permutation matrix C can be used as a block, but any generator of the cyclic group of order not less than
l as well.
As an example of such construction consider Hs,l, where the degrees of cyclic permutation matrix can
be selected corresponding to Vandermonde matrix [2, 47].
In this case we get (γ, ρ) LDPC-code with the parity-check matrix:
HV =
⎡
⎢⎢⎣
Im
Im
. . .
Im
Im
C
. . .
Cρ−1
. . .
. . .
. . .
. . .
Im
Cγ −1
. . .
C(γ −1)(ρ−1)
⎤
⎥⎥⎦
(3.162)
With m prime there is no column having more than one non-zero position in common in this kind of
matrix, and the minimum distance of this code can be estimated as:
γ + 1 ≤d0 ≤2m
(3.163)
The upper bound of minimum distance does not depend on parameters γ and ρ. If we construct the
code with such minimum distance, this means that in the given (γ, ρ)-ensemble we provide minimum
distance increasing linearly from code length, increasing only m. This task is perspective.
3.13.1.4
PEG Construction
In [58] the empiric procedure is suggested, that constructs the Tanner graph maximizing the girth g0.

Block Codes
153
for j=0 to n−1 do
begin
for k=0 to ds j −1 do
begin
if k=0
E0
s j ←edge(ci s j), where E0
s j is the ﬁrst edge incident to Sj and ci is one check node such that
it has the lowest check degree under the current graph setting ES0 ∪Es1 ∪
∪
. . .
Esj−1.
else
expanding a tree from symbol Sj up to depth
under the current graph setting such that NSj = ∅
but N ⇓1
Sj
= ∅, or the cardinality of NSj stops increasing but is less than m, then Ek
s j ←
edge(ci, Sj), where Ek
Sj is the k-th edge incident to Sj and ci is one check node picked from the
set NSj having the lowest check-node degree.
end
end
Figure 3.21
PEG construction
PEG construction based on pre-calculated weight distributions of symbol and check nodes in Tanner
graph, for example, using “density evolution” procedure. However, the algorithm can use any other
distribution as well, including regular distribution.
The algorithm of the constructing graph with given λ(x) and ρ(x) bases on iterative edge-by-edge
steps, maximizing local girth for given nodes. The result could be in regular or irregular form, depending
on weights distribution. In [58] the lower bounds on minimum distance and girth for PEG codes are
obtained.
In Figure 3.21 the procedure of constructing the Tanner graph is presented [58]. Let Tanner graph
consist of n symbol nodes vi, 1 ≤i ≤n, and r check nodes c j, 1 ≤j ≤r. Let dvi , dc j be the degree
of symbol node vi and check node c j, correspondingly, where node degree means the number of edges
incident to it (this value is deﬁned by weights distributions λ(x) and ρ(x)), Evi is the set of edges incident
to symbol node vi, N ℓ
vi is the set of check nodes that can be reached from symbol node vi by ℓedges
or less, N ℓ
vi is the complementary set of N ℓ
vi , in other words, N ℓ
vi ∪N ℓ
vi = Vc, where Vc is the set of all
check nodes in the graph.
In [58] the estimations of girth g0 and minimum distance d0 of PEG codes are presented. Let dv and
dc be the maximal weights of symbol and check nodes in the Tanner graph, respectively. Then the girth
is lower bounded as:
g0 ≥2([t] + 2
where
t =
log(rdc −rdc
dv −r + 1)
log((dv −1)(dc −1)) −1
Let us consider Tanner graphs with regular symbol nodes, having the constant degree dv, and let the
graph have the girth g0. Then the minimum distance of the code deﬁned by such a graph is estimated as:
d0 ≥
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
1 + dv
"
(dv −1)⌊(g0−2)/4⌋−1
#
dv −2
if g0/2 is odd
1 + dv
"
(dv −1)⌊(g0−2)/4⌋−1
#
dv −2
+(dv −1)⌊(g0−2)/4⌋if g0/2 is even

154
Modulation and Coding Techniques in Wireless Communications
In PEG construction the main attention is given to the absence of short cycles in the Tanner graph. How-
ever, in practice it is not clear how the presence of short cycles can degrade the decoder’s performance.
In [59] the presence or absence of short cycles is not considered a problem, but how these cycles are
connected to each other. The idea of this is that if there are many edges leading from nodes that form
a short cycle, then the decoder can work well even in the presence of short cycles. The parameter ACE
is suggested, and the procedure of constructing the code, maximizing ACE is considered in [59]. As a
result, the irregular codes with improved performance with high SNRs were obtained.
3.13.2
Decoding of LDPC Codes
Decoding algorithms for low-density parity-check (LDPC) codes were ﬁrst introduced by Gallager in
1963 [39] both for hard and soft decision cases (bit-ﬂip and belief propagation algorithms, respectively).
The soft-decision belief propagation iterative algorithm can operate with both probabilities and log-
likelihood ratios and it gives good results in AWGN channel as it is shown in [39, 41, 60].
3.13.2.1
Decoding in Discrete Channel (Bit-Flip Decoding)
The idea of decoding in discrete channel (hard-decision decoding) is that for some received symbol
ci any other symbol can be no more than in one parity-check of symbol ci, because of parity-check
matrix sparsity and absence of short cycles in the Tanner graph. In other words, the set of parity-checks
is orthogonal on symbol ci [47, 2, 52]. Then the columns of parity-check matrix have less non-zero
positions in common, and hence, unsatisﬁed parity-check (syndrome position) more probably consists of
one erroneous symbol, than of the sum of three or more. This leads to the following decoding procedure.
1. Calculate syndrome from the received word on zero-th iteration, or from the result of the preceding
iteration. If the syndrome is zero, or the maximum number of iterations is reached, the procedure is
ﬁnished.
2. Calculate the number ℓi of unsatisﬁed parity-checks for each symbol ci.
3. Flip the symbol or symbols with the largest ℓi.
4. Go to step 1.
The scheme of decoding algorithm is presented in Figure 3.22. The algorithm is processed iteratively,
until the codeword is obtained, or the maximum number of iterations is reached.
The complexity of described decoding procedure is very low, because for every bit the syndrome
update is needed, the update complexity consists of few XOR complexities. This decoder also has simple
implementation.
3.13.2.2
Decoding in Soft Channel (Belief Propagation Decoding)
For decoding in soft channels (soft-decision decoding) the task is to maximize the conditional probability
P(Cm/Y), where Cm is the codeword, and Y is the block of symbols observed on the channel output.
In the case of LDPC codes, decoder gives symbol-by-symbol decisions, and in fact, to make the
decision on particular symbol, calculates the likelihood ratio:
LR(ci) = P(ci = 1|Y)
P(ci = 0|Y)
(3.164)
where ci is code bit in position i. Instead of the likelihood ratio (3.164) it is more convenient to use the
log-likelihood ratio:
LLR(ci) = log P(ci = 1|Y)
P(ci = 0|Y)
(3.165)
Values of LR or LLR are often called the symbol reliability.

Block Codes
155
hard decision
vector
syndrome calculation
syndrome
flip every bit, recalculate syndrome
syndrome weight
test codeword
yes,
end of decoding
weight
decreased?
flip one bit back
no
yes
no
Figure 3.22
Hard decoding of LDPC-code
Algorithm “belief propagation”, the standard procedure for decoding LDPC-codes, suggested by
Gallager [39, 61, 62], can be described as follows. The LLRs of symbols of received “soft” word is set
to correspondent symbol nodes of Tanner graph. Then the decoder processes iterations, each consisting
of two stages. During the ﬁrst, “vertical” stage, each i-th symbol node, 1 ≤i ≤n, sends to each incident
check node j, 1 ≤j ≤γ , some value, called “message”, that depends on all values received by i-th symbol
node from all incident check nodes besides j-th.
The second, “horizontal” stage, operates similarly, the only difference is that the messages are calcu-
lated and sent from check nodes to symbol nodes. The one iteration of decoder is shown in Figure 3.23.
Here the message ﬂow between nodes v1 and c2 during one iteration is shown. The function f c denotes
message calculation by check node, f v by symbol node.
After each iteration the algorithm makes a hard decision on every symbol, corresponding to the sign
of current message in symbol node. If an obtained hard vector is a code word, or the maximum number
of iterations is reached, the algorithm stops. The scheme of algorithm is presented in Figure 3.24.
The maximal number of decoding iterations is selected depending on code length, required error
probability and decoding complexity requirements. It is shown in [44] that log n iterations can be enough
for decoding that gives complexity n log n.

156
Modulation and Coding Techniques in Wireless Communications
v1
“Vertical” step
v2
v3
v4
c1
c2
c3
c4
v5
v6
m32
(  –2)
m32
(  –2)
m21
(  –1)
m52
(  –2)
m52
(  –2)
= f c ( 
,          )
v1
“Horizontal” step
v2
v3
v4
c1
c2
c3
c4
v5
v6
m11
(  –1)
m41
(  –1)
m11
(  –1)
m12
(  )
m41
(  –1)
= f v ( 
,          )
Figure 3.23
Iteration of LDPC-decoder
soft decision
vector
check bits update
updated soft
decision vector
message bit update
updated soft vector,
hard decision vector
test codeword
no, next iteration
yes,
end of decoding
Figure 3.24
Soft decoding of LDPC-code

Block Codes
157
In practice, the maximal number of iterations performed by decoder is the trade-off between the
decoding speed and the error probability requirements. Note that different LDPC constructions may
have different convergence speed. The convergence speed of iterative decoder for a given construction
is one of the parameters for selecting LDPC-code in a particular communication system.
The complexity of belief propagation decoding is higher than the complexity of hard bit-ﬂip decoding
due to sophisticated probabilities update and ﬂoat number operations. If the belief propagation decoder
works in log-likelihood domain it requires LOG() calculation or making a lookup table to avoid exact
LOG() calculation.
More detailed information on LDPC codes constructions and decoding algorithms can be found in
[63].
References
[1] Shannon, C.E., A Mathematical Theory of Communication, Bell System Tech, 1948.
[2] Peterson, W.W., Weldon, E.J., Error. Correcting Codes, MIT Press, 1972.
[3] Birkhoff, G., Mac Lane, S., A Survey of Modern Algebra, Macmillan, New York, 1941.
[4] Gallager, R.G., Information Theory and Reliable Communication. John Wiley, 1968.
[5] MacWilliams, F. J., Sloan, J.J., The Theory of Error-Correcting Codes, North-Holland, Amsterdam, 1977.
[6] Evseev, G.S., Complexity of decoding for linear codes, Probl. Inform. Transm., vol. 19, no. 1, pp. 3–8 (in
Russian) and pp. 1–6 (English translation), 1983.
[7] Tsfasman, M.A., Vladuts, S.G., Algebraic-Geometry Codes, Kluwer, Dordrecht, 1991.
[8] Tsfasman, M.A., Vladuts, S.G., Zink, T., Modular curves, Shimura curves, and Goppa codes better than
Varshamov-Gilbert Bound, Math. nachr., vol 109, pp. 21–28, 1982.
[9] Guruswami, V., Sudan, M., Improved decoding of Reed–Solomon codes and algebraic geometry codes, IEEE
Trans. Inform. Theory, vol. 45, no. 6, pp. 1757–1767, September 1999.
[10] Bassalygo, L.A, New upper bounds for error-correcting codes, Problems of Information Transmission, no. 4,
pp. 41–44, 1965.
[11] Shannon, C.E., Gallager, R.G., Berlekamp, E.R., Lower bounds to error probability for coding on discrete
memoryless channels, Info. and Control, no. 10, pp. 65–103 and 522–552, 1967.
[12] McEliece, R.J., Rodemich, E.R., Rumsey, H.C. Jr., Welch, L.R, New upper bounds on the rate of a code via
Delsarte – MacWilliams inequalities, IEEE Trans. Inform. Theory, vol. 23, no. 2, pp. 157–166, March 1977.
[13] Gordon, D.M., Minimal permutation sets for decoding the binary Golay code, IEEE Trans. Inform. Theory, vol.
IT-28, May 1982, pp. 541–543.
[14] Wolfmann, J., A permutation decoding of the (24, 12, 8) Golay code, IEEE Trans. Inform. Theory, vol. IT-29,
Sept. 1983, pp. 748–751.
[15] Krouk, E.A., Fedorenko, S.V., Decoding by generalized information sets, Probl. Inform. Transm., vol. 31, no.
2, pp. 54–61 (in Russian) and pp. 134–139 (English translation), 1995.
[16] Barg, A., Complexity issues in coding theory, in Handbook of Coding Theory, vol. 1, V. Pless and W. C.
Huffman, Eds. Amsterdam, The Netherlands: Elsevier Science, 1998, pp. 649–754.
[17] Dumer, I., Two decoding algorithms for linear codes, Probl. Inform. Transm., vol. 25, no. 1, pp. 24–32 (in
Russian) and pp. 17–23 (English translation), 1989.
[18] Dumer, I., On minimum distance decoding of linear codes, in Proc. 5th Joint Soviet–Swedish Int. Workshop
Information Theory (Moscow, USSR, 1991), pp. 50–52.
[19] Hamming, R.W., Error Detecting and Error Correcting Codes, Bell Syst. Tech. J., April 1950, vol. 29,
pp. 147–160.
[20] Best, M.R., Brouwer, A.E., Triply shortened binary Hamming code is optimal. Discr. Math., vol. 17,
pp. 235–245, 1977.
[21] Kabatyanskii, G.A., Panchenko, V.I., Unit-sphere packings and coverings of the Hamming space, Problems of
Information Transmissions, v. 24, n. 4, pp. 3–16, 1988.
[22] Hamalainen, H., Two new binary codes with minimum distance three, IEEE on Information Transmission, vol
34, 1988, p. 885.
[23] Varshamov, R.R., Tenengolts, G.M., Codes which correct single asymmetric error, Automation and Remote
Control (in Russian), v. 26, n. 2, pp. 286–290, 1965.

158
Modulation and Coding Techniques in Wireless Communications
[24] Panchenko, V.I., Packings and coverings over an arbitrary alphabet, Problems of Information Transmissions,
v. 24, n. 4, pp. 93–96, 1988.
[25] Reed, I.S., Solomon, G., Polynomial codes over certain ﬁnite ﬁelds, J. SIAM, 8(1960), pp. 300–304.
[26] Gevorkian, D.N., Avetisian, A.M., Tigranyan, V.A, On the construction of codes correcting two errors in
Hamming metric over Galois ﬁelds, in Vychislitelnia Technika, Kuibishev, no.3, 1975, pp. 19–21 (in Russian).
[27] Dumer, I.I., Zinoviev, V.A., New maximal code over the Galois ﬁeld GF(4), Problems of Information Transmis-
sion, v. 14, n. 3, 1978, pp. 24–34.
[28] Dumer, I.I., Nonbinary double-error-correcting codes designed by means of algebraic varieties, IEEE Trans.
on of Information Theory, v. 41, n. 6, 1995, pp. 1550–1560.
[29] Sudan, M., Decoding of Reed–Solomon Codes beyond the Error-Correction Bound, J. Complexity, v. 13, 1997,
pp. 180–193.
[30] Roth, R., Ruckenstein, G., Efﬁcient decoding of Reed-Solomon codes beyond half the minimum distance. IEEE
Transactions on Information Theory, 46(1), 2000, pp. 246–257.
[31] K¨otter, R., Fast Generalized Minimum-Distance Decoding of Algebraic-Geometry and Reed–Solomon Codes,
IEEE Trans. Inform. Theory, v. 42, n. 3, May 1996, pp. 721–736.
[32] K¨otter, R., Vardy, A., Algebraic soft-decision decoding of Reed-Solomon codes in Proceedings of 38th Annual
Allerton Conference on Communication, Control and Computing, 2000.
[33] Nielsen, R.R., Hoholdt, T., Decoding Reed-Solomon codes beyond half the minimum distance. In Proceedings
of the International Conference on Coding Theory and Cryptography, Mexico 1998. Springer-Verlag, 1998.
[34] Nielsen, R.R., List decoding of linear block codes. PhD thesis, Technical University of Denmark, 2001.
[35] Elias, P., List decoding for noisy cannels, Tech. Report 335, Research Lab. of Electronics, MIT, 1957.
[36] Hasse, H., Theorie der h¨oheren Differentiale in einem algebraishen Funcktionenk ¨orper mit vollkommenem
Konstantenk¨orper nei beliebeger Charakteristic, J. Reine. Ang. Math., vol. 175, 1936, pp. 50–54.
[37] McEliece, R.J., The Guruswami-Sudan Decoding Algorithm for Reed-Solomon Codes, in IPN Progress Report,
May 2003.
[38] Gross, W.J., Kschischang, F.R., Koetter, R., Gulak, P., Simulation results for algebraic soft-decision decoding
of Reed-Solomon codes. In Proceedings of the 21st Biennial Symposium on Communications, June 2002,
pp. 356–360.
[39] Gallager, R.G., Low Density Parity Check Codes, Cambridge, MA: MIT Press, 1963.
[40] Gallager, R.G., Low Density Parity Check Codes. IRE Transactions on Information Theory, Jan. 1962.
[41] MacKay, D., Good error correcting codes based on very sparse matrices. IEEE Transactions on Information
Theory, 45, Mar. 1999.
[42] MacKay, D., Neal, R., Near Shannon Limit Performance of Low-Density Parity-Check Codes. IEEE Transactions
on Information Theory, 47(2), Feb. 2001.
[43] Richardson, T.J., Urbanke, R.L., The capacity of low-density parity-check codes under message-passing decod-
ing. IEEE Transactions on Information Theory, 47(2), Feb. 2001.
[44] Zyablov, V.V., Pinsker, M.S., Estimation of the error-correction complexity for Gallager low-density codes.
Problemy Peredachi Informatsii, 11(1):18–28, January-March 1975.
[45] Tanner, M., A recursive approach to low complexity codes. IEEE Transactions on Information Theory,
IT(27):533–547, Sept. 1981.
[46] Richardson, T.J., Urbanke, R.L., Shokrollahi, M.A., Design of capacity-approaching irregular low-density
parity-check codes. IEEE Transactions on Information Theory, 47(2), Feb. 2001.
[47] Blahut, R., Theory and Practice of Error Control Codes. Addison-Wesley, 1984.
[48] Kou, Y., Lin, S., Fossorier, M.P.C., Construction of low-density parity-check codes: A geometric approach. In
Proc. 2nd Int. Symp. Turbo Codes and Related Topics, pp. 137–140, Brest, France, Sept. 2000.
[49] Kou, Y., Lin, S., Fossorier, M.P.C., Low-density parity-check codes based on ﬁnite geometries: a rediscovery
and new results, IEEE Trans Inf. Theor., v. 47, n. 7, Nov 2001.
[50] Chen, C.L. On majority-logic decoding of ﬁnite geometry codes. IEEE Transactions on Information Theory,
IT-17(3), May 1971, pp. 332–336.
[51] Kasami, T., Lin, S., On majority-logic decoding for duals of primitive polynomial codes. IEEE Transactions on
Information Theory, IT-17(3), May 1971, pp. 322–331.
[52] V. Kolesnik and E. Mironchikov. Decoding of cyclic codes (In Russian). M.: Svyaz, 1968.
[53] Lin, S., On the number of information symbols in polynomial codes. IEEE Transactions on Information Theory,
18(6), Nov. 1972, 785–794.

Block Codes
159
[54] Djurdjevic, I., Xu, J., Abdel-Ghaffar, K., Lin, S., A class of low-density parity-check codes constructed based
on Reed-Solomon codes with two information symbols, IEEE Communication Letters, vol. 7, NO. 7, Jul 2003.
[55] Gilbert, E.N., A problem in binary encoding. In Proceedings of the Symposium in Applied Mathematics, v. 10,
1960, pp. 291–297.
[56] Krouk, E.A., Semenov, S.V., Low-density parity-check burst error-correcting codes. In 2 International Workshop
“Algebraic and combinatorial coding theory”, Leningrad, 1990, pp. 121–124.
[57] Zhang, W., Wolf, J., A class of binary burst error-correcting quasi-cyclic codes. IEEE Transactions on Infor-
mation Theory, IT-34, May 1988, pp. 463–479.
[58] Hu, X.Y., Eleftheriou, E., Arnold, D-M., Regular and Irregular Progressive Edge-Growth Tanner Graphs. IBM
Research, Zurich Research Laboratory, 2003.
[59] Tian, T., Jones, C., Villasenor, J., Wesel, R., Construction of Irregular LDPC Codes with Low Error Floors. In
Proceedings of ICC’2003, Anchorage, Alaska 11–15 May 2003, pp. 3125–3129.
[60] Fossorier, M.P.C., Mihaljevic, M., Imai, H., Reduced complexity iterative decoding of low-density parity-check
codes based on belief propagation. IEEE Transactions on Communications, 47(5), May 1999.
[61] Lechner, G., Convergence of Sum-Product Algorithm for Finite Length Low-Density Parity-Check Codes. Winter
School on Coding and Information Theory, Monte Verita, Switzerland, Feb. 24–27, 2003.
[62] Lucas, R., Fossorier, M.P.C., Kou, Y., Lin, S., Iterative decoding of one-step majority logic decodable codes
based on belief propagation. IEEE Trans. Commun., 48(6), June 2000, pp. 931–937.
[63] Kabatiansky, G., Krouk, E., Semenov, S., Error Correcting Coding and Security for Data Networks, J. Wiley,
2005.


4
Convolutional Codes and
Turbo-Codes
Sergei Semenov1, and Andrey Troﬁmov2
1Nokia Corporation, Finland
2St. Petersburg State University of Aerospace Instrumentation, Russia
4.1
Convolutional Codes Representation and Encoding
The general structure of the convolutional encoder is represented in Figure 4.1. Every time moment the
block of k symbols is fed to the input of the encoder. The encoder has the memory, which keeps the values
of not more than ν −1 previous input blocks (k · (ν −1) symbols). The encoder forms n output symbols
at a time. The block of n output symbols depends on k · ν input symbols and each output symbol is the
linear combination of information symbols. The number k is called the number of information symbols,
the number n is called the number of encoded symbols and the number ν is known as the constraint
length of the code. The value k

n is called the code rate. The corresponding convolutional code usually
is denoted as (n, k, ν) code. Note that in some literature the used notation is (n, k, ν −1).
The encoder works as follows: The input data block of k symbols is fed to k shift registers (each
symbol to its own register) with the help of demultiplexer. Each shift register consists of no more than
ν −1 delay elements. The outputs of the delay elements are multiplied by some ﬁxed coefﬁcients g(l)
i j
(i = 0, . . . , n −1; j = 0, . . . , k −1; l = 0, . . . , ν −1). These weighted outputs are distributed by n
sets and each set generates the output symbol just by adding the members of the set. All multiplications
and additions are executed over ﬁeld K. Thus, the output block of n encoded symbols corresponds
to input data block of k symbols. After encoding, the n output symbols are multiplexed into a single
sequence. Note that each encoded symbol is obtained with the help of the linear combination of the
outputs of the delay elements.
It is obvious that the output symbol depends on the input symbol and on the contents of the shift
registers. In this sense a convolutional code is close to a block code. However, in block coding a code
block of length n depends on k current data symbols; so code blocks formed independently of each
other. In convolutional coding code block of length n depends on current data block of length k and on
ν previous data blocks. Thus, any output coded n-tuple depends on previous ones. Unlike a block code
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

162
Modulation and Coding Techniques in Wireless Communications
)
0
(
01
g
)1(
01
g
)1
(
01
−
ν
g
)
0
(
1,1
−
n
g
)1(
1,1
−
n
g
)1
(
1,1
−
−
ν
n
g
)
0
(
00
g
)
0
(
1
0 −
k
g
)1
(
1
0 −
k
g
)1(
00
g
)
0
(
1
1 −
−k
n
g
)
0
(
0,1
−
n
g
)1(
0,1
−
n
g
)1(
1
1 −
−k
n
g
)1
(
1
0
−
−
ν
k
g
)1
(
00
−
ν
g
)1
(
1
1
−
−
−
ν
k
n
g
)1
(
0,1
−
−
ν
n
g
....
....
....
....
....
....
....
....
....
...
...
...
.................................................................
.....
.....
0
1
k-1
0
n-1
1
−
ν
I
n
p
u
t
s
y
m
b
o
l
s
E
n
c
o
d
e
d
s
y
m
b
o
l
s
Figure 4.1
A general convolutional encoder

Convolutional Codes and Turbo-Codes
163
Input 0
Input 1
Output 0
Output 1
Output 2
Figure 4.2
A (3, 2, 3) binary convolutional encoder
that has a ﬁxed word length, a convolutional code has no particular word length. We can say that a word
of a convolutional code is a semi-inﬁnite sequence.
We can describe the encoder of the convolutional code with the help of its impulse response, that is the
output of the encoder obtained after feeding the ‘1’ to the encoder input and assuming that the encoder
starts from the zero state. It is easy to verify that if the ‘1’ is fed to the jth input then the output sequence
(or impulse response) from the ith output will be represented by the sequence of coefﬁcients gi j = g(l)
i j ,
(l = 0, . . . , ν −1).
Example 4.1 Consider a binary (3, 2, 3) convolutional code. The encoder of this code is shown in Figure
4.2. Note that the constraint length of the code is 3. That means the maximum length of the impulse
response also is equal to 3. The impulse responses of this encoder can be written as follows:
g00 = (1, 1, 1); Output sequence from the output 0, assuming that input sequence at the input 0 is
(1 0 0 . . .).
g01 = (1, 0, 0); Output sequence from the output 0, assuming that input sequence at the input 1 is
(1 0 0 . . .).
g10 = (1, 0, 1); Output sequence from the output 1, assuming that input sequence at the input 0 is
(1 0 0 . . .).
g11 = (1, 1, 0); Output sequence from the output 1, assuming that input sequence at the input 1 is
(1 0 0 . . .).
g20 = (1, 1, 0); Output sequence from the output 2, assuming that input sequence at the input 0 is
(1 0 0 . . .).
g21 = (0, 1, 0); Output sequence from the output 2, assuming that input sequence at the input 1 is
(1 0 0 . . .).

164
Modulation and Coding Techniques in Wireless Communications
Let us denote the input symbols, which after the demultiplexer are fed to the jth input of the encoder as u j,
and the encoded symbols at the ith output we denote as vi. Then the input sequence can be written as u =
(u(0)
0 , u(0)
1 , . . . , u(0)
k−1, u(1)
0 , u(1)
1 , . . . , u(1)
k−1, u(2)
0 , u(2)
1 , . . . , u(2)
k−1, . . .) and the corresponding output sequence
after multiplexing as v = (v(0)
0 , v(0)
1 , . . . , v(0)
n−1, v(1)
0 , v(1)
1 , . . . , v(1)
n−1, v(2)
0 , v(2)
1 , . . . , v(2)
n−1, . . .). Now let us
consider k input sequences (after the demultiplexer):
u0 = (u(0)
0 , u(1)
0 , u(2)
0 , . . .);
u1 = (u(0)
1 , u(1)
1 , u(2)
1 , . . .);
. . . . . . . . . . . . . . . . . . . . . . . .
uk−1 = (u(0)
k−1, u(1)
k−1, u(2)
k−1, . . .)
and n output sequences (before the multiplexer):
v0 = (v(0)
0 , v(1)
0 , v(2)
0 , . . .);
v1 = (v(0)
1 , v(1)
1 , v(2)
1 , . . .)
. . . . . . . . . . . . . . . . . . . . . . . .
vn−1 = (v(0)
n−1, v(1)
n−1, v(2)
n−1, . . .)
Then it is easy to verify that the output sequences can be written as the sum of the convolutions of the
corresponding input sequence and the impulse response:
v0 =
k−1

j=0
u j ∗g0 j;
v1 =
k−1

j=0
u j ∗g1 j;
. . . . . . . . . . . . . . . . . . . . .
vn−1 =
k−1

j=0
u j ∗gn−1, j
(4.1)
where ∗denotes discrete convolution. This feature explains the name convolutional for the codes.
The (4.1) can be rewritten as:
v( f )
i
=
k−1

j=0
ν−1

l=0
u( f −l)
j
· g(l)
i j , i = 0, . . . , n −1
(4.2)
where u( f −l)
j
= 0 if f < l.
These equations can be written also in the form of a matrix multiplication:
v = u · G
(4.3)
where v and u are the semi-inﬁnite sequences and G is a semi-inﬁnite matrix:
G =
⎡
⎣
G(0)
G(1)
. . .
G(ν−1)
G(0)
. . .
G(ν−2)
G(ν−1)
. . .
. . .
. . .
. . .
⎤
⎦
(4.4)
and submatrix G(l) is a k × n matrix, which can be written as follows:
G(l) =
⎡
⎢⎢⎣
g(l)
00
g(l)
10
. . .
g(l)
n−1,0
g(l)
01
g(l)
11
. . .
g(l)
n−1,1
. . .
. . .
. . .
. . .
g(l)
0,k−1
g(l)
1,k−1
. . .
g(l)
n−1,k−1
⎤
⎥⎥⎦,l = 0, . . . , ν −1
(4.5)

Convolutional Codes and Turbo-Codes
165
Matrix G is called the generator matrix of the convolutional code. It is easy to see that each output
(encoded) sequence v can be obtained as the linear combination of rows of the matrix G. Hence the
convolutional code deﬁned by the generator matrix G is the linear code.
Example 4.2 Consider the same binary (3, 2, 3) convolutional code as in previous example. The generator
matrix G of this code can be written as:
G =
⎡
⎢⎢⎢⎢⎢⎢⎣
1
1
1
1
1
0
1
0
1
0
1
1
1
1
0
0
0
0
1
1
1
1
1
0
1
0
1
0
1
1
1
1
0
0
0
0
1
1
1
1
1
0
1
0
1
0
1
1
⎤
⎥⎥⎥⎥⎥⎥⎦
Let the input sequence u = (u(0)
0 , u(0)
1 , u(1)
0 , u(1)
1 , u(2)
0 , u(2)
1 , . . .) be u = (1,0, 0,1, 1,1, . . .). Then
it
can
be
easily
veriﬁed
that
in
accordance
with
(4.1)–(4.5)
the
output
sequence
v =
(v(0)
0 , v(0)
1 , v(0)
2 , v(1)
0 , v(1)
1 , v(1)
2 , v(2)
0 , v(2)
1 , v(2)
2 , . . .) = (1,1,1, 0,1,1, 1,0,0, . . .).
The convolutional encoder can be described as a device that may take a ﬁnite number of states. The state
of the encoder is deﬁned by the contents of the shift registers. As was mentioned above the n output
symbols are deﬁned by the present k input symbols and by the encoder state. And the input symbols
change the encoder state. Such a device is known as a ﬁnite state machine (FSM). It is convenient to
describe the operation of FSM with the help of state diagram. The state diagram is a directed graph. The
nodes represent the possible states and the branches represent the allowed transitions between states. The
branches are labelled with input symbols that cause this transition and with the output symbols, which
are emanated during the transition. The total number of the encoder states is equal to Mk(ν−1), where M
is the cardinal number of the input alphabet. To be more precise Mk(ν−1) is the upper bound to the total
number of the encoder states since not necessarily all k shift registers comprising the encoder have the
same length (ν −1). Recall that (ν −1) is just the maximum number of memory elements in each of the
k registers. That means the total number of the encoder states can be represented as M
	k
i=1 mi ≤Mk(ν−1),
where mi is the number of memory elements in ith shift register (mi < ν). It is obvious that this method
of the code representation is convenient only for the case of the encoder with a small number of states.
Example 4.3 Consider a binary (2, 1, 3) convolutional code. The encoder of this code is shown in
Figure 4.3. The state diagram for this code is represented in Figure 4.4. Note that output 0 of this encoder
represents just the input symbol. That means the output (encoded) sequence contains the unchanged input
Input
Output 0
Output 1
Figure 4.3
A (2, 1, 3) binary systematic convolutional encoder

166
Modulation and Coding Techniques in Wireless Communications
00
10
01
11
0/00
1/11
0/01
1/10
0/01
0
0
/
0
0
1
/
1
1/11
Figure 4.4
A state diagram of the (2, 1, 3) binary systematic convolutional code
(information) sequence. This kind of code is called a systematic convolutional code. This code has only
four states: 00, 01, 10 and 11. The branches are labelled with the following notation: inS/outS0outS1,
where inS is the input symbol that causes this transition and outS0, outS1 are the output symbols at the
corresponding outputs.
Another form of the convolutional code representation is the tree diagram. The tree diagram represents
the encoding process as a tree with the branches corresponding to the transition of the encoder from one
possible state to another at a given moment in time. Each node of the tree corresponds to the possible
state of the encoder. The number of branches stemming from each node is equal to the number of possible
combinations of input symbols, that is, each branch starting from the given node corresponds to one of a
few possible combinations of symbols at the input of the encoder. For example, if the cardinal number of
the input alphabet is M and the number of the encoder inputs is k, then the number of branches stemming
from each node is equal to Mk.
The tree diagram for the code of Example 4.3 for four input bit intervals is shown in Figure 4.5. The
upper branch (marked with a solid line) from each node corresponds to input data ‘0’, the lower branch
(marked with dashed line) to ‘1’. The labels on the branches show the corresponding data at the encoder
output. The tree diagram helps to visualize the encoding process since it adds the dimension of time to
the state diagram (that is, it represents each moment of time with a separate state diagram). Now the
encoding procedure can be described by traversing the tree diagram from left to right according to input
symbols. An input information sequence deﬁnes a speciﬁc path through the tree diagram, and an output
sequence corresponding to the input information sequence can be easily read from the branch labels of

Convolutional Codes and Turbo-Codes
167
00
00
10
01
11
00
10
01
11
00
10
01
11
00
10
00
11
01
10
01
10
00
11
00
11
01
10
01
10
00
11
00
11
01
10
01
10
00
11
00
11
01
10
11
00
0
1
Figure 4.5
A tree diagram of the (2, 1, 3) binary systematic convolutional code
this path. For example, it is easy to see from Figure 4.5 that the input sequence 1011 corresponds to the
output sequence 11 01 10 10. Thus any code sequence is represented as a path through the tree.
However, the number of branches in the tree increases exponentially with the length of the input
sequence and it is very hard work to draw the tree diagram for the long input sequence. On the other
hand it is easy to see that the tree diagram contains a lot of redundant elements. It is enough to compare
the parts of the diagram starting at the same state to understand that they are identical. That means the
tree diagram can be simpliﬁed.
Let us merge all the parts of the tree diagram where the encoder takes the same state at the same
time. Now we obtain the diagram in which the number of nodes at any time moment is no more than the
number of states. This kind of diagram is called the trellis diagram. The trellis diagram provides a more
manageable encoder description than the tree diagram does. This compact representation is very helpful
for describing the decoding of the convolutional codes, as will be discussed later. The trellis diagram
for the code of Example 4.3 is shown in Figure 4.6. Here we use the same convention as for the tree
diagram. A solid line denotes the branch generated by an input data ‘0’, and a dashed line denotes the
branch generated by an input data ‘1’. The branches are labelled with the output data. As one can see

168
Modulation and Coding Techniques in Wireless Communications
00
01
10
11
State
00
00
00
00
11
11
11
11
01
01
10
10
10
10
10
01
01
01
00
00
11
11
Figure 4.6
A trellis diagram of the (2, 1, 3) binary systematic convolutional code
from Figure 4.6 the structure of the diagram becomes ﬁxed after trellis depth 3 is reached. In general the
structure of the trellis becomes ﬁxed after depth ν is reached. With the help of a trellis diagram we can
see the correspondence between paths through the diagram and code sequences, while the complexity
of the diagram no longer grows exponentially. The bold lines in the trellis in Figure 4.6 show the path
corresponding to the input sequence 1011.
With the help of the trellis diagram we can deﬁne the most important measure of performance of a
convolutional code, which is called free distance. It is the analogue of the minimum distance of block
code. As we cannot divide the code sequences into code words of the same length, we have to consider
the distance between the complete code sequences. The free distance of a convolutional code dfree can
be deﬁned as:
dfree = min{d(v, v′) : u ̸= u′}
(4.6)
where v, v′ are the code sequences corresponding to the information sequences u, u′, respectively. It is
assumed that if sequences u, u′ are of different length, the necessary number of zeros is appended to
the shorter sequence. In other words, free distance is the smallest Hamming distance between any pair
of code sequences. Because a convolutional code is a linear code, there is no loss in generality in ﬁnding
the minimum distance between each of the code sequences and the all-zero sequence. Assuming that the
all-zero code sequence can be generated only by the all-zero information sequence (in condition of
the all-zero initial state of the encoder), the paths of interest (to compare with all-zero code sequence) are
those that diverge from and remerge with the all-zero state. These are the closest sequences that could be
confused by the decoder. For example, the free distance of the code of Example 4.3 can be found from
trellis in Figure 4.6 by computing the distances between the all-zero path and the paths starting from the
left-hand node and returning to the all-zero state later. It is easy to verify that the free distance of this
code is 4. For calculating the error-correcting capability of the code we can use the following equation:
t =

dfree −1
2

(4.7)
where t is the maximum number of errors that the code is capable of correcting, ⌊x⌋means the largest
integer not to exceed x. Of course, it does not mean that the convolutional code is capable of correcting
no more than t errors on the inﬁnite sequence length. In the same way as block coding we deﬁne t
as the maximum number of errors that can be corrected by the code on the block length, dfree deﬁnes
the convolutional code error-correcting capability on the length corresponding to the length of loop
of minimum weight. In accordance with (4.7) the code of Example 4.3 can correct only one error.
It is possible to build a nonsystematic convolutional code with the same parameters (2, 1, 3), which
is capable of correcting two errors. In general, making the convolutional code systematic reduces the

Convolutional Codes and Turbo-Codes
169
Table 4.1
Comparison of free distance for systematic and nonsystematic
convolutional codes. Rate = 1

2
Constraint length
dfree Systematic
dfree Nonsystematic
2
3
3
3
4
5
4
4
6
5
5
7
6
6
8
7
6
10
8
7
10
maximum possible free distance for a given constraint length and rate. That means, unlike the block
codes, a convolutional nonsystematic code cannot be transformed into a systematic code with the same
parameters and error-correcting capability. In Table 4.1 the free distances of systematic and nonsystematic
codes of rate 1
2 are compared [1].
Some convolutional codes cause an inﬁnite number of errors in output sequence after decoding when
only a ﬁnite number of errors occur during the transmission of a code sequence over the channel.
This event is called the catastrophic error propagation and this kind of code is called a catastrophic
convolutional code. This type of code needs to be avoided and can be identiﬁed by the state diagram.
A state diagram having a loop in which a nonzero information sequence corresponds to all-zero out-
put sequence identiﬁes a catastrophic convolutional code. The examples of such loops are shown in
Figure 4.7.
4.2
Viterbi Decoding Algorithm
The best known algorithm of decoding of the convolutional codes was introduced by A. Viterbi in 1967
[2]. Code sequence v is transmitted over the channel and the received sequence r can be written as:
r = v + e
(4.8)
where e is the error sequence. The Viterbi algorithm ﬁnds a code sequence y such that it maximizes
the probability P (r |y) that sequence r is received in condition that sequence y is transmitted. And in
case the weight of error sequence e does not exceed the code error correcting capability, found sequence
y coincides with the transmitted sequence v. Usually it is more convenient to maximize logarithm of
the probability P (r |y) rather than P (r |y) itself. However, since the logarithms are the monotonic
Si
1/000
Si
Sk
Sj
11/000
00/000
01/000
Figure 4.7
Examples of catastrophic convolutional code

170
Modulation and Coding Techniques in Wireless Communications
functions the code sequence y that maximizes value log P (r |y) maximizes P (r |y) also. In this case
the channel is BSC and the Viterbi algorithm ﬁnds the code sequence y that is closest to the received
sequence r in the sense of minimum Hamming distance. That means the Viterbi algorithm is a maximum
likelihood sequence detection algorithm. The advantage of the Viterbi algorithm compared with, for
example, brute-force maximum likelihood decoding, is that the complexity of the Viterbi algorithm does
not depend exponentially on the number of symbols in the code sequence.
As discussed earlier the Viterbi algorithm selects the code sequence y such that it maximizes the
probability P (r |y) that sequence r is received in condition that sequence y is transmitted. This probability
is called the likelihood function. The channel is assumed to be memoryless, and thus the noise process
affects each received symbol independently of all the other received symbols. Since the probability of
joint, independent events is equivalent to the product of the probabilities of the individual events, the
probability P (r |y) can be written as:
P (r |y) =

i
P (ri |yi )
(4.9)
where P (ri |yi ) is a channel transition probability. It is more convenient to use log-likelihood function
log P (r |y) rather than the likelihood function itself. It follows from (4.9) that:
log P (r |y) =

i
log P (ri |yi )
(4.10)
To simplify the manipulation of the summations over the log function, a symbol metric M (ri |yi ) is
deﬁned as:
M (ri |yi ) = c1 · (log P (ri |yi ) + c2)
(4.11)
where c1 and c2 are chosen such that the symbol metric can be well approximated by integers.
From the symbol metric a path metric and a branch metric are deﬁned as follows:
M (r |y) =
L−1

j=0
M

r j
y j

=
L−1

j=0
n−1

i=0
M (ri |yi )

(4.12)
where M (r |y) is the path metric, M

r j
y j

is the branch metric and L is the number of blocks of n
symbols in the sequence. In the same way we can deﬁne the partial path metric M j (r |y) as:
Mi (r |y) =
i
j=0
M

r j
y j

(4.13)
The symbol metric shows the cost of choosing symbol yi as the estimate of the corresponding symbol
ri. The branch metric indicates the cost of choosing the branch from the trellis, the partial path metric
M j (r |y) corresponds to the cost of choosing given path y up to time index j as a part of decoded
sequence and ﬁnally the path metric shows the total cost of estimating the received sequence r with the
sequence y.
4.2.1
Hard Decision Viterbi Algorithm
Let us consider for simplicity the Viterbi algorithm for BSC (that is, the hard-decision Viterbi algorithm)
ﬁrst. If the symbols are transmitted over the BSC with the crossover probability p the likelihood function
for the received sequence r of length N can be written as:
P (r |y) = (1 −p)N−d(r,y) · pd(r,y) =
N−1

i=0
(1 −p) ·
1 −p
p
−d(ri ,yi )
(4.14)

Convolutional Codes and Turbo-Codes
171
a
b
c
d
e
Figure 4.8
Eliminating of one of merged paths in trellis in accordance with the principle of optimality
where d(•, •) is the Hamming distance. Then the symbol metric in accordance with (4.11) and (4.14)
can be written in the form of:
M (ri |yi ) = c1 ·

log

(1 −p) ·
1 −p
p
−d(ri ,yi )
+ c2

(4.15)
where coefﬁcients c1 and c2 can be chosen as follows:
c1 =

log 1 −p
p
−1
(4.16)
c2 = −log(1 −p)
(4.17)
Then the symbol metric becomes the Hamming metric and can be written as:
M (ri |yi ) = −d(ri, yi)
(4.18)
In this case the problem of ﬁnding sequence y that maximizes the probability P (r |y) can be formulated
as the search of optimum path y (with the minimum Hamming distance between y and r) through the
trellis. This is equivalent to a dynamic programming problem of ﬁnding the path with minimum weight
through a weighted graph [3]. Viterbi algorithm is based on the principle of optimality. The principle of
optimality states that if any two paths in the trellis merge to the same state, one of them can always be
discarded in the search for an optimum path, because the path with more weight could not turn out to
be the preﬁx of the optimum path through the trellis. This statement can be illustrated by the picture in
Figure 4.8.
The weights of branches a, b, c, d, e correspond to Hamming distance between parts of two se-
quences; that means all the weights are nonzero values. Let a < b, then the weights of paths generated
by path with weight a, that is, a + c, a + d, a + e will be less than b + c, b + d, b + e for all possible
values of c, d, e. In this case we can eliminate path with weight b in the search for an optimum path
with minimum weight. This principle allows us to consider only the constant number of paths on each
stage of the decoding procedure.
Example 4.4 Let us consider the hard-decision Viterbi algorithm on the example of decoding of a
nonsystematic (2, 1, 3) binary convolutional code. The encoder of this code is shown in Figure 4.9.
The corresponding trellis diagram is represented in Figure 4.10. As one can see from the trellis diagram
the free distance of this code is 5. Let the information sequence be u = 1100011111. This information
sequence generates the code sequence v = 11 10 10 11 00 11 10 01 01 01.

172
Modulation and Coding Techniques in Wireless Communications
Input
Output 0
Output 1
Figure 4.9
A (2, 1, 3) binary nonsystematic convolutional encoder
Assume that the received sequence is r = 10 00 10 11 00 11 10 01 01 01, that is, two errors
occur during the transmission of the code sequence over the channel. Let us go through the trellis from
the left to the right and search the optimum path that is the closest path to the received sequence r in
the sense of Hamming distance assuming that the initial state of the encoder is all-zero (at the beginning
of the encoding of each sequence the encoder should be ﬂushed). The process of decoding is shown in
Figure 4.11. At the ﬁrst stage (Figure 4.11a) we have two partial paths in the trellis: 00 and 11. The partial
path is deﬁned as the path from state S = 0 at time j = 0 to a particular state S = i at time j ≥0. Both of
these paths differ from the received symbols 10 in one position. Hence, both of these paths have weight
1. There are no paths merging at the same state at this stage, so we keep all the paths, because we have
no choice yet. At the second stage (Figure 4.11b) the number of partial paths is 4. The weight of each
partial path (path metric) is obtained as the sum of the weight of the previous partial path and the weight
of the corresponding branch (branch metric). The corresponding symbols of the received sequence r
are 00. Then the branch metric of the branch from state 00 to state 00 is equal to d(00, 00) = 0, the
branch metric of the branch from state 00 to state 10 is d(00, 11) = 2, the branch metric of the branch
from state 10 to state 01 is d(00, 01) = 1, the branch metric of the branch from state 10 to state 11 is
d(00, 10) = 1. Summing up the branch metric and the path metric of the previous partial path obtain
the following path metrics of the corresponding paths: 1, 3, 2, 2. Here we also have no merging paths, so
we keep all four paths. At the third stage (Figure 4.11c) we have eight paths. We can calculate the path
metrics as in previous stages and then we have two paths merging to each state. Now in accordance with
the principle of optimality we can eliminate the path with greater weight. For example, the path merging
00
01
10
11
State
00
00
00
00
11
11
11
11
11
11
00
00
10
10
10
01
01
01
10
10
01
01
00
11
00
10
01
11
01
10
Figure 4.10
A trellis diagram of the (2, 1, 3) binary nonsystematic convolutional code

Convolutional Codes and Turbo-Codes
173
00
01
10
11
State
00
11
10
1
1
00
11
10
01
00
1
3
2
2
00
01
10
11
State
1+d(00,00)=1
1
1+d(00,11)=3
1
1+d(00,01)=2
1+d(00,10)=2
00
11
11
00
10
01
10
01
11
2
2
2
3
4
2
3
4
2
4
3
4
00
01
10
11
State
2
3
2
3
)
b
)
a
d)
00
11
11
00
10
01
10
01
10
1
2
3
2
2
3
5
2
2
3
3
4
2
2
2
3
c)
2
3
2
3
00
11
00
10
01
00
11
01
10
2
5
3
4
4
3
3
4
2
3
3
3
e)
2
3
3
3
f)
00
11
00
10
01
11
01
10
11
4
3
4
4
2
5
4
4
g)
10
3
4
2
4
3
4
2
4
00
11
00
10
01
11
01
10
4
5
4
4
4
5
2
6
4
4
4
2
h)
01
4
4
4
2
5
4
5
2
i)
01
4
4
4
2
5
4
5
2
01
5
4
5
2
01
5
4
5
2
Figure 4.11
The stages of Viterbi decoding of the received sequence r = 10 00 10 11 00 11 10 01 01 01 in trellis
diagram of the (2, 1, 3) binary nonsystematic convolutional code
to state 00 from state 00 has the path metric 2 and the path merging to the same state 00 from state 01
has the path metric 3 that means the last path should be discarded. The path merging to state 00 from
state 00 is called a survivor path. After this procedure we have to keep only four paths. Hereafter at each
stage we have to keep only four survivor paths.
In cases where there are two paths with the same weight merged to a single node an arbitrary decision
about discarding one of these two paths can be made (for example, at the sixth stage in Figure 4.11. If

174
Modulation and Coding Techniques in Wireless Communications
two paths with weight 4 merge to the state 01 and two paths with weight 4 merge to the state 11; in this
example we eliminate the lower from the two paths with the same weight). As can be seen from Figure
4.11e already at the ﬁfth stage the path metric of the partial path corresponding to the sequence 11 10 10
11 00 (which is the part of the transmitted sequence v) is the best among the four metrics of the survivor
paths. Since in our example there are no new errors in the latter symbols it is obvious that the correct path
will be found at the end. On the other hand we can see from Figure 4.11 that the survivor paths can differ
from each other time. Only at stage 10, as can be seen from Figure 4.11i, do the ﬁrst eight branches of
the survivor paths coincide. At this time we can make a decision about the ﬁrst eight transmitted symbols
since the survivor paths merge. The depth of this merge is an arbitrary value and it depends only on
the errors in the channel during the transmission. In any case we can see that the decoding introduces
the severe delay, which is much more than a one stage period. In practice it is impossible to wait until the
survivor paths merge. Usually the ﬁxed depth of the decoding is deﬁned for the decoder. After reaching
this decoding depth (the certain number of stages) the decision about the ﬁrst symbols (in accordance
with the path with the best metric) is made. This of course leads to some degradation in performance and
the algorithm is no more optimal but suboptimal. On the other hand, if the depth of making the decision
is ﬁve or seven times the constraint length, the degradation of performance is negligible [4].
Now we can formulate the hard decision Viterbi algorithm as follows [5]:
Hard-Decision Viterbi Decoding:
Si, j is the state in the trellis diagram that corresponds to the state Si at time j. Every state in the trellis
is assigned a value denoted V(Si, j). L is the decoding depth (or as it is often called the truncation window
length).
1. (a) Initialize time j = 0.
(b) Initialize V(S0,0) = 0 and all other V(Si, j) = ∞.
2. (a) Set time j = j + 1 .
(b) For all i compute the partial path metrics for all paths going to state Si at time j . To do this:
ﬁrst, calculate the branch metric, and then add the branch metric to V(Si, j−1).
3. (a) For all i set V(Si, j) to the best partial path metric going to state Si at time j.
(b) If there is a tie for the best partial path metrics, then any one of the tied partial path metric may
be chosen.
4. If j < L go to the step 2.
5. (a) Start trace-back through the trellis by following the branches of the best survivor path.
(b) Store the associated survivor k symbols. These are currently decoded k information symbols.
(c) Set time j = 0; go to step 2. Here is the start of the new truncation window.
Usually it is more convenient to use the code words with ﬁxed length rather than the semi-inﬁnite code
sequences. In this case it is possible to add k · (ν −1) dummy zeros (so called tail symbols) to the
end of the information sequence of ﬁxed length before encoding, which forces the encoder to return to
the all-zero state and terminates the trellis. This simpliﬁes the work of the decoder, because now it is
enough to check only the survivor that ends at the all-zero state. Obviously with using this technique the
convolutional code becomes the block code.
4.2.2
Soft Decision Viterbi Algorithm
The soft-decision Viterbi algorithm exploits the additional information, which is provided by the soft-
decision demodulator and this additional information allows the performance to increase. The algorithm
itself is the same as for the hard decisions. The only difference is that Hamming distance is not used
as a metric. Generally speaking, the metric used in the algorithm should be deﬁned by the channel. For

Convolutional Codes and Turbo-Codes
175
example, the Euclidean distance is the optimal metric for the Gaussian channel. Let us consider the
example of the soft-decision Viterbi decoding for the discrete memoryless channel (DMC).
Example 4.5 Let us consider the binary input, 8-ary output DMC represented in Figure 4.12. The
transition probabilities P (r |y ) of this channel are shown in the following table:
P (r |y )
04
03
02
01
11
12
13
14
0
0.439
0.2
0.17
0.1
0.06
0.025
0.005
0.001
1
0.001
0.005
0.025
0.06
0.1
0.17
0.2
0.439
Taking the logarithms obtain the log-likelihood values log P (r |y ):
log P (r |y )
04
03
02
01
11
12
13
14
0
−0.82
−1.61
−1.77
−2.3
−2.81
−3.69
−5.3
−6.91
1
−6.91
−5.3
−3.69
−2.81
−2.3
−1.77
−1.61
−0.82
Let us choose the coefﬁcient c2 = −min
y
P (r |y ) and the coefﬁcient c1 = 1.35. Then the symbol metric
values M (r |y ) in accordance with (4.11) can be written as follows:
M (r |y )
04
03
02
01
11
12
13
14
0
8
5
3
1
0
0
0
0
1
0
0
0
0
1
3
5
8
Let the information and encoded sequence be the same as in the previous example u =
1100011111, v = 11 10 10 11 00 11 10 01 01 01. Assume that the received sequence is r =
1403 0202 0104 1111 0203 1213 1203 0411 0211 0112 . The decoding process for this received sequence
is shown in Figure 4.13.
0
1
04
03
02
01
11
12
13
14
Figure 4.12
Binary input, 8-ary output DMC

176
Modulation and Coding Techniques in Wireless Communications
00
01
10
11
State
00
11
1403
5
8
00
11
10
01
0202
11
5
11
11
00
01
10
11
State
5
8
8+M(0,02)+M(1,02)=11
00
11
11
00
10
01
10
01
1111
20
19
20
13
20
21
21
14
22
19
21
14
00
01
10
11
State
21
21
22
21
)
b
)
a
d)
00
11
11
00
10
01
10
01
0104
11
11
5
11
20
11
6
19
11
20
13
12
20
19
20
13
c)
5+M(1,02)+M(1,02)=5
8+M(1,02)+M(0,02)=11
5+M(0,02)+M(0,02)=11
0203
21
21
22
21
e)
00
11
00
10
01
11
01
10
29
21
25
26
21
29
27
24
29
26
29
27
1213
f)
29
26
29
27
00
11
00
10
01
11
01
10
29
34
34
30
37
26
32
32
34
34
37
32
1203
g)
34
34
37
32
00
11
00
10
01
11
01
10
39
37
37
40
37
39
45
32
0411
h)
39
40
39
45
39
40
39
45
47
48
48
54
0211
i)
39
40
39
45
47
48
48
54
50
54
51
58
0112
57
58
55
62
Figure 4.13
The stages of soft-decision Viterbi decoding of the received sequence r = 1403 0202 1104 1111 0203
1213 1203 0411 0211 0112 in trellis diagram of the (2, 1, 3) binary nonsystematic convolutional code

Convolutional Codes and Turbo-Codes
177
00
01
10
11
State
10
00
1
1
11
3
3
1
3
)
b
)
a
d)
00
1
2
3
2
1
3
2
3
c)
00
3
2
3
2
)f
)
e
11
2
3
3
3
1
2
3
2
1
2
3
2
1
3
2
3
00
01
10
11
State
3
3
1
3
1
2
3
2
1
3
2
3
3
2
3
2
3
3
1
3
1
2
3
2
1
3
2
3
1
1
1
1
1
1
1
1
1
1
Figure 4.14
The stages of hard-decision Viterbi decoding of the received sequence r = 10 00 10 11 00 11 10 01 01
01 in trellis diagram of the (2, 1, 3) binary nonsystematic convolutional code
As one can see from Figure 4.13 the ﬁrst eight symbols are decoded correctly at stage 10. No-
tice that if we merge the soft decisions outputs 01 02 03 04 into the hard decision output 0 and the
outputs 11 12 13 14 into the hard decision output 1, the hard decision received sequence becomes
r = 10 00 00 11 00 11 10 01 01 01 . The hard decision decoding of this sequence is represented in Fig-
ure 4.14. As expected, in this case the decoder chooses the path that does not coincide with the transmitted
sequence (Figure 4.14.f).
Now we can write the soft-decision Viterbi algorithm as follows:
Soft-Decision Viterbi Decoding:
1. (a) Initialize time j = 0.
(b) Initialize V(S0,0) = 0 and all other V(Si, j) = −∞.
2. (a) Set time j = j + 1.
(b) For all i compute the partial path metrics for all paths going to state Si at time j. To do this:
ﬁrst, calculate the branch metric M

r j
y j

in accordance with (4.12), and then compute the j-th
partial path metric M j (r |y) = V(Si, j−1) + M

r j
y j

.

178
Modulation and Coding Techniques in Wireless Communications
3. (a) For all i set V(Si, j) to the ‘best’ partial path metric going to state Si at time j.
(b) If there is a tie for the best partial path metrics, then any one of the tied partial path metric may
be chosen.
4. If j < L go to step 2.
5. (a) Start trace-back through the trellis by following the branches of the best survivor path.
(b) Store the associated survivor k symbols. These are currently decoded k information symbols.
(c) Set time j = 0; go to step 2. Here is the start of the new truncation window.
As can be seen the soft-decision algorithm differs from the hard-decision algorithm only by the used
metric. Example 4.5 demonstrates the gain, which can be obtained by using the same Viterbi algorithm
exploiting the additional information from the soft-decision demodulator. Usually the soft-decision
decoding increases the coding gain of a convolutional code by about 2 dB (of course, the actual gain of
using soft-decision decoding differs for different channels).
As discussed earlier the number of nodes at each trellis stage is equal to Mk(ν−1), where M is the
cardinal number of the input alphabet. At each node of the trellis Mk calculations are needed to perform
the Viterbi algorithm. Hence, the complexity of the Viterbi algorithm is the order of O(Mk(ν−1) · Mk · L).
This value is signiﬁcantly less than the complexity of brute-force ML decoding, which can be estimated
as O(MkL). However, the increase of the number of information symbols k or the constraint length ν
leads to the exponential growth of the Viterbi algorithm complexity.
4.3
List Decoding
The list decoding is a suboptimal non-backtracking algorithm, which consists in choosing the several
best partial paths at each stage of the decoding process. These partial paths form the list of size L. Unlike
the Viterbi algorithm the list decoder considers the extensions of only these best partial paths from the
list, not all partial paths. The list decoding algorithm belongs to the class of breadth-ﬁrst algorithms, as
does the Viterbi algorithm. Of course, the list size L should be less than the number of states Mν−1.
Obviously the complexity of the list decoding is less than the complexity of the Viterbi algorithm,
but because of the fact that some partial paths are not considered, the list decoding is not the optimal
algorithm.
Example 4.6
Let us consider the hard-decision list decoding of the received sequence r =
10 00 10 11 00 11 10 01 01 01 of Example 4.4. The size of the list is three, that is, we will
ﬁnd the extensions of only the three best paths at each decoding stage. The decoding process is shown in
Figure 4.15. As can be seen from Figure 4.15 the received sequence is successfully decoded and already
at stage 9 (Figure 4.15.h) where the ﬁrst seven branches of the survivor paths coincide.
So in this particular case we managed to decode correctly the received sequence with less complexity
than required by the Viterbi algorithm. Unfortunately the list algorithm as mentioned above is not the
optimal one and in some cases it is possible to miss the correct path. The greater the list size the less the
probability of missing the correct path.
4.4
Upper Bound on Bit Error Probability for Viterbi Decoding
Let rate of a binary convolutional code be R = k/n. Denote a data sequence of length lk, l = 1, 2, . . .,
as u i.e. u ∈{0, 1}kl, l here is number of k-bit blocks of data sequence. Let v(u) be code sequence
corresponding to the data sequence u, v(u) ∈{0, 1}nl. Any path in code trellis consists of intermediate
states and transitions connecting the states. Since any data sequence corresponds to a path in code trellis
and vice versa we can consider intermediate states of data sequence instead of intermediate states of

Convolutional Codes and Turbo-Codes
179
00
01
10
11
State
00
11
10
1
1
00
11
10
01
00
1
3
2
2
00
01
10
11
State
1+d(00,00)=1
1
1+d(00,11)=3
1
1+d(00,01)=2
1+d(00,10)=2
00
11
11
00
10
01
11
2
2
2
4
2
3
2
4
3
00
01
10
11
State
2
3
2
)
b
)
a
d)
00
11
11
00
10
01
10
1
2
3
2
2
3
2
2
3
4
2
2
2
c)
2
3
2
00
11
00
10
00
11
01
2
5
3
4
3
3
2
3
3
)f
)
e
)
h
)
g
i)
2
3
2
2
3
3
00
11
00
10
11
01
11
4
3
4
2
5
4
3
4
2
2
3
2
2
3
3
3
4
2
00
11
00
10
11
01
10
4
5
4
4
5
2
4
4
2
2
3
2
2
3
3
3
4
2
4
4
2
01
5
4
2
01
5
4
2
2
3
2
2
3
3
3
4
2
4
4
2
5
4
2
5
4
2
01
5
4
5
2
Figure 4.15
The stages of hard-decision List decoding of the received sequence r = 10 00 10 11 00 11 10 01 01 01
in trellis diagram of the (2, 1, 3) binary nonsystematic convolutional code

180
Modulation and Coding Techniques in Wireless Communications
trellis path. Assume that the data sequence u corresponds to a path in code trellis starting in a state σ1 and
after l transitions coming to trellis state σ2. Let u′ be another data sequence of the same length kl, such
that initial and ﬁnal state of u′ are σ1 and σ2 but all intermediate states of u and u′ are different. Denote
the set of all such data sequences u′ as E(u). Then the classic upper bound on bit error probability based
on union bound argumentation [1] can be written as follows:
Pb ≤1
k
∞

l=1

u∈{0,1}kl

u′∈E(u)
Pr

v(u) →v(u′)

P(u)dH(u, u′)
(4.19)
where Pr

v(u) →v(u′)

is the error probability for code of two words v(u) and v(u′), P(u) is the
probability of transmission data sequence u, dH(·, ·) is Hamming distance.
The event v(u) →v(u′) occurs when metric value of the correct path v(u)is less than metric value
of the incorrect path v(u′). The probability Pr

v(u) →v(u′)

can be upper bounded using modiﬁed
Chernoff bound (see Appendix 4.A) as:
Pr

v(u) →v(u′)

≤min
β
K

β, dH

v(u), v(u′)

D0(β)dH(v(u),v(u′))
(4.20)
where K (β, d) and D0(β) are a nonexponential coefﬁcient and exponent of the modiﬁed Chernoff
bound respectively, and β is an optimization parameter. The minimization here and after is assumed over
all allowed values of the Chernoff bound parameter β. Note that Chernoff bound coefﬁcient K (β, d)
monotonically decreases with increase of its second argument.
Since dH (v(u), v(u′)) = wH (v(u) + v(u′)), where wH(·) is Hamming weight, and for any linear code
v(u) + v(u′) = v(u + u′), we have:
Pr

v(u) →v(u′)

< min
β
K

β, wH(v(u + u′))

D0(β)wH (v(u+u′))
(4.21)
The plus sign means here addition in GF(2). After substitution of right hand part of (4.21) to inequality
(4.19) we get:
Pb < min
β
1
k
∞

l=1

u∈E(0)
K (β, wH(v(u))) D0(β)wH (v(u))wH(u)
(4.22)
where E(0) is a set of data sequences of length kl bits with zero initial and zero ﬁnal state but nonzero
intermediate states. The trellis paths corresponding to data sequences u ∈E(0) are traditionally called
loops or detours with respect to all zero path in trellis. The values wH(v(u)) and wH(u) are called
weight of loop and information weight of loop respectively. If we denote A(l, d, i) the number of loops
v(u) of length l edges such that wH(v(u)) = d and wH(u) = i, l = 1, 2, . . ., d = dfree, dfree + 1, . . .,
i = 1, 2, . . ., where dfree is the free distance of the convolutional code, then we can transform the
inequality (4.22) to:
Pb < min
β
1
k
∞

l=1
∞

d=d f
∞

i=1
i A(l, d, i)K (β, d) D0(β)d
(4.23)
Recalling that K(β, d) monotonically decreases when d grows and making the bound in (4.23) slightly
less accurate obtain:
Pb < min
β
K

β, dfree

k
∞

l=1
∞

d=d f
∞

i=1
i A(l, d, i)D0(β)d
(4.24)
The well known [1] way to compute the right hand part of (4.24) is based on usage of the gen-
erating function of weights of loops in code trellis, or weight enumerator function of the code.

Convolutional Codes and Turbo-Codes
181
+
+
(t)
1v
(t )
2v
(t )
u
Figure 4.16
Example of rate 1/2 convolutional encoder
It is deﬁned as:
T (Z, N) =
∞

d=d f
∞

i=1
A(d, i)Z d N i
(4.25)
where Z, N are formal variables, and A(d, i) = 	∞
l=0 A(l, d, i) is the number of loops with weight d and
information weight i. The generating function can be found from analysis of the convolutional encoder
as a ﬁnite state machine by the ﬂow graph technique.
Let us consider brieﬂy how to ﬁnd the expression for generating function T (Z, N). Let rate-1/2
convolutional encoder be as it is depicted in Figure 4.16. The code generators are g1 = [1, 1,1, 1] = 178
and g1 = [1,1,0, 1] = 158. Encoder memory amount is equal to 3, so the number of state is 8. Let us
deﬁne encoder state transition as σ (t−1) →σ (t), where for this example σ (t−1) = (u(t−1), u(t−2), u(t−3))
and σ (t) = (u(t), u(t−1), u(t−2)). We assign the label N i Z d to transition σ (t−1) →σ (t), where i = wH(u(t))
and d = wH([v(t)
1 , v(t)
2 ]. All states of transition can be arranged as an 8 × 8 symbolic matrix F(Z, N) =
[Fi j(Z, I)], where:
Fi j(Z, N) =
 N i Z d,
if transition i →j exists
0,
otherwise
where indices i, j correspond to the encoder states written as integers in decimal form, i, j = 0, 1, . . . 7.
Matrix F(D, I) for this example is equal to:
F(Z, N) =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
1
0
0
0
N 2Z
0
0
0
Z 2
0
0
0
N
0
0
0
0
Z
0
0
0
N Z
0
0
0
Z
0
0
0
N Z
0
0
0
0
Z 2
0
0
0
N
0
0
0
1
0
0
0
N Z 2
0
0
0
0
Z
0
0
0
N Z
0
0
0
Z
0
0
0
N Z
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
To compute the function T (Z, N) let us present matrix F(Z, N) as:
F(Z, N) =

1
F1(Z, N)
F2(Z, N)
F0(Z, N)


182
Modulation and Coding Techniques in Wireless Communications
where F1(Z, N) is row vector corresponding to all transitions 0 →σ, σ ̸= 0, F2(Z, N) is column vector
corresponding to all transitions σ →0, σ ̸= 0, and F0(Z, N) is matrix vector corresponding to all
transitions σ →σ ′, σ, σ ′ ̸= 0. Then the generating function T (Z, N) can be found as [1]:
T (Z, N) =
∞

l=0
F1(Z, N)F0(Z, N)lF2(Z, N) = F1(Z, N)(I −F0(Z, N)−1F2(Z, N)
It can be shown that for this example:
T (Z, N) = N 2Z 6 + N Z 7 −N 2Z 8
1 −2Z N −Z 3N
For evaluation of the bound of bit error probability let us consider the derivative of the function T (Z, N)
with respect to formal variable N. The function F(Z) deﬁned as follows:
F(Z) = dT (Z, N)
dN

N=1
=
∞

d=dfree
∞

i=1
i A(d, i)Z d N i−1

N=1
=
∞

d=dfree
∞

i=1
i A(d, i)Z d =
∞

d=dfree
A(d)Z d
(4.26)
where A(d) = 	∞
i=1 i A(d, i), can be used for computation the bound in (4.24). It follows from (4.24),
(4.25) and (4.26) that:
Pb < min
β
K

β, dfree

k
F (D0(β))
(4.27)
Formulas for K(β, d) and D0(β) for some channel models can be found in the Appendix 4A.
In many cases it is not necessary to have the full expression for the function F(D). It is sufﬁcient to
use a ﬁnite number of terms of the series expansion:
F(Z) = A(dfree)Z dfree + Z(dfree + 1)Z dfree+1 + A(dfree + 2)Z dfree+2 + . . .
that is, the bound (9) can be computed as:
Pb < min
β
K

β, dfree

k
dfree+K

d=dfree
A(d)D0(β)d
(4.28)
for K large enough; in practically important cases the value K = 4 . . . 6 is sufﬁcient for good accuracy
of the bound because the terms in the sum in (4.28) are decreasing very fast. For the example given above
the series expansion of the generating function is:
F(Z) = 2Z 6 −Z 7 −2Z 8 + Z 9 + Z 11
(1 −2Z −Z 3)2
= 2Z 6 + 7Z 7 + 18Z 8 + 49Z 9 + 130Z 10
+333Z 11 + 836Z 12 + 2069Z 13 + 5060Z 14 + . . .
It means that dfree = 6, and A(dfree) = 2, A(dfree + 1) = 7, A(dfree + 2) = 18, and so on.

Convolutional Codes and Turbo-Codes
183
Table 4.2
Weight spectrum coefﬁcients for some binary convolutional codes
R = 1/3
R = 1/2
ν
g1, g2, g3
dfree
A(dfree), . . . ,
A(dfree + 4),
g1, g2
dfree
A(dfree), . . . ,
A(dfree + 4),
2
7,7,5
8
3,0,15,0,58
7,5
5
1,4,12,32,80
3
17,15,13
10
6,0,6,0,58
17,15
6
2,7,18,49,130
4
37,33,25
12
12,0,12,0.56
35,23
7
4,12,20,72,225
5
75,53,47
13
1,8,26,20,19
75,53
8
2,36,32,62,332
6
171,165,133
15
7,8,22,44,22
171,133
10
36,0,211,0,1404
7
367,331,225
16
1,0,24,0,113
371,247
10
2,22,60,148,340
8
557,663,711
18
11,0,32,0,195
753,561
12
12,33,0,281,0,2179
Parameters of good and optimal binary convolutional codes suitable for applications with Viterbi
decoding algorithm are known. Some examples are presented in Table 4.2. More examples can be found
in [6], [17], [18].
4.5
Sequential Decoding
The sequential decoding algorithms were invented by Wozencraft and then by Fano before the discovery
of the Viterbi algorithm. Due to the exponential growth of the Viterbi algorithm complexity with the
growth of the constraint length of the code the application of this algorithm is limited to the case of
relatively small values of the constraint lengths. Unlike the Viterbi algorithm the complexity of the
sequential decoding is essentially independent of constraint length. The sequential decoding algorithms
belong to the class of backtracking algorithms known as depth ﬁrst, because they goes forward in the
depth of the code tree tracing a given path as long as the metric indicates that the choice is likely,
otherwise they return and start tracing the new path. The Viterbi algorithm on the contrary belongs to
the class of algorithms known as breadth ﬁrst, because it explores all the paths on the given stage of
trellis before considering the next stage. It is possible that sequential decoding algorithm misses the best
path because it does not explore the whole trellis. Hence, the sequential decoding algorithms are the
sub-optimal algorithms.
In sequential decoding we have to compare paths of different lengths. To do this usually the Fano
metric is used. The hard-decision Fano metric for the path y can be represented as:
MF(r,y) =
L−1

j=0
MF(r j,y j)
(4.29)
where L is the path length in n-tuples (branches) and MF(r j,y j) is the Fano branch metric. The Fano
branch metric can be written as:
MF(r j,y j) = (n −d(r j,y j)) · a + d(r j,y j) · b
(4.30)
where
a = log(1 −p) + 1 −R
b = log p + 1 −R
(4.31)
p is crossover probability for BSC and R = k
n is the rate of a convolutional code. The Fano branch metric
can be expressed as the sum of Fano symbol metrics:
MF(r j,y j) =
n−1

i=0
MF(ri, yi)
(4.32)

184
Modulation and Coding Techniques in Wireless Communications
where the Fano symbol metric MF(ri, yi) is:
MF(ri, yi) =
 a,
if ri = yi
b,
if ri ̸= yi
(4.33)
where a and b are represented in (4.31). The Fano metric increases along the correct path and decreases
along the incorrect path.
4.5.1
Stack Algorithm
The idea of the stack algorithm is very simple. The decoder creates the list (stack) of more likely
candidates to be the correct path. The list is sorted in such a way that more probable candidate (with
greatest Fano metric) is always on the top of the stack. So, when the exploration of the code tree is
ﬁnished the top path is assumed to be the decoded sequence. The algorithm can be formulated as follows
[6]:
Stack Decoding Algorithm:
1. Load the stack with the root and the metric zero.
2. Remove the top node and place its successors in the stack according to their metrics.
3. If the top path leads to the end of the tree, then stop and choose the top path to be the decoded
sequence; otherwise go to step 2.
Example 4.7 Consider the (2, 1, 3) binary convolutional code of Example 4.4. Let the channel be BSC
with the crossover probability p = 0.05. Let the information sequence be u = 01000 and the corre-
sponding encoded sequence v = 00 11 01 11 00. Assume that two errors occur during the transmission
and the received sequence is r = 10 01 01 11 00. Let us decode the received sequence r with the help of
stack-algorithm using the Fano metric (for hard-decisions). First of all, let us calculate the symbol Fano
metric for given convolutional code and BSC:
a = log(1 −0.05) + 1 −1
2 = 0.449
b = log 0.05 + 1 −1
2 = −2.496
(4.34)
For convenience we will use more approximate values than in (4.34):
a = 0.5
if yi = ri;
b = −2.5
if yi ̸= ri
Then following the steps of stack-algorithm let us ﬁnd the decoded sequence by exploring the code tree
and putting the obtained values of the Fano path metric in the stack.
1. The initial metric value for the root node is 0.
2. Explore paths 00 and 11. Compare corresponding part of the received sequence 10 with branches
(paths) 00 and 11. Both branches differ from the received sequence in 1 bit. That means the Fano
metric for each branch is equal to a + b = 0.5 −2.5 = −2. Both paths have metric −2. Path 00 is
on the top of the stack.
Path
Path metric
00
−2
11
−2

Convolutional Codes and Turbo-Codes
185
3. Explore branches 00 and 11, which are the successors of the path 00. The corresponding part of the
received sequence is 01. Add corresponding branch metrics (−2 and −2) to the path metric. Put the
obtained path metrics (−4 and −4) and the corresponding paths in the stack. Now the path 11 with
metric −2 is on the top of the stack.
Path
Path metric
11
−2
00 00
−4
00 11
−4
4. Explore branches 01 and 10, which are the successors of the path 11. The corresponding part of the
received sequence is 01. Add corresponding branch metrics (+1 and −5) to the path metric. Put the
obtained path metrics (−1 and −7) and the corresponding paths in the stack. Now the path 11 01
with metric −1 is on the top of the stack.
Path
Path metric
11 01
−1
00 00
−4
00 11
−4
11 10
−7
5. Explore branches 11 and 00, which are the successors of the path 11 01. The corresponding part of
the received sequence is 01. Add corresponding branch metrics (−2 and −2) to the path metric. Put
the obtained path metrics (−3 and −3) and the corresponding paths in the stack. Now the path 11
01 11 with metric −3 is on the top of the stack.
Path
Path metric
11 01 11
−3
11 01 00
−3
00 00
−4
00 11
−4
11 10
−7
6. Explore branches 00 and 11, which are the successors of the path 11 01 11. The corresponding part
of the received sequence is 11. Add corresponding branch metrics (−5 and +1) to the path metric.
Put the obtained path metrics (−8 and −2) and the corresponding paths in the stack. Now the path
11 01 11 11 with metric −2 is on the top of the stack.
Path
Path metric
11 01 11 11
−2
11 01 00
−3
00 00
−4
00 11
−4
11 10
−7
11 01 11 00
−8

186
Modulation and Coding Techniques in Wireless Communications
7. Explore the successors of path 11 01 11 11. The corresponding part of the received sequence is 00.
Path
Path metric
11 01 00
−3
00 00
−4
00 11
−4
11 01 11 11 01
−4
11 01 11 11 10
−4
11 10
−7
11 01 11 00
−8
8. Explore the successors of path 11 01 00. The corresponding part of the received sequence is 11.
Path
Path metric
00 00
−4
00 11
−4
11 01 11 11 01
−4
11 01 11 11 10
−4
11 01 00 01
−5
11 01 00 01
−5
11 10
−7
11 01 11 00
−8
9. Explore the successors of path 00 00. The corresponding part of the received sequence is 01.
Path
Path metric
00 11
−4
11 01 11 11 01
−4
11 01 11 11 10
−4
11 01 00 01
−5
11 01 00 01
−5
00 00 00
−6
00 00 11
−6
11 10
−7
11 01 11 00
−8
10. Explore the successors of path 00 11. The corresponding part of the received sequence is 01.
Path
Path metric
00 11 01
−3
11 01 11 11 01
−4
11 01 11 11 10
−4
11 01 00 01
−5
11 01 00 01
−5
00 00 00
−6
00 00 11
−6
11 10
−7
11 01 11 00
−8
00 11 10
−9

Convolutional Codes and Turbo-Codes
187
11. Explore the successors of path 00 11 01. The corresponding part of the received sequence is 11.
Path
Path metric
00 11 01 11
−2
11 01 11 11 01
−4
11 01 11 11 10
−4
11 01 00 01
−5
11 01 00 01
−5
00 00 00
−6
00 00 11
−6
11 10
−7
00 11 01 00
−8
11 01 11 00
−8
00 11 10
−9
12. Explore the successors of path 00 11 01 11. The corresponding part of the received sequence is 00.
The path on top of the stack reached the end of the code tree. The decoded path is 00 11 01 11 00,
which coincide with the transmitted sequence v.
Path
Path metric
00 11 01 11 00
−1
11 01 11 11 01
−4
11 01 11 11 10
−4
11 01 00 01
−5
11 01 00 01
−5
00 00 00
−6
00 00 11
−6
11 10
−7
00 11 01 11 11
−7
00 11 01 00
−8
11 01 11 00
−8
00 11 10
−9
The corresponding partially explored code tree is represented in Figure 4.17.
As can be seen from Figure 4.17 we have to explore about 1

3 of the code tree in this example to ﬁnd the
decoded sequence. The Fano metric can easily be used for the soft-decisions as well and stack-algorithm
does not need any changes except the new metric for soft-decision decoding. The serious drawback of
the stack-algorithm is the necessity to keep the long list (stack) of paths-candidates and to sort the stack
at each stage.
4.5.2
Fano Algorithm
The Fano algorithm differs from the stack algorithm in such a way that it explores only the immediate
successors or predecessors of the current path. It never “jumps” as the stack-algorithm. It moves along
a certain path while the metric exceeds some threshold. In other cases it returns and explores the next
successor of the previous partial path.

188
Modulation and Coding Techniques in Wireless Communications
00
00
00
11
10
01
11
11
01
10
11
00
10
01
01
10
00
11
01
10
11
00
01
10
00
11
10
01
11
00
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
-2
-2
-4
-4
-1
-7
-3
-3
-2
-8
-4
-4
-5
-5
-6
-6
-3
-9
-2
-8
-1
-7
10
01
01
11
00
0
1
Figure 4.17
The partially explored code tree of Example 4.7. Stack-algorithm
Example 4.8 Consider the decoding of the same received sequence r = 10 01 01 11 00 as of Example
4.7 with the help of Fano algorithm. The same Fano symbol metric a = 0.5; b = −2.5 is used. Let the
threshold be −5.
1. Compare branches 00 and 11 with the received symbols 10. Both branches have the same metric −2.
The decoder can choose arbitrarily any of them. Let us in this example always choose the moving in
the upper part of the code tree if the alternatives are equal. Then the decoder choice is the moving
along the path 00. The current path metric is −2.
2. Compare the successors of path 00 branches 00 and 11 with the received symbols 01. Again the
branch metrics are equal and the decoder chooses the path 00 00. The current path metric is −4.

Convolutional Codes and Turbo-Codes
189
3. Compare the successors of path 00 00 branches 00 and 11 with the received symbols 01. The branches
again have the equal metrics but now the path metric −6 is less than threshold. That means the decoder
returns one step back to the path 00.
4. Explore the next successor of path 00, that is, the branch 11. Now the current path is 00 11 and the
current metric is −4.
5. Compare the successors of path 00 11 branches 01 and 10 with the received symbols 01. The branch
01 has the better metric and the new chosen path is 00 11 01 with metric −3.
The decoder continues in this manner and in two steps it ﬁnds the decoded sequence 00 11 01 11 00,
which is the correct answer. The corresponding code tree is represented in Figure 4.18. The dashed line
00
00
00
11
10
01
11
11
01
10
11
00
10
01
01
10
00
11
01
10
11
00
01
10
00
11
10
01
11
00
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
00
11
01
10
11
00
10
01
-2
-2
-4
-4
-1
-7
-3
-3
-2
-8
-4
-4
-5
-5
-6
-6
-3
-9
-2
-8
-1
-7
10
01
01
11
00
0
1
r =
Figure 4.18
The partially explored code tree of Example 4.8. Fano algorithm

190
Modulation and Coding Techniques in Wireless Communications
0.000001
0.00001
0.0001
0.001
0.01
0.1
1
0
1
2
3
4
5
6
7
8
9
10
Eb/No (dB)
BER
Uncoded
Viterbi hard, R=1/2, v = 7
Viterbi soft, R=1/2, v = 7
Sequential hard, R=1/2, v = 39
Figure 4.19
Performance comparison of different decoding algorithms for rate 1/2 convolutional codes. BPSK over
AWGN channel
shows the moving of the decoder along the tree. In fact, here only the idea of the Fano algorithm is
represented. The algorithm itself is more complicated and needs changes in the threshold during the
moving along the code tree.
The performance of different decoding algorithms is compared in Figure 4.19 (bit error probability
vs. SNR). As one can see from curves in Figure 4.19 the soft decision Viterbi decoding outperforms
the hard-decision Viterbi algorithm by 2 dB. The Viterbi decoding of code with the constraint length 7
is compared with the sequential decoding of code with ν = 39 because of signiﬁcant difference in the
decoding complexity of these methods. As can be seen from Figure 4.19 the comparable in complexity
Viterbi and sequential decoding algorithms provide signiﬁcantly different performance. Unfortunately,
in real life there is the serious limitation on use of sequential decoding because of the necessity of
buffering the input sequence while the algorithm is exploring the code tree. In cases where the input
symbol arrival rate exceeds the decoding rate, the buffer will overﬂow and the data will be lost. And the
buffer overﬂow threshold is a very sensitive function of SNR [5]. This fact restricts the use of sequential
decoding algorithms.
4.6
Parallel-Concatenated Convolutional Codes and Soft Input Soft
Output Decoding
Parallel-concatenated convolutional codes were introduced by Berrou, Glavieux and Thitimajshima [7].
The encoder of the parallel-concatenated convolutional code (or turbo-code) consists of two recursive
systematic convolutional (RSC) code encoders concatenated in such a way that one of the encoders is
fed via an interleaver. The codes are concatenated to employ the principle of iterative decoding. This
principle will be discussed later. As mentioned above usually at high values of SNR the systematic

Convolutional Codes and Turbo-Codes
191
uk
uk
zk
Turbo code
internal  interleaver 
u’k
z’k
D
D
D
D
D
D
Input 
Output
Input
Output
u’k
1st  constituent encoder
2nd constituent encoder
Figure 4.20
Structure of rate 1/3 Turbo encoder (dotted lines apply for trellis termination only)
convolutional codes show worse performance than nonsystematic convolutional codes, but at low SNR
values the opposite is true [7].
The structure of the RSC encoder is shown in Figure 4.20. As can be seen from Figure 4.20 the
RSC encoder can be represented as inﬁnite impulse response (IIR) ﬁlter. In fact, any nonrecursive
nonsystematic convolutional code is equivalent to some RSC code in the sense it generates the same set
of code sequences. The main difference in nonrecursive nonsystematic and RSC form of the encoder is
that for RSC encoder the low weight input sequence could generate an inﬁnite weight output sequence.
For example, the unit weight input sequence 00 . . . 00100 . . . will always generate a low weight sequence
at the output of the nonrecursive nonsystematic convolutional encoder, which is not the case for the RSC
encoder. This is a very important feature for the design of the parallel-concatenated codes. The other
important issue in the design of the parallel-concatenated codes is the using of the interleaver. Let us
consider the encoder of the turbo code used in 3GPP mobile radio system. The structure of this encoder
is shown in Figure 4.20. The output code sequence of the encoder is the result of multiplexing the output
sequences of the constituent codes. It is obvious that the weight distribution of the code sequences of
the turbo code depends on the way of combining the code sequences of the constituent encoders. For
example, the pairing of low weight code sequences of the constituent codes leads to poor performance
of the result code. This kind of pairing can be avoided with the help of the interleaver. For the encoder of
Figure 4.20 the minimum weight sequences of the constituent encoder is generated by the information
sequence . . .0 0 1 0 0 0 1 1 0 0 . . . . The weight of this code sequence is 6. Another information sequence
that generates the code sequence of the same weight 6 is . . .0 0 1 1 0 1 0 0 . . . . Due to the interleaver
it is not likely that one of these sequences appear at the input of the second constituent encoder if
it already appeared at the input of the ﬁrst encoder. That means the interleaver makes it possible to
decrease the probability of combining the two code sequences of minimum weight. As mentioned above,
the interleaver cannot help in cases where the low weight code sequence is generated by the information
sequence of weight 1, but because of the recursive structure of the constituent encoder of Figure 4.20
the information sequence . . .0 0 1 0 0 . . . generates the code sequence of weight 13. Thus the effect of
the recursive structure of the constituent encoder combined with the effect of the interleaver leads to the
rise in the distance structure of turbo code. Usually the turbo codes are used for the transmission of the
ﬁnite length codewords rather than the semi-inﬁnite sequences. In this case some zero tail bits are added
at the end of each information sequence, which leads to the ﬂush of the constituent encoders. For the

192
Modulation and Coding Techniques in Wireless Communications
encoder of Figure 4.20 six tail bits are padded after the encoding of information bits. The ﬁrst three tail
bits are used to terminate the ﬁrst constituent encoder and the second three tail bits are used to terminate
the second constituent encoder. For the encoder of Figure 4.20 the ﬂushing is performed by taking the
tail bits from the shift register feedback after all information bits are encoded, which corresponds to the
lower position of the switches.
An encoder of the type shown in Figure 4.20 is usually employed together with iterative decoding.
Each iteration of iterative decoding is executed in two phases. Each phase corresponds to the decoding of
the codeword of one of two constituent codes. The idea is that additional information about the reliability
of the information symbols obtained during decoding of one constituent code should be used in the
following phase.
The calculation of likelihood functions used in iterative decoding is based on Bayes’ rule:
P (u = i |r ) = p (r |u = i ) · P (u = i)
p(r)
,
i = 0, . . . , M −1
p(r) =
M−1
	
i=0
p (r |u = i ) · P (u = i)
(4.35)
where u is the symbol transmitted over the channel, M is the cardinal number of the alphabet, r is the
random variable at the channel output, P (u = i |r ) is the a posteriori probability (APP) of the decision
that transmitted symbol u = i conditioned on r, p (r |u = i ) is the probability density function (pdf) of
the random variable r conditioned on the transmitted symbol u = i, P (u = i) is the a priori probability
of occurrence symbol i at the channel input.
We will consider the binary case, that is, M = 2. Let the binary symbols 0 and 1 be represented by
the voltages −1 and +1 respectively. Then the maximum a posteriori (MAP) rule states that the decision
(u = +1) should be chosen in case P (u = +1 |r ) > P (u = −1 |r ) and otherwise the decision (u =
−1) should be chosen in case P (u = +1 |r ) < P (u = −1 |r ). The MAP rule provides the minimum
probability of error. The MAP conditions can be written in terms of likelihood ratios:
P (u = +1 |r )
P (u = −1 |r ) > 1,
decision (u = +1)
P (u = +1 |r )
P (u = −1 |r ) < 1,
decision (u = −1)
(4.36)
Using the Bayes’ rule the likelihood ratio P(u=+1|r )
P(u=−1|r ) can be written as follows:
P (u = +1 |r )
P (u = −1 |r ) = p (r |u = +1) · P (u = +1)
p (r |u = −1) · P (u = −1)
(4.37)
In practice, of more use is the metric called log-likelihood ratio (LLR). It can be obtained by taking the
logarithm of likelihood ratio and is denoted by L (u |r ). Using (4.37) obtain:
L (u |r ) = ln
 p (r |u = +1) · P (u = +1)
p (r |u = −1) · P (u = −1)

= ln
 p (r |u = +1)
p (r |u = −1)

+ ln
 P (u = +1)
P (u = −1)

(4.38)
or
L (u |r ) = Lc(r) + L(u)
(4.39)
The value L (u |r ) can be interpreted as the soft decision output of the demodulator; the value Lc(r) as
the reliability of the detected symbol, which can be obtained by the measurement of the channel at the
receiver input; and L(u) is the a priori LLR of the transmitted symbol (bit).
For the decoder of a systematic code the information is available both from the received information
symbols and from the redundant symbols. The information available from the redundant symbols is called
the extrinsic information. The information from the code stream L(u) is called the intrinsic information.

Convolutional Codes and Turbo-Codes
193
( )
)
(i
k
c r
L
)
(
ku
L
(
)
)
( p
k
c r
L
( )
k
ext u
L
ˆ
( )
ku
L ˆ
kuˆ
-
-
SISO
Decoder
Figure 4.21
A constituent Soft Input/Soft Output decoder
It was shown in [7] that for the systematic codes the extrinsic information does not depend on decoder
input. Then it is possible to obtain the soft output of the decoder in the following form:
L (ˆu) = L (u |r ) + Lext (ˆu)
(4.40)
where Lext (ˆu) denotes the extrinsic information. Substituting (4.30) into (4.40) obtain:
L (ˆu) = Lc (r) + L(u) + Lext (ˆu)
(4.41)
The decoder soft output L (ˆu) represents both the hard decision itself and the reliability of that hard
decision. The hard decision is deﬁned by the sign of L (ˆu) and the magnitude of L (ˆu) deﬁnes the
reliability of the hard decision. We can regard the extrinsic information Lext (ˆu) as the improvement
of the reliability of the received information symbol. The idea of the iterative decoding is to forward
to the next phase of decoding only the extrinsic information Lext (ˆu), since the information from the
information symbols is already available to it.
A constituent decoder that accepts a priori information at its input and produces a posteriori information
at its output is called a soft-input/soft-output (SISO) decoder. The constituent SISO decoder is shown
in Figure 4.21. The inputs of the SISO decoder are the information LLRs Lc(r (i)
k ) that agrees with the
transmitted information bits uk, the parity LLRs Lc(r (p)
k ) that agrees with the transmitted parity bits
zk or z′
k, and the a priori information L(uk). The decoder output is L(ˆuk). In accordance with (4.41)
we can obtain the extrinsic information by subtracting from the output the inputs Lc(r (i)
k ) and L(uk).
Also the sign of the output LLR L(ˆuk) gives us the hard decision, that is, the decoded information bits
ˆuk. Regarding these operations of subtraction and comparison with threshold as the inner operations of
the decoder we can say that the outputs of the SISO constituent decoder are the extrinsic information
Lext(ˆuk) and the decoded information bits ˆuk. This form of the decoder corresponds to the dashed line in
Figure 4.21.
The scheme of a standard turbo decoder is shown in Figure 4.22. The ﬁrst SISO decoder receives the
information LLRs Lc(r (i)
k ) that agrees with the transmitted information bits uk, the parity LLRs Lc(r (p)
k )
that agrees with the transmitted parity bits zk, and the a priori information L(uk). For the ﬁrst decoding
iteration it is assumed that the a priori information L(uk) = 0, that is, the information bits assumed
to be equally likely. The output of the ﬁrst SISO decoder is the extrinsic information Lext(ˆuk). The
second SISO decoder receives the interleaved information LLRs L′
c(r (i)
k ) that agrees with the interleaved
information bits u′
k and the parity LLRs L′
c(r (p)
k ) that agrees with the transmitted parity bits z′
k. The
interleaved extrinsic information obtained from the output of the ﬁrst SISO decoder is fed to the input
of the second SISO decoder and is used as the a priori information. The extrinsic information produced
by the second SISO decoder in turn is used after deinterleaving as the input a priori information for

194
Modulation and Coding Techniques in Wireless Communications
C
y
c
l
i
c
B
u
f
f
e
r
SISO
DECODER 1
Interleaver
Interleaver
SISO
DECODER 2
DeInterleaver
DeInterleaver
(
)
)
(i
k
c r
L
(
)
)
( p
k
c r
L
)
(
ku
L
(
)
)
(
'
i
k
c r
L
(
)
)
(
'
p
k
c r
L
(
)
k
ext u
L
ˆ
)
('
k
u
L
(
)
k
ext u
L
ˆ
'
'
ˆku
kuˆ
(
)
)
(i
k
c
k
r
L
u →
(
)
)
( p
k
c
k
r
L
z →
(
)
)
(
'
p
k
c
k
r
L
z →
Figure 4.22
A standard turbo decoder
the ﬁrst SISO decoder in the next decoding iteration. It is extrinsic information that is passed between
constituent SISO decoders, rather than the decoded data. As mentioned above usually the constituent
encoders of turbo encoder are terminated by the tail bits. Similarly, the constituent decoders of the turbo
decoder work on a block-by-block principle. The LLRs corresponding to the block of received symbols
(bits) are stored in the cyclic buffers and are fed to the inputs of the constituent SISO decoders at each
iteration. Usually several iterations are needed to achieve the required performance. After the last iteration
the decoded information bits (hard decisions) ˆuk can be obtained from the output of the second SISO
decoder.
In Figure 4.23 the curves of bit error probability vs. SNR for the decoder with a different number of
iterations are represented. As one can see, the performance of the turbo decoder increases with increasing
the number of iterations.
0.000001
0.00001
0.0001
0.001
0.01
0.1
1
0 
      1 
           2  
3 
      4 
           5  
6
Eb/No (dB)
BER
Uncoded
1 Iteration
2 Iterations
5 Iterations
Figure 4.23
Performance of turbo decoder with different number of iterations. BPSK over AWGN, MAP algorithm

Convolutional Codes and Turbo-Codes
195
4.7
SISO Decoding Algorithms
The main part of the turbo decoder is the SISO constituent decoder. Several different algorithms can
be used to implement the SISO decoder. These algorithms can be split into two groups. One group
represents the algorithms derived from the Viterbi algorithm and the second group includes algorithms
based on the Maximum A Posteriori (MAP) algorithm. In this section we will follow mostly the [8].
4.7.1
MAP Algorithm and Its Variants
The symbol-by-symbol MAP algorithm was introduced in 1974 by Bahl, Cocke, Jelinek and Raviv [9]
for decoding the convolutional codes. Very often the MAP algorithm is called the BCJR algorithm.
Unlike the Viterbi algorithm that minimizes the probability of error per sequence, the MAP algorithm
minimizes the probability of error per symbol. The implementation of the MAP algorithm is close to
the implementation of the Viterbi algorithm performing in forward-backward directions over a block of
code symbols. The MAP algorithm ﬁnds for each decoded bit uk the a posteriori LLR L (uk |r), where
r is the received sequence. This LLR corresponds to L (ˆu) in (4.41). We will denote it as L (ˆuk). Let us
consider one trellis section of a terminated trellis shown in Figure 4.24. If the previous state Sk−1 = i and
the present state Sk = j are known in a trellis then the input bit uk, which caused the transition between
these two states is also known. Then using the Bayes’ rule we can write L (uk |r) as follows:
L (ˆuk) = L (uk |r ) = ln
⎛
⎜⎝
	
(i, j)⇒uk=+1
P (Sk−1 = i, Sk = j, r)
	
(i, j)⇒uk=−1
P (Sk−1 = i, Sk = j, r)
⎞
⎟⎠
(4.42)
where (i, j) ⇒uk = +1 is the set of transitions from the state Sk−1 = i to the state Sk = j that can
occur if the input bit uk = +1, and similarly for (i, j) ⇒uk = −1 and P (Sk−1 = i, Sk = j, r) is the
joint probability that the previous state Sk−1 = i and the present state Sk = j conditioned on the received
binary sequence r. In the case of continuous output channel P (Sk−1 = i, Sk = j, r) is the probability
density function. The received sequence r can be split into three sections: the received symbols associated
with the current transition rk, the received sequence prior the current transition rprev and the received
sequence after the current transition rpost as shown in Figure 4.24.
....
....
....
....
Sk-1
Sk
Sk+1
Sk-2
i
j
rprev
rk
rpost
)
(
1 i
k−
α
)
( j
k
β
)
,
(
j
i
k
γ
Figure 4.24
A section of MAP decoder trellis

196
Modulation and Coding Techniques in Wireless Communications
Assuming that the channel is memoryless the properties of the Markov process can be used to write
the probability P (Sk−1 = i, Sk = j, r) as follows:
P (Sk−1 = i, Sk = j, r) = P

Sk−1 = i, Sk = j, rprev, rk, rpost

=
P

rpost |Sk = j

· P

Sk−1 = i, Sk = j, rprev, rk

=
P

rpost |Sk = j

· P ({Sk = j, rk} |Sk−1 = i ) · P

Sk−1 = i, rprev

(4.43)
Let us denote the probability that the trellis is in state i at time moment k −1 and the received sequence
prior to time moment k is rprev as αk−1(i):
αk−1(i) = P

Sk−1 = i, rprev

(4.44)
the probability that the received sequence after time moment k is rpost, conditioned on the trellis is in
state j at time moment k as βk( j):
βk( j) = P

rpost |Sk = j

(4.45)
and the probability of transition from state i at the time moment k-1 to state j at time moment k caused
by the received symbols rk as γk(i, j):
γk(i, j) = P ({Sk = j, rk} |Sk−1 = i )
(4.46)
The value γk(i, j) is called the branch metric associated with the transition i →j. Substituting (4.43),
(4.44), (4.45) and (4.46) into (4.42) obtain:
L (ˆuk) = L (uk |r) = ln
⎛
⎜⎝
	
(i, j)⇒uk=+1
αk−1(i) · βk( j) · γk(i, j)
	
(i, j)⇒uk=−1
αk−1(i) · βk( j) · γk(i, j)
⎞
⎟⎠
(4.47)
The MAP algorithm ﬁnds probabilities αk( j) and βk( j) for all possible states j throughout the trellis, that
is, for all values of k; and the branch metric γk(i, j) for all branches in the trellis.
Let us consider the calculation of αk(i), βk(i) and γk(i, j).
Consider the deﬁnition of the branch metric γk(i, j) in (4.46). Using the Bayes’ rule we can write
(4.46) as follows:
γk(i, j) = P ({Sk = j, rk} |Sk−1 = i ) = P (rk |{Sk−1 = i, Sk = j}) · P (Sk = j |Sk−1 = i ) =
P (rk |{Sk−1 = i, Sk = j}) · P (uk) = P (rk |xk ) · P (uk)
(4.48)
where uk is the input information bit necessary to cause the transition from state Sk−1 = i to state Sk = j;
P (uk) is a priori probability of bit uk.
Obviously the event (Sk−1 = i, Sk = j) coincides with the event that bit vector xk generated by the
transition (Sk−1 = i) →(Sk = j) was transmitted over the channel. Then (4.48) can be written as:
γk(i, j) = P (rk |{Sk−1 = i, Sk = j}) · P (uk) = P (rk |xk ) · P (uk)
(4.49)
If the encoder forms n output symbols (bits) during each transition the probability P (rk |xk ) can be
written in the following way:
P (rk |xk ) =
n−1

s=0
P

rk,s
xk,s

(4.50)
where xk,s is the transmitted bit and rk,s is the corresponding received symbol. Let us assume the
channel model to be ﬂat fading with Gaussian noise. Then the probability that the received symbol is

Convolutional Codes and Turbo-Codes
197
r conditioned on the transmitted bit x is:
P (r |x ) =
√Eb
√π · N0
· e
−Eb
N0 (r−ax)2
(4.51)
where Eb
N0 is the signal to noise ratio per bit; a is the fading amplitude (for nonfading Gaussian channel
a = 1). Then the branch metric can be calculated in the following way:
γk(i, j) = P(uk) ·
n
s=0
√Eb
√π · N0
· e
−Eb
N0 (rk,s−axk,s)
2
(4.52)
The a priori probability P(uk) can be derived from the input a priori LLR L(uk):
L(uk) = ln
 P(uk = +1)
P(uk = −1)

(4.53)
Solving the (4.53) for P(uk = +1) or for P(uk = −1), obtain:
P(uk = +1) =
eL(uk)
1 + eL(uk) ,
P(uk = −1) =
1
1 + eL(uk)
(4.54)
Taking into account that for the calculation of the numerator in (4.47) we need in P(uk = +1) rather
than P(uk) and for the calculation of the denominator we need in P(uk = −1) rather than P(uk), the
(4.54) can be used for calculation of the branch metrics in accordance with (4.49) or (4.52).
Consider αk( j). From the deﬁnition of αk−1(i) in (4.44) we can write:
αk( j) = P

Sk = j, rprev, rk

=

i
P

Sk−1 = i, Sk = j, rprev, rk

(4.55)
Using the Bayes’ rule and the properties of Markov process we can write (4.55) as follows:
αk( j) =

i
P

Sk−1 = i, Sk = j, rprev, rk

=

i
P
{Sk = j, rk}

Sk−1 = i, rprev
 
· P

Sk−1 = i, rprev

=

i
P ({Sk = j, rk} |Sk−1 = i ) · P

Sk−1 = i, rprev

=

i
αk−1(i) · γk(i, j)
(4.56)
That means the probabilities αk( j) can be calculated recursively. Assuming that the trellis has the initial
state S0 = 0, the initial conditions for this recursion are:
α0(S0 = 0) = 1
α0(S0 = i) = 0,
i ̸= 0
(4.57)
This is the forward recursion. Using the same technique it can be shown that the probabilities βk(i) can
be calculated with the help of backward recursion:
βk(i) =

j
βk+1( j) · γk+1(i, j)
(4.58)
Assuming the length of information sequence equal to K and that the tail bits put the encoder in the zero
state, the conditions for the backward recursion can be written as follows:
βK(SK = 0) = 1
βK(SK = i) = 0,
i ̸= 0
(4.59)

198
Modulation and Coding Techniques in Wireless Communications
Sk
Sk+1
Sk-1
)
( j
k
α
)
( j
k
β
)
(
1 i
k−
α
)'
(
1 i
k−
α
)
(
1 m
k+
β
)'
(
1 m
k+
β
)
,
(
j
i
k
γ
)
,'
(
j
i
k
γ
)
,
(
1
m
j
k+
γ
)'
,
(
1
m
j
k+
γ
)
,'
(
)'
(
)
,
(
)
(
)
(
:
recursion
Forward
1
1
j
i
i
j
i
i
j
k
k
k
k
k
γ
α
γ
α
α
⋅
+
⋅
=
−
−
)'
,
(
)'
(
)
,
(
)
(
)
(
:
recursion
Backward
1
1
1
1
m
j
m
m
j
m
j
k
k
k
k
k
+
+
+
+
⋅
+
⋅
=
γ
β
γ
β
β
Figure 4.25
Calculation of forward and backward recursion in MAP algorithm
The process of calculating forward and backward recursion in MAP algorithm is illustrated in Figure
4.25.
From the description given above, we see that the MAP decoding of a received sequence r to give the a
posteriori LLRs L (uk |r) can be carried out as follows. As the channel values rk,s are received, they and
the a priori LLRs L (uk) are used to calculate γk(i, j) according to (4.49) or (4.52). Then the forward
recursion in accordance with (4.56) and (4.57) can be used to calculate αk−1(i). When all channel values
have been received the backward recursion in accordance with (4.58) and (4.59) can be used to calculate
βk( j). Finally, all the calculated values αk−1(i), βk( j) and γk(i, j) are used to calculate a posteriori LLRs
L (uk |r) in accordance with (4.47).
In accordance with (4.41) the a posteriori LLR L (uk |r) can be represented as follows:
L (uk |r) = Lc
!
r (i)
k
"
+ L(uk) + Lext (ˆuk)
(4.60)
where Lc(r (i)
k ) is the information LLR that agrees with the transmitted information bit uk and Lext(ˆuk)
is the extrinsic information obtained as a result of decoding. As mentioned above we are interested in
passing to the next decoder the extrinsic information rather than the a posteriori LLR L(uk|r). To obtain
extrinsic information Lext(ˆuk) we should subtract values of Lc(r (i)
k ) and L(uk) from the a posteriori LLR
L(uk|r). In accordance with (4.38) the information LLR Lc(r (i)
k ) can be represented as:
Lc
!
r (i)
k
"
= ln
⎛
⎝
p
!
r (i)
k |uk = +1
"
p
!
r (i)
k |uk = −1
"
⎞
⎠
(4.61)
Assuming the channel model to be ﬂat fading with Gaussian noise, (4.61) can be written as:
Lc
!
r (i)
k
"
= 4 Eb
N0
· a · r (i)
k
(4.62)
where r (i)
k is the received symbol corresponding to the transmitted information bit uk and a is the fading
amplitude. For simplicity (4.62) can be rewritten as:
Lc
!
r (i)
k
"
= Lc · r (i)
k
(4.63)

Convolutional Codes and Turbo-Codes
199
where
Lc = 4 Eb
N0
· a
(4.64)
The MAP algorithm is, in the form described above, extremely complex. However, much work was done
to reduce its complexity. Initially the Max-Log-MAP algorithm was proposed by Koch and Bayer [10]
and Efranian et al. [11]. This technique simpliﬁes the MAP algorithm by transferring the recursions into
the log domain and invoking the approximation to dramatically reduce the complexity. Because of this
approximation its performance is suboptimal compared to that of the MAP algorithm. Later Robertson
[12] proposed the Log-MAP algorithm, which corrected the approximation used in the Max-Log-MAP
algorithm and hence gave a performance almost identical to that of the MAP algorithm, but at a fraction
of its complexity.
Max-Log-MAP Algorithm
The Max-Log-MAP algorithm simpliﬁes the calculations of MAP algorithm by transferring the equations
into the log arithmetic domain and then using the approximation:
ln

i
exi

≈max
i
(xi)
(4.65)
Then, with Ak(i), Bk(i) and k(i, j) deﬁned as follows:
Ak(i) = ln(αk(i)),
Bk(i) = ln(βk(i)),
k(i, j) = ln(γk(i, j))
(4.66)
we can rewrite (4.56) as
Ak( j) = ln(αk( j)) = ln

i
αk−1(i) · γk(i, j)

= ln
	
i
eAk−1(i)+k(i, j)

≈
max
i
(Ak−1(i) + k(i, j)
(4.67)
(4.67) implies that for each path in Figure 4.24 from the previous stage in the trellis to the state Sk = j
at the present stage, the algorithm adds a branch metric term k(i, j) to the previous value Ak−1(i) to
ﬁnd a new value Ak( j) for that path. The new value of Ak( j) according to (4.67) is then the maximum
of the values of the various paths reaching the state Sk = j. This can be thought of as selecting one path
as the “survivor” and discarding any other paths reaching the state. The value of Ak( j) should give the
natural logarithm of the probability that the trellis is in state Sk = j at stage k, given that the received
channel sequence up to this point has been rprev. However, because of the approximation of (4.65) used
to derive (4.67), only the Maximum Likelihood (ML) path through the state Sk = j is considered when
calculating this probability. Thus, the value of Ak( j) in the Max-Log-MAP algorithm actually gives the
probability of the most likely path through the trellis to the state Sk = j, rather than the probability of
any path through the trellis to state Sk = j. This approximation is one of the reasons for the sub-optimal
performance of the Max-Log-MAP algorithm compared to the MAP algorithm.
We see from (4.67) that in the Max-Log-MAP algorithm the forward recursion used to calculate Ak( j)
is exactly the same as the forward recursion in the Viterbi algorithm – for each pair of merging paths the
survivor is found using two additions and one comparison. Notice that for binary trellises the summation,
and maximization, over all previous states Sk−1 = i in (4.67) will in fact be over only two states, because
there will be only two previous states Sk−1 = i with paths to the present state Sk = j. For all other values
of Sk−1 we will have γk(i, j) = 0.

200
Modulation and Coding Techniques in Wireless Communications
Similarly to (4.67) for the forward recursion used to calculate the Ak( j), we can rewrite (4.58) as:
Bk(i) = ln(βk(i)) ≈max
j
(Bk+1( j) + k+1(i, j))
(4.68)
giving the backward recursion used to calculate the Bk(i)values. Again, this is equivalent to the re-
cursion used in the Viterbi algorithm except it proceeds backward rather than forward through the
trellis.
Using (4.49) and (4.52), we can write the branch metrics in the above recursive (4.67) and (4.68)
as:
k(i, j) = ln(γk(i, j)) = C + 1
2uk L(uk) + Lc
2
n−1

s=0
rk,s · xk,s
(4.69)
where C does not depend on uk or on the transmitted bits sequence xk and so can be considered a constant
and omitted. Hence, the branch metric is equivalent to that used in the Viterbi algorithm, with the addition
of the a priori LLR term uk L(uk). Furthermore, the correlation term 	n−1
s=0 rk,s · xk,sis weighted by the
channel reliability value Lc of (4.64).
Finally, from (4.47), we can write for the a posteriori LLRs L (ˆuk) = L (uk |r) that the Max-Log-MAP
algorithm calculates:
L (ˆuk) = L (uk |r) = ln
⎛
⎜⎜⎝

(i, j)⇒uk=+1
αk−1(i) · βk( j) · γk(i, j)
	
(i, j)⇒uk =−1
αk−1(i)·βk( j)·γk(i, j)
⎞
⎟⎟⎠≈
max
(i, j)⇒uk=+1 (Ak−1(i) + Bk( j) + k(i, j)) −
max
(i, j)⇒uk=−1 (Ak−1(i) + Bk( j) + k(i, j))
(4.70)
This means that in the Max-Log-MAP algorithm for each bit uk the a posteriori LLR L (ˆuk) = L (uk |r) is
calculated by considering every transition from the trellis stage Sk−1 to the stage Sk. These transitions are
grouped into those that might have occurred if uk = +1, and those that might have occurred if uk = −1.
For both of these groups the transition giving the maximum value of Ak−1(i) + Bk( j) + k(i, j) is
found, and the a posteriori LLR is calculated based on only these two “best” transitions.
Log-MAP Algorithm
Due to the approximation in (4.65) used in the Max-Log-MAP algorithm it has worse performance in
comparison with MAP algorithm. Robertson et al. [12] proposed to use instead of approximation in
(4.65) the exact formula:
ln(ex1 + ex2) = max(x1, x2) + ln(1 + e−|x1−x2|)
(4.71)
where ln(1 + e−|x1−x2|) can be regarded as a correction factor that will tend to zero as the difference be-
tween the arguments increases. Similarly to the Max-Log-MAP algorithm, values for Ak( j) = ln(αk( j))
and Bk( j) = ln(βk( j)) are calculated using a forward and a backward recursion. However, the maxi-
mization in (4.67) and (4.68) is complemented by the correction factor in (4.71). This means that the
exact rather than approximate values of Ak−1(i) and Bk( j) are calculated. The correction factor can
be stored in a look-up table. This means that the Log-MAP algorithm is only slightly more complex
than the Max-Log-MAP algorithm, but it gives almost the same performance as the MAP algorithm.
Depending on the size of used look-up table the performance of the Log-MAP algorithm can achieve the
performance of MAP algorithm.

Convolutional Codes and Turbo-Codes
201
4.7.2
Soft-In/Soft-Out Viterbi Algorithm (SOVA)
The Soft-In/Soft-Out Viterbi Algorithm (SOVA) was proposed by Hagenauer [13]. The SOVA operates
similarly to the Viterbi algorithm except the ML sequence is found with the help of modiﬁed metric. The
path metrics used in SOVA are modiﬁed to take account of a priori information when selecting the ML
path through the trellis. As shown above the Max-Log-MAP algorithm also outputs the ML sequence
over the whole trellis. Moreover, the recursion deﬁned by (4.67) selects the metric corresponding to the
ML path to node j, which in terms of the Viterbi algorithm is the survivor path. Thus the forward recursion
performs the same operations as the Viterbi algorithm [14]. Due to this fact the Viterbi algorithm can be
modiﬁed so that it provides a soft output in the form of the a posteriori LLR L (ˆuk) = L (uk |r) for each
decoded bit.
Consider the state sequence S(m)
k , which gives the states along the surviving path m at stage k in
the trellis. The Viterbi algorithm searches for the state sequence S(m) that maximizes the a posteriori
probability P

S(m) |r

. By using Bayes’ rule the a posteriori probability can be written as:
P

S(m) |r

= p

r
S(m) 
· P

S(m)
p(r)
(4.72)
Since the received sequence r is ﬁxed and does not depend on m it can be discarded. Then we can
equivalently maximize:
max
m
p

r
S(m) 
· P

S(m)
(4.73)
This maximization is realized in the code trellis, when for each state S(m) and each stage k, the path
with the largest probability P(S(m)
k , rk) is selected. This probability can be calculated by multiplying the
branch transition probabilities associated to path m. They are γl

i(m), j(m)
for 1 ≤l ≤k and deﬁned in
(4.49). The maximum is not changed if we take the logarithm, and hence the metric computations are
the same as described for the forward recursion of the Max-Log-MAP algorithm. The values Ak(i) and
Bk(i) from (4.67) and (4.68) are additive and the same for all paths m and therefore are irrelevant for
the maximization. Let us denote the path m entering state Sk = j(m) at the stage k by S( j(m))
k
. Then if the
path S( j(m))
k
at the kth stage has the path S(i(m))
k−1 as its preﬁx and assuming the memoryless channel we can
choose the following metric M(S( j(m))
k
) for the path S( j(m))
k
:
M
!
S( j(m))
k
"
= ln
!
P
!
S( j(m))
k
, rk
""
= M
!
S(i(m))
k−1
"
+ ln

γk

i(m), j(m)
(4.74)
Using (4.69) and omitting the constant C obtain:
M
!
S( j(m))
k
"
= M
!
S(i(m))
k−1
"
+ 1
2uk · L(uk) + 1
2
n−1

l=0
Lc · rk,l · xk,l
(4.75)
where uk is the information bit and xk,l are the coded bits of path m at the stage k.
This slight modiﬁcation of the metric of the Viterbi Algorithm in (4.75) with the additional term
uk · L(uk) included, incorporates the a priori information about the probability of the information bits.
The balance between a priori information L(u) and the channel reliability Lc is very important for the
SOVA metric. If the channel is very good, |Lc · r| will be larger than |L(u)|, and decoding relies on the
received channel values. If the channel is bad, as during the deep fade, decoding relies on the a priori
information L(u). In iterative decoding this is the extrinsic information from the previous decoding step
[15]. If this balance is not achieved, catastrophic effects may result in the degradation of the decoder
performance.
Let us now discuss the second modiﬁcation of the algorithm required, that is, to give soft output.
The modiﬁed Viterbi algorithm proceeds in the usual way by calculating the path metrics using (4.75).
If the two paths S( j(m))
k
and S( j(l))
k
reaching state Sk = j have metrics M(S( j(m))
k
) and M(S( j(l))
k
) respectively,

202
Modulation and Coding Techniques in Wireless Communications
and the path S( j(m))
k
is selected as the survivor because of higher metric, then we can deﬁne the metric
difference  j
k as:
 j
k = M
!
S( j(m))
k
"
−M
!
S( j(l))
k
"
≥0
(4.76)
The probability that the decision is correct P(correct decision at Sk = j) can be written as follows:
P(correct decision at Sk = j) =
P
!
S( j(m))
k
"
P
!
S( j(m))
k
"
+ P
!
S( j(l))
k
"
(4.77)
Using the metric deﬁnition in (4.74) we can rewrite (4.77) as:
P(correct decision at Sk = j) =
e
M

S( j(m))
k

e
M

S( j(m))
k

+ e
M

S( j(l))
k
 =
e j
k
1 + e j
k
(4.78)
Therefore the LLR that the decision is correct or “soft” value of this binary path decision is  j
k because:
ln
P(correct decision at Sk = j)
1 −P(correct decision at Sk = j) =  j
k
(4.79)
The examples of metric differences in trellis are shown in Figure 4.26. Along the ML path several
nonsurviving paths were discarded. Usually all the surviving paths at some stage in the trellis have come
from the same path at some point at most δ transitions before the given stage in the trellis. The value
δ is set to be ﬁve or six times the constraint length of the convolutional code. If the value of the bit uk
associated with the transition from state Sk−1 = i to state Sk = j on the ML path differs from the value
of corresponding bit of the competing path which merged with the ML path at stage k + δ and if this
competing path was chosen by the decoder, then there is a bit error. Thus, when calculating the LLR of
the bit uk, the SOVA must take into account the probability that the paths merging with the ML path from
stage k to stage k + δ in the trellis were incorrectly discarded. This is done by considering the values of
the metric difference si
i for all states si along the ML path from stage i = k to stage i = k + δ. It is
shown in [16] that this LLR can be approximated by:
L (uk |r) ≈uk ·
min
i=k...+δ,
uk̸=ui
k
si
i
(4.80)
where uk is the value of the bit given by the ML path and ui
k is the value of the corresponding bit in the
competing path that merged with the ML path and was discarded at the stage i. The minimum is only over
Sk+1
Sk+2
Sk
0
1
+
∆k
1
1
+
∆k
0
2
+
∆k
2
2
+
∆k
3
2
+
∆k
0
k
∆
1
k
∆
1
3
+
∆k
Sk+3
Figure 4.26
A section of SOVA decoder trellis

Convolutional Codes and Turbo-Codes
203
those nonsurviving paths, which would have led to different values of the bit uk. Consider the section
of trellis shown in Figure 4.26. In this ﬁgure solid lines represent transitions taken when the input bit is
–1, and dashed lines represent transitions taken when the input bit is +1. The bold line marks the ML
path. As can be seen from Figure 4.26 the ML path gives a value of –1 for uk. Assume that δ = 3. Then
we can make a decision about uk at stage Sk+3. The other paths merge with ML path at stages Sk, Sk+1,
Sk+2, Sk+3, which gives us the metric differences 1
k, 0
k+1, 2
k+2, 1
k+3. However, only the competing
paths merging with ML path at stages Sk+2 and Sk+3 give the opposite value +1 for bit uk. That means
only the minimum of values 2
k+2 and 1
k+3 should be taken into account during the calculation of soft
output for uk.
The SOVA can be implemented as follows:
Soft Input Soft Output Viterbi Decoding:
1. a) Initialize stage number k = 0.
b) Initialize M
!
S( j)
0
"
= 0 for j = 0, M
!
S( j)
0
"
= −∞for all j ̸= 0
2. a) Set k = k + 1.
b) Compute the metric M
!
S( j(m))
k
"
= M
!
S(i(m))
k−1
"
+ 1
2uk · L(uk) + 1
2
	n−1
l=0 Lc · rk,l · xk,l for each state
in trellis, where
m denotes the path (branch) number;
uk is the information bit of the path m;
xk,l is the lth bit of n bits for stage k associated with the branch m;
rk,l is the received value from the channel corresponding to xk,l;
Lc = 4 Eb
N0 · a is the channel reliability value;
L(uk) is the a priori information. This value is obtained from the previous decoding step. If there was
no previous decoding step this value is set to zero.
3. Find M( j)
k
= max
m
M
!
S( j(m))
k
"
for each state j.
4. Store M( j)
k
and its associated survivor bit and state paths.
5. Compute  j
k = M j
k −M
!
S( j(l))
k
"
≥0 for each state j, where M
!
S( j(l))
k
"
is the metric of the discarded
path.
6. Update  jmin
k
=
min
i=k−δ...,
uk̸=ui
k
si
i by choosing the minimum metric difference.
7. Go to step 2 until the end of the received sequence.
8. Output the estimated bit sequence u = {uk} and the corresponding LLRs
#
L (ˆuk) = L (uk |r) =
uk ·  jmin
k
$
.
As mentioned already earlier the recursion used to ﬁnd the metric in SOVA is identical to forward
recursion in (4.67) in Max-Log-MAP algorithm. Using the notation associated with the Max-Log-MAP
algorithm, once a path merges with the ML path, it will have the same value of Bk( j) as the ML path.
Hence, as the metric in the SOVA is identical to the Ak( j) values in the Max-Log-MAP, taking the
difference between the metrics of the two merging paths in the SOVA algorithm is equivalent to taking
the difference between two values of Ak−1(i) + Bk( j) + k(i, j) in the Max-Log-MAP algorithm, as
in (4.70). The only difference is that in the Max-Log-MAP algorithm one path will be the ML path,
and the other will be the most likely path that gives a different hard decision for uk. In the SOVA
algorithm again one path will be the ML path, but the other may not be the most likely path that gives a
different hard decision for uk. Instead, it will be the most likely path that gives a different hard decision
for uk and survives to merge with the ML path. Other, more likely paths, which give a different hard
decision for the bit uk to the ML path, may have been discarded before they merge with the ML path,
as shown in Figure 4.27. Due to this fact the performance of the SOVA algorithm is slightly worse

204
Modulation and Coding Techniques in Wireless Communications
Sk+1
Sk+2
Sk
2
2
+
∆k
Sk+3
ML path
Competing path in
Max-Log MAP
Competing path in
SOVA
1
−
=
ku
1
+
=
ku
0
1
2
3
Figure 4.27
Different competing paths in Max-Log-MAP and SOVA algorithm
compared to the performance of the Max-Log-MAP algorithm. However, as pointed out in [12] the
SOVA and Max-Log-MAP algorithms will always give the same hard decisions, as in both algorithms
these hard decisions are determined by the ML path, which is calculated using the same metric in both
algorithms.
In Figure 4.28 the performance of the different SISO decoding algorithms is compared. The simulation
results were obtained for QPSK modulation over ﬂat fading channel, the number of iterations in the turbo-
decoder was set to 8. As can be seen from Figure 4.28 the Log-MAP algorithm shows almost the same
performance as MAP algorithm. The performance of Max-Log-MAP and SOVA appears to be quite close
especially in the range of low SNRs, and in the range of high SNRs the Max-Log-MAP outperforms
SOVA about 0.5 dB due to the reasons discussed above.
0.000001
0.00001
0.0001
0.001
0.01
0.1
1
1             1.2            1.4            1.6            1.8              2             2.2             2.4
Eb/No (dB)
BER
MAP
Max-Log-MAP
Log-MAP
SOVA
Figure 4.28
Comparison of different SISO decoding algorithms

Convolutional Codes and Turbo-Codes
205
References
[1] Viterbi, A.J., Omura, J.K. Principles of Digital Communication and Coding, McGraw-Hill Book Company,
N.Y., 1979.
[2] Viterbi, A.J. “Error Bounds for Convolutional Codes and an Asymptotically Optimum Decoding Algorithm”,
IEEE Trans. Inf. Theory, IT-13, pp. 260–269, April 1967.
[3] Omura, J.K. “On the Viterbi Decoding Algorithm”, IEEE Trans. Inf. Theory, IT-15, pp. 177–179, January 1969.
[4] Proakis, J. G., Digital Communications, 3rd ed., New York, McGraw-Hill, 1995.
[5] Rappaport, T. S., Wireless Communications Principles and Practice, New Jersey, Prentice-Hall, 1996.
[6] Johannesson, R., Zigangirov, K. Fundamentals of Convolutional Coding. NJ: IEEE, 1999.
[7] . Berrou, C., Glavieux, A. and Thitimajshima, P. Near Shannon limit error-correcting coding: turbo codes.
Proceedings IEEE International Conference on Communications, Geneva, Switzerland, 1993, pp. 1064–1070.
[8] Woodard, J.P., Hanzo, L. Comparative Study of Turbo Decoding Techniques: An Overview. IEEE Transactions
on Vehicular Technology, vol.49, No.6, November 2000., pp. 2208–2233.
[9] Bahl, L., Cocke, J., Jelinek, F. and Raviv, J. Optimal decoding of linear codes for minimizing symbol error rate.
IEEE Transactions on Information Theory, IT-20, March 1974, pp. 284–287.
[10] Koch, W. and Baier, A. “Optimum and sub-optimum detection of coded data disturbed by time-varying inter-
symbol interference,” IEEE Globecom, pp. 1679–1684, Dec. 1990.
[11] Erfanian, J. A., Pasupathy, S. and Gulak, G. “Reduced complexity symbol detectors with parallel structures for
ISI channels,” IEEE Trans. Commun., vol. 42, pp. 1661–1671, 1994.
[12] Robertson, P., Villebrun, E. and Hoeher, P. “A comparison of optimal and sub-optimal MAP decoding algorithms
operating in the log domain,” Proc. Int. Conf. Communications, June 1995, pp. 1009–1013.
[13] Hagenauer, J. and Hoeher, P., “A Viterbi Algorithm with Soft-DecisionOutputs and Its Applications,”
GLOBECOM 1989, Dallas, Texas, pp.1680–1686, Nov. 1989.
[14] Burr, A. Modulation and Coding for Wireless Communications. Prentice Hall. 2001.
[15] Hagenauer, J., Offer, E., and Papke, L., “Iterative Decoding of Binary Block and Convolutional Codes,” IEEE
Transactions of Information Theory, Vol. 42, No. 2, pp. 429–445, March 1996.
[16] Hagenauer, J., “Source-Controlled Channel Decoding,” IEEE Transactions on Communications, Vol. 43, No.
9, pp. 2449–2457, Sept. 1995.
[17] Clark, G.C.C. Jr. and Cain, J.B. Error-Correcting Coding for Digital Communications. NY, Plenum Press, 1981.
[18] Lin, S., Costello, D. Error control codes: Fundamentals and Applications, Englewood Cliffs, NJ, Prentice Hall,
1981.

Appendix 4.A
Modiﬁed Chernoff Bound and
Some Applications
Andrey Troﬁmov
St. Petersburg State University of Aerospace Instrumentation, Russia
One of the most important problems in analysis of communication systems is error probability evaluation.
The exact computation of error probability for coded system is a hard, if not irresolvable, task for many
practical situations. That is why the upper bounding of error probability is a common method in system
performance estimation. In many cases the error probability can be computed using probability of large
deviation of a random variable. One of the most powerful techniques is based on usage of so called
Chernoff bound. This bound is very well-known and it is mentioned and referenced practically in any
monograph and textbook on coding, information and communication theory.
Let Z be a random value. It is necessary to evaluate the value of probability P = Pr[Z ≥0]. This
probability is equal by deﬁnition to:
P =
 ∞
0
wZ(x)dx
(4.A1)
where wZ(·) is probability density function of the random value Z. Straightforward computation of P by
(4.A1) can be difﬁcult or even not possible. For example, the explicit expression for probability density
function wZ(·) might be unknown. The following inequality gives the expression for common Chernoff
bound for probability P:
P ≤exp(−βZ)
(4.A2)
where bar denotes expectation, β is a parameter of the bound. It must satisfy the conditions β0 > β ≥0,
where β0 is upper bound for parameter following from convergence conditions of the right hand part of
(4.A2). The bound (4.A2) turns out to be most useful when the random variable is a sum of n independent
random variables. In such a case the bound (4.A2) is exponentially tight with respect to n. In this section
we consider an advanced approach to estimating the probability in (4.A1) leading to a non-exponential
reﬁnement of the bound (4.A2).
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

Modiﬁed Chernoff Bound and Some Applications
207
Let us introduce step function as:
e(x) =
 1,
x ≥0
0,
x < 0
then P =
 ∞
−∞e(x)wZ(x)dx = e(Z), where bar denotes expectation over all random variable un-
der the bar. Let
f (x) and ϕ(x) be functions such that f (x)ϕ(x) = e(x). It is clear, that P =
 ∞
−∞f (x)ϕ(x)wZ(x)dx.
Let us introduce an invertible integral transform:
F(α) =
∞

−∞
K1(α, x) f (x)dx
and
f (x) =
∞

−∞
K2(x, α)F(α)dα
Here K1(·, ·)and K2(·, ·) are kernels of forward and inverse transforms respectively. Then one can
write that:
P =
∞

−∞
ϕ(x)
⎛
⎝
∞

−∞
K2(x, α)F(α)dα
⎞
⎠wZ(x)dx =
∞

−∞
F(α)
⎛
⎝
∞

−∞
ϕ(x)K2(x, α)wZ(x)dx
⎞
⎠dα
or
P =
∞

−∞
F(α)(α)dα
where (α) = ϕ(Z)K2(Z, α) =
 ∞
−∞ϕ(x)K2(x, α)wZ(x)dx, F(α) =
 ∞
−∞K1(α, x) f (x)dx, and f (x)
and ϕ(x) are some functions, satisﬁed condition f (x)ϕ(x) = e(x).
Let us choose the Fourier transform as an integral transform, i.e., assume, that K1(α, x) = e−jαx,
K2(x, a) = (2π)−1e jαx. Let us assign ϕ(x) = eβx, where β > 0, and:
f (x) =
 e−βx,
x ≥0
0,
x < 0
Evidently, f (x)ϕ(x) = e(x). Then:
F(α) =
∞

0
e−βxe−jαxdx =
1
β + jα
and
(α) = 1
2π
∞

−∞
eβxe jαxwZ(x)dx = 1
2π e(β+ jα)Z = 1
2π CZ(α −jβ)
where
CZ(ω) = e jωZ =
∞

−∞
e jωxwZ(x)dx
is a characteristic function of random variable Z. Then the probability P can be found as:
P = 1
2π
∞

−∞
CZ(α −jβ)
β + jα
dα
(4.A3)

208
Modulation and Coding Techniques in Wireless Communications
where β > 0. In some cases computation or estimation of this integral is more simple than computation
of right hand part of the (4.A1); in particular it is possible to apply the following upper bound:
P = |P| = 1
2π

∞

−∞
CZ(α −jβ)
β + jα
dα

≤1
2π
∞

−∞

CZ(α −jβ)
β + jα
dα = 1
2π
∞

−∞
|CZ(α −jβ)|
	
β2 + α2
dα
giving as a result the inequality:
P ≤1
2π
∞

−∞
|CZ(α −jβ)|
	
β2 + α2
dα,
β > 0
(4.A4)
Bound 4.A4 can be optimized by choosing the optimum value of the free parameter β, because its value
is arbitrary, β > 0. In such form the value was given in [1].
The expressions or (4.A3) and (4.A4) are most helpful when the random variable Z is a sum of some
other random variables. We consider further examples with application in communication and coding
theory. All these examples deal with independent identically distributed (i.i.d.) random variables. But in
general the expressions (4.A2) and (4.A3) are applicable to the sum of dependent variables with different
distributions.
Example 4.A1 Binary symmetric channel.
Let Z = 
n
i=1 zi −n/2 = 
n
i=1 (zi −1/2), where zi, i = 1, 2, . . . , n, are i.i.d. deﬁned as follows:
zi =
 1,
with probability p,
0,
with probability 1 −p
The value p, p < 1/2, is considered as symbol error probability in a binary symmetric channel (BSC),
and the event Z > 0 corresponds to not more than n/2 errors occurring on the length n. In other words
P is the probability of error decoding of one of two sequences differing in n positions transmitted over
BSC. It is easy to see that:
CZ(ω) = e jωZ = e
jω
n
i=1
(zi −1/2)
=
n
i=1
e jω(zi −/2) =
n
i=1
e jω(zi −/2) = (pe jω/2 + (1 −p)e−jω/2)n
and
CZ(α −jβ) = (pe jα/2eβ/2 + (1 −p)e−jα/2e−β/2)n
Since the value of parameter β is arbitrary positive, β > 0, let us assign it as β0 = log((1 −p)/p). Then
it can be shown that:
CZ(α −jβ)|β=β0 =

2
	
p(1 −p)
n
cosn(α/2)
and after substitution into (4.A3) we get:
P =

2
	
p(1 −p)
n
In
where
In = 1
2π
∞

−∞
cosn(α/2)
β0 −jα dα

Modiﬁed Chernoff Bound and Some Applications
209
The remaining is to evaluate the value of this integral. Direct derivation gives:
In = 1
2π
∞

−∞
cosn(α/2)
β0 −jα dα = 1
2π
∞

−∞
cosn(α/2)(β0 −jα)
α2 + β2
0
dα =
= β0
2π
∞

−∞
cosn(α/2)
α2 + β2
0
dα −1
2π j
∞

−∞
α cosn(α/2)
α2 + β2
0
dα



=0
= β0
2π
∞

−∞
cosn(α/2)
α2 + β2
0
dα
Using the identities (see [2], equations 1.320.5, 1.320.7):
cos2n x = 1
22n
n−1

k=0
2Ck
2n cos 2(n −k)x + Cn
2n

(4.A5)
cos2n−1 x =
1
22n−2
n−1

k=0
Ck
2n−1 cos(2n −2k −1)x

(4.A6)
for n = 2m −1, m = 1, 2, . . . . we get:
In = I2m−1 = 1
2π
β0
22m−2
m−1

k=0
Ck
2m−1
∞

−∞
cos((α/2)(2m −2k −1))
α2 + β2
0
dα
It is known ([3], equation 859.001), that for a > 0, m ≥0:
∞

0
cos mx
a2 + x2 dx = π
2a e−ma
(4.A7)
Using the (4.A7) we have:
I2m−1 =
1
22m−1 e−β0((2m−1)/2)
m−1

k=0
Ck
2m−1ekβ0 ≤Cm−1
2m−1
22m−1 e−β0((2m−1)/2)
m−1

k=0
ekβ0
= Cm−1
2m−1
22m−1 e−β0((2m−1)/2) eβ0m −1
eβ0 −1 = = Cm−1
2m−1
22m−1 eβ0/2 1 −e−β0m
eβ0 −1
< Cm−1
2m−1
22m−1
eβ0/2
eβ0 −1
Since Cm−1
2m−1 = Cm
2m/2, Cm
2m < 4m/√πm, then:
I2m−1 <
1
√πm
eβ0/2
eβ0 −1
(4.A8)
Let us consider the even values of n, n = 2m. Using (4.A4), we get:
I2m = 1
2π
β0
22m
⎡
⎣
m−1

k=0
2Ck
2m
∞

−∞
cos(m −k)α
α2 + β2
0
dα + Cm
2m
∞

−∞
dα
α2 + β2
0
⎤
⎦
and further, using (4.A7),
I2m = e−β0m
22m
m−1

k=0
Ck
2mekβ0 + Cm
2m
22m+1 ≤Cm−1
2m
22m e−mβ0
m−1

k=0
ekβ0 + Cm
2m
22m+1 = Cm−1
2m
22m e−β0m eβ0m −1
eβ0 −1 + Cm
2m
22m+1 =
= Cm−1
2m
22m
1 −e−β0m
eβ0 −1
+ Cm
2m
22m+1 < Cm−1
2m
22m
1
eβ0 −1 + Cm
2m
22m+1

210
Modulation and Coding Techniques in Wireless Communications
Since Cm−1
2m
= (m/(m + 1))Cm
2m < Cm
2m, and Cm
2m < 4m/√πm, we have the inequality:
I2m <
1
√πm

1
eβ0 −1 + 1
2

=
1
2√πm
eβ0 + 1
eβ0 −1
(4.A9)
Combining (4.A7) and (4.A8) and taking into account that β0 = log((1 −p)/p), we get:
In <
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
1
√2π(n + 1)
2√p(1 −p)
1 −2p
for odd n, n = 2m −1,
1
√
2πn
1
1 −2p
for even n, n = 2m
Final expression for bound is:
P < K(β0, n)D0(β0)n
(4.A10)
where
K(β0, n) =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
2√p(1 −p)
√2π(n + 1)(1 −2p)
for odd n
1
√
2πn(1 −2p)
for even n
(4.A11a)
and
D(β0) = 2
	
p(1 −p)
(4.A11b)
Inequalities (4.A10) and (4.A11) look like the similar bound in [4]. Note, that common Chernoff bound
gives inequality P < (2√p(1 −p))n for all n, and the exact formula is:
P =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
n
i=n/2+1
Ci
n pi(1 −p)n−i + 1
2Cn/2
n
pn/2(1 −p)n/2,
n is even
n
i=(n−1)/2+1
Ci
n pi(1 −p)n−i,
n is odd
Figure 4.A1a gives an example of exact value and bounds for n = 5 The ratio of bounds and exact value
of the value P is shown in Figure 4.A1b.
Example 4.A2 Additive white Gaussian noise channel, binary antipodal signaling, soft decision demod-
ulation.
Let Z = 
n
i=1 zi, where zi = ni −A, i = 1, 2, . . . , n, ni are Gaussian i.i.d. with zero mean and
variance equal to one. The value of A, A > 0, can be expressed using signal to noise ratio E/N0 as
A = √2E/N0. Under these conditions the probability P = Pr[Z > 0] is the probability of decoding
error of two sequences differing in n positions in maximum likelihood decoding in AWGN channel
with soft output. It is well-known that exact formula for this probability is P = Q(√2nE/N0). But this
expression is difﬁcult to immediately use in, for example, evaluation of union bound for Viterbi decoding
based on code weight generating function.
Let us ﬁnd the characteristic function CZ(ω). It is equal to:
CZ(ω) = e jωZ = e
jω
n
i=1
zi =
n
i=1
e jωzi =
n
i=1
e jωzi = en(−jωA−ω2/2)

Modiﬁed Chernoff Bound and Some Applications
211
10
-2
10
-1
10
-6
10
-5
10
-4
10
-3
10
-2
10
-1
Exact value vs bounds (BSC, n=5)
p
0
0.02
0.04
0.06
0.08
0.1
0
5
10
15
20
25
30
35
Exact value / bounds (BSC, n=5)
p
Exact value
Chernoff bound
Modified Chernoff bound
Chernoff/Exact
Mod.Chernoff/Exact
Figure 4.A1
Binary symmetric channel. Chernoff bound vs exact value (a), ratio of exact value and bounds (b)
Therefore CZ(α −jβ) = e−n(β A+(α2−β2)/2)e−jnα(A−β)I|CZ(α −jβ)| = e−n(β A+(α2−β2)/2). After substitu-
tion of this expression into (4.A4) we get:
P ≤min
β≥0
1
2π e−n(β A−β2/2)
∞

−∞
e−nα2/2
	
β2 + α2 dα
Evidently:
∞

−∞
e−nα2/2
	
β2 + α2 dα < 1
β
∞

−∞
e−nα2/2dα = 1
β

2π
n
and hence:
P ≤min
β≥0
1
√
2πnβ
e−n(β A−β2/2)

212
Modulation and Coding Techniques in Wireless Communications
Let us set β equal to β0 = A = √2E/N0 (this value gives the minimum of exponent); then:
P < K(β0, n)D0(β0)n
(4.A12)
where
K(β0, n) =
1
2√πnE/N0
(4.A13)
and
D0(β0) = e−E/N0
(4.A14)
Common Chernoff bound in this case is P < e−nE/N0. It should be noted that the bound 4.A12 can be
easily obtained using the known bound for function Q(x) for x > 0:
Q(x) <
1
√
2πx
e−x2/2
Therefore the derivation of the bound (4.A12) illustrates the application of the general approach given
by formulas 4.A3 and 4.A4.
Example of bounds and exact value of probability P for n = 5 are shown in Figure 4.A2a. The ratio
of the bounds and exact value of the value P is shown in Figure 4.A2b.
-6
-4
-2
0
2
4
10
-7
10
-6
10
-5
10
-4
10
-3
10
-2
10
-1
10
0Exact value vs bounds (AWGN channel, n=5)
SNR, dB
-6
-4
-2
0
2
4
0
2
4
6
8
10
12
14
Exact value / bounds (AWGN channel, n=5)
SNR, dB
Exact value
Chernoff bound
Modified Chernoff bound
Chernoff/Exact
Mod.Chernoff/Exact
Figure 4.A2
AWGN channel. Chernoff bound vs exact value (a), ratio of exact value and bounds (b)

Modiﬁed Chernoff Bound and Some Applications
213
Example 4.A3 AWGN channel, orthogonal FSK signaling, noncoherent reception, soft decision de-
modulation.
In this model Z = 
n
i=1 zi, where zi = n2
3i + n2
4i −(n2i + a)2 −(n1i + b)2, i = 1, 2, . . . , n, and
n1i, n2i, n3i, n4i are i.i.d. Gaussian random values with zero mean ad variance equal to one. The value
of A = a2 + b2, A > 0, and it can be expressed using signal to noise ratio E/N0 as A = 2E/N0. Under
these conditions the probability P = Pr[Z > 0] is the probability of decoding error of two sequences
differing in n positions in maximum likelihood decoding in noncoherent AWGN channel with soft output.
As before, we are starting from derivation of the characteristic function. It is equal to:
CZ(ω) = e jωZ = e
jω
n
i=1
zi =
n
i=1
e jωzi =
n
i=1
e jωzi = cz(ω)n
(4.A15)
where
cz(ω) =
1
1 −2 jω
1
1 + 2 jω e−
jωA
1+2 jω
is characteristic function of zi, and Re( jω) < 1/2; this is condition of convergence the integral for
calculation of the average e jωzi .
Let us ﬁnd the value of cz(α −jβ). It can be shown that:
cz(α −jβ) =
1
(1 −2β) −j2α
1
(1 + 2β) + j2α exp

−(β(1 + 2β) + 2α2)A
(1 + 2β)2 + 4α2

exp ( j Aα)
and β < 1/2, as it is needed for Re( jω) < 1/2. Also there exists the restriction β > 0. Thus:
|cz(α −jβ)| =
1
	
(1 −2β)2 + 4α2
1
	
(1 + 2β)2 + 4α2 exp

−β(1 + 2β) + 2α2
(1 + 2β)2 + 4α2 A

for 0 < β < 1/2. It is easy to see that the factor in exponent:
β(1 + 2β) + 2α2
(1 + 2β)2 + 4α2
achieves minimum value of β/(1 + 2β) at α = 0, and it can be shown that:
|cz(α −jβ)| <
1
	
(1 −2β)2 + 4α2
1
	
(1 + 2β)2 + 4α2 e−β A
1+2β
Consider the expression ((1 −2β)2 + 4α2)((1 + 2β)2 + 4α2) in denominator:
((1 −2β)2 + 4α2)((1 + 2β)2 + 4α2) = (1 −4β2)2 + (1 −2β)24α2 + (1 + 2β)24α2 + (4α2)2 =
= (1 −4β2)2 + 4α2(1 −4β + 4β2 + 1 + 4β + 4β2) + (4α2)2 =
= (1 −4β2)2 + (4α2)2(1 + 4β2) + (4α2)2 >
> (1 −4β2)2 + 2(1 −4β)24α2 + (4α2)2 = ((1 −4β2) + 4α2)2
Therefore:
|cz(α −jβ)| <
1
(1 −4β2) + 4α2 e−β A
1+2β
(4.A16)
Substituting right hand part of inequality (4.A16) in (4.A15), and using it in (4.A4) we have:
P <
min
0<β<1/2
e−βnA
1+2β
2π
∞

−∞
1
 
(1 −4β2) + 4α2!n
1
	
α2 + β2 dα <
min
0<β<1/2
e−βnA
1+2β
2πβ
∞

−∞
dα
 
(1 −4β2) + 4α2!n

214
Modulation and Coding Techniques in Wireless Communications
or
P <
min
0<β<1/2
1
2πβ e−βnA
1+2β In
where
In =
∞

−∞
dα
 
(1 −4β2) + 4α2!n = 1
4n
∞

−∞
dα
 
(1 −4β2)/4 + α2!n
Let us estimate the value of this integral. It is known [3, equation 856.21], that:
∞

0
dx
(a2 + x2)n = 1 · 3 · 5 · · · · (2n −3)
2 · 4 · 6 · · · · (2n −2)
π
2a2n−1 = Cn−1
2n−2
22n−2
π
2a2n−1 ,
a > 0
(4.A17)
Applying this identity we get:
In = 1
4n 2Cn−1
2n−2
22n−2
π22n−1
2(1 −β2)(2n−1)/2 = 2πCn−1
2n−2
4n
	
1 −β2
(1 −4β2)n
then using the equation and bound:
Cn−1
2n−2 =
Cn
2nn2
(2n −1)2n =
n
2(2n −1)Cn
2n <
n
2(2n −1)
4n
√πn
(4.A18)
we come to:
In <
2πn
2(2n −1)√πn
	
1 −4β2
(1 −4β2)n
and
P <
min
0<β<1/2 K(β, n)D0(β)n
where
K(β, n) =
n
	
1 −4β2
2β(2n −1)√πn
and
D(β) =
1
1 −4β2 e−β A
1+2β
Introduce parameter 2β = λ. Then the ﬁnal expression for modiﬁed Chernoff bound becomes:
P < min
0<λ<1
n
(2n −1)√πn

1 −λ2
λ2

1
1 −λ2 e
−
λ
1+λ
E
N0
n
(4.A19)
Common Chernoff bound in this case is:
P < min
0<λ<1

1
1 −λ2 e
−
λ
1+λ
E
N0
n
(4.A20)
Optimal value of the parameter λ in right hand part of (4.A20) can be found from the equation:
d
dλ

−
λ
1 + λ
E
N0
−log(1 −λ2)

= 0

Modiﬁed Chernoff Bound and Some Applications
215
After solving this equation we have:
λ =
	
(E/N0)2 + 12(E/N0) + 4 −(E/N0 + 2)
4
(4.A21)
Value in (4.A21) can be used in bound (4.A19) instead of true optimum value which can be found
numerically. The true optimum value depends as it follows from (4.A19) on E/N0 and on n. The loss of
using suboptimal value in (4.A21) instead of optimal is very small.
Exact value of probability P can be found as [5, (1.42)]:
P = (e−nE/2N0/2)
n−1

i=0
(nE/2N0)i
i!(n + i −1)!
j−1

k=i
(k + n −1)!
(k −i)!2k+n−1
Figure 4.A3a illustrates the example of bounds and exact value of probability P for n = 5 for optimal
and suboptimal value of the parameter λ. The ratio of bounds and exact value of the value P is shown in
Figure 4.A3b.
-2
0
2
4
6
8
10
-6
10
-5
10
-4
10
-3
10
-2
10
-1
10
0
Exact value vs bounds (Noncoherent AWGN channel, n=5)
SNR, dB
-2
0
2
4
6
8
0
2
4
6
8
10
12
14
Exact value / bounds (Noncoherent AWGN channel, n=5)
SNR, dB
Exact value
Chernoff
Mod.Chernoff(suboptimum)
Mod.Chernoff(optimum)
Chernoff/Exact
Mod.Chernoff/Exact
Figure 4.A3
AWGN channel, binary FSK noncoherent reception. Chernoff bound vs exact value (a), ratio of exact
value and bounds (b)

216
Modulation and Coding Techniques in Wireless Communications
Example 4.A4 Rayleigh fading channel, binary FSK orthogonal signaling, noncoherent reception, soft
decision demodulation.
In
this
model
Z = 
n
i=1 zi,
where
zi = n2
3i + n2
4i −(n2i + x)2 −(n1i + y)2,
i = 1, 2, . . . , n,
n1i, n2i, n3i, n4i are i.i.d. Gaussian random value with zero mean and variance equal to one, x and
y are independent Gaussian random variables with zero mean and variance γ . The value of γ is equal
to average signal to noise ratio, γ = E/N0. The probability P = Pr[Z > 0] here is the probability of
decoding error of two sequences differing in n positions in maximum likelihood decoding in noncoherent
Rayleigh fading channel with soft demodulator output.
The characteristic function CZ(ω) in this case is:
CZ(ω) = e jωZ = e
jω
n
i=1
zi =
n
i=1
e jωzi =
n
i=1
e jωzi = cz(ω)n
(4.A22)
where
cz(ω) =
1
1 −2 jω
1
1 + 2 jω(γ + 1)
is characteristic function of the random variable zi. Again the condition Re( jω) < 1/2 arises here for
convergence of the expectation e jωzi . It follows from (4.A22), that:
CZ(α −jβ) =
"
1
1 −2 j(α −jβ)
1
1 + 2 j(α −jβ)(γ + 1)
#n
=
=
"
1
(1 −2β) −j2α ·
1
(1 + 2β(γ + 1)) + j2α(γ + 1)
#n
and
|CZ(α −jβ)| =
1
(γ + 1)n
⎡
⎢⎢⎣
1
	
(1 −2β)2 + 4α2 ·
1

1
γ +1 + 2β
2
+ 4α2
⎤
⎥⎥⎦
n
Let us assign β = β0 = γ/(4(γ + 1)). This value meets the condition 0 < β < 1/2. As a result we have:
|CZ(α −jβ0)| =
1
(γ + 1)n
1
"
γ +2
2(γ +1)
2
+ 4α2
#n =
1
4n(γ + 1)n
1
"
γ +2
4(γ +1)
2
+ α2
#n
From formulas 4.A3 and 4.A4 we get:
P ≤4(γ + 1)
2πγ
1
4n(γ + 1)n
∞

−∞
dα
"
γ +2
4(γ +1)
2
+ α2
#n
Taking into account (4.A16), we have:
P < 2Cn−1
2n−2
4n
(γ + 2)
γ
"4(γ + 1)
(γ + 2)2
#n
Using (4.A17) and introducing a parameter p = (γ + 2)−1 we obtain the ﬁnal expression for modiﬁed
Chernof bound for this example as:
P < K(β0, n)D(β0)
(4.A23)

Modiﬁed Chernoff Bound and Some Applications
217
where
K(β0, n) =
n
(2n −1)√πn
1
1 −2p
(4.A24a)
and
D(β0) = 4p(1 −p)
(4.A24b)
Common Chernoff bound for this case:
P < [4p(1 −p)]n
and the exact value is [6, equation (7.124b)]:
P = pn
n

j=0
C j
n−j+1(1 −p) j
Figure 4.A4a illustrates the example of bounds and exact value of probability P for n = 5. The ratio of
bounds and exact value of the value P is shown in Figure 4.A4b.
0
5
10
15
10
-6
10
-5
10
-4
10
-3
10
-2
10
-1
100Exact value vs bounds (Rayleigh channel, n=5)
SNR, dB
0
5
10
15
1
2
3
4
5
6
7
8
Exact value / bounds (Rayleigh channel, n=5)
SNR, dB
Exact value
Chernoff
Mod.Chernoff
Chernoff/Exact
Mod.Chernoff/Exact
Figure 4.A4
Rayleigh fading channel, binary FSK, noncoherent reception. Chernoff bound vs exact value (a), ratio
of exact value and bounds (b)

218
Modulation and Coding Techniques in Wireless Communications
+
+
Figure 4.A5
A rate convolutional encoder
To demonstrate usage of the modiﬁed Chernof bound let us consider an example of estimation bit
error probability for a convolutional code. The Viterbi decoding is assumed for decoding coded data
transmitted over AWGN channel. We assume also binary FSK and noncoherent soft demodulation. For
deﬁniteness let us assume binary convolutional code with rate R = 1/2 and constraint length ν = 3 with
encoder shown in Figure 4.A5.
It can be shown [7] that weight generation function for this code is given as:
T (Z, N) =
Z 6N 3 −Z 10N 3 + Z 6N
1 −2Z 2N 3 −3Z 2N + 2Z 6N 3
and
F(Z) = dT (Z, N)
dN

N=1
= 4N 6 −20N 8 + 11N 12 −3N 10 + 18N 15 −9N 19
(1 −5N 2 + 2N 6)2
The bit error probability can be upper bounded using common Chernoff bound as:
Pb < F(D0)
(4.A25)
where D0 is the Chernoff bound exponent deﬁned in this case, see (4.A20), as:
D0 = min
0<λ<1
1
1 −λ2 e
−
λ
1+λ
E
N0 =
1
1 −λ2
0
e
−
λ9
1+λ0
E
N0
here λ0 is optimal value of the parameter λ. Modiﬁed Chernoff bound leads to the bound:
Pb < K(d f )F(D0)
(4.A26)
where, coefﬁcient K(n) is deﬁned as (see (4.A19)),
K(n) =
n
(2n −1)√πn
&
1 −λ2
0
λ2
0
and d f is code free distance, d f = 6 for this example. The plots of bounds (4.A25) and (4.A26) and error
probability of the uncoded transmission are shown in Figure 4.A6. The difference between common and
modiﬁed Cheroff bound is about 0.4. . .0.5 dB in signal to noise ratio, and almost ten times in bit error
probability.

Modiﬁed Chernoff Bound and Some Applications
219
8
9
10
11
12
13
14
10
-7
10
-6
10
-5
10
-4
10
-3
10
-2
10
-1
SNR per bit, dB
Uncoded
Coded (Chernoff bound)
Coded (modified Chernoff bound)
bP
Figure 4.A6
Bounds on bit error probability based on common and modiﬁed Chernoff bound for binary convolu-
tional code, R = 1/2, v = 3, FSK2, noncoherent soft output demodulation
References
[1] Prabhu, V.K. “Modiﬁed Chernoff for PAM systems for noise and interference”. IEEE Trans. Information Theory,
vol. IT-28, 1982, N1, pp.95–100.
[2] Gradstein, I.S., Ryzhik, I. Tables of Integrals, Series and Products. NY, Academic, 1980.
[3] Dwight, H.B. Tables of Integrals and Other Mathematical Data. NY The Macmillan Co, 1961.
[4] Meeberg, L., van de “A Tightened Upper Bound on the Error probability of Binary Convolutional Codes with
Viterbi Decoding”, IEEE Trans. Information Theory, vol. IT-20, 1974, May, pp.389–390.
[5] Clark, G.C.C. Jr. and Cain, J.B. Error-Correcting Coding for Digital Communications. NY, Plenum Press, 1981.
[6] Wozencraft, J. M. and Jacobs, I.M. Principles of Communication Engineering, NY, Wiley, 1965.
[7] Wicker, S.B. Error Control Systems for Digital Communication and Storage. Upper Saddle River, New Jersey,
Prentice Hall, 1995.


5
Equalization
Sergei Semenov
Nokia Corporation, Finland
As discussed in Chapter 2, from the theoretical point of view the transmission of a digital signal requires
inﬁnite bandwidth. However, in real life the bandwidth is a shared and very expensive resource. So, in
real life we deal only with bandlimited systems. The result of this is that each received pulse is smeared
by adjacent pulses. This phenomenon called intersymbol interference (ISI) was described in Chapter
2. The ISI is one of the major obstacles to reliable data transmission over bandlimited channels. One
of the ways to eliminate or reduce the ISI is to use for transmission the waveforms obeying Nyquist
criterion, which was described in Section 2.1.3. Unfortunately, the use of pulse-shaping allows the ISI
to be eliminated only in the case of the ideal channel, that is, HC( f ) = 1, | f | ≤W, were HC( f ) is the
channel frequency function and W is the channel bandwidth. In this chapter we consider the methods of
reducing the ISI in case of nonideal channel. The general name for these methods is channel equalization
or simply equalization. These methods can be roughly divided into two broad categories: methods
based on sequence estimation, and methods based on equalization with ﬁlters. For the ﬁrst group of
equalization methods it is assumed that the data stream at the receiver is detected as a sequence rather
than each symbol being detected separately. It is quite logical since the ISI, by its nature, introduces
dependence of one symbol from the adjacent one. Therefore, each symbol in the received data stream
cannot be detected independently from the other symbols. This group of equalization methods includes
maximum-likelihood sequence estimation (MLSE), which is an optimal method, and some sub-optimal
methods, for example, sphere detection. The received signal corrupted by the channel in this case is not
changed by the equalizer. The equalizer just provides some information to the detection block, which
enables the detector to tune the decision thresholds accordingly to the channel conditions. Usually the
methods based on sequence estimation provide very good performance (an optimal one for MLSE) but
the drawback of these methods is high implementation complexity.
Another approach is based on the attempt to decrease the channel impact to transmitted data by ﬁltering
the received signal. The idea is to ﬁnd the ﬁlter that can compensate the distortion inserted to signal
by the channel. This approach allows sub-optimal algorithms only to be created but the implementation
complexity of these algorithms could be quite low.
One more approach to decreasing the ISI is using diversity. The most known example of this approach
is rake receiver that can be used for CDMA transmission over a multipath channel. Actually, rake receiver
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

222
Modulation and Coding Techniques in Wireless Communications
is quite seldom referred to as an equalizer. However, we consider it in this chapter since in many wireless
systems rake receiver is competing with equalization methods based on ﬁltering.
5.1
Equalization with Filtering
The approach based on ﬁltering the received signal is common to a large number of different equalization
methods. These methods can be divided into subcategories in accordance with different criteria. The
most obvious criterion is the type of ﬁlter used for equalization. In line with this criterion it is possible
to distinguish linear equalization and nonlinear equalization. In linear equalization the transversal
ﬁlters containing only feedforward elements are used and in nonlinear equalization ﬁlters containing
both feedforward and feedback elements can be used. Another criterion could be eagerness to adapt
the equalization ﬁlter to changing channel conditions. According to this criterion equalizers can be
considered as preset or adaptive. The preset equalizers are used if it is assumed that the channel is not
changing during the transmission time, and correspondingly it is enough to calculate the equalizer ﬁlter
coefﬁcients once before transmission. The adaptive equalizers are used when the channel is changing
during the transmission. In this case the equalizer ﬁlter coefﬁcients must be updated with every new
sample at the equalizer input or at least once per some small number of samples. Also, there exist so
called automatic equalizers, which are something intermediate between preset and adaptive equalizers.
Automatic equalizers are used in cases when it is assumed that during some short time period the channel
coefﬁcients can be considered as constants or when the channel is constant but unknown in advance,
then the equalizer coefﬁcients are updated once per this time period. One more criterion is the equalizer
ﬁlter’s resolution. If just one sample is fed to equalizer input per symbol time the equalizer is called
symbol spaced. If multiple samples are provided for each symbol the equalizer is known as fractionally
spaced [1]. The latter criterion can be applied to any equalizer independently as it is using ﬁltering or
some other equalization method.
It should be taken into account that an equalizer using the ﬁltering approach comprises not only
equalizer ﬁlter but also the block calculating the ﬁlter coefﬁcients. Usually this block is called tap solver.
If tap solver calculates the ﬁlter coefﬁcients based on known training sequence (transmitted periodically
or in parallel with data as in CDMA) the corresponding equalizer is called training sequence based
equalizer. If the training sequence is not used for calculation of ﬁlter coefﬁcients the corresponding
equalizer is called blind equalizer.
The scheme of wireless communication systems with ﬁlter based equalization is depicted in Figure
5.1. In the description of ﬁlter based equalization we will follow mostly [1]. As can be seen this
model resembles the system model depicted in Figure 2.14. Assuming that the overall system frequency
function is frequency function of raised-cosine ﬁlter HRC( f ), (2.43) can be written in the following
form [1]:
HRC( f ) = HTx( f ) · HC( f ) · HRx( f ) · HEq( f )
(5.1)
where HTx( f ) is the transmitter ﬁlter frequency function, HC( f ) is the channel frequency function,
HRx( f ) is the receiver ﬁlter frequency function and HEq( f ) is the equalizer ﬁlter frequency function.
However, in real life the channel frequency function HC( f ) usually is not known, and for this reason
the transmitter and receiver ﬁlters are designed in such a way that their overall frequency function
Figure 5.1
Communication system with equalization ﬁlter

Equalization
223
corresponds to raised-cosine ﬁlter:
HRC( f ) = HTx( f ) · HRx( f )
(5.2)
As it was described in Section 2.1.4, in this case transmitter and receiver ﬁlters are chosen in a way that
both ﬁlters have frequency function corresponding to root-raised-cosine ﬁlter. Then the equalizing ﬁlter
frequency function HEq( f ) should be the reversal of the channel frequency function HC( f ) (see (2.47)).
In fact, it is correct for zero-forcing equalizers only. For other types of equalizers this dependence is
more comprehensive.
Thus, receiver ﬁlter takes care of ISI induced by the transmitter ﬁlter and equalizer takes care of ISI
introduced by the channel. Then, the communication system model from the equalizer task point of view
can be simpliﬁed to the model depicted in Figure 5.2. Notice that in Figure 5.2 n′(t) comprises coloured
Gaussian noise rather than AWGN as in Figure 5.1.
Thus, we can assume that the transmitted data is modulated with raised-cosine pulses and the equalizer
task is to reconstruct the original raised-cosine pulse. Quite often the equalizer consists of two ﬁlters:
a noise-whitening ﬁlter, which “whitens” the noise sequence in such a way that the noise samples are
uncorrelated; and the equalizing ﬁlter itself. Actually, the noise-whitening ﬁlter depends only on HRx( f )
and can be determined a priori. Then the noise at the input of the equalizing ﬁlter can be considered as
an AWGN.
Assume that FIR ﬁlter of length 2N + 1 is used as the equalizing ﬁlter. Then the equalization is the
linear process and the corresponding equalizer schematic is represented in Figure 5.3.
The delay between ﬁlter taps τ corresponds to input samples rate. In this case the equalizer output
y(k) is the convolution of input samples x(k) and ﬁlter taps c(i) [1]:
y(k) =
N

i=−N
x(k −i) · c(i)
(5.3)
The ﬁlter taps must be adjusted by tap solving algorithm in such a way to reduce the effect of ISI caused
by the channel. For example, consider the equalizer ﬁlter output sequence of length 4N + 1:
y(k),
k = −2N, . . . , 2N
(5.4)
Then (5.3) can be written in matrix form as follows:
y = Xc
(5.5)
where
X =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
x(−N)
0
0
· · ·
0
0
x(−N + 1)
x(−N)
0
· · ·
0
0
...
...
...
...
...
...
x(N)
x(N −1)
x(N −2)
· · ·
x(−N + 1)
x(−N)
...
...
...
...
...
...
0
0
0
· · ·
x(N)
x(N −1)
0
0
0
· · ·
0
x(N)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
(5.6)
y =
⎡
⎢⎢⎢⎢⎢⎢⎣
y(−2N)
...
y(0)
...
y(2N)
⎤
⎥⎥⎥⎥⎥⎥⎦
,
c =
⎡
⎢⎢⎢⎢⎢⎢⎣
c(−N)
...
c(0)
...
c(N)
⎤
⎥⎥⎥⎥⎥⎥⎦
(5.7)

224
Modulation and Coding Techniques in Wireless Communications
Figure 5.2
Equivalent communication system model with colored Gaussian noise

Equalization
225
τ
τ
τ
τ
....
Tap Solver
c(-N)
c(-N+1)
Σ
x(k)
y(k)
Received Training Sequence
FIR Filter
c(N-1)
c(N)
Figure 5.3
Linear equalizer
Actually, the number of samples considered at the output of equalizer (that is, length of vector y and
number of rows in matrix X) does not depend on ﬁlter length (that is, length of vector c and number of
columns in matrix X). These values are design parameters of the equalizer. On the one hand, the greater
is the ﬁlter length, the more accurate the equalizer ﬁlter can compensate the ISI introduced by channel.
In theory, the equalizer ﬁlter must be of inﬁnite length to be able to compensate channel inﬂuence
completely. Of course, in real life the equalizer ﬁlter length is limited by complexity requirements.
Moreover, the greater is equalizer ﬁlter length, the more noise components are involved in calculation,
which in some cases can degrade the equalizer performance. The length of vector y depends on channel
impulse response length (or simply channel length) but in real life this parameter quite often is chosen
to be constant and depends on receiver requirements and system parameters, that is, it is assumed that
the equalizer is designed for some channel with a length not exceeding some constant). For example,
the greater is the symbol interval the smaller length of vector y can be chosen, since in this case only
long channel (that is, the channel with length of impulse response comparable with the symbol length)
can contribute severe ISI. Very often the special training sequence is used for estimation of channel
impulse response. Usually the training sequence comprises sequence of symbols known at the receiver
side. Without loss of generality we can assume that delta-function is fed at the channel input instead
of training sequence and thus we can estimate the channel impulse response h(t) (for simplicity we
will use notation h(t) instead of hC(t) for channel impulse response and H( f ) instead of HC( f ) for
channel frequency function). Then the equalizer ﬁlter coefﬁcients can be found by substituting in (5.5)
the channel matrix H instead of matrix X (channel matrix H is formed in the same way as matrix X) and
solving the obtained equation:
y = Hc
(5.8)
If matrix H is square matrix the solution is trivial:
c = H−1y
(5.9)

226
Modulation and Coding Techniques in Wireless Communications
but usually it is not the case. There are several methods of solving (5.8) if matrix H is not square matrix.
If the parameters are chosen as in the above example: equalizer ﬁlter length is 2N + 1 and length of
vector y is 4N + 1, the set of equations corresponding to (5.8) is called an overdetermined set and matrix
H cannot be inverted. Depending on the method of solving (5.8) it is possible to distinguish zero-forcing
equalization and minimum mean-square error (MMSE) equalization.
5.1.1
Zero-Forcing Equalization
The simplest way to solve (5.8) with the parameters deﬁned by (5.4) is just to delete N top and N bottom
rows of matrix H making it a square matrix and then inverting it. That means the length of vector y is
decreased from 4N + 1 to 2N + 1, and correspondingly the resulting equalizer is designed for shorter
channels. Another way is to increase the equalizer ﬁlter length up to 4N + 1 to obtain the square matrix
H. However, the equalizer length can be restricted by the complexity requirements.
Assume that the equalizer ﬁlter is of inﬁnite length. Then the cumulative impulse response of channel
and equalizer can be written in accordance with (5.3) as follows:
q(k) =
∞

i=−∞
h(k −i) · c(i)
(5.10)
And the equalizer output can be written as [2]:
y(k) = s(k) · q(0) +

i̸=k
s(i) · q(k −i)

	

ISI
+
∞

j=−∞
c( j) · n′(k −j)
(5.11)
where s(k) is the transmitted symbol and n′(k) is the equivalent noise (AWGN ﬁltered by the receiver
ﬁlter) as depicted in Figure 5.2. The ﬁrst term in (5.11) is the scaled version of transmitted symbol, the
second term comprises ISI and the third term is the noise ﬁltered by the equalizer ﬁlter. The peak value
of the ISI term is called the peak distortion. The peak distortion is given by:
D =
∞

k=−∞
k̸=0
|q(k)| =
∞

k=−∞
k̸=0

∞

j=−∞
c( j) · h(k −j)

(5.12)
As can be seen from (5.12) the peak distortion depends on equalizer ﬁlter coefﬁcients c( j). The most
obvious criterion of calculation of the equalizer ﬁlter coefﬁcients is the minimization of peak distortion.
In accordance with (5.12) the peak distortion can be reduced to zero if the following condition holds:
q(k) =
 1,
k = 0
0,
k ̸= 0
(5.13)
If the equalizer ﬁlter has the ﬁnite length of 2N + 1 taps that means the tap coefﬁcients in (5.10)–(5.12)
c( j) = 0 for | j| > N. Then the minimization of peak distortion criterion means that tap coefﬁcients must
be chosen in such a way that equalizer output is forced to zero at N sample points on either side of the
desired pulse [1]:
y(k) =
 1,
k = 0
0,
k = ±1, ±2, . . . , ±N
(5.14)
Vector y corresponding to (5.14) is used for solving (5.9). This kind of solution is called the zero-forcing
solution and the corresponding equalizer is called zero-forcing equalizer. In this case the noise term

Equalization
227
Figure 5.4
System model in accordance with zero-forcing solution (minimizing peak distortion)
in (5.11) is not taken into account, that is, the system model is simpliﬁed to one that is depicted in
Figure 5.4.
If the equalizer ﬁlter length is big enough to be calculated in this way equalizer ﬁlter coefﬁcients make
the equalizer frequency function HEq( f ) close to reciprocal of channel frequency function H( f ):
HEq( f ) =
1
H( f )
(5.15)
This gives perfect results with the absence of noise at the equalizer input. If we consider the noise impact
the serious problem with the zero-forcing approach arises when spectral nulls in channel frequency
function exist, since the gain of equalizer ﬁlter in those regions becomes very high. That results in
excessive noise enhancement, since the channel noise will also be passing through the equalizer. We can
assume that noise n′(t) is the Gaussian noise with zero mean and variance σ0. Actually the noise at the
equalizer ﬁlter is coloured noise since it is ﬁltered with the receiver ﬁlter, but if the equalizer ﬁlter is
coupled with the whitening ﬁlter we can assume that n′(t) is AWGN. Then the power spectral density of
the noise sequence n′′(t) at the equalizer output can be written as follows:
Sn′′(ω) = N0
2 HEq (exp( jωT )) |ω| ≤T
(5.16)
where N0 is the noise power spectral density at the equalizer input and the coefﬁcient 1
2 indicates that
power spectral density is double sided. In this case the noise power at the equalizer output can be
calculated as:
σ 2
n = N0
2 · T
2π
π/T

−π/T
HEq (exp( jωT )) dω = N0
2 · T
2π
π/T

−π/T
1
H (exp( jωT ))dω
(5.17)
Obviously σ 2
n can take very high values and even can be inﬁnite, for example, in cases when H (exp( jωT ))
is zero over an interval. Actually (5.17) is the IFT of HEq( f ) calculated at k = 0. Then (5.17) can be
written as:
σ 2
n = N0
2 · c(0)
(5.18)
where c(0) is the corresponding tap of the equalizer ﬁlter. Thus, the noise enhancement directly depends
on the value of the equalizer ﬁlter centre tap (to be more precise the noise enhancement depends on all
equalizer ﬁlter taps but the central tap contribution dominates), which is not desired since in some cases
this may lead to severe performance degradation.

228
Modulation and Coding Techniques in Wireless Communications
5.1.2
MMSE Equalization
Zero-forcing equalizer removes ISI completely (in the case of inﬁnite equalizer length) but it does
not take into account noise, which may lead to serious noise enhancement at the equalizer output.
A different solution taking into account noise is the equalization using minimum mean-square error
(MMSE) criterion.
Without loss of generality we can assume that the transmitted data sequence {s(k)} comprises the
realization of wide-sense stationary (WSS) random process. Now we will try to choose linear equalizer
using the MMSE criterion, that is, the equalizer must minimize the mean-square error (MSE) between
the original symbols {s(k)} and the equalizer output {y(k)}:
J = E
|ε(k)|2
= E
|s(k) −y(k)|2
(5.19)
Assume that the equalizer ﬁlter has an inﬁnite length (N = ∞). Then the equalizer output can be written
as follows:
y(k) =
∞

j=−∞
c( j) · x(k −j)
(5.20)
where x(k) is the equalizer input. Recall that the channel can be represented as a FIR ﬁlter. Then the
equalizer input can be written in the form of:
x(k) =
L−1

l=0
h(l) · s(k −l) + n(k)
(5.21)
where L is the channel length and n(k) is noise. As mentioned above n(k) is the coloured noise, but
assuming that the receiver ﬁlter is coupled with the whitening ﬁlter we can consider n(k) as AWGN with
PSD N0
2 .
As mentionned above the equalizer ﬁlter coefﬁcients should be chosen in such a way to minimize the
cost function (5.19). As can be seen from (5.19) cost function is the quadratic function. That means it
has only one extreme, and moreover since the function is the square of difference, this extreme is the
minimum. Then the minimization can be done in two ways. One way is to take the derivative of J with
respect to the equalizer ﬁlter coefﬁcients c( j) and equating the result to zero:
∇c J = 0
(5.22)
Then solving the (5.22) obtain the equalizer ﬁlter coefﬁcients that minimize J. Another way is to use the
principle of orthogonality. Principle of orthogonality claims that the cost function J reaches its minimum
value if the corresponding value of the error ε(k) is orthogonal to each input sample x(k −i) of the
equalizer ﬁlter for −∞< i < ∞:
E {ε(k) · x∗(k −i)} = E {(s(k) −y(k)) · x∗(k −i)} = 0,
−∞< i < ∞
(5.23)
In this case error ε(k) is not correlated with equalizer input. Substituting (5.20) in (5.23) obtain:
E
⎧
⎨
⎩
⎛
⎝s(k) −
∞

j=−∞
c( j) · x(k −j)
⎞
⎠· x∗(k −i)
⎫
⎬
⎭= 0,
−∞< i < ∞
(5.24)
This in turn leads to Wiener-Hopf equation:
∞

j=−∞
c( j) · E {x(k −j) · x∗(k −i)} =E {s(k) · x∗(k −i)} ,
−∞< i < ∞
(5.25)

Equalization
229
Solution of (5.25) depends only on second-order statistics given by autocorrelation:
rxx(i −j) = E {x(k −j) · x∗(k −i)}
(5.26)
and cross-correlation:
rsx(−i) = E {s(k) · x∗(k −i)}
(5.27)
Assuming that data signal can be represented as a random variable with zero mean and substituting
(5.21) in (5.26) yields:
rxx(i −j) =
L−1

l=0
h∗(l) · h(l + i −j) + N0
2 δi j =

rhh(i −j) + N0
2 δi j,
|i −j| ≤L −1
0,
otherwise
(5.28)
Applying the same assumptions to (5.27) obtain:
rsx(−i) =
 h∗(−i),
−L + 1 ≤i ≤0
0,
otherwise
(5.29)
Substituting (5.28) and (5.29) in (5.25) and taking z-transform of resulting equation obtain [2]:
C(z) ·

H(z)H ∗(z−1) + N0
2

= H ∗(z−1)
(5.30)
Assuming that noise whitening ﬁlter
1
H∗(z−1) is incorporated in the equalizer ﬁlter (5.30) can be written
as follows:
C′(z) ·

H(z)H ∗(z−1) + N0
2

= 1
(5.31)
That means the MMSE equalizer frequency function can be written as:
HEq( f ) =
1
H( f ) + N0
2
(5.32)
where H( f ) is the channel frequency function.
That means, unlike the zero-forcing equalizer, the MMSE equalizer avoids excessively amplifying the
noise, besides equalizing the channel. The main beneﬁt of using the MMSE equalizer is that it does not
allow noise enhancement as ZF does, especially in the case when the channel has a spectral null. If noise
is negligible, that is, N0 →0 the zero-forcing and MMSE equalizer become identical. When N0 > 0
the zero-forcing equalizer eliminates ISI completely but allows signiﬁcant noise enhancement, MMSE
equalizer suppresses noise but some residual ISI and noise will be observed at the output of the MMSE
equalizer. However, in general this residual ISI and noise at the output of the MMSE equalizer does not
lead to signiﬁcant performance degradation as noise enhancement does for ZF equalizer.
Now assume that the equalizer ﬁlter length is restricted to 2N + 1. Then (5.19) can be written as:
J = E
|ε(k)|2
= E
⎧
⎨
⎩

s(k) −
N

j=−N
x(k −j) · c(k)

2⎫
⎬
⎭= E
s(k) −xT c
2
(5.33)
where x = [x(k + N), x(k + N −1), . . . , x(k −N)]T , c = [c(−N), c(−N + 1), . . . , c(N)]T .
To ﬁnd the optimal values of the equalizer ﬁlter c(j) it is possible to apply the principle of orthogonality
as it was done above or simply differentiate J with respect to c(j) and set the result to zero. Then obtain
the following equation:
E

x
 
s(k) −xT c
!
= 0
(5.34)

230
Modulation and Coding Techniques in Wireless Communications
Rearranging, obtain:
r = Rc
(5.35)
where
r = E {s(k)x}
(5.36)
is the cross-correlation vector and:
R = E

xxH
(5.37)
is the auto-correlation matrix. Then the coefﬁcients of the MMSE equalizer ﬁlter can be calculated as:
c = R−1r
(5.38)
Another approach to calculation of the MMSE equalizer ﬁlter is to consider the equalizer ﬁlter as an
LMMSE estimator to the Bayesian linear model [3]. Sequence at the equalizer ﬁlter input x can be
written in the Bayesian linear model form:
x = Hs + n
(5.39)
where x = [x(k + N), x(k + N −1), . . . , x(k −N)]T is the sequence at the equalizer input, s =
[s(k + N), s(k + N −1), . . . , s(k −N), s(k −N −1), . . . , s(k −N −L + 1)]T is the transmitted se-
quence, n = [n(k + N), n(k + N −1), . . . , n(k −N)]T is the noise vector, and H is the ((2N + 1) ×
(2N + L)) channel matrix:
HT =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
h(0)
0
...
0
h(1)
h(0)
...
0
...
...
...
...
h(L −1)
h(L −2)
...
h(0)
0
h(L −1)
...
h(1)
...
...
...
...
0
0
...
h(L −1)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
The equalizer output sequence y is the estimate of the transmitted sequence s. Then in accordance
with the Bayesian Gauss-Markov Theorem [3] the LMMSE estimator of s can be written as:
y = E {s} + RssHH  
HRssHH + Rnn
!−1 (x −HE {s})
(5.40)
where Rss = E

ssH
is the auto-correlation matrix of the transmitted sequence s and Rnn = E

nnH
is the noise auto-correlation matrix. Assuming the noise being AWGN the noise auto-correlation matrix
can be represented as the diagonal matrix:
Rnn = E

nnH
=
⎡
⎢⎢⎢⎣
σ 2
0
0
0
0
0
σ 2
0
· · ·
0
· · ·
· · ·
...
...
0
0
· · ·
σ 2
0
⎤
⎥⎥⎥⎦= σ 2
0 I
(5.41)
where σ 2
0 = N0
2 is the noise variance.

Equalization
231
Quite often the transmitted sequence is masked with the pseudorandom sequence. For example, it is
done in wide-band signalling. In this case we can assume s to be a random i.i.d. sequence with zero mean
E {s} = 0 [4], [5]. With this assumption the auto-correlation matrix of the transmitted sequence s can be
represented also as a diagonal matrix:
Rss = E

ssH
=
⎡
⎢⎢⎢⎣
σ 2
s
0
0
0
0
σ 2
s
· · ·
0
· · ·
· · ·
...
...
0
0
· · ·
σ 2
s
⎤
⎥⎥⎥⎦= σ 2
s I
(5.42)
where σ 2
s is the transmitted signal power. Then (5.40) can be simpliﬁed to:
y = σ 2
s HH  
σ 2
s HHH + σ 2
0 I
!−1 x
(5.43)
Actually, we are interested in value y(k) only. That means we need only one row of matrix
σ 2
s HH  
σ 2
s HHH + σ 2
0 I
!−1 to calculate y(k). Moreover, this row can be regarded as coefﬁcients of the
equalizer ﬁlter. Then the corresponding values of the equalizer ﬁlter coefﬁcients can be calculated as
follows [5]:
c = σ 2
s δDHH  
σ 2
s HHH + σ 2
0 I
!−1
(5.44)
where δD is all zeroes (1 × (2N + L)) vector except for unity in the (D + 1)-th position. The delay D is
chosen in such a way to improve the equalizer performance [5].
With the assumptions (5.41) and (5.42) and with the best choice of D (5.44) may be derived directly
from (5.19). The corresponding system model is depicted in Figure 5.5. Notice that as can be seen from
Figure 5.5 the equalizer comprises simply a Wiener ﬁlter.
Then the cost function (5.19) may be written as follows:
J = E
|ε(k)|2
= E
|s(k −D) −y(k)|2
= E
|δDs −y(k)|2
(5.45)
Taking into account that y(k) is the result of ﬁltering sequence x with ﬁlter c y(k) = cx (5.45) can be
written as:
J = E
|δDs −y(k)|2
= E
|δDs −cx|2
(5.46)
Then substitution of (5.39) into (5.46) gives:
J = E
|δDs −cx|2
= E
|δDs −cHs −cn|2
(5.47)
Expanding (5.47) obtain:
J = E

((δD −cH)s −cn)
 
sH(δT
D −HHcH) −nHcH!
(5.48)
Figure 5.5
System model in accordance with MMSE solution

232
Modulation and Coding Techniques in Wireless Communications
Then taking in account that data and noise are uncorrelated E

snH
= 0 (5.48) is equivalent to:
J = (δD −cH) E

ssH  
δT
D −HHcH!
+ cE

nnH
cH
(5.49)
Substituting (5.41) and (5.42) into (5.49) obtain:
J = σ 2
s −σ 2
s δDHHcH −cσ 2
s HδT
D + c
 
σ 2
s HHH + σ 2
0 I
!
cH
(5.50)
Denote σ 2
s HδT
D by r and
 
σ 2
s HHH + σ 2
0 I
!
by R. Then (5.50) is the quadratic function of c:
J = σ 2
s −rHcH −cr + cRcH
(5.51)
Taking the derivative of J with respect to c and equating the result to 0 obtain:
∇cJ = 2
 
coptR −rH!
= 0
(5.52)
Then the optimal MMSE equalizer ﬁlter coefﬁcients are:
copt = rHR−1 = σ 2
s δDHH  
σ 2
s HHH + σ 2
0 I
!−1
(5.53)
which coincides with (5.44).
Actually, the same approach can be applied to zero-forcing equalization. It is easy to verify that in this
case the zero-forcing equalizer ﬁlter coefﬁcients can be obtained as follows:
cZ F = σ 2
s δDHH  
σ 2
s HHH!−1
(5.54)
The (5.44) or (5.53) can be written in another form. It can be done with the help of some matrix identities.
Let us start with the trivial identity:
A + ABA = A(I + BA) = (I + AB)A
(5.55)
It follows immediately from (5.55) that:
A(I + BA)−1 = (I + AB)−1A
(5.56)
Applying (5.56) to (5.44) obtain:
c = σ 2
s δD
 
σ 2
s HHH + σ 2
0 I
!−1 HH
(5.57)
To ﬁnd the equalizer ﬁlter coefﬁcients with the help of (5.57) it is necessary to invert (2N + L) × (2N +
L) matrix. So, the (5.44) is more popular for calculation of the equalizer ﬁlter coefﬁcients since it requires
the inversion of (2N + 1) × (2N + 1) matrix.
The coefﬁcients of the MMSE equalizer ﬁlter can also be found iteratively. As mentioned above, the
MSE is a quadratic function of c. The gradient of the MSE with respect to c gives the direction to change
equalizer ﬁlter coefﬁcients in such a way to increase the MSE. The gradient is described by (5.52). To
decrease the MSE, the equalizer ﬁlter coefﬁcients c must be updated in the direction opposite to the
gradient. Denote the equalizer ﬁlter coefﬁcients calculated at step k by ck. Then the process of updating
the MMSE equalizer ﬁlter coefﬁcients can be written as follows:
ck = ck−1 + µ (r −ck−1R)
(5.58)
where µ is a small positive constant that controls the rate of convergence to the optimal solution. This
kind of procedure is called the steepest descent algorithm.

Equalization
233
Channel
H( f )
s(k)
n(k)
Feedforward 
Filter
HF ( f )
x(k)
y(k)
Decision
Device
Feedback 
Filter
HB( f )
z(k)
ˆs(k)
Figure 5.6
Decision feedback equalizer structure
5.1.3
DFE
The linear equalizers usually perform poorly on channels having severe amplitude distortion [1]. Unfor-
tunately quite a few of these channels, especially the radio channels are characterized by this property. In
this case a nonlinear equalization may provide better performance. A decision feedback equalizer (DFE)
is a nonlinear equalizer that uses previous decisions to eliminate the ISI on current received signal. Recall
the equalizer output written in (5.11). Then the current received symbol can be estimated as follows:
ˆs(k) = y(k) −

i̸=k
s(i) · q(k −i)

	

ISI
(5.59)
In real life the previously transmitted symbols s(i) are not known, but it is possible to use previously
detected symbols ˆs(i) instead of s(i) assuming that they were detected correctly. So, the idea of DFE
algorithm is to estimate and subtract the impact of those interfering symbols which have been detected
earlier. The DFE consists of two parts: feedforward ﬁlter and feedback ﬁlter as it is depicted in Figure
5.6.
Assume that the feedforward equalizer ﬁlter has the ﬁnite length of K1 + 1 taps and the feedback
equalizer ﬁlter has the ﬁnite length of K2 taps. Then the equalizer output can be expressed as [2]:
z(k) =
0

i=−K1
cF(i) · x(k −i) +
K2

i=1
cB(i) · ˆs(k −i)
(5.60)
where cF(i) denotes the coefﬁcients of the feedforward ﬁlter and cB(i) the coefﬁcients of the feedback
ﬁlter, ˆs(i) are previously detected symbols.
The ISI can be split into two parts: precursor ISI (involving data ahead of the detection time) and
postcursor ISI (involving data behind the detection time). The task of the feedforward ﬁlter is to decrease
the precursor ISI as much as possible, pushing its energy into the postcursor domain. It is also sufﬁcient
for the feedforward ﬁlter to keep the noise enhancement as small as possible. And the task of the feedback
ﬁlter is to cancel the postcursor ISI. Notice that the feedforward ﬁltering modiﬁes the postcursor ISI.
To be more precise the feedforward ﬁltering adds some more ISI to the postcursor domain since it
redistributes the precursor ISI energy into the postcursor region. However, the feedback ﬁlter is capable
of cancelling even the increased postcursor ISI if the previously detected symbols were detected correctly.
The precursor and postcursor ISI before feedforward ﬁltering is depicted in Figure 5.7. The ISI after
feedforward ﬁltering is depicted in Figure 5.8. The result of feedforward ﬁltering is the severe decrease
of the precursor ISI and the increase of the postcursor ISI. Notice that the detection time after the
feedforward ﬁltering is delayed.

234
Modulation and Coding Techniques in Wireless Communications
Precursor ISI
Postcursor ISI
0
1
2
3
4
-1
-2
-3
h(k)
k
Figure 5.7
ISI before feedforward ﬁltering
Both zero-forcing and MMSE principle can be used for calculation of the feedforward and feedback
ﬁlter coefﬁcients. Since the MSE criterion provides better results than the peak distortion criterion we
will consider here the MMSE solution only.
Assume that all previously detected symbols were detected correctly. That means ˆs(i) = s(i). Then
(5.60) can be represented in matrix form as follows:
z(k) = cFx + cBs
(5.61)
where x = [x(k + K1), x(k + K1 −1), . . . , x(k)]T , s = [s(k −1), s(k −2), . . . , s(k −K2)]T , cF =
[cF(−K1), cF(−K1 + 1), . . . , cF(0)], cB = [cB(1), cB(2), . . . , cB(K2)]. Actually, we can consider feed-
forward and feedback ﬁlters as two parts of one equalizer ﬁlter c = [cF, cB].
Then the MSE criterion is given by:
J = E
|ε(k)|2
= E
|s(k) −z(k)|2
= E
|s(k) −cFx −cBs|2
(5.62)
Differentiating (5.62) with respect to cF and cB and equating the result to zero obtain:
∇cF J = E

(s(k) −cFx −cBs)
 
−xH!
= −E

s(k)xH
+ cF E

xxH
+ cB E

sxH
cB = 0
(5.63)
∇cB J = E

(s(k) −cFx −cBs)
 
−sH!
= −E

s(k)sH
+ cF E

xsH
+ cB E

ssH
= 0
(5.64)
Then solving the (5.63) and (5.64) obtain the equalizer ﬁlter coefﬁcients that minimize J. With the same
assumptions that were made in Section 5.1.2 that the data symbols s(i) comprise a random i.i.d. sequence
with zero mean, E {s(k)s} = 0 and E

ssH
= σ 2
s I. Then (5.63) and (5.64) can be simpliﬁed to:
 E {s(k)x} = cF E

xxH
+ cB E

xsH
σ 2
s cB = −cF E

xsH
(5.65)

Equalization
235
Figure 5.8
ISI after feedforward ﬁltering
Solving system 5.65 obtain:

cF =
 
E

xxH
−σ −2
s
E

xsH
E

sxH!−1 E {s(k)x}
cB = −σ −2
s cF E

xsH
(5.66)
This solution does not include optimization over delay, which can improve the equalizer performance
[4, 5].
System model taking into account the equalizer ﬁlter delay is depicted in Figure 5.9.
Figure 5.9
System model with DFE

236
Modulation and Coding Techniques in Wireless Communications
Figure 5.10
Simpliﬁed system model with DFE
Now assuming that previously detected symbols were detected correctly the input of the feedback
ﬁlter ˆs(k) can be substituted by transmitted symbols and taking in account the delay D the substitute is:
ˆs(k) = s(k −D)
(5.67)
The corresponding simpliﬁed system model is depicted in Figure 5.10.
Notice that this simpliﬁed model of the DFE became linear. With the assumption (5.67), (5.60) can
then be written as:
z(k) =
0

i=−K1
cF(i) · x(k −i) +
K2

i=1
cB(i) · s(k −D −i)
(5.68)
Expanding (5.68) obtain:
z(k) =
0"
i=−K1
cF(i) ·
L−1
"
l=0
h(l) · s(k −l −i) + n(k −i)

+
K2
"
i=1
cB(i) · s(k −D −i)
=
0"
i=−K1
q(i) · s(k −i) +
K2
"
i=1
cB(i) · s(k −D −i) +
0"
i=−K1
cF(i) · n(k −i)
(5.69)
where
q(i) =
L−1

l=0
h(l) · cF(i −l)
(5.70)
Then the MSE criterion can be written as follows:
J = E
|ε(k)|2
= E
|s(k −D) −z(k)|2
= E
|s(k −D) −cFx −cBˆs|2
= E
|s(k −D) −cFHs −cBˆs −cFn|2
(5.71)
where s = [s(k), s(k −1), . . . , s(k −K1 −L)]T , ˆs = [s(k −D −1), s(k −D −2), . . . , s(k −D−
K2)]T , n = [n(k + K1), n(k + K1 −1), . . . , n(k)]T .
Differentiating (5.71) with respect to cB and equating to zero obtain:
∇cB J = E

(s(k −D) −cFHs −cBˆs −cFn)
 
−ˆsH!
(5.72)
= −E

s(k −D)ˆsH
+ cFHE

sˆsH
+ cB E
ˆsˆsH
+ cF E

nˆsH
= 0
Taking in account that ˆs = [s(k −D −1), s(k −D −2), . . . , s(k −D −K2)]T does not contain the
element s(k −D), E

s(k −D)ˆsH
= 0. Assuming that data and noise are not correlated, E

nˆsH
= 0.

Equalization
237
In accordance with (5.42) E
ˆsˆsH
= σ 2
s I. Notice that vectors s and ˆs may overlap in case D < K1 +
L + 1. In fact, delay D cannot be greater than K1 + L + 1 since it is the delay introduced by ﬁltering.
Then assuming K2 + D < K1 + L + 1, E

sˆsH
can be written as follows:
E

sˆsH
= σ 2
s M
(5.73)
where
M =
#
0K2×DIK2×K20K2×(K1+L−K2−D+1)
$T
(5.74)
Then (5.72) can be reduced to:
∇cB J = σ 2
s (cFHM + cB) = 0
(5.75)
That means the optimal coefﬁcients of the feedback ﬁlter cB can be expressed as:
cB = −cFHM
(5.76)
Substitution of (5.76) into (5.71) gives:
J = E
|s(k −D) −cFHs + cFHMˆs −cFn|2
(5.77)
Then differentiating (5.77) with respect to cF and equating to zero obtain:
∇cF J = E

(s(k −D) −cFHs + cFHMˆs −cFn)
 
−sHHH + ˆsHMHHH −nH!
= −E

s(k −D)
 
sHHH −ˆsHMHHH + nH!
+ cFHE

ssH
HH −cFHE

sˆsH
MHHH + cFHE

snH
−cFHME
ˆssH
HH + cFHME
ˆsˆsH
MHHH −cFHME
ˆsnH
+ cF E

nsH
HH −cF E

nˆsH
MHHH + cF E

nnH
= 0
(5.78)
Taking in account the same assumptions as above (5.78) can be reduced to:
∇cF J = −E

s(k −D)sH
HH
+ cFσ 2
s HHH −cFσ 2
s HMMHHH
−cFσ 2
s HMMHHH + cFσ 2
s HMMHHH
+ cFσ 2
n I
= −E

s(k −D)sH
HH + cF
 
σ 2
s HHH −σ 2
s HMMHHH + σ 2
0 I
!
= 0
(5.79)
Recall that s(k −D) can be written as δDs, where δD is all zeroes (1 × (K1 + L + 1)) vector except for
unity in the (D + 1)-th position. Then the optimal coefﬁcients of the feedforward ﬁlter can be calculated
as follows:
cF = δDHH  
σ 2
s HHH −σ 2
s HMMHHH + σ 2
0 I
!−1
= δDHH  
σ 2
s H
  
I −MMH!
HH!
+ σ 2
0 I
!−1
(5.80)
Designating P = I −MMH obtain:
cF = δDHH  
σ 2
s HPHH + σ 2
0 I
!−1
cB = −cFHM
(5.81)
Comparing (5.81) and (5.44) one can see that the main difference in calculation the ﬁlter coefﬁcients of
the LMMSE equalizer and the DFE feedforward ﬁlter is that for LMMSE P = I. Actually that means
the DFE feedforward ﬁlter is designed in such a way that it does not try to suppress ISI on the whole
length of data vector s. Matrix P deﬁnes some “window” where only noise rather than ISI is suppressed.
This is done to more effectively push the precursor ISI energy to the postcursor region.
The derivation of optimum feedforward and feedback ﬁlter coefﬁcients relies on the assumption (5.67).
However, in real life there could be errors in data detection. Unfortunately, in this case the postcursor ISI

238
Modulation and Coding Techniques in Wireless Communications
LMMSE
Despread
Detect
Re-spread
Despread
Detect
Re-spread
+
Feedback 
filter
Feedforward 
filter
Despread
Z-G-DL
Delay on the order of a 
symbol duration
received chip
sequence
Delay = 
DL chips
Delay = G chips
+
Figure 5.11
Two-stage equalization for CDMA-type system
ampliﬁed due to feedforward ﬁltering cannot be cancelled and is propagated to the next data symbols.
In this case the DFE faces the phenomena of error propagation, that is, one detection error can lead to a
long series of equalization errors.
The usage of DFE in wideband systems where each symbol is spread to the sequence of chips
differs from the case of narrowband transmission. Notice that for the linear ZF and LMMSE equalizers
there is almost no difference between symbol-level and chip-level transmission due to linearity of these
equalizers. DFE is not possible to use without any changes for chip-level transmission since the chip
SNR is extremely low and thus there is no sense to use chip decisions for the feedback ﬁlter input.
The solution for this problem suggested in [6] can be the use of two-stage equalization when the linear
equalizer is used at ﬁrst stage, and the DFE at the second stage as can be seen in Figure 5.11.
Of course, the feedback delay in this case is increased that makes the implementation requirements
tougher. The ﬁrst stage LMMSE equalizer has delay DL chips, the detected/recreated chip sequence is
delayed by G + DL chips relative to the input. This delay should be applied at the DFE input to align
the two stages. The delay in the DFE feedforward ﬁlter D is the separate parameter. That means the DFE
output is delayed by G + DL + D chips relative to the input.
Applying the same technique as above it can be shown that the optimum coefﬁcients of the feedforward
and the feedback ﬁlters can be calculated as follows [6]:
cF =
 
 −X−1XH!−1 k
cB = −1
σ 2
s
XHcF
(5.82)

Equalization
239
where
 = σ 2
s HHH + σ 2
0 I,
(5.83)
X = σ 2
s H
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
0
· · ·
0
...
...
...
0
· · ·
0
1
· · ·
0
...
...
...
0
· · ·
1
0
· · ·
0
...
...
...
0
· · ·
0
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
= σ 2
s H
⎡
⎣
OD+1×K2
IK2×K2
OK1+L−K2−D−2×K2
⎤
⎦= σ 2
s ˜H
(5.84)
 = σ 2
s IK2×K2
(5.85)
k = σ 2
s HδD
(5.86)
Substituting (5.83)–(5.86) into (5.82) obtain:
cF = σ 2
s
%
σ 2
s HHH + σ 2
0 I −σ 2
s ˜H ˜H
H&−1
HδD
cB = −˜HHcF
(5.87)
5.2
Equalization Based on Sequence Estimation
All equalization techniques considered in Section 5.1 employ the observation of a limited number of
received symbols (corresponding to the ﬁlter length) to make a decision about one symbol. In cases
where the channel length is greater than the equalizer ﬁlter length these methods cannot provide the
optimal solution. In general, the optimum decision criterion requires that the entire sequence of received
symbols is observed for making the decision. There are two principles that can provide optimal decision
based on observation of the whole received sequence. One is MAP principle and another is maximum
likelihood sequence estimation (MLSE). Both principles were considered in Chapter 4 for decoding the
convolutional codes. Here we will consider the application of these principles for the equalization.
5.2.1
MLSE Equalization
Consider the received sequence at the equalizer input as it is described in (5.21) where k = 0, . . . , K −1.
Now we try to make the decision on the whole sequence of transmitted symbols {s(k)}K−1
k=0 rather than
on one symbol s(k).
Let vector s = [s(0), s(1), . . . , s(K −1)]T represent the transmitted sequence of symbols, vec-
tor ˆs = [ˆs(0), ˆs(1), . . . , ˆs(K −1)]T designates the sequence of detected symbols, and vector x =
[x(0), x(1), . . . , x(K −1)]T be the sequence of received symbols at the equalizer input. Let A be the
cardinality of the alphabet from which symbols s(k) are chosen. Then the vector space of the received
symbols can be divided in AK non-overlapping decision regions Rv in such a way that if the received
vector x belongs to Rv, then vector v = [v(0), v(1), . . . , v(K −1)]T was transmitted. In this case the
probability of the correct decision can be calculated as:
Pr {ˆs = s} =

v
Pr {x ∈Rv| s = v} Pr {s = v} =

v

Rv
P (u| v) du Pr {s = v}
(5.88)

240
Modulation and Coding Techniques in Wireless Communications
Then the MLSE criterion can be written as follows:
ˆs = sML = arg max
v
P (x| v)
(5.89)
That means we choose as a detected sequence ˆs the vector v, which maximizes the probability to observe
vector x at the equalizer input.
The probability P (x| v) can be represented as:
P (x| v) =
K−1
'
k=0
p ( x(k)| v)
(5.90)
Since we assume that vector s in (5.21) takes value of v the PDF p ( x(k)| v) is deﬁned only by the noise
components of vector x. Thus (5.90) may be written as follows:
P (x| v) =
K−1
'
k=0
1
πσ 2
0
exp

−1
πσ 2
0
|x(k) −u(k)|2

(5.91)
where
u(k) =
L−1

l=0
h(l) · v(k −l)
(5.92)
As explained in Section 4.2 it is more convenient to deal with logarithm of P (x| v) rather than with this
probability itself. The logarithm of (5.91) may be estimated as:
−ln (P (x| v)) ≈
K−1

k=0
|x(k) −u(k)|2
(5.93)
Then the MLSE criterion can be expressed as:
sML = arg min
v
K−1

k=0
|x(k) −u(k)|2
(5.94)
Denote as a(k) the convolution of sequences h and x:
a(k) =
L−1

l=0
h(l)x(k + l)
(5.95)
and as b(k) the cross-convolution of sequence h:
b(k) =
⎧
⎨
⎩
L−1
"
l=k
h(l)h(l −k),
if
k < L
0,
if |k| ≥L
(5.96)
Taking into account that the minimum of function |x(k) −u(k)|2 is deﬁned by the maximum of function
x(k)u(k) −1
2u2(k) it is possible to introduce metric:
MK−1(v) =
K−1

k=0
v(k) · a(k) −1
2
K−1

k=0
K−1

j=0
v(k) · v( j) · b(k −j)
(5.97)
which corresponds to the following form of the MLSE criterion:
sML = arg max
v
MK−1(v)
(5.98)

Equalization
241
The metric in (5.97) can be updated in the following way:
MK(v) = MK−1(v) + v(K) ·
⎛
⎝a(K) −1
2
⎛
⎝v(K) · b(0) +
K−1

j=0
v( j) · (b(K −j) + b( j −K))
⎞
⎠
⎞
⎠
(5.99)
It follows from (5.96) that updated part of (5.99) depends only on L previous symbols of sequence
v [v(K), v(K −1), . . . , v(K −L + 1)], that is, (5.99) can be written as follows:
MK(v) = MK−1(v) + mK(v)
(5.100)
where
mK(v) = v(K) ·
⎛
⎝a(K) −1
2
⎛
⎝v(K) · b(0) +
K−1

j=K−L+1
v( j) · (b(K −j) + b( j −K))
⎞
⎠
⎞
⎠
(5.101)
Then
at
each
moment
i
the
equalizer
state
Si
is
deﬁned
by
the
pattern
Si =
[v(i), v(i −1), . . . , v(i −L + 1)], that is, the number of equalizer states is equal to AL. When the new
input symbol x(i + 1) arrives, the equalizer state changes to Si+1 = [v(i + 1), v(i), . . . , v(i −L + 2)].
Thus, the equalization process can be represented as a solution of the problem of estimating the state of a
ﬁnite state machine or as an iterative process of search for the path with maximum weight in trellis with
AL states. In the same way as in Chapter 4 designate mi(v) as branch metric, Mi(v) as partial path metric
and MK−1(v) as path metric. Then the Viterbi algorithm can be applied to ﬁnd the path with maximum
path metric MK−1(v) with the complexity O
 
(K −1)AL!
instead of complexity O
 
AK−1!
required to
ﬁnd the solution of (5.98) with brute-force method. The example of trellis diagram for A = {−1, 1} and
L = 2 is depicted in Figure 5.12. The solid lines in Figure 5.12 correspond to transitions caused by the
new input symbol x(k) = −1 and the dashed lines correspond to x(k) = 1.
For the detailed description of Viterbi algorithm see Section 4.2. Even though the Viterbi algorithm
has a reduced computational complexity in comparison with brute-force algorithm, the complexity of the
MLSE equalization is still very high in comparison with the complexity of equalization methods based
on ﬁltering. Due to this fact the MLSE equalization methods are rarely used for real-time implementation
purposes.
[-1, -1]
State
[-1, 1]
[1, -1]
[1, 1]
Si
Si-1
Si-2
Si-3
Figure 5.12
Trellis diagram for A = {-1, 1}, L = 2

242
Modulation and Coding Techniques in Wireless Communications
5.2.2
Sphere Detection
The Sphere Detection (SD) algorithm [7]–[8] solves the MLSE criterion by performing a search in a
hyper sphere around the received signal, x. To employ SD, ﬁrst write (5.21) in matrix form as it is done
in (5.39):
x′ = H′s′ + n′
(5.102)
where
x′ =
#
x′(0), x′(1), . . . , x′(K + L −1)
$T
is
the
sequence
at
the
equalizer
input,
s′ =
#
s′(0), s′(1), . . . , s′(K −1)
$T is the transmitted sequence, n′ =
#
n′(0), n′(1), . . . , n′(K + L −1)
$T is
the noise vector, and H′ is the ((K + L) × K) channel matrix:
H′ =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
h′(0)
0
...
0
h′(1)
h′(0)
...
0
...
...
...
...
h′(L −1)
h′(L −2)
...
h′(0)
0
h′(L −1)
...
h′(1)
...
...
...
...
0
0
...
h′(L −1)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
Originally the SD algorithm was created for real values, that is, the assumption was that the elements of
s′, x′, H′ and n′ are taken from the ﬁeld of real numbers. However, if we deal with QAM (5.39) can be
written in the following way:
x = Hs + n
(5.103)
where
x =
#
Re(x′)T Im(x′)T $T ;
H =
( Re(H′)
−Im(H′)
Im(H′)
Re(H′)
)
;
s =
#
Re(s′)T Im(s′)T $T ;
n =
#
Re(n′)T Im(n′)T $T
(5.104)
Then the MLSE criterion can be written as follows:
sML = arg min
v ∥x −Hv∥2
(5.105)
where ∥·∥is the Euclidean norm. This problem can be expressed geometrically: given a point x in
2K-dimensional space, ﬁnd the closest point (the point that has the smallest Euclidean distance to x) in
a skewed lattice 	(H). The lattice generated by H is:
	(H) =

Hv : v ∈R2K
(5.106)
The rows of H are called basis vectors of lattice 	. The solution of (5.105) with the help of brute force
algorithm, that is, exhaustive search has the exponential complexity. The SD algorithm solves (5.105)
by choosing the candidates only from those points of lattice 	 that belong to a sphere of radius r with
the centre in x as it is shown in Figure 5.13.

Equalization
243
x
r
Figure 5.13
Sphere Detection principle
The condition that lattice points belong to a sphere of radius r with the center in x can be written as
follows:
∥x −Hv∥2 ≤r 2
(5.107)
The channel matrix H can be decomposed by QR decomposition (QRD) [10] and then (5.104) can be
written as:
∥x −QRv∥2 ≤r 2
(5.108)
where Q is the (2(K + L) × 2(K + L)) unitary matrix, i.e. QHQ = QQH = I (in case elements of Q
are real, matrix Q is called orthogonal matrix QT Q = QQT = I), and R is the (2(K + L) × 2K) upper
triangular matrix with positive diagonal elements. One of the properties of orthogonal matrix is that it
preserves the length, that is, for any orthogonal matrix U the following equality holds [10]:
∥Ua∥= ∥a∥
(5.109)
where a is any vector of corresponding dimension. Since Q is orthogonal matrix, QT is also orthogonal
matrix. Then (5.107) can be written as:
**QT x −Rv
**2 ≤r 2
(5.110)
or as:
∥˜x −Rv∥2 ≤r 2
(5.111)
where ˜x = QT x. Due to the upper triangular form of R, (5.111) deﬁnes the set of conditions:
2K−1

j=i

˜x( j) −
2K−1

m= j
R( j, m) · v(m)

2
≤r 2,
i = 0, . . . , 2K −1
(5.112)
which must satisfy candidate vector components v(m) to belong to considered sphere. Denote the last
2K −m + 1 components of candidate vector v by v2K−1
m
= [v(m), v(m + 1), . . . , v(2K −1)]. Then the
SD algorithm can be represented as a search in depth on the nodes of the tree with the root corresponding
to vector v2K−1
2K−1 = [v(2K −1)], where layer i of the tree corresponds to the particular value of vector
v2K−1
2K−i−1 length like it is shown in Figure 5.14.
Each node at level i is connected with
√
A nodes (A is the transmitted alphabet cardinality) at level
i + 1 since there are
√
A possible choices of symbol v(2K −i −1) preceding vector v2K−1
2K−i . However,
appending vector v2K−1
2K−i by new symbol v(2K −i −1) may lead to a situation when the points of lattice
Hv corresponding to the choice of v(2K −i −1) do not belong to the considered sphere anymore. Denote
the set of admissible values for each symbol v(2K −i −1) preceding vector v2K−1
2K−i by T2K−i−1
 
v2K−1
2K−i
!
.
Applying the back-substitution algorithm to (5.112) exploiting the upper triangular form of matrix R,

244
Modulation and Coding Techniques in Wireless Communications
Level 1
Level 2
Level 3
Level 4
Level 5
Figure 5.14
Example of Sphere Detection algorithm for K = 3, 16-QAM
obtain the set T2K−i−1
 
v2K−1
2K−i
!
as an interval T2K−i−1
 
v2K−1
2K−i
!
=
#
C2K−i−1
 
v2K−1
2K−i
!
, D2K−i−1
 
v2K−1
2K−i
!$
from which the new symbol v(2K −i −1) can take the integer values. This interval T2K−i−1
 
v2K−1
2K−i
!
usually is called the admissible interval. The values of C2K−i−1
 
v2K−1
2K−i
!
and D2K−i−1
 
v2K−1
2K−i
!
for each
level i can be expressed as follows [9], [11]:
C2K−i−1
 
v2K−1
2K−i
!
=
+
ai
,
˜x(2K −i −1) −
2K−1
"
j=2K−i
R(2K −i −1, j) · v( j)
−
-
.
.
/r 2 −
2K−1
"
j=2K−i
˜x( j) −
2K−1
"
m= j
R( j, m) · v(m)

2⎞
⎠
⎤
⎥⎥⎥
(5.113)
D2K−i−1
 
v2K−1
2K−i
!
=
0
ai
,
˜x(2K −i −1) −
2K−1
"
j=2K−i
R(2K −i −1, j) · v( j)
+
-
.
.
/r 2 −
2K−1
"
j=2K−i
˜x( j) −
2K−1
"
m= j
R( j, m) · v(m)

2⎞
⎠
⎥⎥⎥⎦
,
(5.114)
where ai =
1
R(2K−i−1,2K−i−1).
If C2K−i−1
 
v2K−1
2K−i
!
> D2K−i−1
 
v2K−1
2K−i
!
or if "2K−1
j=2K−i
˜x( j) −"2K−1
m= j R( j, m) · v(m)

2
> r 2, then
T2K−i−1
 
v2K−1
2K−i
!
= {∅}, and the node corresponding to this value of symbol v(2K −i −1) is pruned
out of tree since any child of this node corresponds to a vector that does not belong to the considered
sphere. In Figure 5.14 the pruned nodes are represented by the unﬁlled circles. When the algorithm

Equalization
245
reaches level 2K −1 the candidate vector v belonging to the considered sphere of radius r is found.
Then it is possible to calculate the distance between the lattice point Hv corresponding to the candidate
vector and the centre of sphere x. Actually, this distance is equal to the distance between point Rv and
vector ˜x. Then the squared Euclidean distance between the point Hv and the centre of sphere x d2(x, Hv)
can be calculated as follows:
d2(x, Hv) =
2K−1

j=0

˜x( j) −
2K−1

m= j
R( j, m) · v(m)

2
(5.115)
Vector v providing the minimum value of d2(x, Hv) is assigned to the result of search vector ˆs. If radius
r is big enough, vector ˆs is the solution of (5.105). In fact, the SD algorithm searches the points of lattice
Rv belonging to the sphere around centre ˜x rather than points of lattice Hv belonging to the sphere
around centre x but since there is one to one correspondence between Rv and Hv and between ˜x and x
it does not impact the search result. If at level 2K −1 no point in the sphere is found, the search must
be repeated for spheres with greater value of radius r.
In Figure 5.14 the example of SD algorithm for K = 3 and 16-QAM is represented. Each I and Q
branch of 16-QAM chooses the symbols from the alphabet of four elements, for example {−3, −1, 1, 3}.
Thus each node of the tree has four child nodes. As mentioned above the SD algorithm is depth-ﬁrst
algorithm and after reaching level 5 the search is returning back up to the root node. The distance
comparison is done only at bottom level (level 5 in this example). As can be seen from Figure 5.14
eventually only eight lattice points are considered. If there were no restrictions, that is, r = ∞the
number of lattice points that should be checked is 46 = 4096. Still the complexity of the SD algorithm is
much higher than the complexity of equalization algorithms based on ﬁltering. To be more precise, with
the assumption that the radius r is chosen not randomly but taking into account some noise statistics, the
complexity of SD algorithm is a random variable with the mean signiﬁcantly less than the complexity of
Viterbi algorithm.
In fact, the complexity of the SD algorithm can be decreased. Notice that the squared Euclidean
distance can be calculated recursively with the help of partial squared Euclidean distance:
d2(x, Hv2K−1
2K−i−1) = d2(x, Hv2K−1
2K−i ) +
˜x(2K −i −1) −
2K−1

m=2K−i−1
R(2K −i −1, m) · v(m)

2
(5.116)
Then (5.115) can be written as:
d2(x, Hv) = d2(x, Hv2K−1
2K−1)
(5.117)
It means that it is possible to add one more restriction for search process. Unless the bottom level is not
reached and at least for one lattice point the squared Euclidean distance to the centre of the sphere is not
calculated the algorithm proceeds without any changes, but after that for each partial vector v2K−1
2K−i the
partial squared Euclidean distance d2(x, Hv2K−1
2K−i ) is calculated and if it is greater than the stored current
squared Euclidean distance the corresponding node is pruned out of the tree even if this node belongs to
the set of admissible values.
Another improvement of the SD algorithm is the usage of the Schnorr-Euchner enumeration [12]. In
the described above SD algorithm the Pohst enumeration is used [7], [8]. Pohst enumeration is based on
so-called natural spanning of the admissible intervals T2K−i−1
 
v2K−1
2K−i
!
at each level i, that is, the values
for symbol v(2K −i −1) are considered in the following order C2K−i−1
 
v2K−1
2K−i
!
, C2K−i−1
 
v2K−1
2K−i
!
+
1, . . . , D2K−i−1
 
v2K−1
2K−i
!
. In Schnorr-Euchner enumeration the symbol v(2K −i −1) takes values from
the admissible interval T2K−i−1
 
v2K−1
2K−i
!
in zigzag order starting from the interval middle point:
S2K−i−1
 
v2K−1
2K−i
!
= int
,
ai ·
,
˜x(2K −i −1) −
2K−1

m=2K−i
R(2K −i −1, m) · v(m)
11
(5.118)

246
Modulation and Coding Techniques in Wireless Communications
where ai =
1
R(2K−i−1,2K−i−1), and function int () denotes the rounding to the nearest integer. To be more
precise, the Schnorr-Euchner enumeration implies that symbol v(2K −i −1) takes values from the
admissible interval T2K−i−1
 
v2K−1
2K−i
!
as follows:
If
˜x(2K −i −1) −
2K−1

m=2K−i
R(2K −i −1, m) · v(m) −R(2K −i −1, 2K −i −1) · S2K−i−1
 
v2K−1
2K−i
!
≥0
(5.119)
then the order is S2K−i−1
 
v2K−1
2K−i
!
, S2K−i−1
 
v2K−1
2K−i
!
+ 1, S2K−i−1
 
v2K−1
2K−i
!
−1, S2K−i−1
 
v2K−1
2K−i
!
+ 2,
S2K−i−1
 
v2K−1
2K−i
!
−2, . . . .
If
˜x(2K −i −1) −
2K−1

m=2K−i
R(2K −i −1, m) · v(m) −R(2K −i −1, 2K −i −1) · S2K−i−1
 
v2K−1
2K−i
!
< 0
(5.120)
then the order is S2K−i−1
 
v2K−1
2K−i
!
S2K−i−1
 
v2K−1
2K−i
!
−1, S2K−i−1
 
v2K−1
2K−i
!
+ 1, S2K−i−1
 
v2K−1
2K−i
!
−2,
S2K−i−1
 
v2K−1
2K−i
!
+ 2, . . . .
One more aspect having great inﬂuence on the algorithm complexity is the choice of the sphere radius.
The problem of choosing the sphere radius r is two-fold. The inﬁnite radius guarantees that the MLSE
solution will be found but in this case the SD algorithm simply becomes the exhaustive search with the
exponential complexity. On the other hand, if the sphere radius r is too small it becomes less likely the
MLSE solution will be found. Obviously for the sphere of radius r centred at x the probability that the
point Hs (where s is the true transmitted data) is given by:
Pr
 ∥x −Hs∥2 ≤r 2!
= Pr
 ∥n∥2 ≤r 2!
(5.121)
Assuming the AWGN conditions ∥n∥2 is a chi-square random variable with 2K degrees of freedom and
PDF [13]:
f (λ) =
λK−1
(2σ 2
0 )K (K) exp

−λ
2σ 2
0

(5.122)
where () denotes the gamma function. Then the radius r of the sphere centred at x containing the point
Hs with probability of (5.121) can be calculated by solving the following equation with respect to r:
Pr
 ∥n∥2 ≤r 2!
=
r2

0
f (λ)dλ
(5.123)
A more simple approach is to ﬁnd some rough estimate of s with the help of some equalization method
with low complexity and then use the distance between the received vector x and the lattice point Hˆs (ˆs
is the estimate of s) as the radius r for the SD algorithm:
r = ∥x −Hˆs∥
(5.124)
Obviously the sphere of this radius must include the point corresponding to the MLSE solution. Usually
the zero-forcing solution is used for the calculation of radius r. Then ˆs can be written as:
ˆs =
 
HT H
!−1 HT x
(5.125)
Equation (5.125) can be obtained from (5.54).
Another trick aiming to decrease the SD algorithm complexity is to change the sphere radius r during
the search. For example, it is possible to start the search within some sphere of big radius r, but, after

Equalization
247
ﬁnding the ﬁrst candidate the sphere radius can be decreased up to the distance from the candidate to the
sphere centre and the search of other candidates is done inside the sphere of smaller radius and so on.
One more approach quite similar to the one described above was suggested in [14]. The squared
distance from the centre of the sphere to the lattice point corresponding to the transmitted sequence s
can be written as:
∥x −Hs∥2 =
***Hs −
%
H
 
HT H
!−1 HT + I −H
 
HT H
!−1 HT &
x
***
2
(5.126)
where matrix H
 
HT H
!−1 HT deﬁnes the projection of x to the column space of H. Simplifying (5.126)
obtain:
∥x −Hs∥2 =
***H (s −ˆs) −
%
I −H
 
HT H
!−1 HT &
x
***
2
= ∥H (s −ˆs)∥2 +
***
%
I −H
 
HT H
!−1 HT &
x
***
2
(5.127)
where ˆs is the zero-forcing solution of (5.125). Under the AWGN conditions the value of
***
%
I −H
 
HT H
!−1 HT &
x
***
2
is deﬁned only by noise. Then one possible choice of radius r is:
r 2 = 2σ 2
0 αK −
***
%
I −H
 
HT H
!−1 HT &
x
***
2
(5.128)
where 2σ 2
0 K is the expected value of chi-square random variable with 2K degrees of freedom and α ≥1
is the scaling factor chosen so that we are reasonably sure that the lattice point corresponding to true s
is inside the considered sphere.
Recall that the SD algorithm considered above originally was created for real numbers and can be
applied to the complex case only for modulation allowing the decoupling to I and Q branches. In principle,
this kind of I and Q decoupling is possible not only for QAM but for other modulations as well (see
Chapter 5.2). The problem is that, for example, for M-PSK the distance between projections of signal
points to I and Q branches are not equal anymore. That means the calculation of admissible intervals in
(5.113)–(5.114) should be adapted to the particular M-PSK. However, it is possible to modify the SD
algorithm to handle complex constellations without decoupling the signal to I and Q branches. Here we
will follow [14]. For brevity of notation, denote in (5.102) x = x′, H = H′, s = s′, n = n′. Inequalities
(5.105)–(5.111) are valid for both real and complex cases (with changing the transpose by the Hermitian
transpose). In a complex case the dimensions of all vectors and matrices are two times less. (5.127) is
also valid for the complex case and now can be written as:
∥x −Hs∥2 =
***H (s −ˆs) −
%
I −H
 
HHH
!−1 HH&
x
***
2
= ∥H (s −ˆs)∥2 +
***
%
I −H
 
HHH
!−1 HH&
x
***
2
(5.129)
where
ˆs =
 
HHH
!−1 HHx
(5.130)
As mentioned above under the AWGN conditions ∥(I −H(HHH)−1HH)x∥2 depends only on noise and
does not depend on s. That means, minimization of ∥H (s −ˆs)∥2 leads to minimization of ∥x −Hs∥2.
Then the problem (5.105) is equivalent to:
sML = arg min
v ∥H (v −ˆs)∥2
(5.131)
If the search on vectors v is restricted to sphere of radius r, the condition that the considered lattice points
belong to a sphere of radius r with the centre in ˆs can be written in the same way as (5.107):
∥H (v −ˆs)∥2 = (v −ˆs)H HHH (v −ˆs) ≤r 2
(5.132)

248
Modulation and Coding Techniques in Wireless Communications
With the help of Cholesky factorization [2] it is possible to ﬁnd an upper triangular matrix U such that:
UHU = HHH,
uii > 0, uii ∈Z
(5.133)
Then (5.132) can be written as:
∥H (v −ˆs)∥2 = (v −ˆs)H UHU (v −ˆs) =
K−1

i=0
u2
ii

vi −ˆsi +
K−1

j=i+1
ui j
ui j
(v j −ˆs j)

2
≤r 2
(5.134)
As can be seen (5.134) is very similar to (5.112) and can be used in the same way. With i = K −1
(5.134) is reduced to:
u2
K−1,K−1 |vK−1 −ˆsK−1|2 ≤r 2
(5.135)
which yields:
|vK−1 −ˆsK−1| ≤
r
uK−1,K−1
(5.136)
The inequality (5.136) means that the last element of vector v must belong to complex disk of radius
r
uK−1,K−1 centred in ˆsK−1. At the same time the element vK−1 belongs to the constellation corresponding
to modulation used in the transmission. Assume that the PSK was used. Then the search of vK−1 value
is limited to the intersection of the complex disk with the PSK constellation, that is, with the complex
circle. This intersection illustrated in Figure 5.15 is an arc. The angular sweep of this arc can be obtained
analytically.
The element vK−1 belongs to M-PSK. Then it can be represented in accordance with (2.51) as vK−1 =
rc · exp ( jφK−1), where φK−1 ∈

0, 2πi
M , . . . , 2π(M−1)
M

, rc > 0 is the radius of the M-PSK constellation.
1
(Q)
(I)
,1
−
−
K
K
u
r
1
ˆ
−
K
s
crˆ
cr
Figure 5.15
Intersection of complex disk and 8-PSK constellation

Equalization
249
In the same way it is possible to represent the element ˆsK−1 = ˆrc · exp
 
j ˆφK−1
!
, where ˆrc is the radius
corresponding to the distorted constellation. Then (5.136) can be written as [14]:
|vK−1 −ˆsK−1|2 = r 2
c + ˆr 2
c −2rc ˆrc cos
 
φK−1 −ˆφK−1
!
≤
r 2
u2
K−1,K−1
(5.137)
which yields:
cos
 
φK−1 −ˆφK−1
!
≥
1
2rc ˆrc
,
r 2
c + ˆr 2
c −
r 2
u2
K−1,K−1
1
= η
(5.138)
If η > 1, then the search disk does not contain any point of the M-PSK constellation. If η < −1, then all
constellation points belong to the search disk. For the case −1 ≤η ≤1:
φK−1 −ˆφK−1
 ≤arccos (η)
(5.139)
Assuming 0 ≤arccos () ≤π, the admissible interval of the constellation points for vK−1 is given by [14]:
2 M
2π
 ˆφK−1 −arccos (η)
!3
≤M
2π φK−1 ≤
4 M
2π
 ˆφK−1 + arccos (η)
!5
(5.140)
Now the candidate vK−1 is chosen from the range of values for which φK−1 satisfy (5.140). The next
steps of the algorithm are similar to the ones described above. When vK−1 is chosen, the admissible
interval for vK−2 is chosen by searching the new arc with the help of (5.140) and so on.
Actually, this complex sphere detection algorithm can be applied not only to M-PSK but to QAM also.
The difference is that in the QAM case the intersection of complex constellation and complex search
disk comprises the bunch of concentric arcs (as shown in Figure 5.16) rather than one arc as in M-PSK
case.
The only difference is that it should be used for a few different values of radius rc corresponding to
different concentric circles comprising the QAM constellation. In some cases the usage of this kind of
complex SD algorithm is more preferable since it requires the use of vectors and matrices with two times
lower dimensions than for the real SD algorithm.
(I)
(Q)
Figure 5.16
Intersection of complex disk and 16-QAM constellation

250
Modulation and Coding Techniques in Wireless Communications
Many modiﬁcations of SD algorithm exist, for example, it is possible to use breadth-ﬁrst algorithm
instead of depth-ﬁrst algorithm to search the tree of candidates. This kind of modiﬁcation usually leads
to signiﬁcant decrease of the complexity, but in this case there is no guarantee to ﬁnd the ML solution
and algorithm becomes suboptimal.
5.2.2.1
List Sphere Detection
As mentioned above, except for the MLSE it is possible to use the MAP principle to provide the optimal
decision based on observation of the whole received sequence. Without loss of generality assume that
the transmitted sequence s = {sk} , k = 0, . . . , K −1 consists of binary signals, that is, sk ∈{−1, +1}.
If the transmitted signal is not binary, the sequence s can be considered as a binary representation of the
nonbinary transmitted sequence. Also assume that the Gray coding and the bit-level interleaving are used
in the transmitter. Then the binary symbols sk can be considered as mutually independent. In this case
the a posteriori LLR of the bit sk, conditioned on the received sequence x can be written in accordance
with (4.38) as follows:
L (sk |x) = ln P (sk = +1 |x)
P (sk = −1 |x) = L A (sk) + L E (sk)
(5.141)
where
L A (sk) = ln P (sk = +1)
P (sk = −1)
(5.142)
is the a priori LLR of the bit sk, and L E (sk) is the extrinsic LLR. The extrinsic LLR can be represented
as [14]:
L E (sk) = ln P (x |sk = +1)
P (x |sk = +1) = ln
"
s∈Sk,+1
P (x |s) · exp
 1
2sT
[k] · LA,[k]
!
"
s∈Sk,−1
P (x |s) · exp
 1
2sT
[k] · LA,[k]
!
(5.143)
where
Sk,+1
is
the
set
of
vectors
s
of
length
K
such
that
the
k-th
element
of
any
vector
from
this
set
is
+1,
i.e.,
Sk,+1 = {s : sk = +1},
correspondingly
Sk,−1 =
{s : sk = −1},
s[k]
is
vector
of
length
K −1
containing
all
elements
of
vector
s
ex-
cept of the element s(k), s[k] = [s(0), s(1), . . . , s(k −1), s(k + 1), . . . , s(K −1)], and LA,[k] =
[L A(s0), L A(s1), . . . , L A(sk−1), L A(sk+1), . . . , L A(sK−1)]. Assuming the AWGN channel, it follows from
(5.39) that:
P (x |s) =
exp
%
−1
2σ 2
0 ∥x −Hs∥2&
 
2πσ 2
0
!K
(5.144)
Substituting (5.144) in (5.143) obtain:
L E (sk) = ln
"
s∈Sk,+1
exp
%
−1
2σ 2
0 ∥x −Hs∥2 + 1
2sT
[k] · LA,[k]
&
"
s∈Sk,−1
exp
%
−1
2σ 2
0 ∥x −Hs∥2 + 1
2sT
[k] · LA,[k]
&
(5.145)
The application of the Max-log approximation (4.65) to (5.145) gives
L E (sk) ≈1
2

max
s∈Sk,+1

−1
σ 2
0
∥x −Hs∥2 + sT
[k] · LA,[k]
6
−max
s∈Sk,−1

−1
σ 2
0
∥x −Hs∥2 + sT
[k] · LA,[k]
6
(5.146)

Equalization
251
Thus, the ML estimate must maximize the term −1
σ 2
0 ∥x −Hs∥2 + sT
[k] · LA,[k] for both conditions:
sML =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
arg max
v∈Sk,+1

−1
σ 2
0
∥x −Hv∥2 + vT
[k] · LA,[k]

arg max
v∈Sk,−1

−1
σ 2
0
∥x −Hv∥2 + vT
[k] · LA,[k]

The basic idea behind the List Sphere Detection (LSD) algorithm is to modify the SD algorithm in such
a way to generate the list of candidate vectors v maximizing both terms in (5.146) and remaining within
a sphere of predeﬁned radius r. Actually, the changes needed to transform the SD algorithm to LSD
algorithm are not severe: the result of the algorithm is the list of Ncand points λ = {vi} , i = 0, . . . , Ncand
minimizing ∥x −Hvi∥2 rather than just one optimal point vopt for which
**x −Hvopt
**2 is the minimum
one. The point from this list λ = {vi} , i = 0, . . . , Ncand maximizing both terms in (5.146) is chosen as
the ML estimate sML. That means (5.146) can be written as follows:
L E (sk) ≈1
2

max
s∈λ∩Sk,+1

−1
σ 2
0
∥x −Hs∥2 + sT
[k] · LA,[k]
6
−
max
s∈λ∩Sk,−1

−1
σ 2
0
∥x −Hs∥2 + sT
[k] · LA,[k]
6
(5.147)
The list size Ncand must be big enough to make possible the calculation of (5.147). That means the
complexity of the LSD algorithm is a little bit greater than the complexity of the SD algorithm, since
it requires for each considered point the comparison of the distance between the point and the sphere
centre not only with the best one candidate but with the list of Ncand candidates to update it. However,
this complexity increase is not very severe. Still, the necessity to have a relatively big size of candidates
list requires using quite a big sphere radius r that leads to more severe complexity increase of the LSD
algorithm in comparison with the SD algorithm.
5.3
RAKE Receiver
Strictly speaking the RAKE receiver introduced in [15] cannot be regarded as an equalizer since its
ability to cope with ISI is quite limited. Still we consider this technique here since it is very popular in
DS-CDMA systems because of low implementation complexity.
In CDMA spread spectrum systems, each symbol is spread with the help of chip sequence into the
chips and the chip rate is typically much greater than the ﬂat fading bandwidth of the channel. If the
components of the multipath propagation channel are delayed in time by more than one chip duration
the multipath channel is seen as a discrete set of reﬂections. In this case the multipath components can
be seen as a source of diversity used by the RAKE receiver. The multipath channel model is represented
in Figure 5.17.
The channel impulse response h(t) can be written as follows:
h(t) =
L

l=1
hl · δ (t −τl)
(5.148)
where L is the number of multipaths, τl is the time delay of the l-th path component, hl is the gain of the
l-th path component, δ () denotes the delta-function. Then the received signal can be represented as:
r(t) = h(t) · s(t) + n(t) =
L

l=1
hl · s (t −τl) + n(t) = y(t) + n(t)
(5.149)
where s(t) is the transmitted signal and n(t) is the AWGN. Assume that the channel time delays τl
and the channel gain coefﬁcients hl are known. Then in accordance with the matched ﬁlter theory (see

252
Modulation and Coding Techniques in Wireless Communications
Delay τ1
h1
Delay τ2
h2
Delay τL
hL
s(t)
n(t)
r(t)
y(t)
Figure 5.17
Multipath channel model
Section 2.1.4) at the receiver the received signal r(t) must be correlated with the complex conjugate
of the expected waveform y(t). Since the number of the transmitted waveforms s(t) is limited and the
channel time delays and gain coefﬁcients are known it is possible to generate the limited number of the
expected waveforms y(t). Then the decision variable corresponding to the transmitted signal s(t) can be
expressed as follows:
u = Re
⎧
⎨
⎩
Ts

0
r(t) · y∗(t)dt
⎫
⎬
⎭= Re
⎧
⎨
⎩
Ts

0
r(t) ·
L

l=1
h∗
l · s∗(t −τl) dt
⎫
⎬
⎭
= Re
⎧
⎨
⎩
L

l=1
h∗
l ·
Ts

0
r(t) · s∗(t −τl) dt
⎫
⎬
⎭
(5.150)
where Ts is the symbol duration. As a result the receiver optimizing the SNR can be implemented with
the help of L correlators. Each of these correlators correlates the received signal r(t) with a delayed
version of the transmit waveform s(t) and the outputs of the correlators are weighted according to the
channel gain coefﬁcients as shown in Figure 5.18.
Each correlator called ﬁnger extracts from the received signal r(t) only the portion of the signal energy
that corresponds to the particular delay. Then the receiver combines the received signals of different
paths proportionally to the strength of each path. This kind of combining is called the Maximal Ratio
Combining (MRC) [16]. Since each path undergoes different attenuations, combining them with different
weights yields an optimum in the SNR sense solution when noise is white. Thus, the receiver utilizes
the multipath channel as the source of diversity. The structure of the receiver is similar to the garden
rake and correspondingly the name “RAKE receiver” is used for this kind of receiver. In Figure 5.18
only part of the receiver corresponding just to one particular value of the transmitted signal s(t) is
represented. Actually, each ﬁnger consists of M correlators, where M is the cardinality of the transmitted
alphabet and correspondingly M inputs are fed to the decision device. The ﬁnger allocation algorithm
estimates the multipath time delays τl and provides them to the corresponding ﬁngers. This is done
with the help of matched ﬁlter. Since the chip sequence used in the DS-CDMA systems is pseudo-noise
sequence, the strongest peaks at the output of the matched ﬁlter can correspond to the multipath time
delays only. Another important block is the channel estimator. It estimates the amplitude and phase of
the multipath components hl. Usually this is done with the help of a special pilot sequence of symbols.

Equalization
253
Figure 5.18
RAKE receiver
The transmitted pilot symbols are known at the receiver side beforehand and based on the distortion
of these symbols it is possible to estimate the multipath components. Usually in the DS-CDMA systems
the pilot symbols are transmitted on the special pilot channel simultaneously with the data. Since in
the DS-CDMA systems all channels are split with the help of different spreading codes the multipath
components seen on the pilot channel coincide with the multipath components seen on the data channel.
Here the pilot channel and the data channel denotes only the type of the transmitted data, do not mix
them with the multipath channel.
The performance of the RAKE receiver can be estimated by estimating the SNR at the receiver output.
Assume that the transmitted waveforms are ideally orthogonal and that the noise can be represented as
an AWGN. Substituting (5.149) into (5.150) obtain:
u = Re
⎧
⎨
⎩
L

l=1
h∗
l ·
L

k=1
hk ·
Ts

0
s (t −τk) · s∗(t −τl) dt
⎫
⎬
⎭+ Re
⎧
⎨
⎩
L

l=1
h∗
l ·
Ts

0
n(t) · s∗(t −τl) dt
⎫
⎬
⎭
(5.151)
The ﬁrst term in the right hand side of (5.151) corresponds to the desired signal and the second term
corresponds to the noise. Taking into account that s(t) is generated with the help of pseudo-noise sequence
with good autocorrelation properties, the autocorrelation function of signal s(t) can be written as follows:
R(k −l) =
Ts

0
s (t −kTc) · s∗(t −lTc) dt =
 0,
k ̸= l
Ts,
k = l
(5.152)
where Tc is the chip duration. Then (5.151) can be written as:
u = Re
 L

l=1
|hl|2 · Ts
8
+ Re
⎧
⎨
⎩
L

l=1
h∗
l ·
Ts

0
n(t) · s∗(t −τl) dt
⎫
⎬
⎭
(5.153)

254
Modulation and Coding Techniques in Wireless Communications
For the ﬁxed set of channel gain coefﬁcients {hl} the decision variable u is Gaussian with mean value:
E {u} = Ts
L

l=1
|hl|2
(5.154)
and variance:
σ 2
0 = Ts N0
L

l=1
|hl|2
(5.155)
Then the SNR per symbol can be estimated as follows:
SNR =
Ts
2N0
L

l=1
|hl|2 =
L

l=1
SNRl
(5.156)
where SNRl is the instantaneous SNR for the kth multipath component.
As mentioned above the RAKE receiver is optimal only in cases where the noise is AWGN and there
is no ISI since it maximizes only the SNR of the decision statistic with ﬁnger placement corresponding to
the channel impulse response. However, it is possible to use the same simple structure of RAKE receiver
to maximize the signal plus interference to noise ratio (SINR) at the output of the receiver. In fact, the
interference components of the different RAKE ﬁngers are regarded as coloured Gaussian noise and
in this sense it is enough to maximize the SNR almost in the same way as is done in the conventional
RAKE. This receiver structure usually is called the generalized RAKE or G-RAKE [17]. For G-RAKE
the ﬁnger delays do not match exactly the channel delays anymore. The number of ﬁngers in G-RAKE J
is much greater than the number of resolvable channel paths L (the suitable choice is J ≤2L). Choosing
the ﬁnger delays is a tradeoff between matching to the channel and whitening the coloured noise. The
output of J ﬁnger correlators y = [y1, y2, . . . , yJ]T can be represented as:
y = g · s(t) + n
(5.157)
where n is the vector of noise samples and g is the vector corresponding to the channel coefﬁcients ﬁltered
with the ﬁnger correlators. Now instead of channel gain coefﬁcients {hl} the combining coefﬁcients
w = [w1, w2, . . . , wJ]T will be used for calculation of a decision statistic u. Then the detector for s(t)
can be obtained if the combining coefﬁcients are calculated as follows:
w = R−1
n · g
(5.158)
where Rn = E

nnH
is the noise covariance matrix. Note that n comprises the coloured zero-mean
Gaussian noise and thus includes not only the white noise components but the interference as well. The
performance of the G-RAKE is close to the performance of the LMMSE equalizer. However, if the
number of ﬁngers J is close to inﬁnity the optimal performance can be achieved.
5.4
Turbo Equalization
The main idea of the turbo equalization is to improve the receiver performance by communicating soft
information between the soft-input/soft-output (SISO) equalizer and the SISO decoder. To do this the
received signals are jointly equalized and decoded iteratively in a turbo structure. First the principle of
the turbo equalization was proposed in [18]. In [18] the SOVA was used for both SISO equalization
and SISO decoding. In [19] the MAP algorithm was used for SISO equalizer and decoder. The general
principle of turbo equalization is depicted in Figure 5.19.
The turbo equalization structure shown in Figure 5.19 requires multiple iterations between the SISO
equalizer and the SISO decoder to obtain the decoded received symbol. The processing is done in
accordance with the iterative decoding principle used in decoding of turbo-codes (see Section 4.6). The

Equalization
255
Figure 5.19
Turbo equalization principle
SISO equalization algorithm observes the value x(k) and the a priori LLR L D
e (s(k)) obtained from the
SISO decoder (at ﬁrst iteration this a priori LLR is not available) and calculates the symbol’s a posteriori
LLR L E (s(k)). The a priori LLR L D
e (s(k)) represents prior information on the occurrence probability of
s(k) and is provided by the decoder. Actually, L D
e (s(k)) is the extrinsic LLR obtained from the decoder
but in an equalizer it is used as the a priori LLR, that is, it can be represented as:
L D
e (s(k)) = ln P (s(k) = +1)
P (s(k) = −1)
(5.159)
Treating feedback as a priori information is the essential feature for turbo principle. The equalizer
estimates the a posteriori LLR L E (s(k)):
L E (s(k)) = ln P (s(k) = +1 |x)
P (s(k) = −1 |x)
(5.160)
where x = [x(0), x(1), . . . x(K −1)] is the received sequence. In accordance with (4.41) the extrinsic
LLR:
L E
e (s(k)) = ln P (x |s(k) = +1)
P (x |s(k) = −1)
(5.161)
can be obtained by subtracting the a priori LLR L D
e (s(k)) from the a posteriori LLR L E (s(k)). This
extrinsic LLR is deinterleaved using the same deinterleaver pattern as in the encoder, and is passed to
SISO decoder, which uses it as the a priori LLR L E
e (c(k)). The SISO decoder computes the a posteriori
LLR L D (c(k)):
L D (c(k)) = ln P (c(k) = +1 |L)
P (c(k) = −1 |L)
(5.162)
where L = [L (c(0)) , L (c(1)) , . . . L (c(K −1))] is the sequence of corresponding LLRs.
In the same way as it is described before the extrinsic decoder LLR:
L D
e (c(k)) = ln P (L |c(k) = +1)
P (L |c(k) = −1)
(5.163)
can be obtained as follows:
L D
e (c(k)) = L D (c(k)) −L E
e (c(k))
(5.164)
Recall that the deinterleaved extrinsic equalizer LLR L E
e (c(k)) is considered as the a priori LLR for the
decoder. Then the extrinsic decoder LLR L D
e (c(k)) is interleaved and the obtained LLR L D
e (s(k)) is used
as the a priori LLR for the equalizer at the next iteration. The iterative equalization and decoding proceed
until a stop criterion is met. Then the output of the decoder L D (d(k)) is sent to a decision device. The

256
Modulation and Coding Techniques in Wireless Communications
decision device makes the decision based on the simple rule:
d(k) =
 +1,
L D (d(k)) ≥0
−1,
L D (d(k)) < 0
(5.165)
Thus the process of joint iterative equalization and decoding is similar to the process of turbo decoding.
Comparing Figures 4.22 and 5.19 one can see that the SISO equalizer simply substitutes one of constituent
SISO decoders depicted in Figure 4.22. The SISO decoder and the SISO equalizer exchange extrinsic
information between each other using it as the a priori information. Using this a priori information
is supposed to improve the quality of the a posteriori information at the output of the equalizer and
decoder from iteration to iteration. It is important to feed back only the extrinsic information because
the correlation between the a priori information and the previous decisions should be minimized.
As mentioned above it is possible to consider different algorithms for SISO equalization and SISO
decoding. The MAP and SOVA algorithms used for SISO equalization are pretty much in line with
the description of the corresponding algorithms used for decoding of turbo codes that can be found in
Section 4.7. So, here we brieﬂy consider the employing of MAP algorithm for both SISO equalizer and
SISO decoder just to show some differences in comparison with the content of Section 4.7.
The LLR L E (s(k)) can be calculated as follows:
L E (s(k)) = ln P (s(k) = +1 |x)
P (s(k) = −1 |x) = ln
"
(S′,S),s(k)=+1
p (S′, S, x)
"
(S′,S),s(k)=−1
p (S′, S, x)
(5.166)
where S′ and S denote the state of trellis at level k −1 and k respectively as shown in Figure 5.20.
The summation in (5.166) is taken for all transitions in trellis from state S′ to state S labeled with s(k)
= +1 for nominator and with s(k) = −1 for denominator. In the same way the LLR for bits d(k) can
be computed by the SISO decoder (substituting x by L and s(k) by d(k)). Also SISO decoder computes
LLR for coded bits:
L D (c(k, i)) = ln P (c(k, i) = +1 |L)
P (c(k, i) = +1 |L) = ln
"
(S′,S),c(k,i)=+1
p (S′, S, L)
"
(S′,S),c(k,i)=−1
p (S′, S, L)
(5.167)
Figure 5.20
MAP trellis

Equalization
257
where c(k, i), i = 0, . . . , N −1 denotes the coded bits corresponding to xk or what is the same to d(k),
N is the code length. The joint probability p (S′, S, x) can be represented as follows (see (4.43)–(4.46)):
p
 
S′, S, x
!
= p
 
S′, x j<k
!

	

αk−1(S′)
· P
 
S
S′ !
· p
 
xk
S′, S
!

	

γk(S′,S)
· p
 
x j>k |S
!

	

βk(S)
(5.168)
In the same way the probability p (S′, S, L) can be calculated. Values αk−1 (S′) and βk (S) can be
calculated recursively:
αk (S) =

S′
αk−1
 
S′!
· γk
 
S′, S
!
(5.169)
βk−1
 
S′!
=

S
βk (S) · γk
 
S′, S
!
(5.170)
For the existing transitions the branch transition probability γk (S′, S) can be represented as follows:
γk
 
S′, S
!
= P (d(k)) · p
 
xk
S′, S
!
(5.171)
The only difference in the calculation of metrics for MAP equalizer and MAP decoder is in calculation
of (5.171). Taking into account the channel model (5.21) the branch transition probability γk (S′, S) for
a transition labelled with s(i) for MAP equalizer can be calculated as [19]:
γi
 
S′, S
!
= exp
⎛
⎝−1
2σ 2
0
x(i) −
L−1

l=0
h(l) · s(i −l)

2
+ 1
2s(i) · L (s(i))
⎞
⎠
(5.172)
where L (s(i)) denotes the a priori LLR used by the MAP equalizer and σ0 is the variance of AWGN.
For the MAP decoder γk (S′, S) is calculated in the following way [19]:
γk
 
S′, S
!
= exp
,N−1

i=0
1
2c(k, i) · L (c(k, i))

+ 1
2d(k) · L (d(k))
1
(5.173)
where L (d(k)) is the a priori LLR for bit d(k), L (c(k, i)) is the input LLR.
In [20] the turbo equalization with MMSE equalizer or DFE used as SISO equalizer was considered.
The MMSE SISO equalizer is depicted in Figure 5.21. It computes the estimates ˆs(k) of the transmitted
symbols s(k) from the received symbols x(k) by minimizing the cost function E
|s(k) −ˆs(k)|2
.
It is assumed that the MMSE SISO equalizer output is the extrinsic LLR Le (s(k)). This extrinsic LLR
is calculated using the estimates ˆs(k) instead of x(k):
Le (s(k)) = ln P (s(k) = +1 |ˆs)
P (s(k) = −1 |ˆs) −ln P (s(k) = +1)
P (s(k) = −1) = ln P (ˆs |s(k) = +1)
P (ˆs |s(k) = −1)
(5.174)
Figure 5.21
SISO MMSE equalizer

258
Modulation and Coding Techniques in Wireless Communications
where
ˆs = [ˆs(0), ˆs(1), . . . ˆs(K −1)],
which
requires
the
knowledge
of
the
distribution
p (ˆs(k) |s(k) = +1)
and
p (ˆs(k) |s(k) = −1).
To
perform
MMSE
equalization,
the
statis-
tics
E {s}
and
Rss = E

ssH
are
required
(see
Section
5.1.2).
After
MMSE
equaliza-
tion the PDFs
p (ˆs(k) |s(k) = +1) and
p (ˆs(k) |s(k) = −1) can be considered as Gaussian
with
the
parameters
µ+1(k) = E {ˆs(k) |s(k) = +1},
σ 2
+1(k) = E {ˆs(k) · ˆs ∗(k) |s(k) = +1}
and
µ−1(k) = E {ˆs(k) |s(k) = −1}, σ 2
−1(k) = E {ˆs(k) · ˆs ∗(k) |s(k) = −1} [20]:
p (ˆs(k) |s(k) = +1) ≈
φ
%
ˆs(k)−µ+1(k)
σ+1(k)
&
σ+1(k)
(5.175)
p (ˆs(k) |s(k) = −1) ≈
φ
%
ˆs(k)−µ−1(k)
σ−1(k)
&
σ−1(k)
where φ (x) =
1
√
2π · exp
%
−x2
2
&
. Then the extrinsic LLR Le (s(k)) can be calculated as follows:
Le (s(k)) = ln P (ˆs |s(k) = +1)
P (ˆs |s(k) = −1) = ln
φ
%
ˆs(k)−µ+1(k)
σ+1(k)
&
· σ−1(k)
φ
%
ˆs(k)−µ−1(k)
σ−1(k)
&
· σ+1(k)
= 2ˆs(k) · µ+1(k)
σ 2
+1(k)
(5.176)
The coefﬁcients of the equalizer ﬁlter c can be calculated as it is described in (5.44). Then the parameters
of the PDFs p (ˆs(k) |s(k) = +1) and p (ˆs(k) |s(k) = −1) can be estimated as [20]:
µ+1(k) = c · H · δH
D ,
µ−1(k) = −c · H · δH
D ,
σ 2
+1(k) = σ 2
−1(k) = c · H · δH
D −|µ+1(k)|2
(5.177)
Substituting (5.177) into (5.176) obtain:
Le (s(k)) =
2ˆs(k)
1 −c · H · δH
D
(5.178)
The same approach can be applied if the DFE is used as a SISO equalizer. Taking into account (5.60),
the general expression for SISO DFE output can be written as follows:
ˆs(k) = E {s(k)} +
0

i=−K1
cF(i) · (x(k −i) −E {x(k −i)}) +
K2

i=1
cB(i) · (ˆs(k −i) −E {ˆs(k −i)})
(5.179)
where ˆs(k −i) are previously detected symbols.
Now using the relation between the coefﬁcients of feedforward and feedback ﬁlters (5.76) and em-
ploying (5.40), (5.179) can be represented as:
ˆs(k) = E {s(k)} + cH
F (x −HE {s})
(5.180)
where E {s} = [ˆs(k −K2), ˆs(k −K2 + 1), . . . , ˆs(k −1), E {s(k)} , E {s(k + 1)} , . . . , E {s(k + K1)}]T ,
x = [x(k + K1), x(k + K1 −1), . . . , x(k)]T . The coefﬁcients of the equalizer feedforward ﬁlter cF
are calculated in accordance with (5.81). Then the parameters of the PDFs p (ˆs(k) |s(k) = +1) and
p (ˆs(k) |s(k) = −1) can be estimated as [20]:
µ+1(k) = cF · H · δH
D ,
µ−1(k) = −cF · H · δH
D ,
σ 2
+1(k) = σ 2
−1(k) = cF · H · δH
D −|µ+1(k)|2
(5.181)
where H is (K1 + 1) × (K1 + L + 1) matrix, δD is all zeroes (1 × (K1 + L + 1)) vector except for
unity at the (D + 1)-th position. The extrinsic LLR is calculated in the same way as for MMSE SISO

Equalization
259
Table 5.1
ITU pedestrian A
Tap
Relative delay (ns)
Average Power (dB)
1
0
0
2
110
–9.7
3
190
–19.2
4
410
–22.8
equalizer:
Le (s(k)) =
2ˆs(k)
1 −cF · H · δH
D
(5.182)
The same method can be applied also in cases when the turbo coding is used. In this case the turbo
decoder is simply used as a SISO decoder.
5.5
Performance Comparison
In this section the performance simulation results for some of the equalization schemes are presented.
All simulations were done for WCDMA system under the conditions of fading channel. Three chan-
nel proﬁles were considered: ITU Pedestrian A with the speed 3 km/h, ITU Pedestrian B with the
speed 3 km/h and ITU Vehicular A with the speed 30 km/h. The channel proﬁles are described in
Tables 5.1– 5.3.
The following equalizers were used in simulations:
1. Zero-Forcing (ZF) equalizer with 47 taps (taps resolution is 0.5 chip);
2. Linear minimum mean-square error (LMMSE) equalizer with 48 taps (taps resolution is 0.5 chip);
3. Decision feedback equalizer (DFE) represented in Figure 5.11 with 48 taps LMMSE equalizer and
feedforward ﬁlter with 32 taps and feedback ﬁlter with 16 taps;
4. Maximum likelihood sequence estimation (MLSE) equalization with K = 1024;
5. List sphere detection (LSD) with K = 1024;
6. RAKE receiver with 8 ﬁngers;
7. G-RAKE with 16 ﬁngers;
8. Turbo equalization with MAP SISO equalizer.
The BER results against the geometry factor G for different channel proﬁles are represented in Figures
5.22–5.24. The geometry factor G expresses the distance and quality of the path between the user and
Node B. It is deﬁned as:
G =
9 ˆIor
:
/N0
Table 5.2
ITU pedestrian B
Tap
Relative delay (ns)
Average Power (dB)
1
0
0
2
200
–0.9
3
800
–4.9
4
1200
–8.0
5
2300
–7.8
6
3700
–23.9

260
Modulation and Coding Techniques in Wireless Communications
Table 5.3
ITU vehicular A
Tap
Relative delay (ns)
Average Power (dB)
1
0
0
2
310
–1
3
710
–9
4
1090
–10
5
1730
–15
6
2510
–20
0.0001
0.001
0.01
0.1
1
-10
0
10
20
BER
G  (dB)
LMMSE
ZF
RAKE
DFE
MLSE
LSD
TurboEq.
G-RAKE
Figure 5.22
Equalizers’ performance. Pedestrian A, 3 km/h
0.001
0.01
0.1
1
-
20
10
0
10
BER
G  (dB)
LMMSE
ZF
RAKE
DFE
MLSE
LSD
TurboEq.
G-RAKE
Figure 5.23
Equalizers’ performance. Pedestrian B, 3 km/h

Equalization
261
0.001
0.01
0.1
1
-
20
10
0
10
BER
G  (dB)
LMMSE
ZF
RAKE
DFE
MLSE
LSD
TurboEq.
G-RAKE
Figure 5.24
Equalizers’ performance. Vehicular A, 30 km/h
where
9 ˆIor
:
is the average total power received from the own cell, and N0 is the noise power which
includes both thermal noise and interference from other cells.
As can be seen from Figures 5.22–5.24 the behaviour of different equalizers is quite similar for
different channel proﬁles. The worst performance with low values of G (high noise) shows the ZF
equalizer. It is explained by the noise enhancement, which is inherent in ZF equalizer. As expected
with high G values ZF equalizer outperforms the RAKE receiver. The LMMSE equalizer signiﬁcantly
outperforms both ZF equalizer and RAKE receiver. This fact is especially important since the complexity
of the LMMSE equalization is quite close to the complexity of ZF equalization and not signiﬁcantly
higher than the complexity of RAKE receiver. The performance demonstrated by G-RAKE is quite close
to the performance of LMMSE equalizer. It is also an expected result, since the G-RAKE optimization
method is quite close to the LMMSE. Slightly better performance than LMMSE is shown by the DFE.
This performance gain is especially visible in more demanding channel proﬁles like Pedestrian B and
Vehicular A, while in Pedestrian A with high G values LMMSE equalizer outperforms DFE. This can
be explained by the impact of error propagation typical for DFE. As can be seen from plots in Figures
5.22–5.24 the equalization methods based on sequence estimation provide much better performance
than methods based on ﬁltering. The best performance is demonstrated by the MLSE equalization.
Unfortunately the complexity of this method is extremely high. The similar performance is shown by
LSD and turbo equalization with MAP SISO equalizer. However, the complexity of these methods is
also quite high.
References
[1] Sklar, B. Digital Communications. Fundamentals and Applications, 2nd ed., Prentice Hall, 2001.
[2] Proakis, J.G. Digital Communications, 3rd ed., McGraw-Hill, 1995.
[3] Kay, S.M. Fundamentals of Statistical Signal Processing: Estimation Theory. Vol. I, Prentice Hall, 2009.
[4] Hooli, K., Latva-Aho, M., and Juntti, M., Multiple Access Interference Suppression with Linear Chip Equalizers
in WCDMA Downlink Receivers, in Proc. Global Telecommunications Conf., pp. 467–471, Rio de Janero, Brazil,
Dec. 5–9 1999.
[5] Krauss, T.P., Zoltowski, M.D. Oversampling diversity versus dual antenna diversity for chip-levelequalization
on CDMA downlink, in Proceedings of the Sensor Array and Multichannel Signal Processing Workshop, 2000,
pp. 47–51.

262
Modulation and Coding Techniques in Wireless Communications
[6] Mailaender, L. and Proakis, J. G. Linear-Aided Decision-Feedback Equalization for the CDMA Downlink,
Proceedings Thirty Seventh Asilomar Conference on Signals, Systems and Computers, 2003, pp. 131–135.
[7] Pohst, M. On the computation of lattice vectors of minimal length, successive minima and reduced basis with
applications,. ACM SIGSAM Bull., vol. 15, pp. 37–44, 1981.
[8] Fincke, U. and Pohst, M. Improved methods for calculating vectors of short length in a lattice, including a
complexity analysis,. Mathematics of Computation, vol. 44, pp. 463–471, April 1985.
[9] Viterbo, E., Boutros, J., A Universal Lattice Code Decoder for Fading Channels. IEEE Trans. Inf. Theory, vol.
45, No 5, July 1999, pp. 1639–1642.
[10] Golub, G.H. Van Loan, C.F., Matrix Computations (3rd ed.), Johns Hopkins, 1996.
[11] Damen, M.O., El Gamal, H., Caire, G., On maximum-likelihood detection and the search for the closest lattice
point. IEEE Trans. Inf. Theory., vol. 49, No 10, Oct. 2003, pp. 2389–2402.
[12] Schnorr, C.P., Euchner, M., Lattice basis reduction: Improved practical algorithms and solving subset sum
problems, Math. Programming, vol. 66, no. 2, pp. 181–191, Sep. 1994.
[13] Hassibi, B., Vikalo, H., On the Sphere-Decoding Algorithm I. Expected Complexity. IEEE Trans. Signal Pro-
cessing, vol. 53, No. 8, August 2005, pp. 2806–2818.
[14] Hochwald, B., Brink, S.T., Achieving near-capacity on a multiple antenna channel, IEEE Trans. Commun., vol.
51, no. 3, Mar. 2003.
[15] Price, R., Green, P.E., A Communication Technique for Multipath Channels. Proc. IRE, Mar. 1958, vol. 46, pp.
555–570.
[16] Brennan, D.G., Linear Diversity Combining Techniques. Proc. IRE, Jun. 1959, vol. 47, pp. 1075–1102.
[17] Bottomley, T.O.G., Wang, Y. A generalized rake receiver for interference suppression. IEEE Journal Selected
Areas Communications, Vol. 18, No. 8, Aug. 2000, pp. 1536–1545.
[18] Douilard, C., Jezequel, M., Berrou, C., Picart, A., Didier, P., Glavieux, A., Iterative correction of intersymbol
interference: Turbo-equalization, European Transactions on Telecommunications, vol. 6, Sep.–Oct. 1995, pp.
507–511.
[19] Bauch, G., Khorram, H., Hagenauer, J., Iterative equalization and decoding in mobile communications systems,
Proc. European Personal Mobile Commun. Conf., pp. 307–312.
[20] Tuchler, M., Koetter, R., Singer, A.C., Turbo Equalization: Principles and New Results. IEEE Trans. On
Communications, Vol. 50, No. 5, May 2002, pp. 754–767.

6
ARQ
Evgenii Krouk
St. Petersburg State University of Aerospace Instrumentation, Russia
In closed-loop systems the usage of feedback channel allows the transmission characteristics to be
improved. The idea of utilizing the feedback channel is that in case of receiving a very noisy message it
is possible not to make a decision, but rather ask the transmitter to repeat the transmission. In the most
general cases such organization of communication allows a decision concerning transmitted message to
be made only under conditions of noise absence (or very low noise level), repeating the message when
the noise level is high. Surely, usage of repeated transmission decreases the overall transmission rate.
However, in most cases such rate decreasing is not signiﬁcant. Communication systems utilizing the
feedback channel are called systems with repeat request (ARQ, Automatic Repeat reQuest) or systems
with feedback [10, 16, 18].
6.1
Basic ARQ Schemes
6.1.1
Basic Concepts
Among the variety of algorithms for data transmission over the feedback channels the two basic classes
of such systems may be distinguished: systems with decision feedback and systems with data feedback.
In systems with decision feedback the decision of repeated message transmission is made by the
receiving side of the system as the result of analyzing the received data. In systems with data feedback
the decision is made by the transmitter based on the information transmitted over the feedback channel.
Systems in which the decision of repeated transmission can be made both on receiving and transmitting
sides are called combined or hybrid transmission systems with feedback.
Consider the simplest model of the system with decision feedback, see Figure 6.1.
Let the transmission be made using the linear (n, k)-code. The code is used in detection mode (this
may be, for example, standard CRC code), that is, during the decoding process the belonging of the
received word to the code is veriﬁed, and the repeat request is made when the received word does not
belong to the code. In this case the transmission over the feedback channel consists of the repeat request
signal (positive acknowledgment, ACK, or negative acknowledgment, NACK or NAK).
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

264
Modulation and Coding Techniques in Wireless Communications
Figure 6.1
Basic ARQ scheme
Denote as Po the probability that an error detected during the decoding process, let Q be the probability
of correct receive, and let P1 be the probability of erroneous decoding. Then it is clear that:
Po + P1 + Q = 1
(6.1)
Since in the system with feedback the number of symbols obtained by the receiver depends on the
channel properties and is a random variable, we deﬁne the system transmission rate R as the ratio of
mathematical expectation of the number of information symbols obtained by the receiver to the overall
number of symbols sent to the forward communication channel. After obtaining every noncorrupted
codeword of length n receiver obtained k information symbols, and in the case of receiving the word
which does not belong to code, the receiver obtains no information, so the transmission rate is:
R = k
n (1 −Po)
(6.2)
The probability of error Pe in such a system is the sum of probabilities that after decoding the user will
obtain the wrong codeword without repeat request, after one repeat, after second repeat and so on. This
probability is:
Pe = P1 + P1 · P0 + P1 · P2
0 + . . . =
P1
1 −P0
(6.3)
The described simplest model of the system with feedback shows the basic advantages of the feedback
channel usage.
Firstly, from (6.3) one can see that with the reasonable repeat request probability Po ≪1, the error
probability is deﬁned by the value of the non-detection probability P1. Since the detection capability
of the code is much higher than the error-correcting capability, much shorter codes may be used in the
system with feedback compared to systems without feedback. This in turn allows the complexity of
communication system to be signiﬁcantly decreased.
Secondly, it follows from (6.2) that in the system with feedback the transmission rate is changing
together with the change of the detection probability. This is not a special advantage in the channel with

ARQ
265
constant parameters, when the value of Po is constant. However, in channels with variable parameters,
as is the case of all wireless channels, the mentioned above property of systems with feedback provides
adaptation of communication systems to the communication channel.
Considering the simplest model, we did not take into account many effects arising in real systems
with feedback. In particular, we did not consider errors occurring in feedback channel. As a rule, there
are much less information transmitted over the feedback channel, compared to the forward channel, thus
the error probability in the feedback channel is usually much less. Nevertheless, errors in the feedback
channel are possible, that is, the situations are possible when the positive acknowledgment (ACK) of
successful transmission would be considered as repeat request (NAK) and vice versa. In this case some
special errors speciﬁc for systems with feedback may occur: some transmissions may be sent twice, and
some may be lost.
To combat such deletions and insertions in the systems with feedback the special mechanisms are
used.
The problem of forward and feedback channels synchronization also requires investigation. After
receiving the erroneous word, the repeat request signal is transmitted over the feedback channel. If the
duration of transmission over the feedback channel is comparable to the duration of transmission over
the forward channel, then before obtaining the repeated word the receiver may obtain one or more words
following the requested. There are several synchronization strategies for forward and feedback channels.
All the strategies of data transmission with repeat requests in the case of detecting the receive errors
may be divided into three types:
r Stop and Wait (SAW);
r in case of error repeat last N packets (Go Back N, GBN);
r Selective Repeat (SR).
6.1.2
Stop-and-Wait ARQ
As has been noted, the implementation of the simplest system with repeat request involves some difﬁcul-
ties caused by message delay both in forward and feedback channels. During the period of transmission
the repeat request signal over the feedback channel there may be some subsequent messages transmitted
over the forward channel. The delivery of messages to the user in the initial order requires the buffering.
Of course the buffer size must be big enough to allow the whole sequence of messages that came before
the successful transmission of repeated message to be stored.
At that, if several retransmissions are needed for successful receive, then the buffer size may become
quite large. Equation (6.3) is correct for inﬁnite buffer length.
Stop and Wait (SW) method allows avoiding the buffering (or using a very small buffer size), see
Figure 6.2. The idea of the method is that the transmitter is waiting for either positive acknowledgment or
repeat request before starting the transmission of the next block. The complexity of Stop and Wait ARQ
system implementation is minimal. The receiver should be able to detect errors, but it need not contain
the buffer. If the transmitter has sent the packet, it is waiting for the receiver’s answer. If the receiver
detects no errors, it sends positive acknowledgment (ACK), otherwise the negative acknowledgment
(NAK) is sent. In case of ACK reception the transmitter ﬂushes the buffer containing the last sent packet.
Otherwise, in case of NAK reception, the transmitter repeats the transmission of the packet containing
the buffer.
Clearly, this strategy is not efﬁcient, especially when the delay δRT of forward and feedback channels
is high. Here the delay of forward and feedback channels is the sum of all time period durations between
transmission of the last symbol and receiver’s positive acknowledgment.
Suppose that the packets of n bits, including k information bits, are transmitted with the physical rate
V (bits/s), i.e. V δRT bits will be transmitted during time period nδRT. Then by analogy with (6.2) the
transmission rate for Stop and Wait systems will be:
RSW = k
n (1 −Po) ·
n
n + V δRT
(6.4)

266
Modulation and Coding Techniques in Wireless Communications
Figure 6.2
Stop-and-Wait ARQ
The value of rate RSW deﬁned by (6.4) becomes lower than that provided by the expression in (6.3) with
the increase of the delay in channels and the transmission physical rate. Since the delay of the forward
and feedback channels and data transmission rate are usually determined by the channel, the transmission
rate in (6.4) may be somewhat improved by means of increasing the packet length. However, this leads
to increasing the value Po, which limits the increasing of n.
Besides the low implementation complexity, the advantage of systems with waiting is low cost of
service information which is needed for every transmission. There is no need for packets numbering,
since the packets order is inherently preserved. Unfortunately, reliability of transmission of the one bit
of acknowledgment is not as simple as it seems. Moreover, due to the protocol’s nature it is impossible
to collect some determined number of acknowledgments.
The effectiveness of systems with waiting may be signiﬁcantly improved by means of organization of
the system with separated virtual channels.
Multichannel ARQ protocol with waiting. In multichannel ARQ with waiting (MC-SW-ARQ) N Stop
and Wait systems are used, see Figure 6.3. Each system is functioning on its own virtual channel, which
are independent from each other. For example, the channel separation by time, frequency or code is used.
The packets in multichannel ARQ are uniformly distributed over N channels. If the number of channels
is selected as:
N ≥
 V · δRT
k

(6.5)
then during the repeat request period in each channel there will be no new messages.
Thus, the rate achieved in multichannel Stop and Wait system is determined by expression (6.3).
The main problem in using the multichannel system is the necessity of establishing the correct order
of packets incoming. To achieve this, the buffer, intended for packets reordering is still needed at the
receive side.
There are different strategies for packets ordering and reordering when distributing packets over the
parallel channels. For example, the ﬁxed procedure may be used, when the i-th packet is directed to the
channel with number i mod N. Surely, reordering device should always have the information about

ARQ
267
input packets N-Channel
Sequencer
Buffer 1
Buffer 2
Buffer N
...
...
Check
Check
Check
...
Forward Channel
Reordering
packet 1
packet 2
packet N
Feedback Channel
Figure 6.3
Multichannel SW-ARQ
packets distribution at the transmitter side. Differences in ordering techniques affect the amount of
memory required by the system and the delay during the messages transmission.
6.1.3
ARQ with N Steps Back (Go Back N, GBN)
The mechanism of Go Back N (GBN) ARQ system does not require conﬁrmation of every data block:
the transmission is performed continuously. But if the transmitter receives the message about the lost
or erroneous packet, it repeats the transmission starting from the corrupted packet. In this case even
successfully transmitted packets are sent repeatedly. Such mechanism is convenient in that it does
not require buffering and storing the data at the receiving side, but in case of error the channel load
signiﬁcantly increases. Because of the one erroneous packet correctly received data may be retransmitted
many times, see Figure 6.4.
In GBN ARQ system the packets are numbered and sent to channel continuously, that is, the next
packet is transmitted before the conﬁrmation of successful receiving of the previous packet is obtained.
If the receiver detects an error, the number of erroneous packet is sent back as the signal for repeat
transmission. As a result the transmitter goes back to send an erroneous packet and every subsequent
packet. If there are buffers for N packets at the transmitter and receiver, then the transmission in forward
channel is continuous, if the condition in (6.5) is satisﬁed.
In the considered scheme the feedback communication system may be in two states:
1. Error is not detected; the probability of this state is 1 −Po, transmission rate is k
n ;
2. Error is detected; the probability of this state is Po, transmission rate is k
n · 1
N , since N packets are
transmitted for the transmission of one packet. Then, assuming independent packets transmission, the
transmission rate in GBN-ARQ scheme is:
RGBN = k
n ·
1 −Po
1 −Po + Po · N = k
n ·
1 −Po
1 + Po · (N −1)
(6.6)
It is clear that the GBN-ARQ scheme is not optimal, since some packets will be retransmitted even in
case of successful reception. This drawback is addressed in the ARQ scheme with selective repeat.

268
Modulation and Coding Techniques in Wireless Communications
Communication 
channel
OK
Packet 1
ACK
Error
Packet 2
NAK
Packet 2
OK
ACK
Packet 3
...
Packet 4
OK
Packet 5
Packet 3
Packet 4
...
...
...
ACK
Figure 6.4
Go Back N ARQ
6.1.4
ARQ with Selective Repeat (SR)
When transmitting messages with high rates and on large distances, the value of N in (6.5) may turn
out to be very large; this leads to signiﬁcant decrease of the transmission rate (6.6). The effectiveness of
communication may be improved by means of selective repeat request.
In the ARQ scheme with Selective Repeat (SR) all the packets have their sequence number, and the
receiver is equipped with buffer. Thus only packets which are received with errors should be retransmitted,
see Figure 6.5.
The feedback signal leads to retransmission of only one packet, so the transmission rate is determined
by (6.3), which makes this scheme preferable compared to SW and GBN systems.
Theoretically, under some conditions the multichannel SAW-ARQ and SR-ARQ may have the same
transmission rate. However, in MC-SAW-ARQ the costs of service information (packet numbers,
Communication 
channel
K
O
1
 t
e
k
c
a
P
ACK
r
o
rr
E
2
 t
e
k
c
a
P
NAK
Packet 2
ACK
Packet 3
Packet 4
Packet 5
...
OK
...
...
Figure 6.5
Selective Repeat ARQ

ARQ
269
acknowledgments, etc.) may not be signiﬁcant. This is explained by the structure of virtual channels,
which guarantees the preserving of the packets order.
In ARQ with selective repeat the persistent failure in transmission of one of the previous packets
would prevent the transmission of subsequent packets. In this situation the channel is used ineffectively,
since there will be no data sending until the blocking packet has been successfully transmitted.
On the contrary, the persistent denial in transmission of one block in MC-SW-ARQ system does
not affect the transmissions being performed in parallel. Surely, the delay in multichannel system will
also increase, since the delay in particular channels is possible. However, delayed packets affect the
transmission only in their channels, which decreases the rate much less than in SR-ARQ.
The mentioned drawbacks of SR-ARQ comparing to MC-SW-ARQ do not mean the deﬁnite compar-
ison result of these ARQ schemes in favour of multichannel systems, since in practice the organization
of a multichannel scheme is not always possible.
The SR algorithm allows the transmission of only those packets which are corrupted or lost to be
repeated. But in this case the transmitter should store some number of the last sent packets. Nevertheless,
since this method is the most efﬁcient regarding the channel resources, it is the basic technique in wireless
telecommunications systems.
6.2
Hybrid ARQ
The classical ARQ scheme described in Section 6.1 may not be very efﬁcient in practice, when the noise
level is relatively large (when functioning in the area of low- or medium-SNR). In this case the packet
transmission would always be erroneous, so the receiver should always request for retransmission, which
greatly reduces the transmission throughput or even makes it impractical.
The idea of the Hybrid ARQ (HARQ) scheme is to combine the error-detecting ARQ scheme with the
error-correcting FEC scheme. To achieve this, prior to the transmission the message is encoded by some
error-correcting code. At the receiving side the decoding attempt is made, after which the ARQ scheme
of the receiver should make the decision whether the decoding was successful or not, depending on this
decision the ACK or NAK signal is transmitted over the feedback channel.
The detection properties for the ARQ scheme may be provided either by special ARQ detecting
procedures like CRC computation or by capabilities of the error-correcting code itself. For example,
symbol-by-symbol iterative decoding for some classes of codes (convolutional codes, turbo-codes,
LDPC codes) in case of decoding error may lead not to the wrong codeword, but to some word which
does not belong to the code (and usually contains less errors than the received word, that is, which is
“closer” to the correct codeword than the received word), and this situation may be easily detected.
In the following sections we consider the basic variants of Hybrid ARQ schemes.
6.2.1
Type-I Hybrid ARQ (Chase Combining)
The most straightforward technique of combining the ARQ and FEC is called Type-I Hybrid ARQ
[3, 4, 14] and is shown in Figure 6.6.
The transmitted packet consists of the message (information) part, and the correspondent redundant
parity bits calculated by means of some error-correcting code. After the packet being transmitted and the
symbols are demodulated (usually providing soft-decisions of received signals or their log-likelihood
ratios, LLRs), they are fed into a FEC decoder. The decoder’s output should be checked by some means
to determine whether a decoding error occurred. As mentioned at the beginning of Section 6.2, this
may be achieved by applying the CRC check, or in some cases this may be directly followed from the
syndrome of the decoder’s output.
In the case of successful decoding the decoded message bits are sent to the user, the ACK signal is sent
over the feedback channel, and the next packet is prepared for transmission. In the case of a decoder’s
failure, the NAK signal is sent to the transmitter, and the encoded packet is repeated.

270
Modulation and Coding Techniques in Wireless Communications
message bits
parity bits
Packet 1
Decoder
Decoding error 
check
message bits
ACK
message bits
parity bits
Packet 2
Decoder
Decoding error 
check
NAK
OK
Error
message bits
parity bits
Packet 2
Decoder
Decoding error 
check
Combiner
message bits
OK
ACK
message bits
parity bits
Packet 3
Communication 
channel
...
Figure 6.6
Type-I HARQ
When the receiver receives the second response of the same packet (this is the case for Packet 2 in
Figure 6.6), it may decode the packet independently on the previously received version (in this case there
is no need for a buffer at the receiving side), or the receiver may combine the ﬁrst received packet with
the second one. Usually such combining is made by means of Chase combining [2], when the LLRs
(soft demodulated decisions) of the correspondent bits from two received copies of transmitted packet
are simply added to provide better decoding quality. Due to Chase combining procedure, the Type-I
HARQ is sometimes called CC-HARQ. In fact such combining is analogous to diversity combining
using MRC scheme, when two received copies of the same transmitted data are combined to provide
better signal-to-noise ratio for the received symbols, see Chapter 8.
The main drawback of this HARQ scheme is the low throughput when functioning in the area of
relatively large SNRs, when the decoding errors sometimes occurred, but the number of errors at the
decoder’s output is low and the retransmission of the whole packet is redundant and leads to throughput
decreasing.
6.2.2
Type-II Hybrid ARQ (Full IR)
The idea of Type-II HARQ systems is to use the variable level of redundant bits to ensure the correction
of errors at the receiving side using no more parity-check bits than is actually required in current channel
conditions [7, 11, 12]. This scheme is depicted in Figure 6.7.
In fact, to ensure the Type-II HARQ scheme, the set of T “nested” error-correcting codes is required.
For the ﬁxed number of k information symbols, for the information word m different sequences of parity-
check symbols r1, r2, . . ., rT are calculated, thus providing the set of possible rates R1 ≥R2 ≥. . . ≥RT .
The decoding procedure should be possible for any rate from this set.

ARQ
271
message bits
parity bits 1
Packet 1
Decoder
Decoding error 
check
message bits
ACK
message bits
parity bits 1
Packet 2
Decoder
Decoding error 
check
NAK
OK
Error
parity bits 2
Packet 2
Decoder
Decoding error 
check
Combiner
message bits
parity bits 1
Packet 3
Communication 
channel
...
Error
NAK
parity bits 3
Packet 2
Decoder
Decoding error 
check
Combiner
K
O
K
C
A
message bits
Figure 6.7
Type-II HARQ (Incremental Redundancy)
Then, during the ﬁrst transmission attempt, only the message bits m and the parity bits r1 are sent,
that is, the code with rate R1 is used. This code is decoded at the receiver side, and in the case of success
the ACK is sent over the feedback channel. Otherwise, the NAK is sent, and during the second attempt
only the parity-check bits r2 are sent (without repeating the message). At the receiver, these parity-check
bits are combined with m and r1, thus obtaining the code with rate R2 ≤R1 and higher error-correcting
capability (the combination and decoding procedures here depend on the type of codes being used). If
necessary, during the subsequent retransmissions only the extra (new) redundant bits are sent. So, this
scheme is often called the Incremental Redundancy (IR) HARQ.
In fact, this scheme provides adaptation of the code rate (and corresponding error-correcting power)
to the channel conditions: for better channel state only the small portion of redundant bits are used, and
the transmission rate is supported at high level, but if the channel state becomes worse, extra redundant
bits are sent and the errors are corrected by cost of rate decreasing.
The most common approaches to construct such rate-compatible families of codes use the codes on
trellis (convolutional codes or turbo-codes) [6, 13, 15], or LDPC codes [5, 17, 20]. For these codes it is
possible to “separate” the overall redundant bits into portions and to decode the message using only part
of the initial code’s redundancy.
Let us give an example of throughput estimation for Type-II HARQ scheme for some basic scenario
[7, 9]. We assume that the rate-compatible family of convolutional codes for Type-II HARQ transmission

272
Modulation and Coding Techniques in Wireless Communications
is used for BSC or AWGN channel with BPSK or QPSK. The information sequence of k bits is
ﬁrst encoded by the (n, k)-code for error detection, where n = k + r. For error correction after the
i-th transmission the i-th (2 + i, 1, m)-convolutional code Ci from the family is used, where i = 0
corresponds to the initial rate-1/2 code with memory nm and generator polynomials [G1(x), G2(x)]. The
information word m is encoded by the error-detection code into codeword c, let the polynomial c(x)
is correspondent to this codeword, then at each subsequent transmission either c(x)G1(x) or c(x)G2(x)
are sent, each containing n0 = n + nm bits. Then, if the decoding attempts for c(x)G1(x) and c(x)G2(x)
fail, the c(x)G1(x) is sent again and combined with previously received sequences for decoding with
(3, 1, m)-code with generator polynomial [G1(x), G2(x), G1(x)]. If this decoding is also in error, then the
c(x)G2(x) is sent again and combined with previously received sequences for decoding with (4, 1, m)-
code with generator polynomial [G1(x), G2(x), G1(x), G2(x)], and so on. So, the i-th code Ci has the
rate 1/(2 + i), i = 1, 2, . . . [7].
Suppose that the SR-ARQ scheme is used (Section 6.1.4). Let R0 be the event {received packet is
error-free}, Ru be the event {the received packet contains undetected error} and Rdet corresponds to {the
received packet contains detected error}. Clearly:
Pr{Rdet} = 1 −Pr{R0} −Pr{Ru}
(6.7)
If the codeword contains n0 = n + nm = (k + r) + nm bits, where k is the number of information bits,
r is the number of parity-check bits and nm is the number of tail bits for trellis termination, then:
Pr{R0} = (1 −p)n0
(6.8)
where p is the bit error probability for BSC channel, or:
p = Q

2Eb
N0

for AWGN channel (see (2.73)), where Eb is the transmitted energy per bit, N0 is the noise power, and
Q-function is deﬁned in (2.63):
Q(x) =
1
√
2π
 ∞
x
e
−y2
2 dy
If we assume that the probability of non-detected error in channel Pr{Pu} is negligible, then from (6.7)
and (6.8) we have:
Pr{Rdet} ≈1 −Pr{R0} = 1 −(1 −p)n0
Now consider the sequences obtained after the Viterbi decoding procedure after i-th transmission. Let’s
deﬁne another set of events D(i)
0 , D(i)
u and D(i)
det as {decoded sequence contains no errors}, {decoded
sequence contains undetected errors}, and {decoded sequence contains detected errors} correspondingly.
Again we assume that Pr{D(i)
u } is negligible. The probability of correct decoding may be limited as:
Pr{D(i)
0 } ≥(1 −Pr{E(i)})n
where E(i) is decoding error event for Viterbi decoding. Then the probability of detected errors after
decoding is:
Pr{D(i)
det} ≈1 −Pr{D(i)
0 } ≥1 −(1 −Pr{E(i)})n
(6.9)
The value of Pr{E(i)} may be bounded as [19]:
Pr{E(i)} ≤
∞

d=d(i)
free
a(i)
d Pd

ARQ
273
where d(i)
free is the free distance of Ci, a(i)
d is distance spectra of Ci, and Pd is the probability of selection
the wrong path at distance d. For the BSC channel:
Pd =
⎧
⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
d

j=(d+1)/2
 d
j

p j(1 −p)d−j
d odd,
d

j=d/2+1
 d
j

p j(1 −p)d−j + 1
2
 d
d/2

pd/2(1 −p)d/2
d even
and for AWGN channel:
Pd = Q

2dEb
N0

The average number of transmissions ¯N is [7]:
¯N = 1 + Pr{Rdet} + Pr

Rdet, Rdet, D(1)
det

+ Pr

Rdet, Rdet, D(1)
det, Rdet, D(2)
det

+
+ Pr

Rdet, Rdet, D(1)
det, Rdet, D(2)
det, Rdet, D(3)
det

+ . . .
. . . + Pr

Rdet, Rdet, D(1)
det, Rdet, D(2)
det, Rdet, D(3)
det, . . . , Rdet, D(i)
det

+ . . .
This value may be bounded as:
1 + Pr{Rdet} +
∞

i=1
Pr{Rdet}i+1
i
j=1
Pr

D( j)
det

≤¯N ≤1 + Pr{Rdet} +
∞

i=1
Pr

D(i)
det

(6.10)
In fact, the lower and upper bounds on ¯N in (6.10) are approximately the same, so we may approximate
this value as:
¯N ≈1 + Pr{Rdet} +
∞

i=1
Pr

D(i)
det

The throughput η is deﬁned as:
η = R
¯N
where R is code rate, which is in our case R = k/n0, so we have:
η = R
¯N ≈

k
k + r + nm

·

1
1 + Pr{Rdet} + ∞
i=1 Pr{D(i)
det}

The drawback of the Incremental Redundancy scheme is the case when the initial transmission containing
the message bits fall under very bad channel conditions, and the number of errors occurred is very high.
First, in this case extra parity bits may not be helpful, and second, during subsequent transmissions there
is no new information about the message part itself, which would allow combining as in Type-I HARQ.
This problem is partly overcome in Type-III HARQ.
6.2.3
Type-III Hybrid ARQ (Partial IR)
The main property of Type-III HARQ system [1, 8] (which is also sometimes referred to as Partial
Incremental Redundancy) is that all transmitted packets are self-decodable. This scheme is shown in
Figure 6.8.
With this type of HARQ transmission, all the transmitted packets contain the message part, and in all
cases (including retransmission) the decoding attempt of the receiving packet is ﬁrst made. If the attempt
fails, then NAK is sent over the feedback channel (if no retransmissions of this packet are available), or

274
Modulation and Coding Techniques in Wireless Communications
Figure 6.8
Type-III HARQ (Partial Incremental Redundancy)
the packet is consequently combined with the previously received versions and new decoding attempts
are made. If all the decoding attempts are failed, the NAK is sent.
In some sense, this type of transmission may be considered as a version of Type-I HARQ, when all
the repeated packets contain the same message part, but with different parity-checks, and in some sense,
since the parity-checks are changed, this scheme may be considered as Incremental Redundancy scheme.
Since all the packets should transfer information part and parity-check part, there is no rate adaptation
to the variable channel conditions in Type-III scheme as compared to Type-II scheme. In the situation
when the noise level is relatively high, Type-III HARQ may overcome the Type-II HARQ systems with
full Incremental Redundancy, but with the increasing of SNR it become worse in terms of throughput
since there is no need for multiple transmission of the same information part.
Again, we will estimate the throughput of the Type-III HARQ scheme for the Gaussian channel
using the same family of convolutional codes as in Section 6.2.2 [8]. In this case, q puncturing patterns
Pi, i = 1, 2, . . . , q are used to obtain the codes Ci of rate R = b/V from the original convolutional

ARQ
275
code of rate 1/V0. The combination of j such codes C( j) is obtained using the puncturing matrix
P( j) = P1 + P2 + . . . + Pj. Each packet of n0 = k + r + nm bits, where k is information length, r is the
number of redundant bits for error detection and nm is the memory of the encoder, is encoded with the
rate-1/V0 code. Then the coded bits from C1, C2, . . . are sent (until ACK is obtained from the feedback
channel) and decoded at the receiver side using the patterns P1 (after the ﬁrst transmission), P2 and, in
case of error, P(2) (after the second transmission), and so on. At step i > 1, ﬁrst the decoding attempt
for code Ci with pattern Pi is made, and then, in case of error, the combined code C(i) with pattern P(i)
is applied. If after q attempts decoding is failed, then the received sequence for C1 is discarded and the
procedure continues with sending the bits from C1 again, and so on.
Let F(i) be the event {decoding error after i transmissions}, and D(i)
det be the event {error detected
after decoding in C(i)}. Then the average number of transmissions ¯N is:
¯N = 1 + Pr{F(1)} + Pr{F(1), F(2)}+
+ Pr{F(1), F(2), F(3)} + . . .
. . . Pr{F(1), F(2), F(3), . . . , F(i)} + . . .
(6.11)
Event F(i) is equivalent to joint event {D(1)
det, D(i)
det} for i < q and to joint event {D(1)
det, D(q)
det} for i ≥q.
Each term in (6.11) may be bounded as:
Pr{F(1), . . . , F(i)} ≤
⎧
⎪⎪⎨
⎪⎪⎩
Pr{D(i)
det},
i ≤q
Pr{D(q)
det} j,
i = jq, j = 1, 2, . . .
Pr{D(q)
det} j Pr{D(i−jq)
det
},
jq < i < ( j + 1)q, j = 1, 2, . . .
(6.12)
From (6.11) and (6.12) obtain:
¯N ≤1 + q−1
i=1 Pr{D(i)
det}
1 −Pr{D(q)
det}
where the value of Pr{D(i)
det} may be estimated as in (6.9). Finally, the estimation of throughput for the
considered example is:
η = R
¯N ≥
R(1 −Pr{D(q)
det})
1 + q−1
i=1 Pr{D(i)
det}
References
[1] 3GPP TSG RAN WG1#2 Tdoc R1-99061, “Hybrid ARQ techniques for efﬁcient support of packet data”,
Panasonic, Japan, Feb. 1999. Available: http://www.3gpp.org/ ftp/ tsg ran/ WG1 RL1/ TSGR1 02/ Docs/ pdfs/
R1-99061.pdf
[2] Chase, D. Code combining. A maximum likelihood decoding approach for combining an arbitrary number of
noisy packets, IEEE Transactions on Communications, vol. 33, pp. 385–393, May 1985.
[3] Chockalingam, A., Zorzi, M., Tralli, V. Wireless TCP performance with link layer FEC/ARQ, Proceedings,
IEEE ICC’1999, vol. 2, pp. 1212–1216, Canada, 1999.
[4] Deng, R. H. Hybrid ARQ scheme using TCM and code combining, IEE Electronics Letters, vol. 27, no. 10,
pp. 866–868, May 1991.
[5] Ha, J., Kim, J., McLaughlin, S. W. Rate-compatible puncturing of low-density parity-check codes, IEEE Trans.
on Information Theory, vol. 50, no. 1, pp. 2824–2836, 2004.
[6] Hagenauer, J. Rate Compatible punctured convolutional codes (RCPC) and their applications, IEEE Transac-
tions on Communications, vol. 36, no. 4, pp. 389–400, 1988.
[7] Kallel, S. Analysis of a type-II Hybrid ARQ scheme with code combining, IEEE Transactions on Communications,
vol. 38, no. 8, pp. 1133–1137, Aug. 1990.

276
Modulation and Coding Techniques in Wireless Communications
[8] Kallel, S. Complementary punctured convolutional (CPC) codes and their applications, IEEE Transactions on
Communications, vol. 43, no. 6, pp. 2005–2009, June 1995.
[9] Kallel, S, Haccoun, D. Generalized type II Hybrid ARQ scheme using punctured convolutional coding, IEEE
Transactions on Communications, vol. 38, no. 11, pp. 1938–1946, 1990.
[10] Lin, S., Costello, D. J. Error control coding, second ed., Prentice Hall, Englewood Cliffs, NJ, 2004.
[11] Lin, S., Yu, P. S. A hybrid ARQ scheme with parity retranmission for error control of satellite channels, IEEE
Transactions on Communications, vol. COM-30, no. 7, pp. 1701–1719, 1982.
[12] Mandelbaum, D. M. An adaptive-feedback coding scheme using incremental redundancy, IEEE Trans. on
Information Theory, vol. 20, pp. 388–389, 1974
[13] Rowitch, D., Milstein, L. On the performance of hybrid FEC/ARQ systems using rate compatible punctured
turbo (RCPT) codes, IEEE Transactions on Communications, vol. 48, pp. 948–959, 2000.
[14] Schmitt, M. P. Hybrid ARQ scheme employing TCM and packet combining, IEE Electronics Letters, vol. 34,
no. 18, pp. 1725–1726, September 1998.
[15] Schmitt, M. P. Improved retransmission strategy for hybrid ARQ schemes employing TCM, Proceedings, IEEE
Wireless Communications and Networking Conference, vol. 3, pp. 1226–1228, September 1999.
[16] Schmitt, M. P. ARQ systems for wireless communications, Ph.D. Thesis, Technical University Darmstadt,
Darmstadt, 2002.
[17] Sesia, G. C. S., Vivier, G. Incremental Redundancy Hybrid ARQ Schemes Based on Low-Density Parity-Check
Codes, IEEE Transactions on Communications, vol. 52, no. 8, pp. 1311–1321, Aug. 2004.
[18] Stender, B. Signaling Aspects for Wireless Communications, Ph.D. Thesis, University of Ulm, Germany, 2007
[19] Viterbi, A. J. Convolutional codes and their performance in communication systems, IEEE Transactions on
Communications, vol. COM-19, Oct. 1971.
[20] Yazdani, M., Banihashemi, A. On construction of rate-compatible low-density parity-check codes, IEEE Com-
munications Letters, 8 (3), 2004.

7
Coded Modulation
Andrey Troﬁmov
St. Petersburg State University of Aerospace Instrumentation, Russia
7.1
Principle of Coded Modulation
For uncoded M-ary transmission using signals, belonging to a signal set, or signal alphabet S, M = |S|,
M = 2m, m is integer, data transmission rate is equal to:
Ru = log2 M
T
,
bit/s
(7.1)
where T is signalling interval. Hereafter the narrowband signalling is assumed, for example, PSK and
QAM as most important cases. For such signal sets the bandwidth W used for transmission does not
depend on number of signals M in signal set S, and it can be evaluated as:
W = α
T
(7.2)
where α is a pulse shape dependent constant. In particular, for signals of duration T with a constant
envelope α = 2, for signals with envelope of sinc(·), transmitted with period T , α = 1. In further
consideration we assume that the pulse shape is chosen and remains unchangeable, hence the value of α
is constant for all cases of uncoded and coded systems considered in this chapter.
Ratio of transmission rate to bandwidth is called spectral efﬁciency. For uncoded transmission the
spectral efﬁciency is equal to:
ηu = Ru
W ,
bit/(s · Hz)
(7.3)
and as it follows from (7.1) and (7.2):
ηu = log2 M
α
,
bit/(s · Hz)
(7.4)
For coded data transmission the structure of the transmitting part of the system can be presented (with a
minor loss of generality negligible for practice) as it is shown in Figure 7.1
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

278
Modulation and Coding Techniques in Wireless Communications
Correcting
code 
encoder 
k data bits 
n coded bits 
Modulation 
mapping 
sequence of 
m
n/
signal points 
Pulse 
shaping 
sequence of 
m
n/
signals  
Figure 7.1
General structure of transmitting part of coded system
Let us denote input data block at time t as u(t) = (u(t)
0 , . . . , u(t)
k−1) ∈{0, 1}k, and coded block at
time t as v(t) = (v(t)
0 , . . . , v(t)
n−1) ∈{0, 1}n. Coded block v(t) before mapping is divided into (n/m)
sub-blocks
1
of length m
bits as follows v(t) = (v(t)
0 , . . . , v(t)
n/m−1), where v(t)
l
∈{0, 1}m, l =
0, 1, . . . , n/m −1. Modulation mapping M : {0, 1}m →S can be deﬁned as s(t) = s(v(t)), where s(t)
∈S 2. Since the pulse shaping is assumed to be ﬁxed the set of signal points (signal constellation) and
signal set are isomorphic. From here on we assume the set S as subset of D-dimensional real Euclidean
space, that is, S ⊂RD. For most important in practice examples of PSK and QAM signal space dimension
D = 2.
Transmission rate Rc for coded transmission can be computed as:
Rc =
k
(n/m)T = R log2 M
T
,
bit/s
(7.5)
where R is the correcting code rate, R = k/n. The spectral efﬁciency ηc for coded transmission can be
expressed as:
ηc = Rc
W = R log2 M
α
,
bit/(s · Hz)
(7.6)
It immediately follows from comparison between (7.6) and (7.4) that ηc = ηu if R = 1, i.e. for nonredun-
dant transmission. It also follows from (7.6) and (7.4) that error correcting coding decreases the spectral
efﬁciency 1/R times. In practice that means decreasing data transmission rate and/or increasing the
bandwidth. Positive outcome of error correcting coding is an improved reliability of data transmission.
For years the trade-off “spectral efﬁciency – reliability” was considered as an unavoidable feature of
error correcting coding.
In [1] G. Ungerboeck has suggested a scheme of combined design of error correcting code and
modulation mapping of coded subblocks into an extended signal set. This combination of coding and
modulation does not cause the spectral efﬁciency to decrease, but it has an improved performance in
comparison with uncoded transmission. In other words, the coding in such cases does not cause either
bandwidth extension, or slowing down of the transmission rate. This effect is achieved by using an
extended signal set (extended signal constellation).
Let Sc be the extended signal set with Mc signal points. Mc = |Sc| > M. In this case (7.6) can be
written down as:
ηc = R logs Mc
α
,
bit/(s · Hz)
(7.7)
Equating the right hand parts of (7.7) and (7.4) we get the condition for rate R of the error correcting
code:
R = log2 M
log2 Mc
(7.8)
1 We assume that m is divisor of n.
2 Distinguish Greek M for mapping and italic M for cardinality of signal set.

Coded Modulation
279
E
E
S
414
.1
2
)
(
≈
=
δ
PSK4 
E
E
E
Sc
765
.0
)
2
2
(
)
(
≈
−
=
δ
PSK8 
E
E
E
Sc
390
.0
)
2
2
2
(
)
(
≈
−
−
=
δ
PSK16 
E
Figure 7.2
Signal constellations for PSK4 (basic signal set) and PSK8 and PSK16 (extended signal sets)
which keeps the spectral efﬁciency unchangeable in comparison with uncoded transmission. For example,
if for uncoded transmission M = 4, and for coded transmission Mc = 8, then for code with rate R =
log2 M/ log2 Mc = 2/3 there is no loss of spectral efﬁciency. If the signal alphabet is extended up to
Mc = 16 signal points then the code with R = 1/2 can be used.
From general principles of coding theory it follows that decreasing of code rate leads to increasing of
correcting capability. On the other hand, minimum distance in signal set diminishes with increasing the
number of signal points and keeping energy (or average energy) of the signal constant.
Let d(x, y) be the Euclidean distance between any points x, y ∈RD. Let us introduce minimum
distance δ in signal set S as:
δ(S) =
min
x̸=y,x,y,∈S d(x, y)
Examples of signal constellations and their minimum distances for PSK4, PSK8 and PSK16 are shown
in Figure 7.2. Signal energy, or Euclidean norm of signal points is denoted as E.
Examples of signal constellations and their minimum distances for QAM4, QAM8 and QAM16 are
given in Figure 7.3. Here E is average signal energy, or average squared Euclidean norm of signal points.
It follows from Figure 7.2 that the minimum distance decreases 1.848 times and 3.624 times with
increasing the signal points in PSK signal constellation from 4 to 8 and to 16 respectively. For QAM
constellation, see Figure 7.3, the corresponding factors are 1.158 and 2.236. Nevertheless, it is possible
QAM8 
E
E
E
Sc
894
.0
5
4
)
(
≈
=
δ
QAM4
E
E
E
S
414
.1
2
)
(
≈
=
δ
QAM16 
E
E
E
Sc
633
.0
5
2
)
(
≈
=
δ
Figure 7.3
Signal constellations for QAM4 (basic signal set) and QAM8 and QAM16 (extended signal sets)

280
Modulation and Coding Techniques in Wireless Communications
Convolutional 
encoder 
0k
1k
0
n
…
…
)
,...,
(
)
(
1
)
(
0
)
(
t
k
t
t
u
u
−
=
u
)
,...,
(
)
(
1
)
(
0
)
(
t
n
t
t
v
v
−
=
v
…
)
(
0
t
u
)
(
1
t
k
u −
Modulation 
mapping 
)
(t
s
…
)
(
1
t
nv −
)
(
0
t
v
“Full” encoder 
Figure 7.4
Trellis coded modulation scheme
to increase the minimum distance between sequences of signal points, using the specially designed
correcting code and modulation mapping.
A general scheme of combined trellis coded modulation (TCM) using an extended signal set is shown
in Figure 7.4.
The scheme consists of encoder of convolutional code of rate k0/n0 with memory of ν bits, and
modulation memoryless mapper. Encoder produces n0 coded bits and after combining them with k1
uncoded bits forms n = n0 + k1 bits coming into modulation mapping. The overall code rate is k/n,
where k = k0 + k1.
Let σ (t) be an encoder state at time t, σ (t) ∈{0, 1}ν for all t. State transitions of the encoder can
be deﬁned as σ (t+1) = σ(u(t), σ (t)), where σ(·, ·) is time-invariant state transition function, and u(t)
is the encoder input at time t as shown in Figure 7.4. Encoded block v(t) at time t can be deﬁned
as v(t) = v(u(t), σ (t)), where v(·, ·) is time-invariant output function. For convolutional encoder these
functions are linear over GF(2), that is:
σ(u(t) + u′(t), σ (t) + σ ′(t)) = σ(u(t), σ (t)) + σ(u′(t), σ ′(t)),
v(t) = v(u(t) + u′(t), σ (t) + σ ′(t)) = v(u(t), σ (t)) + v(u′(t), σ ′(t))
In this scheme it is assumed that m = n (see Figure 7.1), that is, each coded block is mapped into one of
Mc = 2n signals.
Decoding for TCM is usually implemented as Viterbi algorithm (VA) [2] on the trellis of the en-
coder with edges labelled according to modulation mapping. The VA accepts the soft decisions from
demodulator and searches for the path in trellis minimizing squared Euclidean distance between received
sequence and coded signal sequence. The trellis at each level has 2νnodes, and every node is connected
by 2k1 parallel edges with each of 2k0previous nodes. Any edge corresponds to one signal belonging to
extended signal set Sc.
7.1.1
Illustrative Example
In this example we assume transmission with PSK at rate 2/T bit/s, where T is signal interval duration.
In this example we examine minimum distances between two signal sequences. Let u and v(u) be data

Coded Modulation
281
00
11
01
10
)
(S
δ
Figure 7.5
Example of modulation mapping for uncoded transmission
sequence and corresponding coded sequence respectively, and s(v(u)) be signal sequence at the mapper
output.
A. Uncoded transmission. The PSK4 signals conform to transmission rate 2/T bit/s. For uncoded
transmission v(u) = u, and min
u̸=u′ d (s(v(u)), s(v(u′)) = δ(S). Example for modulation mapping for PSK4
(Gray mapping) is shown in Figure 7.5.
It is easy to see that the squared minimum distance between two signal sequences is equal to squared
minimum distance between signal points:
d2(s(v(u)), s(v(u)′)) = d2(s(u), s(u′)) = d2(s(00), s(10)) = δ(S) = 2E
(7.9)
B. Coded transmission. An example of encoder and modulation mapping is shown in Figure 7.6.
The encoder state in time t is σ (t) = (σ (t)
0 , σ (t)
1 ), σ (t)
0 , σ (t)
1
∈{0, 1}. It is easy to see from Figure 7.6
that σ (t)
0
= u(t−1)
0
, σ (t)
1
= σ (t−1)
0
= u(t−2)
0
. State transition function is deﬁned as σ (t+1) = σ(u(t), σ (t)) =
(u(t)
0 , σ (t)
0 ). Output coded block v(t) = (v(t)
0 , v(t)
1 , v(t)
2 ) is computed as v(t) = v(u(t), σ (t)) = (σ (t)
0 , u(t)
0 +
σ (t)
1 , u(t)
1 ).
Let us consider transmission of the data sequences u = (00, 00, 00, . . .) and u′ = (10, 00, 00, . . .) by
this code. Evidently, v(u) = (000, 000, 000, . . .). For data sequence u′ the encoder state transitions and
encoder outputs are shown in Table 7.1.
It can be easily computed that squared Euclidean distance between the signal sequences corrresponding
to data sequences u and u′ is:
d2(s(v(u)), s(c(u′))) = d2(s(010), s(000)) + d2(s(100), s(000)) + d2(s(010), s(000))
= 2E +

2 +
√
2

E + 2E =

6 +
√
2

E ≈7.414E
       
)
(
1
t
v
000
)
(
c
S
δ
001
010
011
110
111
101
100
)
(
0
t
u
)
(
1
t
u
)
(
1
t
σ
)
(
0
t
σ
)
(
0
t
v
)
(
2
t
v
)
(
)
(
)
(
t
t
s
s
v
=
Modulation 
mapping  
+
Figure 7.6
Example of trellis coded modulation scheme

282
Modulation and Coding Techniques in Wireless Communications
Table 7.1
Example of two coded signal sequences
t
u(t) = (u(t)
0 , u(t)
1 )
σ (t) = (σ (t)
0 , σ (t)
1 )
v(t) =
(v(t)
0 , v(t)
1 , v(t)
2 )
s(v(u′))
s(0, 0, . . .)
1
1 0
0 0
010
2
0 0
1 0
100
3
0 0
0 1
010
4
0 0
0 0
000
. . .
. . .
. . .
. . .
Comparing this value with (7.9) we see that in this case the ﬁrst data bit is protected much
better.
Trellis for this example is depicted in Figure 7.7. The paths corresponding to s(v(u)) and s(v(u′)) are
shown as bold lines. They differ in the ﬁrst three transitions and merge together later on.
Free Euclidean distance d f is a principal parameter for trellis codes and decoding with VA. It can be
shown that for the code and modulation mapping shown in Figure 7.6 d2
f = 4E. That means 3 dB energy
gain in comparison with uncoded transmission (see (7.9)).
7.2
Modulation Mapping by Signal Set Partitioning
The Ungerboeck coded modulation scheme is based on a) modulation mapping by set partitioning, and
b) especially designed convolutional codes.
Let us consider modulation mapping suggested in [1]. Modulation mapping can be described as a
step-by-step procedure. The number of steps is equal to m, m = log2 Mc. For the Ungerboeck TCM
scheme m = n, where n is number of output coded symbols. At each step of the procedure the signal
subset is divided into two subsets. On the very ﬁrst stage the signal subset is equal to the whole signal set
Sc containing Mc signal points. After last step of partitioning the signal subset consists of a single signal
point. Any subset derived on l-th step of partitioning corresponds to a l−bit binary vector. Therefore
number of subsets on l-th step is equal to 2l. Let vl be a binary vector of length l, that is, vl ∈{0, 1}l,
l = 1, 2, . . . , n. Let Sc(vl,l) be one of 2l signal subsets derived on l-th step of partitioning. Then the
00 
01 
10 
11 
…
t
… 
3 
2 
1 
Figure 7.7
Example of code trellis

Coded Modulation
283
0
0
0
0
0
0
0
1
1
1
1
1
1
1
c
S
)1,1(
cS
)
2,
00
(
cS
 
)
2,
01
(
cS
)
2,
10
(
cS
)
2,
11
(
c
S
)
3,
000
(
cS
)3,
001
(
cS
 
)
3,
010
(
cS
)3,
011
(
cS
)3,
100
(
cS
 
)3,
101
(
c
S
 
)3,
110
(
cS
)3,
111
(
c
S
)1,0
(
c
S
Figure 7.8
Binary partitioning of signal set
partitioning can be deﬁned recurrently as:
 Sc = Sc(0, 1) ∪Sc(1, 1),
Sc(vl,l) = S([vl0],l + 1) ∪S([vl1],l + 1),
l = 2, 3, . . . , n −1
where [vl, 0], [vl, 1] are concatenations of binary vector and binary digit. It is easy to see that the process
of partitioning can be presented as a binary tree. An example for n = 3 is shown in Figure 7.8
Partitioning must conform to some conditions on the distance between signal points in subsets and
distance between signal subsets. Let us deﬁne minimum distance between points in subsets of l-th level
as:
δl = min
v∈(0,1}l
min
x,y∈Sc(v,l), x̸=y d(x, y)
it is assumedbydeﬁnitionthat δ0 =
min
x,y∈Sc, x̸=y d(x, y) = δ(Sc). Alsowedeﬁneminimum distancebetween
signal subsets on the l-th level as:
l =
min
v∈(0,1}l−1
min
x∈Sc([v 0],l)
y∈Sc([v 1],l)
d(x, y)
Then for the Ungerboeck partitioning there exists the chain of inequalities:
δ0 = 1 < δ1 = 2 < . . . < δn−1 = n
Figures 7.9 and 7.10 give examples of partitioning for PSK8 and QAM16.
For PSK8 we have the chain of inequalities for distances between signal sets and between signal points
δ0 = 2
√
E sin(π/8) = 1 < δ1 =
√
2E = 2 < δ2 = 2
√
E = 3.
For QAM16 the minimum distance between signal points δ0 =

(2/5)E ≈0.633

E, where E is
average energy of signal in QAM16 signal set, and the chain of distances for this case is δ0 = 1 < δ1 =
√
2δ0 = 2 < δ3 = 2δ0 = 3 < δ3 = 2
√
2δ0 = 4.

284
Modulation and Coding Techniques in Wireless Communications
PSK8 
0
0
0
0
0
0
0
1
1
1
1
1
1
1
0v
1v
2v
Figure 7.9
Partitioning of signal set PSK8
QAM16 
0
0
0
 0
 0
0
0
0
1
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0v
1v
3v
2v
Figure 7.10
Partitioning of signal set QAM16

Coded Modulation
285
7.3
Ungerboeck Codes
Trellis coded modulation scheme contains a convolutional encoder of rate k0/n0. The encoder of such a
code can be deﬁned by polynomial k0 × n0 generator matrix Gc(z):
Gc(z) =
⎡
⎢⎢⎣
g00(z)
g01(z)
. . .
g0n0−1(z)
g10(z)
g11(z)
. . .
g1n0−1(z)
. . .
. . .
. . .
. . .
gk0−1,0(z) gk0−1,1(z) . . . gk0−1,n0−1(z)
⎤
⎥⎥⎦
where z is a formal variable, and gi j(z) are polynomial of ﬁnite ﬁeld GF(2), i = 0, 1, . . . , k0 −1,
j = 0, 1, . . . n0 −1, and encoder memory size can be expressed as:
ν =
k0−1

i=0
max
j
deg gi j(z)
Then the encoding process can be described as the multiplication of vector of formal series corresponding
to data sequences by polynomial generator matrix, that is:
[ v0(z) v1(z) . . . vn0−1(z) ] = [ u0(z) u1(z) . . . uk0−1(z) ]Gc(z)
where v j(z) = v(0)
j
+ v(1)
j z + . . . + v(t)
j zt + . . ., ui(z) = u(0)
i
+ u(1)
i z + . . . + u(t)
i zt + . . ., are formal se-
ries corresponding to data sequence (u(0)
i , u(1)
i , . . . , u(t)
i . . .) and code sequences (v(0)
j , v(1)
j , . . . , v(t)
j , . . .)
respectively, u(t)
i , v(t)
j ∈GF(2) for all t, j = 0, 1, . . . , n0 −1, i = 0, 1, . . . , k0 −1.
For “full” encoder (see Figure 7.4) with k1 uncoded data sequences the polynomial generator k × n
matrix G(z) exists in form:
G(z) =
 Gc(z)
0
0
I

(7.10)
and k = k0 + k1, n = n0 + k1. Hereafter we use notation I for identity matrix and 0 for zero matrix
of a corresponding dimension. It follows from (7.10) that the code sequences v0(z), v1(z), . . . , vn0−1(z)
depend on data sequences u0(z), u1(z), . . . , uk0−1(z), and vn0+ j(z) = uk0+ j(z), j = 1, 2, .., k1, and does
not depend on u0(z), u1(z), . . . , uk0−1(z).
An equivalent description of the convolutional code can be given by its polynomial parity check
(n −k) × k matrix H(z), such that G(z)H(z)T = 0. For polynomial generator matrix given by (7.10) the
parity check matrix can be written as:
H(z) =
 Hv(z)
0 
where Hc(z) is (n0 −k0) × n0 parity check matrix corresponding to Gc(z), that is, such that
Gc(z)Hc(z)T = 0. It should be noted that in general elements of matrix Hc(z) are a rational function of
formal variable z over GF(2).
For many examples given in [1] parameters of codes are as follows n0 = k0 + 1, and the codes are
speciﬁed by parity check matrices.3 In this case the dimension of matrix Hc(z) is 1 × n0, and it can be
presented as:
Hc(z) =
h1(z)
h0(z) · · · hk0(z)
h0(z)
1

(7.11)
where h1(z),..,hk0(z) are feedforward encoder polynomials, and h0(z) is feedback encoder polynomial.
The general scheme of the systematic convolutional code corresponding to the matrix 7.11 is shown in
Figure 7.11.
3 List of some Ungerboeck codes is given below in Tables 7.2–7.5

286
Modulation and Coding Techniques in Wireless Communications
...
+
+
... 
)
(
1
0
t
nv
−
)
(
1
t
v
)
(
0
t
v
1,0h
2
,0
−
h
... 
2
,1
−
h
...
1,1h
2
,
0
−
kh
1,
0
kh
1
0
,0
=
h
+
)
(
0
t
u
)
(
1
0
t
ku
−
...
1
,0
−
h
...
1
,1
−
h
1
,
0
−
ν
kh
ν
ν
ν
ν
ν
Figure 7.11
Systematic convolutional encoder for Ungerboeck scheme
Example of the encoder for code with the parity check matrix:
Hc(z) =

z3
1 + z5
z + z2
1 + z5
1

(7.12)
is shown in Figure 7.12
To make description polynomial generator and parity check matrices more compact we use the common
octal notation for polynomial over GF(2). For example, let us consider the parity check matrix in (7.12).
The polynomial z2 + z can be represented by its coefﬁcients as (1, 1, 0) or 1102 = 68, polynomial z3
corresponds to 10002 = 108, and 1 + z5 – 1000012 = 418. Thus matrix Hc(z) given in (7.12) can be
written in compact octal form as
 10/41 06/41 1 
. The generator matrix for this example is:
Gc(z) =
 z + z3
1 + z + z2
z
1 + z
z2
0

↔
 12
07
02
03
04
00

(7.13)
It can be veriﬁed that Gc(z)Hc(z)T = 0. The encoder for convolutional code with generator matrix in
(7.13) is feedback-free. The code generating by this encoder is equivalent to code with parity check
matrix in (7.12).
+
+
+
)
(
0
t
u
)
(
1
t
u
)
(
1
t
v
)
(
0
t
v
)
(
2
t
v
Figure 7.12
Example of systematic convolutional encoder, ν = 5

Coded Modulation
287
7.4
Performance Estimation of TCM System
The simple approach to evaluating the error correcting performance for TCM considers minimal (free)
Euclidean distance and asymptotic coding gain as a measure of efﬁciency. Let S be as before a signal set
used for uncoded transmission, |S| = 2k, and δ(S), E(S) be the minimum distance between signals in S,
and average squared Euclidean norm of signals in S respectively. Let us denote convolutional code of rate
k/n used in TCM scheme as V , modulation mapping M, M : {0, 1}n →Sc, where Sc is extended signal
set, |Sc| = n, and average squared norm of Sc is E(Sc). Let d f (C, M, Sc) be free Euclidean distance in
trellis for TCM deﬁned by code V , mapping M and signal set Sc. Then the asymptotic coding gain of
TCM system in comparison with uncoded system is:
Gd B = 10 log10

d2
f (V, M, Sc)
δ2(S)
¯E(S)
¯E(Sc)

, dB
(7.14)
For code generated by the encoder shown in Figure 7.7, with set partitioning mapping, and Sc = QAM8,
S = QAM4 we have E(Sc) = 10, E(S)= 2, d2
f (V, M, Sc) = 48, δ2(Sc) = 4. Therefore for this code
we have Gd B = 10 log10 (48 · 2/(4 · 10)) = 3.80dB. Some examples of Ungerboeck codes are given in
Tables 7.2–7.5. More examples can be found in [1].
A more accurate study includes the (average) number of nearest neighbours of some code sequence
(error coefﬁcient, or multiplicity). But for many applications the accuracy of the error probability bounds
based only on free distance and number of nearest neighbours may be insufﬁcient.
In this section we consider a technique of estimation of error probability of TCM in the AWGN channel
with soft decision. The Viterbi decoding is assumed. The approach is standard for VA performance
estimation and it consists of computation of the union bound [2] on error probability using squared
Euclidean distance spectra of the trellis code. We follow here the approach published in [3].
7.4.1
Squared Distance Structure of PSK and QAM Constellations
Let s, s′ be two signal points, s, s′ ∈Sc. Then the squared Euclidean distance between them may be
expressed as follows:
d2(s, s′) = n1d2
1 + . . . + n pd2
p
(7.15)
where n = (n1, . . . , n p) is a vector with integer coordinates depending on signal pair s, s′, and d2 =
(d2
1, . . . , d2
p) is a constant vector of squared basic distances. The linear combination in (7.15) is called
Table 7.2
Basic parameters of Ungerboeck codes for QAM8
System
parameters
Ref. No
Encoder
memory, ν
H(z) of
Ungerboeck code
G(z) of
equivalent code
d2
f
Gd B
Rc = 2/T , bit/s
R = 2/3
Sc =QAM8
E(Sc) = 10
S =QAM4
δ2(S) = 4
E(S) = 2
1
2

0
2
5
1

 1
0
0
0
5
2

32
2.04
2
3
 04
11
02
11
1

 4
1
2
1
2
0

40
3.01
3
4
 16
23
04
23
1

 7
3
2
2
7
0

48
3.80
4
5
 10
41
06
41
1

 12
07
02
03
04
00

48
3.80
5
6
 064
101
016
101
1

 07
01
02
07
32
00

56
4.47
6
7
 042
203
014
203
1

 31
02
06
02
17
00

64
5.05

288
Modulation and Coding Techniques in Wireless Communications
Table 7.3
Basic parameters of Ungerboeck codes for QAM16
System
parameters
Ref. No
Encoder
memory, ν
H(z) of Ungerboeck
code
G(z) of equivalent code
d2
f
Gd B
Rc = 3/T , bit/s
R = 3/4
Sc = QAM16
E(Sc) = 10
S = QAM8
δ2(S) = 8
E(S) = 10
7
2

0
2
5
1
0

⎡
⎣
1
0
0
0
0
5
2
0
0
0
0
1
⎤
⎦
16
3.01
8
3
 04
11
02
11
1
0

⎡
⎣
4
1
2
0
1
2
0
0
0
0
0
1
⎤
⎦
20
3.98
9
4
 16
23
04
23
1
0

⎡
⎣
7
3
2
0
2
7
0
0
0
0
0
1
⎤
⎦
24
4.77
10
5
 10
41
06
41
1
0

⎡
⎣
12
07
02
00
03
04
00
00
00
00
00
01
⎤
⎦
24
4.77
11
6
064
101
016
101
1
0

⎡
⎣
07
01
02
00
07
32
00
00
00
00
00
01
⎤
⎦
28
5.44
integer linear combination. It is easy to see that squared distance representation in (7.15) can be done
for any conﬁguration of signal set. In particular, if the number of basic distances p = Mc(Mc −1)/2,
that is, equal to number of all possible pairwise distances between signal points, then the representation
of (7.15) is valid for any signal set. For QAM and PSK the number p is much less than the number of
all possible pairwise distances.
For QAM it is clear that p = 1, and:
d2
1 = δ(Sc)2 =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
6E
Mc −1, Mc = 2m, m is even
12E
2Mc −1, Mc = 2m, m is odd
(7.16)
where E is the average squared Euclidean norm of the QAM signal set.
Table 7.4
Basic parameters of Ungerboeck codes for QAM32
System parameters
Ref. No
Encoder
memory, ν
H(z) of Ungerboeck
code
G(z) of equivalent
code
d2
f
Gd B
Rc = 4/T , bit/s
R = 4/5
Sc = QAM32
E(Sc) = 42
S = QAM16
δ2(S) = 4
E(S) = 10
12
2

0
2
5
1
0
0

⎡
⎢⎢⎣
1
0
0
0
0
0
5
2
0
0
0
0
0
1
0
0
0
0
0
1
⎤
⎥⎥⎦
32
2.80
13
3
 04
11
02
11
1
0
0

⎡
⎢⎢⎣
4
1
2
0
0
1
2
0
0
0
0
0
0
1
0
0
0
0
0
1
⎤
⎥⎥⎦
40
3.77
14
4
 16
23
04
23
1
0
0

⎡
⎢⎢⎣
7
3
2
0
0
2
7
0
0
0
0
0
0
1
0
0
0
0
0
1
⎤
⎥⎥⎦
48
4.56

Coded Modulation
289
Table 7.5
Basic parameters of Ungerboeck codes for PSK8
System
parameters
Ref. No
Encoder
memory, ν
H(z) of
Ungerboeck code
G(z) of
equivalent code
d2
f
Gd B
Rc = 2/T , bit/s
R = 2/3
Sc = PSK8
E(Sc) = 1
S = PSK4
δ2(S) = 2
E(S) = 1
1
2

0
2
5
1

 1
0
0
0
5
2

4
3.01
2
3
 04
11
02
11
1

 4
1
2
1
2
0

4.59
3.61
3
4
 16
23
04
23
1

 7
3
2
2
7
0

5.17
4.12
4
5
 34
45
16
45
1

 22
01
16
01
02
00

5.76
4.59
5
6
 074
105
036
105
1

 42
01
36
01
02
00

6.00
4.77
For PSK the squared distance between any two signal points s and s′ is d2(s, s′) = 4E sin2 θ(s, s′),
where E is the energy of PSK signals, and θ(s, s′) is the difference of their phases. Evidently, θ(s, s′) =
l(s, s′)π/Mc, where l(s, s′) is integer, and l(s, s′) ∈{0, 1, . . . , Mc −1}. Using trigonometric identity
sin2 x = (1 −cos 2x)/2, we have:
d2(s, s′) = 2E

1 −cos

2πl(s, s′)/Mc

.
Using the properties of cosine function we can express the squared distance between two signal points
of PSK constellation as given in (7.15) with p = Mc/4 squared base distances d2
1, d2
2, . . . , d2
Mc/4, where
d2
i = 2E (1 −cos(2iπ/Mc)), i = 1, 2, . . . , Mc/4, as follows:
d2(s, s′) =
⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
0,
l(s, s′) = 0,
d2
1,
1 ≤l(s, s′) < Mc/4,
2d2
Mc/4 −d2
Mc/2−1,
Mc/4 ≤l(s, s′) < Mc/2,
2d2
Mc/4,
l(s, s′) = Mc/2,
2d2
Mc/4 −d2
l−Mc/2,
Mc/2 ≤l(s, s′) < 3Mc/4,
d2
Mc−l,
3Mc/4 ≤l(s, s′) < Mc
(7.17)
where l(s, s′) = (Mc/π) θ(s, s′). This rule is valid if the number of signals Mc is a multiple of four.
Since in practice Mc = 2m, this fact is not a strong restriction. The equations (7.16) and (7.17) mean
that the squared distances between PSK and QAM signals can be computed using a few base distances.
For example, for QAM there is only one base distance, and for PSK8 there are two base distances
d2
1 = 2E(1 −
√
2/2), and d2
2 = 2E.
7.4.2
Upper Bound on Error Event Probability and
Bit Error Probability for TCM
Evaluation of upper bounds on error probability for trellis coding was considered in [4]–[10]. These
bounds can be computed numerically with complexity proportional to complexity of inversion of a
22ν × 22ν matrix, where ν is the encoder memory length. Some symmetry properties may be used for
reducing the complexity of the upper bound computation. It has been shown in [7]–[10] that under some
restrictions on the structure of the trellis code the complexity of computation of the upper bound on error
probability may be reduced to the complexity of inversion of a 2ν × 2ν matrix.

290
Modulation and Coding Techniques in Wireless Communications
In [3] an approach to computation of series expansion of a generating function using computation
of the upper bound of error event and bit error probability is presented. The representation of the set
of all squared Euclidean distances between code sequences as a countable set is used in this approach.
The generating functions of squared Euclidean distances (distance spectra) are obtained by inversion of
a square matrix of order 2ν. The generating functions are deﬁned in terms of one formal variable for
QAM, and in terms of Mc/4 formal variables for Mc-ary PSK, Mc = 2m, where m > 2 is an integer.
Let Z1, Z2, . . . , Z p and N be formal variables. We also introduce vectors Z = (Z1, Z2, . . . , Z p) and
n = (n1, . . . , n p), and notation Zn = Z n1
1 Z n2
2 . . . Z
n p
p . Denote by V (i, j) set of code blocks corresponding
to encoder transition from state i to state j; we denote such transition as i →j. Let iwt(c) be the number
of nonzero data bits corresponding to the code block v, or information weight of the vector v. Let e be
a binary vector of length n = m = log2 Mc, and we deﬁne the set of integers n(v, v + e) = (n1, . . . , n p)
such that:
d2(s(v), s(v + e)) = n1d2
1 + . . . + n pd2
p
Denote a function of the formal variables and vector e:
gi j(e, Z, N) = 2−k

v∈V (i, j)
Zn(v,v+e)N iwt(e)
and 2ν × 2ν matrix:
G(e, Z, N) = [gi j(e, Z, N)],
i, j = 0, 1, . . . , 2ν −1
Let us introduce the sets E(l) of code sequences corresponding to encoder state transition 0 →i(1) →
i(2) →. . . →i(l−1) →0, where i(t) ̸= 0, 1 ≤t ≤l −1, l > 1; by deﬁnition we assume that E(1) is a
set of nonzero code sequences corresponding to state transition 0 →0. As has been done in [9], we
introduce the matrix:
G(Z, N) = 2−ν
∞

l=1

e∈E(l)
l
t=1
G(e(t), Z, N)
Union upper bounds on the error event probability Pe and bit error probability Pb for AWGN channel
may be written as [9]:
Pe ≤K 1G(Z, N)1T 
Z=Z0,N=1
(7.18)
Pb ≤( K/k)
∂
∂N 1G(Z, N)1T

Z=Z0,N=1
(7.19)
where
Z0 =

exp(−d2
1/4N0), . . . , exp(−d2
p/4N0)

(7.20)
K = Q
 dmin
√2N0

exp
 d2
min
4N0

(7.21)
Q(x) =
∞

x
(2π)−1/2 exp(−u2/2)du
and dmin is free Euclidean distance of the trellis code, 1 = (1, . . . , 1) is vector with 2ν all one’s coordinates.
Right hand part of the inequalities in (7.18) and (7.19) can be computed as a value of generating
function and its derivative with respect to formal variable N:
T (Z, N) = 1G(Z, N)1T
(7.22)

Coded Modulation
291
Generally, the function T (Z, N) may be obtained by inversion of a 22ν × 22νmatrix. Reduction of the
dimensionality of the matrix to 2ν × 2νmay be achieved if some restrictions on the trellis code are
imposed. The detailed analysis of conditions providing this complexity reduction is given in [9].
Let the expressions:
f (e, Z, N) =
2ν−1

j=0
gi j(e, Z, N)
(7.23)
not depend on i for all e. This means that the matrices G(e, Z, N) are row uniform [9]. Then variation of
variable jfrom 0 to 2ν −1 in (7.23) is equivalent to enumeration of signals corresponding to the bundle
of branches coming from a node in the trellis, that is, belonging to set 
i′ S(i, i′), where S(i, i′) = {s(v) :
v ∈V (i, j)}. Let us denote Is(·) an isometric transformation of set of points on the real plane, for instance
rotation and (or) translation. If:

i′
S(i, i′) = Is

i′
S(i′′, i′)

,
i′′ ̸= i
then the sums in (7.23) do not depend on i. It can be shown, as in [3], that for the Ungerboeck TCM
these conditions are satisﬁed. Using notation (7.23) we have:
1G(Z, N)1T =
∞

l=1

e∈E(l)
l
t=1
f (e(t), Z, N)
(7.24)
Denote by f pq(Z, N) the variable f (e, Z, N) corresponding to vector e generated by encoder transition
p →q. Then:

e∈E(l)
l
t=1
f (e(t), Z, N) =
 !
i1
!
i2
. . . !
il−1
!
il
f0i1(Z, N) fi1i2(Z, N) . . . fil−1il(Z, N) fll0(Z, N),
l > 1,
f00(Z, N) −1,
l = 1
Substituting right hand part of this equation into (7.24) and the result into (7.22) we get:
T (Z, N) = F0(Z, N) + F1(Z, N) (I −F(Z, N))−1 F2(Z, N)T
where
F0(Z, N) = f00(Z, N) −1
F1(Z, N) = [ f01(Z, N), . . . , f0, 2ν−1(Z, N)], F2(Z, N) = [ f10(Z, N), . . . , f2ν−1, 0(Z, N)]
F(Z, N) =
⎡
⎣
f11(Z, N)
. . .
f1,2ν−1(Z, N)
. . .
. . .
. . .
f2ν−1,1(Z, N)
· · ·
f2ν−1,2ν−1(Z, N)
⎤
⎦
and I is identity (2ν −1) × (2ν −1)matrix.
Series expansion for the function T (Z, N) may be written in the form:
T (Z, N) =

n

i
A(n, i)ZnN i

292
Modulation and Coding Techniques in Wireless Communications
where A(n, i) is the average number of the error events having the squared Euclidean norm (n, d2) and
information weight i. Denote:
A(n) =
∞

i=0
A(n, i)
B(n) =
∞

i=0
i A(n, i)
The sets of numbers {A(n)} and {B(n)}are called the spectra of squared Euclidean distances of the trellis
code. It is clear that the numbers {A(n)} and B(n) are the coefﬁcients of the series expansion of T (Z, 1)
and ∂T (Z, N)/∂N|N=1 respectively, that is:
T (Z, 1) =

n
A(n)Zn
∂T (Z, N)
∂N

N=1
=

n
B(n)Zn
It follows from (7.18) and (7.19) that we get:
Pe < K

n
A(n)Zn
0
(7.25)
Pb < K
k

n
B(n)Zn
0
(7.26)
where Z0 and Kare deﬁned by (7.20) and (7.21).
For practice it is sufﬁcient to compute sums of a truncated series in (7.25) and (7.26), that is, sums of
several terms. It means that only a few elements of inﬁnite number of spectral coefﬁcients {A(n)} and
{B(n)} are needed to compute good estimate of probabilities Pe and Pb.
Example 7.1 For encoder shown in Figure 7.6 and QAM8 the values of F(Z, N), F1(Z, N), F2(Z, N)
and F(Z, N) are F0(Z, N) = Z 32N, F1(Z, N) = [ 0 Z 16(N + N 2) 0 ], F1(Z, N) = [ Z 16(1 + N) 0 0 ],
and:
F(Z, N) =
⎡
⎣
0
N + Z 32N
0
Z 8 + (Z 8 + 2Z 40 + Z 72)N/4
0
(Z 8 + Z 40)(N + N 2)/2
(Z 8 + Z 40)(1 + N)/2
0
Z 8N + (Z 8 + 2Z 40 + Z 72)N 2/4
⎤
⎦
Note, that for QAM the formal vector variable Z becomes a scalar variable Z. The closed expression
for T (Z, N) is too complicated to present here (see [3]), but its series expansion can be found, and it is
equal to:
T (Z, N) = Z 32N + Z 40N + (9/4)Z 40N 2 + (3/2)Z 40N 3 + (1/4)Z 40N 4 + . . .
The details of computation of the squared Euclidean distance spectra {A(n)} and {B(n)}and results for
the computation for some Ungerboeck codes are presented in [3]. Some of the squared Euclidean
distance spectra for these codes are listed in Tables 7.6 – 7.7. Tables for other codes see in [3].

Coded Modulation
293
Table 7.6
Coefﬁcients of generating function of Ungerboeck codes, QAM-8, E(Sc) = 10, d2
1 = 8
Ref. No (in
Table 7.2)
Encoder
memory, ν
(n, d2)
A(n)
B(n)
1
2
32
1.00000
1.00000
40
5.00000
11.00000
48
10.25000
37.25000
56
22.81250
113.93750
64
52.26563
326.64063
72
124.83203
915.44922
80
306.61816
2550.99707
88
740.32739
6960.78296
96
1778.09576
18704.04010
104
4262.43025
49640.95158
2
3
40
2.25000
5.50000
48
6.25000
23.50000
56
16.39063
85.40625
64
43.35156
292.75000
72
114.04004
944.21680
80
304.80762
2964.08789
88
814.87848
9107.28918
96
2173.81204
27478.49780
104
5803.64725
81827.93923
112
15492.44660
241051.55244
3
4
48
4.37500
17.12500
56
9.98438
45.60937
64
21.80078
154.10938
72
77.55469
633.83203
80
195.86597
1880.13672
88
556.63696
6282.51172
96
1602.04042
20208.10577
104
4415.42456
62449.17698
112
12517.49614
195725.05378
120
35194.26880
601372.60482
4
5
48
1.50000
6.25000
56
5.43750
26.00000
64
12.53906
84.94531
72
36.91699
294.37109
80
109.79541
1037.07568
88
321.86841
3500.58521
96
933.30453
11544.05643
104
2721.82108
37661.62404
112
7935.07730
121428.97480
120
23076.82218
387346.71864
5
6
56
2.96875
15.15625
64
7.71875
41.20313
72
16.87305
123.41211
80
49.79883
449.56250
88
153.05359
1526.53137
96
456.21996
5199.24472
104
1326.80325
17065.98297
112
3916.10218
55776.06466
120
11599.23146
181249.72367
128
34147.08199
581842.66684
(Continued)

294
Modulation and Coding Techniques in Wireless Communications
Table 7.6
(Continued)
Ref. No (in
Table 7.2)
Encoder
memory, ν
(n, d2)
A(n)
B(n)
6
7
64
13.71094
108.30469
72
0
0
80
76.07227
832.64795
88
0
0
96
779.69955
10961.66870
104
0
0
112
6516.27872
112150.75764
120
0
0
128
57494.86475
1170203.04167
136
0
0
Table 7.7
Coefﬁcients of generating function of Ungerboeck codes, PSK8, E(Sc) = 1, d2
1 = 0.585787, d2
2 = 2
Ref. No (in
Table 7.5)
Encoder
memory, ν
n1, n2
(n, d2)
A(n)
B(n)
1
2
0 2
4.00000
1
1
1 2
4.58579
4
8
2 2
5.17157
8
28
3 2
5.75736
16
76
4 2
6.34315
32
192
5 2
6.92893
64
464
−1 4
7.41421
4
12
6 2
7.51472
128
1088
0 4
8.00000
17
66
7 2
8.10051
256
2496
1 4
8.58579
54
271
8 2
8.68629
512
5632
2 4
9.17157
152
940
9 2
9.27208
1024
12544
3 4
9.75736
392
2902
10 2
9.85786
2048
27648
4 4
10.34315
960
8288
11 2
10.44365
4096
60416
−2 6
10.82843
8
36
5 4
10.92893
2272
22424
12 2
11.02944
8192
131072
−1 6
11.41431
54
301
6 4
11.51472
5248
58304
13 2
11.61522
16384
282624
0 6
12.00000
241
1599
7 4
12.10051
11904
147040
14 2
12.20101
32768
606208
1 6
l2.58579
864
6712
8 4
12.68629
26624
361984
15 2
12.78680
65536
1294336
2 6
13.17157
2730
24411
9 4
13.27208
58880
873856
16 2
13.37258
131072
2752512
3 6
13.75736
7948
80560
10 4
13.85786
129024
2075648

Coded Modulation
295
Table 7.7
(Continued)
Ref. No (in
Table 7.5)
Encoder
memory, ν
n1, n2
(n, d2)
A(n)
B(n)
17 2
13.95837
262144
5832704
−3 8
14.24264
16
100
4 6
14.34315
21840
247772
11 4
14.44365
280576
4863488
−2 8
14.82843
I52
1104
2
3
1 2
4.58579
2.000
5.000
2 2
5.17157
4.000
17.000
3 2
5.75736
8.000
50.000
0 3
6.00000
1.000
1.000
4 2
6.34315
16.000
132.000
1 3
6.58579
4.500
12.000
5 2
6.92893
38.000
328.000
2 3
7.17157
13.000
60.000
−1 4
7.41421
2.000
5.000
6 2
7.51472
64.000
784.000
3 3
7.75736
34.000
222.500
0 4
8.00000
9.000
38.000
7 2
8.10051
128.000
1824.000
4 3
8.34315
84.000
715.000
1 4
8.58579
29.000
173.000
8 2
8.68629
256.000
4160.000
5 3
8. 92893
200.000
2098.000
2 4
9.17157
89.500
670.000
9 2
9.27208
512.000
9344.000
−1 5
9.41421
3.500
11.000
6 3
9.51472
464.000
5788.000
3 4
9.75736
248.750
2283.250
10 2
9.85786
1024.000
20736.000
0 5
10.00000
25.000
119.000
7 3
10.10051
1056.000
15272.000
4 4
10.34315
653.250
7147.250
11 2
10.44365
2048.000
45568.000
1 5
10.58579
105.000
692.500
8 3
10.68629
2368.000
38960.000
−2 6
10.82843
4.000
19.000
5 4
IO.92893
1650.250
21041.000
12 2
11.02944
4096.000
99328.000
2 5
11.17157
368.000
3090.500
9 3
11.27208
5248.000
96800.000
−1 6
11.41421
28.000
175.000
6 4
11.51472
4052.250
59128.000
13 2
11.61522
8192.000
215040.000
3 5
11.75736
1161.000
11831.500
10 3
11.85786
11520.000
235456.000
0 6
12.00000
138.000
1053.000
7 4
12.10051
9736.250
160221.500
14 2
12.2010l
16384.000
462848.000
4 5
12.34315
3399.125
40837.125
11 3
12.44365
25088.000
562816.000
1 6
12.58579
562.250
5107.250
8 4
12.68629
22992.250
421656.000
(Continued)

296
Modulation and Coding Techniques in Wireless Communications
Table 7.7
(Continued)
Ref. No (in
Table 7.5)
Encoder
memory, ν
n1, n2
(n, d2)
A(n)
B(n)
−2 7
12.82843
11.000
56.000
5 5
12.92893
9440.375
130847.000
2 6
13.17157
2000.000
21347.000
−1 7
13.41421
100.000
679.500
3
4
2 2
5.17157
2.25000
11.00000
3 2
5.75736
4.62500
28.25000
0 3
6.00000
1.00000
1.00000
4 2
6.34315
6.06250
53.00000
1 3
6.58579
4.00000
11.00000
5 2
6.92893
17.65625
183.68750
2 3
7.17157
6.75000
36.25000
6 2
7.51472
31.89063
392.06250
3 3
7.75736
26.37500
197.87500
0 4
8.00000
8.50000
37.00000
7 2
8.10051
62.60156
907.64062
4 3
8.34315
58.37500
542.50000
1 4
8.58579
16.62500
84.50000
8 2
8.68629
130.69141
2141.18750
5 3
8.92893
134.71875
1553.34375
2 4
9.17157
60.75000
460.00000
9 2
9.27208
253.69727
4670.18359
−1 5
9.41421
4.00000
9.00000
6 3
9.51472
338.68750
4544.59375
3 4
9.75736
168.21875
1599.50000
10 2
9.85786
511.91504
10458.68359
0 5
10.00000
16.50000
90.50000
7 3
10.10051
749.00781
11549.16406
4 4
10.34315
461.15625
5193.43750
11 2
10.44365
1026.59229
22996.80176
1 5
lO.58579
97.37500
683.62500
8 3
10.68629
1700.80469
29712.09375
−2 6
10.82843
2.25000
10.00000
5 4
10.92893
1188.35156
15781.65625
12 2
11.02944
2044.05493
49908.37695
2 5
11.17157
306.25000
2679.25000
9 3
11.27208
3805.22461
73965.12305
−1 6
11.41421
14.87500
69.25000
6 4
11.51472
2993.64063
45527.34375
13 2
11.61522
4098.97913
108271.85034
3 5
11.75736
1018.65625
11125.59375
10 3
11.85786
8326.37500
178634.47852
0 6
12.00000
110.37500
812.50000
7 4
12.10051
7419.76367
127090.25000
14 2
12.20101
8192.56793
232756.80591
4 5
12.34315
3011.50000
38539.18750
11 3
12.44365
18243.64307
427952.74658
1 6
12.58579
450.93750
3984.87500
8 4
12.68629
17837.31836
340673.72266
15 2
12.78680
16379.63419
498177.88092
−2 7
12.82843
5.75000
30.25000
5 5
12.92893
8448.88281
124622.67969

Coded Modulation
297
Table 7.7
(Continued)
Ref. No (in
Table 7.5)
Encoder
memory, ν
n1, n2
(n, d2)
A(n)
B(n)
12 3
13.02944
39544.89502
1006541.40?20
2 6
13.17157
1772.48438
18951.12500
−1 7
13.41421
93.62500
623.62500
4
5
3 2
5.75736
4.00000
24.00000
0 3
6.00000
1.00000
1.00000
4 2
6.34315
4.00000
35.25000
5 2
6.92893
4.00000
51.12500
2 3
7.17157
3.00000
14.50000
6 2
7.51472
20.00000
228.43750
3 3
7.75736
16.75000
118.50000
0 4
8.00000
1.00000
2.00000
7 2
8.10051
36.00000
511.40625
4 3
8.34315
25.37500
265.00000
1 4
8.58579
12.00000
68.00000
8 2
8.68629
52.00000
927.17188
5 3
8.92893
67.18750
812.31250
2 4
9.17157
29.25000
232.50000
9 2
9.27208
132.00000
2367.78906
6 3
9.51472
198.65625
2670.62500
3 4
9.75736
66.87500
662.00000
10 2
9.85786
276.00000
5510.91797
0 5
10.00000
9.00000
45.00000
7 3
10.10051
398.29688
6410.01563
4 4
10.34315
245.50000
2820.62500
11 2
10.44365
484.00000
11167.10352
1 5
10.58579
51.25000
364.50000
8 3
10.68629
888.28906
16160.82813
5 4
10.92893
662.81250
9093.59375
12 2
11.02944
1012.00000
24688.94824
2 5
11.17157
141.00000
1370.75000
9 3
11.27208
2161.85547
42714.38672
−1 6
11.41421
12.00000
64.00000
6 4
11.51472
1595.78125
25448.53125
13 2
11.61522
2116.00000
55169.68213
3 5
11.75736
493.43750
5654.81250
10 3
11.85786
4624.32227
101825.00000
0 6
12.00000
56.50000
426.50000
7 4
12.10051
4122.54688
73117.67969
14 2
12.20101
4052.00000
116067.19019
4 5
12.34315
1719.62500
22799.06250
11 3
12.44365
9933.99512
240081.73145
1 6
12.58579
202.12500
1896.87500
8 4
12.68629
10327.07031
203600.92188
15 2
12.78680
8100.00000
247255.74866
−2 7
12.82843
5.00000
27.50000
5 5
12.92893
4688.39063
73150.29688
12 3
13.02944
22255.18994
577434.81543
2 6
13.17157
906.25000
10135.93750
9 4
13.27208
24496.43359
535587.00977
−1 7
13.41421
51.25000
363.50000
6 5
13.51472
12940.62500
228160.53125
3 6
13.75736
3360.87500
44505.40625
0 7
14.00000
248.25000
2321.75000

298
Modulation and Coding Techniques in Wireless Communications
6
8
10
12
14
16
10
-8
10
-7
10
-6
10
-5
10
-4
10
-3
10
-2
E/N0, dB
6
8
10
12
14
16
10
-8
10
-7
10
-6
10
-5
10
-4
10
-3
10
-2
E/N0, dB
Uncoded QAM4
TCM, QAM8, R=2/3, ν=2..7
Uncoded PSK4
TCM, PSK8, R=2/3, ν=2..5
Figure 7.13
Performance of some TCM schemes
It should be noted that results given in the tables are for equivalent Ungerboeck codes generated by non-
systematic feedback-free encoders deﬁned by the polynomial generator matrix G(z). The nonsystematic
feedback-free representation of the codes is more convenient for computation of the series expansion of
the generating function.
Using the distance spectra one can compute the value of upper bound on bit error probability. Figure
7.13 shows plots of bit error probability as a function of signal to noise ratio E/N0 for PSK and E/N0 for
QAM in AWGN channel with two-sided noise power spectral density N0/2 for some TCM schemes. This
example corresponds to coded and uncoded transmission with the same rate 2/T bit/s. The curves are
computed according to (7.26), (7.20) and (7.21) using the squared Euclidean distance spectra presented
in Tables 7.6 and 7.7. Since the PSK8 and QAM8 are equivalent, the bit error probability for uncoded
transmission computed in both cases as:
P(uncoded)
b
= 2Q(

E/N0) −Q(

E/N0)2
The plots in Figure 7.13 shows advantages of TCM over uncoded transmission and gives more de-
tailed information about performance, than frequently used estimation based on asymptotic coding gain
considerations.

Coded Modulation
299
References
[1] Ungerboeck, G. “Channel coding with multilevel/phase signals”, IEEE Trans. Inform. Theory, vol. IT-28,
pp. 55–66, 1982.
[2] Viterbi, A. J. and Omura, J. K. Principles of Digital Communication and Coding. New York: McGraw-Hill,
1979.
[3] Troﬁmov, A. N. and Kudryashov, B. D. “Distance Spectra and Upper Bounds on Error Probability for Trellis
Codes”, IEEE Trans. Inform Theory, vol. IT- 41, pp. 561–572, 1995.
[4] Biglieri, E. “High level modulation and coding for nonlinear satellite channels,” IEEE Trans. Commun.,
vol. COM-32, pp. 616–627, 1984.
[5] Divsalar, D., Simon, M., and Yuen, J. H. “Trellis coding with asymmetric modulation,” IEEE Trans. Commun.,
vol. COM-35, pp. 130–141, 1987.
[6] Honig, M. L. “Optimization of trellis codes with multilevel amplitude modulation with respect to an error
probability criterion,” IEEE Trans. Commun., vol. COM-34, pp. 821–825, 1986.
[7] Zehavi, E. and Wolf, J. K. “ On the performance evaluation of trellis codes,” IEEE Trans. Inform. Theory,
vol. 33, pp. 196–202, 1988.
[8] Biglieri, E. and McLane, P. J. “Uniform distance and error probability properties of TCM schemes,” IEEE Trans.
Commun., vol. 39, pp. 41–53, 1991.
[9] Liu, Y.-J., Oka, I. and Biglieri, E. “Error probability for digital transmission over nonlinear channels with
application to TCM,” IEEE Trans. Inform. Theory, vol. 36, pp. 1101–1110, 1990.
[10] Rouanne, M. and Costello, D. J. “An algorithm for computing the distance spectrum of trellis codes,” IEEE J.
Selected Areas Commun., vol. 7, pp. 929–940, 1989.


8
MIMO
Andrei Ovchinnikov1 and Sergei Semenov2
1St. Petersburg State University of Aerospace Instrumentation, Russia
2Nokia Corporation, Finland
8.1
MIMO Channel Model
8.1.1
Fading in Narrowband Channels
In this chapter we consider the transmission via the channels for which the classical model of channel
with additive white Gaussian noise (AWGN), with statistically independent errors, mainly caused by
the thermal noise at the receiver, is found inadequate and not very useful, since it does not take into
account the basic types of errors, arising in such channels, and mainly inﬂuencing the receiving quality.
Primarily, these are wireless radio channels, in which the effect of interference is more signiﬁcant than
the effect of thermal noise at the receiver. The main reason for communication quality degradation in
such channels is the multipath propagation, where, because of reﬂections from obstacles’ and objects’
motions, the transmitted signal reaches the receiver as a set of interfered responses differing in amplitude,
phase, angle of arrival, delay, and so on, that leads to such channel effects as fading and dispersion
[3, 7, 31, 35, 43].
The main reasons for multipath propagation effects, as well as the main parameters characterizing
such channels are described in Chapter 1, sections 1.3 and 1.4.
In this chapter, the methods for overcoming the dispersion effects in the channel are not consid-
ered in detail, so we will mainly consider the effect of fading in the transmission of narrowband
signals. To send a signal over a communication channel the carrier frequency fc modulated by infor-
mation symbols is used, and this modulated signal is called a bandpass signal. Those symbols which
modulate the carrier are called the equivalent baseband (lowpass) signal [7, 31], see Chapter 2 and
section 2.1.1.
Let we have the pair of lowpass signals x(p) (t) and x(q) (t) and suppose that the quadrature phase shift
keying (QPSK) is used for carrier modulation. In this case, the unmodulated bandpass signal is the sum
of in-phase carrier and quadrature carrier, shifted by π/2 relative to the in-phase component. It can be
easily shown (see (2.3)) that the modulated signal s(t) given complex representation of lowpass signal
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

302
Modulation and Coding Techniques in Wireless Communications
can be written as:
s(t) = x(p)(t) cos( fct) −x(q)(t) sin( fct) = Re{x(t)e2π j fct}
(8.1)
where fc is the carrier frequency, and x(t) is the lowpass envelope.
Then, after transmission of signal s(t) via a channel with a fading caused by multipath propagation,
the received signal r(t) is equal to:
r(t) =

i
hi(t)s[t −τi(t)]
(8.2)
where hi(t) is the fading coefﬁcient and τi(t) is the i-th path delay. Here we ignore the additive thermal
noise. Applying (8.1) to (8.2), we obtain:
r(t) = Re

i
hi(t)x [t −τi(t)]

e2π j fc[t−τi (t)]

=
= Re

i
hi(t)e−2π j fcτi (t)x[t −τi(t)]

e2π j fct

Then the correspondent low-frequency signal will have the form:
z(t) =

i
hi(t)e−2π j fcτi (t)x[t −τi(t)]
(8.3)
For simplicity, assume that the unmodulated carrier is transmitted at frequency fc, that is, x(t) = 1
for any t. Then (8.3) simpliﬁes to:
z(t) =

i
hi(t)e−2π j fcτi (t) =

i
hi(t)e−jθi (t)
(8.4)
Thus, the lowpass signal z(t) consists of the sum of time-varying complex vectors with amplitude hi(t)
and phase θi(t). Note that the phase θi will change by 2π when the delay τi changes by 1/fc only. For
example, when the transmitter works on frequency of fc = 900 MHz, the delay 1/fc is 1.1 nanoseconds.
This corresponds to a change in the path of spreading signal by 33 cm (in free space). Thus, the phase
θi in (8.4) may change signiﬁcantly with relatively small changes in spreading delay.
Vector interpretation of (8.4) helps to graphically describe the effect of fading by means of complex
unit circle. In Figure 8.1 the transmitted signal is shown (which can be considered as expected signal),
taking into account the presence of the reﬂected signal x(p)
i
(t) + jx(q)
i (t) = hi(t)e−jθi (t) with in-phase
and quadrature components x(p) and x(q), respectively, spread during multipath propagation by the path
i. Because of reﬂections occurring in the path i, the amplitude of the reﬂected signal decreases, which is
taken into account in the hi(t) coefﬁcient, but because of the propagation distance increasing, the reﬂected
signal is delayed in phase compared to the expected signal. As a result of vector addition of the expected
signal and the reﬂected signal, the resulting signal both attenuated in amplitude and shifted in phase.
In fact, the receiving side is affected not only by the reﬂected signal, but also the set of signals
propagated along different paths. All of them are summed with each other which leads to addition of
their in-phase and quadrature components x
(p)
i (t) and x
(q)
i (t), and after all additions in (8.4) of all the
reﬂected paths the resulting signal x
(p)
r (t) and x
(q)
r (t) will be obtained. Since the number of such paths
is usually large and they are usually assumed independent, then at a ﬁxed moment in time, following
the central limit theorem, x
(p)
r (t) and x
(q)
r (t) will have a Gaussian probability distribution function. When
transmitting an unmodulated carrier as in (8.4), the received signal will be:
z(t) = r0(t)e−jθ(t)
where r0(t) is the resulting envelope amplitude, which equals to the modulus of z(t):
r0(t) = |z(t)| =

x(p)
r (t)2 + x(q)
r (t)2
and θ(t) is the resulting phase.

MIMO
303
Figure 8.1
The inﬂuence of the reﬂected signal to expected signal
Thus, the amplitude r0 of the complex envelope will have a Rayleigh distribution (the distribution of
the complex Gaussian process amplitude), see section 1.4.1:
p(r0) = r0
σ 2 exp

−r 2
0
2σ 2

where σ 2 is the total power of the multipath signal. Described fading model is called Rayleigh fading. If,
during the signal propagation, there is the one distinct signal among the set of reﬂected paths, which is
transmitted in direct line of sight and not affected by multipath, then the amplitude of the received signal
will have a Ricean distribution, see section 1.4.1:
p(r0) = r0
σ 2 exp

−r 2
0 + s2
2σ 2

I0
	r0s
σ 2

here s2 is the power of direct sight component, and I0 designates the modiﬁed zero-order Bessel function
of the ﬁrst kind.
If we consider not only the analog signal r(t) at the receiver input, but also the discrete output after
the matched ﬁlter and sample and hold block, and take into account the effect of thermal noise, which
will be considered to have Gaussian distribution with zero mean, we obtain the well-known (discrete)
equation for Rayleigh fading channel:
yt = hxt + ηt
(8.5)
where xt is the transmitted symbol, yt is the received symbol, h is the complex Gaussian random variable
which describes fading (its real and imaginary parts are Gaussian random variables with zero mean),
whose modulus |µ| is distributed over the Rayleigh distribution law, and ηt is the additive white Gaussian
noise.
8.1.2
Fading Countermeasures: Diversity
Here we will consider general approaches usually used to combat the effect of fading described in
previous sections. Diversity is one of the main means to countermeasure fading in radio channel [24].
The principle of diversity consists of providing two or more channels for the same information signal

304
Modulation and Coding Techniques in Wireless Communications
in such a way that these channels are affected by statistically independent fading. Then, if one of the
propagation paths is in deep fade, it is expected that this will not happen with the second path, and
therefore, it is possible to maintain a reasonable probability of error. Thus, diversity is used to increase
reliability of the received signal. The condition of statistical independence of organized diversed channels
is critically important to ensure diversity gain.
In fact, many diversity techniques are simply utilizing the usage of repetition code. Besides diversity
methods, it is also necessary to consider methods of combining signals, which come from different
paths. Diversity methods are classiﬁed both by the methods of additional channels organization, and by
multiple received signals combining techniques.
The main methods of diversity are diversity in space, frequency and time. These types of diversity are
brieﬂy presented in Figure 8.2 [6, 7].
Antenna 1
Antenna 2
Channel 1
Channel 2
Several
wavelengths
a) Spatial diversity
Channel 1
Channel 2
Frequency band 2
Frequency band 1
Coherence 
bandwidth
b) Frequency diversity
Channel 1
Time window 1
Coherence time
c) Time diversity
Channel 2
Time window 2
Figure 8.2
Diversity types

MIMO
305
1. Spatial diversity. In section 8.1.1 it was noted that Rayleigh fading is caused by the summation of
transmitted signal responses, differing in phase (and this also causes changes in the amplitude, see
Figure 8.1), and that under Rayleigh fading small change in delay (and hence in the distance of signal
propagation) may cause a signiﬁcant change in phase, and hence one can expect that with the spatial
diversity of receiving antennas at the distance of several wavelengths (in [31, 36] the distance of about
10 wavelengths is recommended) the fading channels will be completely uncorrelated. In this chapter
we will consider MIMO systems based on this diversity type.
2. Frequency diversity. If, for some reason, spatial diversity cannot be implemented, then the diversity
may be done by frequency. In this case the copies of the signal are transmitted on different frequencies,
and again the independence of fading in different frequency channels should be provided, for this
purpose the frequencies diversity should be several times larger than the coherence bandwidth 1/,
where  is the delay spread (see section 1.5.2).
3. Time diversity. This type of diversity is implemented through the transmission of the signal at different
points in time (time slots). To ensure the independence of channels, their diversity in time should be
several times larger than the coherence time.
With any type of diversity on the receiving side the various responses of the same signal are obtained,
affected by the various (ideally independent) fading. For making decisions concerning the transmitted
signal from this redundant set of responses, the received signals must be combined according to some
criterion. Below three of the most commonly used methods of combining are listed, each of them may
be applied to any of the above diversity methods. Schematically combining techniques are presented in
Figure 8.3 [24].
1. Maximum ratio combining (MRC). This combining method will be described in detail later; here we
only note that this method is optimal in terms of maximum likelihood detection. All received signals
are weighted by their personal SNR and then summed. Weighting minimizes the noise occurred as
a result of fading (that is, maximizes the SNR). If we suppose that the diversity is performed by n
channels and each channel i has the same average SNR ¯γi = ξ, then the summation of weighted
signals gives the total average SNR ¯γ [5, 36]:
¯γ =
n

i=1
¯γi =
n

i=1
ξ = nξ
that is, even if in each channel the average SNR ξ is less than some acceptable level (for a given level
of error probability), then the maximum ratio combining, nevertheless, may give an acceptable overall
average SNR. Summation of signals with this method should be performed in-phase (coherently).
2. Equal gain combining (EGC). This combining method is similar to MRC, but the received signals are
not weighted (which can be considered as a weighting with equal coefﬁcient 1 for all channels), but
immediately summed. This method is used if there is no possibility of tracking the amplitudes of the
received signals and their timely change, and of course, it gives a worse result compared to MRC, but
nevertheless, it is able to provide diversity gain compared to a system with no diversity. This method
also requires coherent summation of signals.
3. Selection combining (SC). With selection combining (or with switched combining) signals are not
actually combined, but diversed channels are switched by the criterion of the strongest signal selection.
That is, the signal with maximum SNR is considered as the received signal. It is clear that this
combining method does not require coherence of the signals, but it also loses to MRC, because it
does not take into account any information except that obtained from one channel which is the best
at this moment.
In the future, we will assume that we consider a system with spatial diversity for transmission over
frequency-nonselective channel with Rayleigh fading.

306
Modulation and Coding Techniques in Wireless Communications
Channel 1
Channel 2
a) Maximum ratio combining (MRC)
b) Equal gain combining (EGC)
c) Selection combining (SC)
Channel 
estimation
|Channel 1|
|Channel 2|
Channel 1
Channel 2
1
1
Channel 1
Channel 2
Selecting the 
highest 
amplitude
Figure 8.3
Combining methods
8.1.3
MIMO Channel Model
Now, after identifying in section 8.1.1 the discrete-time channel model with Rayleigh fading in (8.5),
and describing in section 8.1.2 the methods of diversity and combining as one of the main measures
for combat fading, we may proceed to the deﬁnition of multiple-input multiple-output (MIMO) system
model.
In section 8.1.2 we described spatial diversity, assuming that several independent channels are utilized
to combat fading, and such channels are obtained by using several receiving antennas and one transmitting
antenna. However, this approach may be generalized by considering spatial diversity not only during
receiving the signal, but during its transmission. This requires not only the method for combining
different responses of the same signal at the receiver, but the organization (possibly nontrivial) of signal
transmission by many transmitting antennas. In this section we will consider the channel model for such
MIMO systems.
Suppose there are N transmit and M receive antennas. At time t the signals xt,n, n = 1, . . . , N are
transmitted simultaneously from N transmit antennas. Each transmitted signal is affected by channel
fading, and the response from each signal from each of N transmitting antennas is received at each of M
receive antennas. We will consider a frequency-nonselective channel with ﬂat Rayleigh fading (section

MIMO
307
,1
tx
,2
tx
,t N
x
N
M
2
2
1
1
,1
tr
,2
tr
,t M
r
1,1
h
1,2
h
1,M
h
,1
tη
,2
tη
,t M
η
,1
N
h
,2
N
h
,
N M
h
Figure 8.4
Channel with multiple input and multiple output (MIMO)
1.4.4), that is, we will suppose the absence of dispersion in the channel, which leads to intersymbol
interference.
For each pair (n, m) of the transmit antenna n and the receive antenna m the transmitted signal is
affected by the fading coefﬁcient hn,m (path gain). Then at the antenna m at time t the received signal
rt,m is [16]:
rt,m =
N

i=1
hn,mxt,n + ηt,m
(8.6)
where ηt,m is the additive Gaussian noise (thermal noise) at the receiving antenna m at time t. Graphically,
the model in (8.6) is shown in Figure 8.4.
We will suppose that the channel is quasi-stationary, that is, the fading coefﬁcients hn,m are constant
over a certain time period T ′, and from period to period they are varied independently. Nevertheless,
there are models that take into account the correlation between time slots, for example, Jakes model [19].
The value of T ′ determines the rate of fading. The fading is slow, if the data block is transferred during
the time T , less than T ′. In this case the coefﬁcients hn,m are constant during the entire transmission
period. On the other hand, if T = T ′, then the coefﬁcients hn,m are changed simultaneously with the
transmission of data block.
We may represent the signals transmitted during the time period T from N transmitting antennas using
the (T × N)-matrix X:
X =
⎛
⎜⎜⎜⎝
x1,1
x1,2
· · ·
x1,N
x2,1
x2,2
· · ·
x2,N
...
...
...
...
xT,1
xT,2
· · ·
xT,N
⎞
⎟⎟⎟⎠
(8.7)

308
Modulation and Coding Techniques in Wireless Communications
Similarly, we may represent the received signal in the form of (T × M)-matrix R:
R =
⎛
⎜⎜⎜⎝
r1,1
r1,2
· · ·
r1,M
r2,1
r2,2
· · ·
r2,M
...
...
...
...
rT,1
rT,2
· · ·
rT,M
⎞
⎟⎟⎟⎠
Assuming T < T ′, that is, that fading coefﬁcients are constant during the transmission period, these
coefﬁcients may also be written in (N × M) channel matrix H:
H =
⎛
⎜⎜⎜⎝
h1,1
h1,2
· · ·
h1,M
h2,1
h2,2
· · ·
h2,M
...
...
...
...
hN,1
hN,2
· · ·
hN,M
⎞
⎟⎟⎟⎠
(8.8)
Then we can write (8.6) in matrix form:
R = X · H + N
(8.9)
where N is the matrix of noise:
N =
⎛
⎜⎜⎜⎝
η1,1
η1,2
· · ·
η1,M
η2,1
η2,2
· · ·
η2,M
...
...
...
...
ηT,1
ηT,2
· · ·
ηT,M
⎞
⎟⎟⎟⎠
We will assume that the noise N, fading coefﬁcients H and signals X are independent of each other. Also
assume that the elements of H (more precisely, their envelopes |hn,m|) have the Rayleigh distribution.
Consider the capacity of MIMO channel with N transmitting and M receiving antennas [16, 22, 40].
We will distinguish the case, when the transmitter does not know the state of the channel (the so-called
open-loop system), and the case, when the information about the channel (channel matrix H) is available
to the transmitter (closed-loop system).
If KX is the covariance matrix of input X, and Hd is the speciﬁc (deterministic) realization of the
channel matrix H, that the capacity of MIMO channel with N transmitting and M receiving antennas is
a random quantity:
C(KX) =
max
Tr(KX)≤N log2(det[IM + (γ/N)HH
d · KX · Hd]) bit/(s Hz)
here IM is (M × M)-identity matrix, γ is SNR at the receiver, Tr(·) is the trace of matrix, and the
operator (·)H designates Hermitian conjugation, that is, the matrix which is transposed and element-wise
complex-conjugate to the original matrix.
In case the channel is not known at the transmitter, one may try uniformly to distribute the input power
between the transmit antennas. Then KX = IN, and we obtain the following expression:
ˆC = log2(det[IM + (γ/N)HH
d · Hd]) bit/(s Hz)
which is not exactly the capacity in Shannon’s sense, since in some cases the value ˆC may be exceeded
by means of another power distribution. However, for uncorrelated iid Rayleigh channel the uniform
distribution of power is optimal.

MIMO
309
If r = rank(Hd) and λi, i = 1, 2, . . ., r – nonzero eigenvalues of matrix HH
d · Hd, then:
ˆC =
r
i=1
log2[1 + (γ/N)λi]
In the case of the closed-loop system, when the matrix Hd is known to the transmitter, the input power
may be redistributed to give more power to channels in a good state and less power to channels in a
bad state. To perform this, the procedure of so-called water-ﬁlling is known [9]. If the total power γ is
distributed on r antennas as powers γi, then the capacity of the closed-loop system will be:
C =
max
r
i=1 γi =γ
r
i=1
log2[1 + γiλi]
In the case of nondeterministic (random) nature of matrix H the random capacity (with equal power
distribution) may be expressed as:
ˆC = log2(det[IM + (γ/N)HH · H]) bit/(s Hz)
(8.10)
It is possible to show that when M = N, the capacity increases linearly with the number of antennas.
Note that when considering the SISO (single-input single-output) channel, that is, when M = N = 1,
the expression in (8.10) becomes:
C = log2(1 + γ |h|2)
which coincides with Shannon’s capacity for the Gaussian channel with fading coefﬁcient h.
Now we will consider two particular cases: SIMO (single-input multiple-output) channel with one
transmit antenna, N = 1, and MISO (multiple-input single-output) channel with one receive antenna,
M = 1. In both cases, we limit our consideration by the deterministic channels [20].
In the SIMO case, taking into account M > N, (8.10) can be written as:
C = log2(det[IN + (γ/N)HH
d · Hd])
With N = 1, the product HH
d · Hd = M
i=1 |hi|2, and then:
C = log2

1 +
M

i=1
|hi|2γ

In this case knowledge of the channel on the transmitter side does not provide gain.
In MISO case M = 1 and H · HH
d = N
j=1 |h j|2, hence:
C = log2
⎛
⎝1 +
N

j=1
|h j|2(γ/N)
⎞
⎠
If the channel is known at the transmitter, and since rank(Hd) = 1, there is only one nonzero eigenvalue:
λ =
N

j=1
|h j|2

310
Modulation and Coding Techniques in Wireless Communications
so the capacity is:
C = log2
⎛
⎝1 +
N

j=1
|h j|2γ
⎞
⎠
Thus, with an increasing number of receiving and transmitting antennas in SIMO and MISO channels,
correspondingly, the capacity grows logarithmically (in the case of MISO – when the channel matrix is
known at the transmitter).
8.2
Space-Time Coding
8.2.1
Maximum Ratio Combining
In this section we will consider in more detail the diversed signal combining with the help of maximum
ratio combining technique (MRC) brieﬂy described in section 8.1.2. Strictly speaking, this method is
not directly connected to MIMO systems (since it can be applied both in SISO and MIMO systems),
consideration of MRC is important for the deﬁnition of the space-time coding procedure.
Let us consider the simplest case of spatial diversity (section 8.1.2), when the system comprises one
transmit and two receive antennas (Figure 8.2a). In such a way, by means of diversity the receiving an-
tennas in space, the two (independent) channels are organized, on which the same signal x is transmitted,
affected by Rayleigh fading according to the model in (8.5) in section 8.1.1.
Assume that the fading coefﬁcient in one channel is described by the value h1, and in another by the
value h2, which are complex values:
h1 = |h1|e jθ1
h2 = |h2|e jθ2
In addition to fading in channel, each receive antenna adds to the received signal the thermal noise η1
and η2, correspondingly. Then the signals received from two diversed channels are:
y1 = h1x + η1
y2 = h2x + η2
If we possess the ideal knowledge of the channel (that is, we know the exact values of h1 and h2, their
estimation is possible, for example, by means of the pilot sequences transmissions [31]), fading can
be compensated (optimally from the point of view of signal-to-noise ratio) by multiplying each of the
received signals by the value which is a complex conjugate with fading coefﬁcient of the correspondent
channel. After this the signals from both channels are combined by additional operation:
˜x = h∗
1y1 + h∗
2y2 =
= h∗
1h1x + h∗
1η1 + h∗
2h2x + h∗
2η2 =
(8.11)
= (|h1|2 + |h2|2)x + h∗
1η1 + h∗
2η2
Then combined signal ˜x is fed into maximum likelihood detector input. Described combining technique
is depicted in Figure 8.5. With such a receiving procedure the maximum likelihood detector coincides
with the detector by the minimal Euclidean distance, that is, the decision x′ about transmitted symbol
may be found by searching the nearest (in Euclidean metrics) symbol to the received combined symbol
˜x from the set of possible transmitted symbols xi:
dE(˜x, x′) ≤dE(˜x, xi)
for all i
where dE(a, b) is the Euclidean distance between signals a and b.

MIMO
311
x
1h
2h
1η
2
η
1
1
1
y
h x η
=
+
1h∗
x
'x
2
2
2
y
h x η
=
+
2h∗
Figure 8.5
MRC technique for two receiving antennas
It may be shown [7, 31], that the symbol error probability for MRC with L receiving antennas is:
Pe =
1 −µ
2
L L−1

k=0
 L −1 + k
k
 1 + µ
2
k
≈
 2L −1
L
 
1
4Ec/N0
L
where
µ =

(Ec/N0)/(1 + Ec/N0)
Ec is the energy of received signal per bit per antenna, and therefore, overall bit energy is Eb = LEc.
8.2.2
Deﬁnition of Space-Time Codes
Now, when we described in detail the receiving procedure for one transmit and two receive antennas,
we may consider a more general case, when diversity is achieved with the help of multiple receive and
multiple transmit antennas. The model of such a MIMO channel is described in section 8.1.3. When
only one transmit antenna is used, it transmits the dedicated signal x, but in the case of multiple transmit
antennas we have not only the possibility of combining several responses in one signal (possibly better
than each of the received responses), but we may also apply some procedure allowing the system quality
to be improved by redistribution of transmitted signals between the transmit antennas at some moment
in time. Practically, such a rule describing which signal is to be transmitted on which antenna at the
particular time moment (that is, the deﬁnition of matrix X (8.7)), is in fact the deﬁnition of the space-time
code. More precisely, assume that during the time period T we need to transmit k (complex) symbols
x1, x2, . . . , xk using N transmit antennas. If every symbol xi corresponds to b information bits, then the
input to space-time encoder is the block of k × b bits. These bits form the matrix:
G =
⎛
⎜⎜⎜⎝
g1,1
g1,2
· · ·
g1,N
g2,1
g2,2
· · ·
g2,N
...
...
...
...
gT,1
gT,2
· · ·
gT,N
⎞
⎟⎟⎟⎠
(8.12)
where the elements gi, j of matrix G are the linear combinations of symbols xi, i = 1, . . . , k, and their
complex conjugates. In fact the code matrix G is the signal matrix X in (8.7) for transmission via the
MIMO channel (8.9). Since the dimensions of matrix G are space (antennas) and time, the code obtained
by the described procedure is called space-time code. The rate of this code is deﬁned as:
R = k/T
(8.13)

312
Modulation and Coding Techniques in Wireless Communications
1
2
x
x∗
−
1h
2h
1
2
η
η
2
1
1 1
2
2
1
1
2
1
2
2
y
h
h x
y
h
h x
x
x
η
η
∗
∗
=
+
=
+
−
+
+
1
2x
x∗
1
2
h
h
1
2
x
x
Figure 8.6
Space-time code G2 with two transmit and one receive antennas
Hence, the rate of the space-time code is limited from above as R ≤1. With R = 1 we have the space-time
codes with maximal rate. These codes are preferable, since they don’t lead to bandwidth expansion.
At the receiving side the responses of transmitted signals are received by M antennas, and after that the
combining technique analogous to MRC from section 8.2.1 may be applied. The decoding of space-time
codes is described in detail in section 8.3.1.
8.2.3
Space-Time Codes with Two Transmit Antennas
The simplest scheme of space-time coding was proposed by Alamouti [2] for the case of two transmit
antennas, N = 2. The code matrix was deﬁned as:
G2 =
 x1
x2
−x∗
2
x∗
1

(8.14)
So, the number of transmitted symbols within one block is also two, k = 2. The transmission is made
by T = 2 time periods, that is, the rate R (see (8.13)) of such code is equal to one. During the ﬁrst time
slot, T = 1, the ﬁrst antenna transmits the symbol x1, while the second antenna transmits the symbol x2.
During the next time slot, T = 2, the ﬁrst and second antennas transmit −x∗
2 and x∗
1 correspondingly.
First, we will consider the case when there is only one antenna on the receiving side, M = 1, and for
this case we will describe the decoding of the space-time code G2. Then we will generalize the results
for the case of the larger number of receive antennas. The receiving scheme for this case is shown in
Figure 8.6.
Suppose that the fading coefﬁcients of the channels remain constant within the transmission period,
that is, they are equal for both time slots. Taking into account (8.14), the received signals y1 at time
T = 1 and y2 at time T = 2 are:
y1 = h1x1 + h2x2 + η1
y2 = −h1x∗
2 + h2x∗
1 + η2
where η1 and η2 is the thermal noise at the receive antenna at time moments T = 1 and T = 2 corre-
spondingly. To detect the transmitted symbols it is needed to extract the signals x1 and x2 from y1 and y2.
To achieve this, they are fed to a combining block, which also uses the information about the channel.
The output of the combining block are the estimates ˜x1 and ˜x2 of the signals x1 and x2. For the signal x1
the estimate is computed as:
˜x1 = h∗
1y1 + h2y∗
2 =
= h∗
1h1x1 + h∗
1h2x2 + h∗
1η1 −h2h∗
1x2 + h2h∗
2x∗
1 + h2η∗
2 =
(8.15)
= (|h1|2 + |h2|2)x1 + h∗
1η1 + h2η∗
2

MIMO
313
1
2
x
x∗
−
11
h
22
h
11
21
η
η
22
12
12
1
22
2
12
12
2
22
1
22
y
h
h x
y
h
x
h x
x
η
η
∗
∗
=
+
=
+
+
−
+
Channel 
estimation
Maximum likelihood 
detector
1
2x
x∗
Combining
11
21
h
h
1
2
x
x
12
22
η
η
21
h
12
h
21
11
11 1
21
2
11
11
2
21 1
21
y
h
h x
y
h
x
h x
x
η
η
∗
∗
=
+
=
+
+
−
+
12
22
h
h
Channel 
estimation
Figure 8.7
Space-time code G2 with two transmit and two receive antennas
Similarly, for the signal x2 the estimation is calculated as:
˜x2 = h∗
2y1 −h1y∗
2 =
= h∗
2h1x1 + h∗
2h2x2 + h∗
2η1 + h1h∗
1x2 −h1h∗
2x1 −h1η∗
2 =
(8.16)
= (|h1|2 + |h2|2)x2 + h∗
2η1 −h1η∗
2
Due to the orthogonality of the code G2 [38], the second symbol x2 is cancelled during the symbol x1
estimation in (8.15), and in (8.16) the x1 is cancelled in a similar way. Then the estimates ˜x1 and ˜x2 are fed
to the input of maximum likelihood detector, which calculates the most probable symbols corresponding
to these estimates, as in Figure 8.5.
Now for the same space-time code G2 we consider the case of two receive antennas, M = 2. At the
same time we will show how the given receiving methods may be generalized for the case of arbitrary
number M of receive antennas [13]. This case is shown in Figure 8.7. Here j in hi j, ηi j and yi j denotes
the index of receive antenna, i in hi j denotes the index of transmit antenna, and in ηi j and yi j i denotes
the index of time slot.
Then the output of the ﬁrst receive antenna is:
y11 = h11x1 + h21x2 + η11
y21 = −h11x∗
2 + h21x∗
1 + η21
and the output of the second receive antenna is:
y12 = h12x1 + h22x2 + η12
y22 = −h12x∗
2 + h22x∗
1 + η22
These expressions may be generalized as:
y1i = h1ix1 + h2ix2 + η1i
y2i = −h1ix∗
2 + h2ix∗
1 + η2i
where i = 1, . . . , M, and M is the number of receiving antennas.

314
Modulation and Coding Techniques in Wireless Communications
Estimates ˜x1 and ˜x2 of the symbols x1 and x2 are obtained in combining block as:
˜x1 = h∗
11y11 + h21y∗
21 + h∗
12y12 + h22y∗
22
(8.17)
˜x2 = h∗
21y11 −h21y∗
21 + h∗
22y12 −h12y∗
22
(8.18)
Again these expressions may be generalized as:
˜x1 =
M
i=1

h∗
1i y1i + h2i y∗
2i

˜x2 =
M
i=1

h∗
2i y1i + h1i y∗
2i

Finally, (8.17) and (8.18) may be simpliﬁed as:
˜x1 = (|h11|2 + |h21|2 + |h12|2 + |h22|2)x1 + h∗
11η11 + h21η∗
21 + h∗
12η12 + h22η∗
22
˜x2 = (|h11|2 + |h21|2 + |h12|2 + |h22|2)x2 + h∗
21η11 −h11η∗
21 + h∗
22η12 −h12η∗
22
which gives in generalized form expressions:
˜x1 =
M

i=1

|h1i|2 + |h2i|2
x1 + h∗
1iη1i + h2iη∗
2i

˜x2 =
M

i=1

|h1i|2 + |h2i|2
x2 + h∗
2iη1i −h1iη∗
2i

Finally, the estimates ˜x1 and ˜x2 are fed to the input of maximum likelihood detector, as before.
8.2.4
Construction Criteria for Space-Time Codes
In this section we will brieﬂy consider some properties, which may be used for the space-time codes
construction, to improve their quality (decrease the error probability) when using them in the MIMO
system.
The classical theory of error-correcting codes [4, 29, 30] considers the usage of code’s redundancy to
achieve the coding gain, which in a practical system usually means the decreasing of error probability
after the decoding procedure. To achieve this goal, some metrics are deﬁned over the set of codewords,
allowing computation of the distance d

xi, x j

between any pair of codewords xi and x j. The metrics
function should satisfy the following properties:
1. d(xi, x j) = d(x j, xi);
2. d(xi, x j) ≥0, and d(xi, x j) = 0 if and only if i = j;
3. d(xi, x j) ≤d(xi, xk) + d(xk, x j) for any codewords xi, x j, xk.
If the metrics is agreed with the communication channel, then ﬁnding the codeword closest to the
received word in terms of distance in given metrics gives the same result as ﬁnding the most probable
transmitted word for given received word. That is, the minimal distance decoding coincides with the
maximum likelihood decoding.
In practice the Hamming metrics or Euclidean metrics are often used. The parameter of the code
connected to selected metrics is the minimal distance d0 of the code, that is, the minimal distance from
all the distances between all codeword pairs: d0 = mini̸= j d(xi, x j). Maximization of the parameter d0
with ﬁxed other code parameters leads to decreasing the decoding error probability and may be used as
a criterion for the code construction.

MIMO
315
Next we will give some analogous criteria for space-time codes construction. In such codes the
redundancy is also used, however, this redundancy allows obtaining not only the coding gain, but also the
diversity gain. Below we will give estimations on error probability and required parameters of space-time
codes connected with this probability. We will assume that the transmission is made over the frequency-
nonselective MIMO-channel with Rayleigh fading, fading coefﬁcients of the channel are described by
the matrix H (see (8.8)).
Recall (sections 8.1.3 and 8.2.2) that the codeword C(i) of the space-time code is deﬁned by the
(T × N)-matrix:
C(i) =
⎛
⎜⎜⎜⎜⎜⎝
c(i)
1,1
c(i)
1,2
· · ·
c(i)
1,N
c(i)
2,1
c(i)
2,2
· · ·
c(i)
2,N
...
...
...
...
c(i)
T,1
c(i)
T,2
· · ·
c(i)
T,N
⎞
⎟⎟⎟⎟⎟⎠
If P

C(i) →C( j)
denotes the probability that after the decoding procedure the transmitted codeword C(i)
was decoded into codeword C( j), and i ̸= j, then the total decoding error probability may be estimated
as [16]:
P(error|C(i) transmitted) ≤

j̸=i
P(C(i) →C( j))
Here the summation is made by all codewords besides the transmitted one.
Deﬁne the matrix:
D(C(i), C( j)) = C( j) −C(i)
(8.19)
and matrix A(C(i), C( j)) = D(C(i), C( j))H · D(C(i), C( j)), here (·)H denotes the Hermitian operator. Then,
by the theorem of singular decomposition:
A(C(i), C( j)) = VH ·  · V
where  = diag(λ1, λ2, . . . , λN), and λi, i = 1, . . . , N are the eigenvalues of matrix A(C(i), C( j)). Omit-
ting theoretical background (it may be found in more detail, for example, in [16]), and denoting as βi, j
the elements of matrix V · H, the decoding error probability for given pair of codeword C(i) transmitted
over the channel H and the codeword C( j) obtained as the result of decoding is [16]:
P(C(i) →C( j)|H) = Q
γ
2 ||(C( j) −C(i)) · H||F

(8.20)
where
||A||F =

Tr(AH · A) =

Tr(A · AH)
(8.21)
is the Frobenius norm of matrix A, Tr(B) is the trace of matrix B, and Q-function is deﬁned in (2.63):
Q(x) =
1
√
2π
 ∞
x
e
−y2
2 dy
Calculation of the Frobenius norm in (8.20) gives [16]:
||(C( j) −C(i)) · H||F =




M

m=1
N

n=1
λn|βn,m|2

316
Modulation and Coding Techniques in Wireless Communications
and substituting this into (8.20), we obtain:
P(C(i) →C( j)|H) = Q
⎛
⎝



γ
2
M

m=1
N

n=1
λn|βn,m|2
⎞
⎠
Using the expression Q(x) ≤1
2e
−x2
2
as an upper bound, the following estimation can be made:
P(C(i) →C( j)|H) ≤1
2 exp

−γ
4
M

m=1
N

n=1
λn|βn,m|2

Since
βn,m
 have the Rayleigh distribution, the expected value of pairwise error probability can be
calculated as:
P(C(i) →C( j)) = E[P(C(i) →C( j)|H)] ≤
1
N
n=1 [1 + (γ λn/4)]M
(8.22)
where γ is SNR at the receiver. If r = rank

A

C(i), C( j)
≤N, we may assume that λ1 ≥λ2 ≥· · · ≥
λr > 0, and λr+1 = · · · = λN = 0. For high values of SNR we may neglect the 1 in the denominator of
(8.22) and write down the upper bound for the error probability basing on nonzero eigenvalues:
P(C(i) →C( j)) ≤
4r M
	N
n=1 λn

M
γ r M
= (Gcγ )−Gd
(8.23)
where Gc is coding gain, connected with the product of eigenvalues r
n=1 λn, and Gd = r M is diversity
gain, or the diversity of space-time code, that is, diversity is deﬁned by the rank of matrix A

C(i), C( j)
,
or equivalently, by the rank of matrix D

C(i), C( j)
, multiplied by the number M of receive antennas.
It can be seen from (8.23) that the upper bound on error probability may be decreased both by
increasing the coding gain and by increasing the diversity gain. Taking into account (8.19), the diversity
of the space-time code is maximal and equal to:
M · rank

D

C(i), C( j)
=N M
(8.24)
when for all possible codeword pairs C(i) and C( j), i ̸= j, the error matrix D

C(i), C( j)
= C( j) −C(i)
has the full rank N. This requirement is called rank criterion [37].
For the codes with full diversity the additional criterion based on coding gain may be used, which is
equal in this case to N
n=1 λn, or equivalently, to the value of determinant of matrix A

C(i), C( j)
. Deﬁne
the coding gain distance (CGD) between words C(i) and C( j) as CGD

C(i), C( j)
= det

A

C(i), C( j)
(if r < N, then the coding gain distance may be determined as the product of nonzero eigenvalues of
A

C(i), C( j)
). This allows the determinant criterion as maximization of minimal determinant of matrices
A

C(i), C( j)
to be determined for all pairs i ̸= j.
As an example let’s consider the Alamouti code in (8.14). Let the signals (s1, s2) form the codeword:
C =
 s1
s2
−s∗
2
s∗
1

and let the signals

s′
1, s′
2

form another codeword:
C′ =
 s′
1
s′
2
−s′∗
2
s′∗
1

Then:
D(C, C′) =
 s′
1 −s1
s′
2 −s2
s∗
2 −s′∗
2
s′∗
1 −s∗
1


MIMO
317
The determinant of this matrix is det

D (C, C′)

=
s′
1 −s1
2 +
s′
2 −s2
2. It is equal to zero if and only
if s1 = s′
1 and s2 = s′
2. Therefore, with C ̸= C′ the matrix D (C, C′) is always full-rank, and the Alamouti
code satisﬁes the determinant criterion. Besides, this code provides diversity 2M for M receive antennas,
and therefore it is the code with full diversity.
In the conclusion of this section we notice that the function
D

C(i), C( j)
F (see (8.21) for the
deﬁnition of the Frobenius norm) has all the metrics’ properties stated above. This metrics may be used
for the codewords of space-time code in the same manner as for the classical error-correcting codes the
Hamming metrics is used. It may be shown that:
P(C(i) →C( j)) ≤1
4 exp
	
−M
D(C(i), C( j))
2
F
γ
4

that is, the pairwise probability of wrong decoding is connected with the metrics
D

C(i), C( j)
F −
larger value of distance between C(i) and C( j) in this metrics correspondent to lower probability of de-
coding the transmitted codeword C(i) into C( j). Thus, another criterion for space-time codes construction
may be the maximization of the minimal distance
D

C(i), C( j)
F among all pairs i ̸= j [8, 15]. This
criterion is called trace criterion, since
D

C(i), C( j)2
F = Tr

A

C(i), C( j)
.
8.3
Orthogonal Designs
In this section we consider the approaches to construction of the space-time codes, generalizing the
scheme described in section 8.2.3. We will distinguish two cases for consideration. In one case the
matrix in (8.12) of the space-time code G is real-valued, and may be used for modulations with real
signals. In another case G consists of complex values (this was the case considered in (8.14)), and
consequently it may be used for space-time coding of complex signals. In both cases the construction
of the matrix of space-timed code G is based on the so-called orthogonal designs, which we will brieﬂy
describe in what follows. The orthogonality property for these designs allows full diversity to be achieved
and simple separate decoding of the symbols of space-time code to be performed (see, for example, (8.15)
and (8.16)).
8.3.1
Real Orthogonal Designs
First we will consider the case when the number N of transmit antennas and the number M of receive
antennas are the same, N = M. Deﬁne the orthogonal design of size N as N × N-matrix G with
real-valued elements ±x1, ±x2, . . . , ±xN, for which the following condition is hold:
GT G =
⎛
⎜⎜⎜⎝
N
i=1 x2
i
0
· · ·
0
0
N
i=1 x2
i
· · ·
0
...
...
...
...
0
0
· · ·
N
i=1 x2
i
⎞
⎟⎟⎟⎠=
 N

i=1
x2
i

IN
(8.25)
where IN is (N × N)-unity matrix.
In fact, satisfying the condition (8.25) means that the scalar product of any two different rows of
matrix G is equal to 0, that is, the rows of this matrix are orthogonal to each other. The scalar product of
the row by itself evidently should be equal to N
i=0 x2
i .
It may be shown [16, 38], that the real orthogonal designs exist only for N = 2, 4 and 8. The matrices
G of the correspondent sizes are shown in Figure 8.8. It should be noticed that the matrices in Figure
8.8 are not unique. For any orthogonal design G and any unitary matrix U (that is, the matrix for which
UT U = I), the matrix UG will also be the orthogonal design.

318
Modulation and Coding Techniques in Wireless Communications
1
2
3
4
2
1
4
3
1
2
4
2
3
4
1
2
2
1
                    
4
3
2
1
3
4
5
6
7
8
1
2
4
3
6
5
8
7
2
1
6
5
8
7
4
3
1
2
5
6
7
8
3
4
2
1
8
5
6
7
8
1
2
6
5
8
7
2
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎛
⎞
⎜
⎟
−
−
⎛
⎞
⎜
⎟
=
=
⎜
⎟
⎜
⎟
−
−
−
⎝
⎠
⎜
⎟
−
−
⎝
⎠
−
−
−
−
−
−
−
−
−
−
−
−
= −
−
−
−
−
−
−
3
4
4
3
1
7
8
5
6
3
4
1
2
8
7
6
5
4
3
2
1
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
−
⎟
⎜
⎟
⎜−
−
−
−
⎟
⎜
⎟
⎜−
−
−
−
⎠
⎝
Figure 8.8
Orthogonal designs
Now we will show that the real space-time code, determined by matrices from Figure 8.8, will provide
the full diversity.
The codeword of the space-time code deﬁned by the matrix G, is the matrix C = G(s1, . . . , sN), that
is, in fact the matrix G, in which the elements (variables) xi are replaced by the correspondent signals si.
In correspondence with (8.24) the diversity of the space-time code is determined by the rank of matrix
D

C(i), C( j)
= C( j) −C(i) = G(s( j)
1 , . . . , s( j)
N ) −G(s(i)
1 , . . . , s(i)
N ) for two different codewords C(i) and
C( j), i ̸= j. Evidently:
G(s( j)
1 , . . . , s( j)
N ) −G(s(i)
1 , . . . , s(i)
N ) = G(s( j)
1
−s(i)
1 , . . . , s( j)
N −s(i)
N )
The determinant of orthogonal matrix G is equal to:
det G = det(GGT )1/2 =
 N

i=1
x2
i
 N/2
From this:
det(G(s( j)
1
−s(i)
1 , . . . , s( j)
N −s(i)
N )) =
 N

i=1
|s( j)
i
−s(i)
i |2
 N/2
which is not equal to zero, since the elements s(i)
k
and s( j)
k
of two different codewords are different at
least for one value of k ∈{1, . . . , N}. Hence, the space-timed codes deﬁned by the orthogonal designs,
provide full diversity of N M [38].
Besides the mentioned property of full diversity, the matrices based on orthogonal designs allow
the separate decoding of received symbols to be performed, similar to the procedure described for the
Alamouti code in section 8.2.3, which simpliﬁes the decoding. The decoding of space-time codes based
on orthogonal designs is described in more detail in section 8.3.3.
According to (8.13), the rate of such orthogonal codes is R = 1, since the number of transmitted
signals K = N and the number of time slots T are the same. Thus, these codes have the maximum
achievable rate.
As mentioned above, the real orthogonal designs (for square matrices) exist only for dimensions 2,
4 and 8. Construction of space-time codes for another number of transmit antennas, exploiting all the
advantages of orthogonal designs:

MIMO
319
1. full diversity;
2. separate decoding of received symbols;
3. high (or maximal) rate;
4. minimal delay (that is, the value of T )
is both of practical and theoretical interest.
The last point (minimal delay) has no sense in consideration of square matrice G, however, in other
cases it is desirable to minimize the parameter T , since it affects the decoding delay. Constructions with
the least possible T thus are called the “delay optimal”.
To obtain the codes with desirable properties, considered orthogonal designs may be generalized [38]
by the case when the matrix G is not square. We will call as generalized real orthogonal design the
T × N-matrix G with real elements ±x1, ±x2, . . . , ±xK, for which any two columns are orthogonal,
that is, for which the following expression is satisﬁed:
GT G = c
⎛
⎜⎜⎜⎝
K
i=1 x2
i
0
· · ·
0
0
K
i=1 x2
i
· · ·
0
...
...
...
...
0
0
· · ·
K
i=1 x2
i
⎞
⎟⎟⎟⎠= c
	K
i=1 x2
i

IN
(8.26)
where IN is (N × N)-unity matrix, and c is constant. The rate of the correspondent space-time code, as
before, is deﬁned as R = K/T . It may be shown that such generalized real orthogonal designs are also
providing full diversity and separate decoding.
It was shown [38] that orthogonal real space-time codes with rate R = 1 based on generalized real
orthogonal designs exist for any N and T = min{c,d≥0|8c+2d≥N}
!
24c+d"
. Such codes are delay-optimal.
Then, for instance, for N = 3 transmit antennas obtain T = K = 4, for N = 9 antennas T = K = 16,
and so on.
Examples of delay-optimal matrices for real space-time codes with rate R = 1 for a different number
of transmit antennas are shown in Figure 8.9.
8.3.2
Complex Orthogonal Designs
Now we consider a similar conception of orthogonal design for the case when the transmitted signals are
represented by complex modulation.
Let’s deﬁne the complex orthogonal design of size N as N × N-matrix G with complex elements
±x1, ±x2, . . . , ±xN, their conjugates ±x∗
1, ±x∗
2, . . . , ±x∗
N and multiplications of these elements by
±
√−1, for which the following condition is hold:
G HG =
⎛
⎜⎜⎜⎝
N
i=1 |xi|2
0
· · ·
0
0
N
i=1 |xi|2
· · ·
0
...
...
...
...
0
0
· · ·
N
i=1 |xi|2
⎞
⎟⎟⎟⎠=
	N
i=1 |xi|2
IN
(8.27)
where IN is N × N-unity matrix.
However, it is proven [38] that such complex orthogonal designs exist only for dimension N = 2, and
in fact this construction is the basis for the Alamouti code in (8.14). In the same way as the case of real
elements, consider the nonsquare matrices with complex elements.
We will nominate as generalized complex orthogonal design the T × N matrix G with elements
obtained from linear combinations of variables x1, x2, . . . , xK and their conjugates, and in which any

320
Modulation and Coding Techniques in Wireless Communications
2
1
3
4
5
1
2
4
3
6
4
3
1
2
7
2
1
3
3
4
2
1
8
1
2
4
8×5
4×3
4
3
1
5
7
8
1
6
3
4
2
6
8
7
2
5
7
5
6
3
8
8
6
5
4
7
1
2
3
4
8×6
       
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜−
−
−
⎟
⎜
⎟
⎜−
−
⎛
⎞
⎟
⎜
⎜
⎟
−
−
−
−
⎟
⎜
⎜
⎟
=
=
⎟
⎜
⎜
⎟
−
−
−
−
⎟
⎜
⎜
⎟
−
−
−
−
−
⎟
⎜
⎝
⎠
⎟
⎜−
−
−
−
⎟
⎜
⎟
⎜−
−
⎠
⎝
−
−
−
= −
6
2
3
4
5
5
1
4
3
6
8
4
1
2
7
7
3
2
1
8
5
7
8
2
6
1
6
8
7
1
5
2
7
5
6
4
8
3
8
6
5
3
7
4
2
1
3
4
1
2
4
4
3
1
3
4
2
8×7
5
7
6
6
8
5
7
5
8
8
6
7
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜
−
−
⎟
⎜
⎟
⎜
−
⎟
⎜
−
−
⎟
⎜
⎟
⎜
−
−
−
⎟
⎜−
−
−
⎟
⎜
⎟
⎜−
−
−
−
⎟
⎜
⎟
⎜
−
−
−
⎠
⎝
−
−
−
−
−
= −
−
−
−
−
−
−
−
6
5
7
5
3
6
8
8
2
7
5
7
1
8
6
8
2
1
3
7
1
2
4
6
4
3
1
5
3
4
2
2
1
3
1
2
4
4
3
1
3
4
5
6
6
5
7
8
8
7
16×9
9
10
10
9
11
12
12
11
13
14
14
13
15
16
16
15
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
⎟
⎜
−
−
−
⎠
⎝
−
−
−
−
−
−
=
−
−
−
−
4
6
5
7
3
5
6
8
2
8
7
5
1
7
2
8
6
8
7
2
1
3
7
8
1
2
4
6
5
4
3
1
5
6
3
4
2
12
11
13
14
11
12
14
13
10
9
15
16
9
10
16
15
15
16
9
10
16
15
10
9
13
14
11
12
13
14
12
11
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
8
9
7
10
6
11
5
12
13
4
14
3
15
2
16
1
16
15
1
15
16
2
14
13
3
13
14
4
11
5
12
12
6
11
9
7
10
10
8
9
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
−
−
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎠
⎝
Figure 8.9
Generalized orthogonal designs

MIMO
321
2
1
3
1
2
4
4
3
1
3
4
2
8×3
*
*
*
1
2
3
*
*
*
2
1
4
*
*
*
3
4
1
*
*
*
4
3
2
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎛
⎞
⎜
⎟
−
−
⎜
⎟
⎜
⎟
−
⎜
⎟
−
−
⎜
⎟
= ⎜
⎟
⎜
⎟
−
−
⎜
⎟
⎜
⎟
−
⎜
⎟
⎜
⎟
−
−
⎝
⎠
Figure 8.10
Construction of complex orthogonal design from real design based on (8.29) for N = 3
two columns are orthogonal, that is, the following expression is satisﬁed:
G HG = c
⎛
⎜⎜⎜⎝
K
i=1 |xi|2
0
· · ·
0
0
K
i=1 |xi|2
· · ·
0
...
...
...
...
0
0
· · ·
K
i=1 |xi|2
⎞
⎟⎟⎟⎠= c
 K

i=1
|xi|2

IN
(8.28)
where IN is (N × N)-unity matrix, and c is constant.
As in the case of real signals, the space-time codes constructed on the base of (generalized) complex
orthogonal designs, allow full diversity N M and separate decoding of the received signals to be achieved.
Notice that if G is (T × N)-matrix of real orthogonal space-time code with rate R, and G∗is the matrix
in which the correspondent elements xi from G are replaced by x∗
i , then the matrix:
Gcomplex =
 G
G∗

(8.29)
with dimension 2T × N deﬁnes the complex orthogonal space-time code with rate R/2 [16]. Examples
of such matrix construction for N = 3 and N = 4 transmit antennas are given in Figure 8.10 and Figure
8.11.
Since in section 8.3.1 we have noticed that the real orthogonal space-time code with rate R = 1 exists
for any number N of transmit antennas, hence, for any number N of transmit antennas there exists the
complex orthogonal space-time code with rate R = 1/2.
2
1
3
4
1
2
4
3
4
3
1
2
3
4
2
1
8×4
*
*
*
*
1
2
3
4
*
*
*
*
2
1
4
3
*
*
*
*
3
4
1
2
*
*
*
*
4
3
2
1
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎛
⎞
⎜
⎟
−
−
⎜
⎟
⎜
⎟
−
−
⎜
⎟
−
−
⎜
⎟
= ⎜
⎟
⎜
⎟
−
−
⎜
⎟
⎜
⎟
−
−
⎜
⎟
⎜
⎟
−
−
⎝
⎠
Figure 8.11
Construction of complex orthogonal design from real design based on (8.29) for N = 4

322
Modulation and Coding Techniques in Wireless Communications
2
1
3
4
5
1
2
4
3
4
3
1
2
3
4
2
1
5
6
7
8
6
5
8
7
7
8
5
6
8
7
6
5
16×8
*
*
*
*
1
2
3
4
*
*
*
*
2
1
4
3
*
*
*
*
3
4
1
2
*
*
*
*
4
3
2
1
*
*
*
*
5
7
8
6
*
*
*
*
6
8
7
5
*
*
*
*
7
5
6
8
*
*
*
*
8
6
5
7
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
=
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
−
6
7
8
5
6
8
7
8
7
5
6
7
8
6
5
2
1
3
4
1
2
4
3
4
3
1
2
3
4
2
1
*
*
*
*
5
6
7
8
*
*
*
*
6
5
8
7
*
*
*
*
7
8
5
6
*
*
*
*
8
7
6
5
*
*
*
*
1
2
3
4
*
*
*
*
2
1
4
3
*
*
*
*
3
4
1
2
*
*
*
*
4
3
2
1
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎛
⎜
−
−
⎜
⎜
−
−
⎜
−
−
⎜
⎜
⎜
−
−
⎜
⎜
−
−
⎜
−
−
⎜
⎜
⎜
⎜
−
−
⎜
−
−
⎜
−
−
−
−
−
−
−
−
⎝
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎠
Figure 8.12
Construction of complex orthogonal design from real design based on (8.29) for N = 8
It should be noted that the mentioned above method of construction of the complex code with rate
R/2 from the real orthogonal code with rate R is not unique [16] and is not the best from the point of
view of the delay optimality. For example, consider the matrix shown in Figure 8.12 for N = 8, K = 8
and obtained from (8.29). Here T = 16 and the code rate is R = 1/2. At the same time the matrix shown
in Figure 8.13 for N = 8 also provides the rate of R = 1/2, but in this case K = 4 and T = 8.
In [26] it is shown that for N > 2 (that is, for the case of more than two transmit antennas) no complex
orthogonal designs exist, providing the space-time code with rate R = 1, so the construction used in the
Alamouti code, is also unique in this sense.
Besides, in [41] it is shown that for N > 2 the generalized complex orthogonal design cannot provide
the code with a rate more than 3/4. The matrices for the codes with rate 3/4 for 3 and 4 transmit antennas
are shown in Figure 8.14 [38]. One more example of the matrices for codes with rate 3/4 for N = 3 and
N = 4 is given in Figure 8.15 [16].
1
2
3
4
*
*
2
1
3
4
*
*
4
2
1
3
*
*
4
1
2
3
8×8
*
*
3
2
1
4
*
*
3
1
2
4
*
*
4
3
1
2
*
*
*
*
4
3
2
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
⎞
⎛
⎟
⎜−
⎟
⎜
⎟
⎜
−
⎟
⎜
−
−
⎟
⎜
=
⎟
⎜
−
−
⎟
⎜
−
−
−
⎟
⎜
⎟
⎜
−
⎟
⎜
⎟
⎜
−
−
⎠
⎝
Figure 8.13
Another complex orthogonal design for N = 8

MIMO
323
(
)
(
)
(
)
(
)
(
)
(
)
3
1
2
*
*
2
2
1
*
*
4 3
*
*
1
1
2
2
3
3
*
*
*
*
2
2
1
1
3
3
3
3
1
2
*
*
3
2
2
1
*
*
*
*
4 4
*
*
1
1
2
2
2
2
1
1
3
3
*
*
*
*
*
*
2
2
1
1
1
1
2
2
3
3
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
×
×
⎞
⎛
⎟
⎜
⎟
⎜
⎟
⎜−
⎟
⎜
⎟
⎜
=
⎟
⎜
−
−
+
−
⎟
⎜
⎟
⎜
⎟
⎜
+
+
−
⎟
⎜
−
⎟
⎜
⎠
⎝
⎛
−
−
=
−
−
+
−
−
−
+
−
+
+
−
+
+
−
−
−
⎞
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎠
⎝
Figure 8.14
Design with rate R = 3/4 for N = 3 and N = 4 transmit antennas
For N > 4 the problem of calculating the upper bounds on code rates and the problem of construction
the (complex) space-time codes with rates in the interval (1/2; 3/4] (or proof of their inexistence) remain
the open problems in the general case. However, some examples may be found in [16].
8.3.3
Decoding of Space-Time Codes
Let the space-time code with N transmit, M receive antennas, transmitting in T time slots, is used for
transmission over the communication channel.
2
3
1
*
*
1
2
3
4
*
*
1
3
*
*
3
2
1
2
3
*
*
2
1
3
4
4
*
*
3
1
2
*
*
3
2
1
0
0
0
0
0
0
0
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
×
×
⎛
⎞
⎜
⎟
−
⎜
⎟
= ⎜
⎟
−
⎜
⎟
−
⎝
⎠
⎛
⎞
⎜
⎟
−
⎜
⎟
= ⎜
⎟
−
⎜
⎟
−
−
⎝
⎠
Figure 8.15
Other designs with rate R = 3/4 for N = 3 and N = 4 transmit antennas

324
Modulation and Coding Techniques in Wireless Communications
Denote as C the space-time code deﬁned by the matrix G. Then the codewords of code C are the
matrices:
S =
⎛
⎜⎝
s1
1
· · ·
s N
1
...
...
...
s1
T
· · ·
s N
T
⎞
⎟⎠
(8.30)
If the signal si
t is transmitted at time moment t from the antenna i, then antenna j receives the signal
[38]:
r j
t =
N

i=1
hi, jsi
t + η j
t
where hi, j is the channel transfer coefﬁcient (fading coefﬁcient) from antenna i to antenna j, and η j
t is
the independent complex Gaussian random value.
If the channel transfer coefﬁcients are known, then the maximum likelihood decoding will coincide
with the minimum distance decoding in metrics:
S = arg min
S∈C
⎧
⎨
⎩
T

t=1
M

j=1
r j
t −
N

i=1
hi, jsi
t

2⎫
⎬
⎭
(8.31)
over all codewords S ∈C.
Consider as code C the space-time code with real signals, for which the matrix G is square, T = N,
and obtained from orthogonal design (section 8.3.1). Examples of space-time matrices for such codes
are shown in Figure 8.8.
As can be seen from Figure 8.8, the ﬁrst row of matrices G are formed by symbols x1, . . . , xN, while
the other rows are the permutations of the ﬁrst row, with some symbols xi changing their sign. Denote
the permutation correspondent to the row k as πk, then the element xi is placed in row k on position
πk(i). The sign of this element denote as sgnk(i).
Then the received signal may be estimated with maximum likelihood (see maximal ratio combining
(8.11) and the Alamouti scheme in (8.15) and (8.16)) as:
˜si =
N

t=1
M

j=1
sgnt(i) · r j
t · h∗
πt (i), j
Because of the orthogonality of matrix G the minimization in (8.31) is equivalent to:
S = arg min
S∈C
⎧
⎨
⎩
N

i=1
⎛
⎝|˜si −si|2 +
⎛
⎝
N

t=1
M

j=1
ht, j
2 −1
⎞
⎠|si|2
⎞
⎠
⎫
⎬
⎭
(8.32)
Again, because of the orthogonality of matrix G the estimate of signal ˜si is independent from estimates
of other signals, and hence, minimization in (8.32) may be performed for each term independently:
si = arg min
si
⎧
⎨
⎩|˜si −si|2 +
⎛
⎝
N

t=1
M

j=1
ht, j
2 −1
⎞
⎠|si|2
⎫
⎬
⎭
(8.33)
Notice that in the case of using the modulation with equal energy for all symbols, the value:
ψi =
⎛
⎝
N

t=1
M

j=1
ht, j
2 −1
⎞
⎠|si|2

MIMO
325
is the same for all si, and hence it may be removed from (8.33), which gives simply:
si = arg min
si
!
|˜si −si|2"
For the space-time codes with non-square matrix G (that is, for T ̸= N) the decoding is practically
identical, with evident modiﬁcation for symbol estimation:
˜si =
N

t∈ρ(i)
M

j=1
sgnt(i) · r j
t · h∗
πt (i), j
(8.34)
where ρ (i) is the set of rows in matrix G, containing si.
Decoding of space-time codes with complex signals is similar to the described scheme. We only give
examples of decoding schemes for some matrices considered in section 8.3.2 [20, 39].
For the codes obtained from the construction shown by (8.29), the decoded signal is:
si = arg min
si
⎧
⎨
⎩|˜si −si|2 +
⎛
⎝2
N

t=1
M

j=1
ht, j
2 −1
⎞
⎠|si|2
⎫
⎬
⎭
which is almost the same as (8.33) besides multiplication of
ht, j
 by 2, since for these constructions the
constant in (8.28) is evidently equal to c = 2.
Estimation of the received signal for these constructions also evidently follows from (8.34) as:
˜si =
N

t∈ρ(i)
M

j=1
sgnt(i) · ˜r j
t (i) · ˜hπt (i), j
where
˜r j
t =
) r j
t , if t-th row of G contains xi
(r j
t )∗, if t-th row of G contains x∗
i
and
˜hπt (i), j =
) h∗
πt (i), j, if t-th row of G contains xi
hπt (i), j, if t-th row of G contains x∗
i
For example, for the codes deﬁned by matrices G8×3 and G8×4 in Figure 8.10 and Figure 8.11 correspon-
dently, the estimates of received signals are calculated as shown in Figure 8.16 and 8.17.
*
*
*
*
*
*
1
1
1,
2
2,
3
3,
5
1,
6
2,
7
3,
1
*
*
*
*
*
*
2
1
2,
2
1,
4
3,
5
2,
6
1,
8
3,
1
*
*
*
*
*
3
1
3,
3
1,
4
2,
5
3,
7
1,
1
(
(
)
(
)
(
)
)
(
(
)
(
)
(
)
)
(
(
)
(
)
(
M
j
j
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
h
h
h
h
h
h
h
h
h
h
s
r
r
r
r
r
r
h
h
h
h
h
h
s
r
r
r
r
r
r
r
h
s
r
r
r
r
=
=
=
=
+
+
+
+
+
=
−
+
+
−
+
=
−
−
+
−
+
∑
∑
∑
*
8
2,
*
*
*
*
*
*
4
2
3,
3
2,
4
1,
6
3,
7
2,
8
1,
1
)
)
(
(
)
(
)
(
)
)
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
r
s
r
r
r
r
r
r
h
h
h
h
h
h
h
=
=
−
+
−
−
+
−
∑
Figure 8.16
Estimation of received symbols for the code deﬁned by matrix G8×3 (Figure 8.10)

326
Modulation and Coding Techniques in Wireless Communications
*
*
*
*
1
1
1,
2
2,
3
3,
4
4,
1
*
*
*
*
5
1,
6
2,
7
3,
8
4,
*
*
*
*
2
1
2,
2
1,
3
4,
4
3,
1
(
                                   
(
)
(
)
(
)
(
)
)
(
                            
M
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
h
h
h
h
s
r
r
r
h
h
h
r
r
r
r
r
h
h
h
h
s
r
r
r
r h
=
=
=
+
+
+
+
+
+
+
+
=
−
−
+
+
∑
∑
*
*
*
*
5
2,
6
1,
7
4,
8
3,
*
*
*
*
3
1
3,
2
4,
3
1,
4
2,
1
*
*
*
*
5
3,
6
4,
7
1,
8
2,
*
4
1
4,
2
1
      
(
)
(
)
(
)
(
)
)
(
                                   
(
)
(
)
(
)
(
)
)
(
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
h
h
h
h
h
h
h
h
h
h
h
h
r
r
r
r
s
r
r
r
r
r
r
r
r
s
r
r
h
=
=
+
−
−
+
=
+
−
−
+
+
+
−
−
=
−
∑
∑
*
*
*
3,
3
2,
4
1,
*
*
*
*
5
4,
6
3,
7
2,
8
4,
                                   
(
)
(
)
(
)
(
)
)
j
j
j
j
j
j
j
j
j
j
j
j
j
r
r
r
r
h
h
h
h
h
h
h
r
r
+
−
+
+
−
+
−
Figure 8.17
Estimation of received symbols for the code deﬁned by matrix G8×4 (Figure 8.11)
For the codes deﬁned by matrices G4×3 and G4×4 in Figure 8.14, the decoding of symbol si is performed
as:
si = arg min
si
⎧
⎨
⎩|˜si −si|2 +
⎛
⎝
N

t=1
M

j=1
ht, j
2 −1
⎞
⎠|si|2
⎫
⎬
⎭
which is similar to (8.33) since for these constructions the constant in (8.28) is equal to c = 1.
Estimates of the received symbols for these codes are calculated as shown in Figures 8.18 and
8.19 [39].
8.3.4
Error Probability for Orthogonal Space-Time Codes
When formulating the criteria of construction of the space-time codes in section 8.2.4 we considered the
probability of decoding in wrong space-time codeword C( j) if the codeword C(i) had been transmitted
over the channel with the transfer coefﬁcients deﬁned by matrix H.
Now consider the analogous probability for the case when the space-time code is represented by the
orthogonal designs, more precisely, by generalized complex orthogonal designs deﬁned by (8.28). In
( )
( )
*
*
*
4
3
3,
3
4
3,
*
1
1
1,
2
2,
1
*
*
*
3
4
3,
4
3
3,
*
2
1
2,
2
1,
1
*
*
*
1
2
3,
3
1,
2,
4
1,
2,
3
1
(
)
(
)
2
2
(
)
(
)
2
2
(
)
(
) (
)
(
) (
)
2
2
2
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
r
r
r
r
s
r
r
r
r
r
r
s
h
h
h
h
h
h
h
r
h
h
r
r
r
r
r
h
s
h
h
h
=
=
=
⎞
⎛
−
+
=
+
+
−
⎟
⎜
⎟
⎜
⎠
⎝
⎞
⎛
+
−
=
−
+
+
⎟
⎜
⎟
⎜
⎠
⎝
⎞
⎛
+
+
−
=
+
+
⎟
⎜
⎟
⎜
⎠
⎝
∑
∑
M
∑
Figure 8.18
Estimation of received symbols for the code deﬁned by matrix G4×3 (Figure 8.14)

MIMO
327
( )
( )
*
*
*
*
4
3
3,
4,
3
4
3,
4,
*
1
1
1,
2
2,
1
*
*
*
*
3
4
3,
4,
4
3
3,
4,
*
2
1
2,
2
1,
1
*
*
1
2
3,
1
2
4,
3
(
)(
)
(
) (
)
2
2
(
)(
)
(
) (
)
2
2
(
)
(
)
(
2
2
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
M
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
h
h
h
h
h
r
r
r
r
s
r
r
r
r
r
r
s
r
r
r
r
h
h
h
h
h
h
h
h
r
r
r
s
h
=
=
⎞
⎛
−
−
+
+
=
+
+
−
⎟
⎜
⎟
⎜
⎠
⎝
⎞
⎛
+
−
−
+
=
+
+
+
⎟
⎜
⎟
⎜
⎠
⎝
+
−
=
+
+
∑
∑
*
*
3
1,
2,
4
1,
2,
1
) (
)
(
) (
)
2
2
j
j
M
j
j
j
j
j
h
h
h
h
r
=
⎞
⎛
+
−
+
⎟
⎜
⎟
⎜
⎠
⎝
∑
Figure 8.19
Estimation of received symbols for the code deﬁned by matrix G4×4 (Figure 8.14)
this case the conditional probability in (8.20) may be written as:
P(C(i) →C( j)|H) = Q
γ
2 Tr
*
HH ·

C( j) −C(i)H ·

C( j) −C(i)
· H
+
then, taking into account the orthogonality of codewords in (8.28), obtain:
P(C(i) →C( j) |H) = Q
⎛
⎝



γ
2 c
K

k=1
s( j)
k
−s(i)
k

2
Tr

HH · H

⎞
⎠=
= Q
⎛
⎝



c γ
2
K

k=1
s( j)
k
−s(i)
k

2
N

n=1
M

m=1
hn,m
2
⎞
⎠
(8.35)
Notice that:
dE =




K

k=1
s( j)
k
−s(i)
k

2
is the Euclidean distance between transmitted and detected symbols, and thus the expression (8.35) may
be rewritten as:
P(C(i) →C( j) |H) = Q
⎛
⎝



c γ
2 d2
E
N

n=1
M

m=1
hn,m
2
⎞
⎠
(8.36)
Computation of unconditional probability based on conditional from (8.36) requires some additional
computational steps, which may be found in [16, 35]. Here we give only the ﬁnal result of pairwise error
probability for orthogonal space-time codes:
P(C(i) →C( j)) = 1
2

1 −

a
1 + a
M N−1

i=0
 2i
i
 ,
1
4(1 + a)
-
where a = c γ
4 d2
E. The constant c is determined by the structure of the space-time code.
8.4
Space-Time Trellis Codes
8.4.1
Space-Time Trellis Codes
In section 8.3 the space-time codes based on orthogonal designs were considered. These codes exploit
the diversity gain, providing at the same time simple decoding methods. In [37] the idea of combining the

328
Modulation and Coding Techniques in Wireless Communications
1c
1
1
FFSR
2
1
FFSR
1
FFSR m
1
2
FFSR
2
2
FFSR
2
FFSR m
1
FFSR N
2
FFSR N
FFSRm
N
2c
m
c
1x
2x
N
x
Σ
Σ
Σ
Figure 8.20
Encoder for space-time trellis codes (STTC)
space-time code with the coded modulation scheme is proposed, to obtain also the coding gain, besides
diversity gain.
Suppose that in communication system with N transmit antennas the L-PSK modulation is used, and
there are m = log2 L information bits c1, . . . , cm at the encoder’s input. Then at the encoder’s output there
should be N L-PSK-modulated signals x1, . . . , x N for simultaneous transmission over the N antennas.
Each information bit ck, k = 1, . . . , m, intended for encoding by space-time trellis code (STTC) for
transmission over antenna i, i = 1, . . . , N, is fed to the input of feedforward shift register FFSRk
i , see
Figure 8.20. Here L denotes addition on modulo L.
Feedforward shift register consists of delay elements, deﬁning its current state, and is functioning
by clocks. The register FFSRk
i with νk −1 delay elements, with symbol ck at register’s input, intended
for encoding and transmission over antenna i, is shown in Figure 8.21. When the register is clocked,
to calculate the output symbol, the input symbol and the values of delay elements are multiplied by
,
k
k
i
gν
0,
k
i
g
1,
k
i
g
...
...
kc
Σ
Σ
Figure 8.21
Feedforward register FFSRk
i for encoding symbol ck and transmission over antenna i

MIMO
329
correspondent coefﬁcients (elements of L-PSK signal constellation) gk
j,i, j = 0, . . . , νk, and summed on
modulo L. The feedforward register may be completely determined by the connection polynomial:
Gk
i (D) = gk
0,i + gk
1,i D + . . . + gk
νk,i Dνk
(8.37)
Since the output symbol is dependent on νk preceding input symbols, usage of register adds some
“memory” to the system, and in fact the input stream of symbols c1, . . . , cm in Figure 8.20 may be
considered as m parallel streams:
ck = (ck
1, ck
2, . . . , ck
t , . . .),
k = 1, . . . , m
where t denotes the moment in time. Then the encoder’s output xi
t at time moment t for transmitting
antenna i is calculated as:
xi
t =
m

k=1
νk

j=0
gk
j,ick
t−j mod L,
i = 1, 2, . . . , N
Since each register FFSRk
i may be in 2νk states, the total number of states in space-time trellis encoder
is 2ν, where:
ν =
m

k=1
νk
The values of νk are determined from the value of total encoder’s memory as:
νk =
.ν + k −1
m
/
Transitions between states for different input sequences of length m, and encoder’s output for all inputs
and states may be traditionally depicted by means of trellis. Expanding the trellis in time, we see that
the codeword of space-time codes corresponds to some path through this trellis, and hence, the Viterbi
decoding may be used [40].
For example, consider the construction of space-time trellis code for two transmit antennas (N = 2)
and QPSK modulation (L = 2). Then m = log2 L = 2, and input bits are divided into two parallel
streams. Let us represent each of the stream as a polynomial:
ck(D) = ck
0 + ck
1 D + ck
2 D2 + . . . ,
k = 1, 2
where ck
j ∈{0, 1}, and let feedforward registers for the stream k and antenna i are deﬁned by polyno-
mials Gk
i (D) in (8.37), notice that for QPSK modulation gk
j,i ∈{0, 1, 2, 3}. Then the output of antenna
i is:
xi(D) = c1(D)G1
i (D) + c2(D)G2
i (D) mod 4
or in matrix form:
xi(D) =
 c1(D)
c2(D)  , G1
i (D)
G2
i (D)
-
mod 4
(8.38)
For the simple example, we take:
G1
1(D) = 2D,
G1
2(D) = 2
G2
1(D) = D,
G2
2(D) = 1
Encoder for such a code is depicted in Figure 8.22. Since ν1 = 1 and ν2 = 1, the total memory of the
encoder is equal to ν = 2, that is, the encoder may be in 22 = 4 states. At each time moment t two

330
Modulation and Coding Techniques in Wireless Communications
1c
2c
0
2
0
1
2
0
1
0
1
2(
)
G D
1
1 (
)
G D
2
1 (
)
G
D
2
2 (
)
G
D
Antenna 1
1x
Antenna 2
2x
Σ
Σ
Σ
Σ
Σ
Σ
Figure 8.22
Example of STTC for QPSK and 2 transmit antennas
bits c1 and c2 are fed to the encoder’s input, and the encoder produces two output signals x1 and x2
and transitions to the new state. This procedure may be depicted with one trellis section, see Figure
8.23. The label c1c2/x1x2 corresponds to each edge of the trellis (to each transition from one state
to another).
Consider the encoder in state 00 with the input sequence 10 11 01 10 00 . . .. Then at the decoder’s
output there will be the sequence 02 23 31 12 20 . . ., and this codeword of the space-time code
corresponds to the path in the trellis, as shown in Figure 8.24. The decoding task may be formulated as
the task of searching in the trellis the path closest (for example, in Euclidean metrics) to the received
sequence.
In [40] the tables of STTC code optimal by rank, determinant or trace criteria are given, for different
numbers N of transmit antennas and “depth” ν of the trellis. Codes based on rank and determinant
criteria, are listed in Table 8.1, and the codes based on trace criterion are listed in Table 8.2. For the
stream of information bits ck the polynomials Gk
i (D) for transmitting antennas 1 to N, deﬁning the
correspondent shift registers FFSRk
i are given as coefﬁcients [gk
0,i, gk
1,i, . . . , gk
νk,i].
8.4.2
Space-Time Turbo Trellis Codes
In section 8.4.1 the space-time codes were considered, using for its construction the shift registers
to achieve the coding gain. Based on this construction the recursive STTC codes may be deﬁned by
adding feedback to the feedforward shift register. This is equivalent to the division of the correspondent
connection polynomial Gk
i (D) in (8.37) by the binary irreducible polynomial q(D).

MIMO
331
00/00
01/01
10/02
11/03
00/10
01/11
10/12
11/13
00/20
01/21
10/22
11/23
00/30
01/31
10/32
11/33
00
01
10
11
00
01
10
11
Figure 8.23
STTC trellis for QPSK and 2 transmit antennas
Figure 8.24
Codeword on the trellis

332
Modulation and Coding Techniques in Wireless Communications
Table 8.1
STTC codes constructed basing on rank and determinant criteria
FFSRk
i
Antenna i
Modulation
N
v
k
1
2
3
4
QPSK
2
2
1
[0,1]
[2,0]
2
[2,0]
[2,1]
3
1
[0,2]
[2,0]
2
[2,1,0]
[1,2,2]
4
1
[0,1,2]
[2,2,2]
2
[2,1,0]
[0,1,2]
5
1
[2,2,0]
[0,3,2]
2
[2,1,1,2]
[2,0,2,2]
6
1
[1,2,0,2]
[2,2,3,0]
2
[2,2,1,0]
[0,0,3,2]
3
4
1
[0,0,2]
[0,1,3]
[2,2,1]
2
[2,1,2]
[0,2,3]
[0,0,3]
5
1
[0,2,0]
[2,0,0]
[1,0,2]
2
[3,3,3,2]
[1,2,2,0]
[0,1,2,0]
6
1
[1,2,1,2]
[1,1,2,0]
[2,2,0,0]
2
[0,0,2,0]
[3,3,2,2]
[0,2,1,2]
4
6
1
[0,2,2,2]
[3,3,1,2]
[0,0,1,2]
[2,2,1,0]
2
[3,2,0,0]
[0,2,0,2]
[2,0,3,2]
[0,2,2,0]
8-PSK
2
3
1
[0,2]
[2,0]
2
[0,4]
[4,0]
3
[4,5]
[1,4]
4
1
[0,4]
[4,0]
2
[0,2]
[2,0]
3
[2,6,1]
[0,5,4]
5
1
[0,4]
[4,4]
2
[0,2,2]
[2,2,0]
3
[3,0,4]
[5,0,0]
For the sake of simplicity we consider again QPSK modulation with two transmit antennas and
registers with memories ν1 and ν2, ν1 ≤ν2. Then the encoding procedure in (8.38) will be as follows:
xi(D) =
 c1(D)
c2(D) 
⎡
⎢⎢⎢⎣
G1
i (D)
q(D)
G2
i (D)
q(D)
⎤
⎥⎥⎥⎦mod 4
where q(d) = ν1
j=0 q j D j is the polynomial with binary coefﬁcients q j. The encoder structure is similar
to Figure 8.20, with the shift register as in Figure 8.25. Here ⊕denotes the summation on modulo 2.
Using the obtained recursive STTC code as the component code, we may construct the scheme of
turbo-encoder for space-time coding similar to well-known turbo-encoding schemes which use several
component codes and interleavers between them. The scheme of such turbo-STTC code is shown in
Figure 8.26 [28, 32].

MIMO
333
Table 8.2
STTC codes constructed basing on trace criterion
FFSRk
i
Antenna i
Modulation
N
v
k
1
2
3
4
QPSK
2
2
1
[0,1]
[2,2]
2
[2,2]
[3,0]
3
1
[2,2]
[2,1]
2
[2,1,0]
[0,2,2]
4
1
[1,1,3]
[2,3,2]
2
[2,2,2]
[0,2,0]
5
1
[0,2,1]
[2,3,2]
2
[2,1,2,2]
[2,2,3,0]
6
1
[0,3,3,3]
[2,1,3,2]
2
[2,2,0,2]
[2,2,0,0]
3
2
1
[0,1]
[2,2]
[2,3]
2
[2,2]
[3,0]
[3,2]
3
1
[2,2]
[2,1]
[2,1]
2
[2,1,0]
[0,2,2]
[3,0,2]
4
1
[1,1,3]
[2,3,2]
[1,2,1]
2
[2,2,2]
[0,2,0]
[2,0,2]
5
1
[0,2,1]
[2,3,2]
[2,3,2]
2
[2,1,2,2]
[2,2,3,0]
[0,2,1,0]
6
1
[0,3,3,3]
[2,1,3,2]
[2,0,2,1]
2
[2,2,0,2]
[2,2,0,0]
[0,2,3,1]
4
2
1
[0,1]
[2,2]
[2,3]
[0,2]
2
[2,2]
[3,0]
[3,2]
[2,1]
3
1
[2,2]
[2,1]
[2,1]
[2,2]
2
[2,1,0]
[0,2,2]
[3,0,2]
[1,3,1]
4
1
[1,1,3]
[2,3,2]
[1,2,1]
[1,2,3]
2
[2,2,2]
[0,2,0]
[2,0,2]
[2,0,2]
5
1
[0,2,1]
[2,3,2]
[2,3,2]
[2,2,1]
2
[2,1,2,2]
[2,2,3,0]
[0,2,1,0]
[1,0,0,2]
6
1
[0,3,3,3]
[2,1,3,2]
[2,0,2,1]
[1,2,2,3]
2
[2,2,0,2]
[2,2,0,0]
[0,2,3,1]
[2,0,1,2]
8-PSK
2
3
1
[2,3]
[1,4]
2
[4,2]
[6,0]
3
[0,4]
[4,0]
4
1
[2,3]
[4,7]
2
[4,6]
[0,6]
3
[7,0,4]
[2,7,4]
5
1
[0,4]
[4,4]
2
[0,2,2]
[2,3,2]
3
[4,4,3]
[2,2,7]
3
3
1
[2,3]
[1,4]
[3,0]
2
[4,2]
[6,0]
[2,4]
3
[0,4]
[4,0]
[4,2]
(Continued)

334
Modulation and Coding Techniques in Wireless Communications
Table 8.2
(Continued)
FFSRk
i
Antenna i
Modulation
N
v
k
1
2
3
4
4
1
[2,3]
[4,7]
[2,2]
2
[4,6]
[0,6]
[4,4]
3
[7,0,4]
[2,7,4]
[2,6,0]
5
1
[0,4]
[4,4]
[0,4]
2
[0,2,2]
[2,3,2]
[4,7,7]
3
[4,4,3]
[2,2,7]
[6,0,2]
4
3
1
[2,3]
[1,4]
[3,0]
[7,5]
2
[4,2]
[6,0]
[2,4]
[2,4]
3
[0,4]
[4,0]
[4,2]
[4,0]
4
1
[2,3]
[4,7]
[2,2]
[2,4]
2
[4,6]
[0,6]
[4,4]
[4,0]
3
[7,0,4]
[2,7,4]
[2,6,0]
[0,3,2]
5
1
[0,4]
[4,4]
[0,4]
[3,3]
2
[0,2,2]
[2,3,2]
[4,7,7]
[2,1,5]
3
[4,4,3]
[2,2,7]
[6,0,2]
[5,7,6]
For decoding such turbo-STTC codes the iterative schemes may be applied, analogous to those being
used in conventional turbo-codes, for example, using symbol-by-symbol iterative MAP algorithm [40].
The structural scheme of the decoder for M receive antennas is shown in Figure 8.27.
8.5
Differential Space-Time Codes
So far, considering transmission and receiving in multi antenna systems, we assumed that the information
about the channel state (CSI, channel side information) is available at the receiver, and this information
may be used for decoding. Usually this information is obtained by using channel estimation methods, for
example inserting pilot (known a priori) symbols into data trafﬁc. However, in some cases, for example,
in channels with fast varying parameters, it is hard to estimate the channel satisfactorily, and the special
construction of the receiving scheme is required, which does not use the information about the current
channel state.
,
k
k
i
gν
0,
k
i
g
1,
k
i
g
kc
1q
2q
1
qν
Σ
Σ
Figure 8.25
Register deﬁned by Gk
i (D)/q(D)

MIMO
335
1c
2c
m
c
...
Interleaver
...
Deinterleaver
MUX
...
...
...
...
...
...
...
1
2x
1
N
x
1
1x
2
N
x
Antenna 1
Antenna 2
Antenna N
Figure 8.26
Encoder for turbo-STTC code
Antenna 1
Antenna 2
Antenna M
...
DEMUX
Decoder 1
Decoder 2
Interleaver
Deinterleaver
Interleaver
Deinterleaver
Solution
Figure 8.27
Decoder for turbo-STTC code

336
Modulation and Coding Techniques in Wireless Communications
In the area of space-time codes designing such schemes are based on the so-called differential phase-
shift keying (DPSK), which we will consider ﬁrst.
Suppose that at time moment t we need to transmit the signal st, selected from the L-PSK constellation.
Instead of transmitting st we will send the signal ct = ct−1st, setting some a priori known value c0 as
the initial value, for example c0 = 1. The signal ct will also belong to the L-PSK constellation. Then the
received signal would be:
rt = htct + ηt
where ht is transfer coefﬁcient (path gain), and ηt is Gaussian noise. Assuming that the channel state
changing is not signiﬁcant during the transmission time of two adjacent symbols, that is, ht ≈ht−1 ≈h,
it may be shown [16] that:
rtr ∗
t−1 ≈|h|2st + N
(8.39)
where N is Gaussian noise. To obtain the estimate ˜st of signal st we need to ﬁnd the point in L-PSK
constellation, closest to rtr ∗
t−1, that is:
˜st = arg min
st
rtr ∗
t−1 −|h|2st
2
(8.40)
but in L-PSK modulation multiplication of st by scaling coefﬁcient |h|2 doesn’t change the geometry of
the detection region, and hence the problem (8.40) is equivalent to:
˜st = arg min
st
rtr ∗
t−1 −st
2
(8.41)
Obviously, solving (8.41) is independent from the channel state, since it is determined by two adjacent
received symbols only.
It may be shown [16] that the usage of such DPSK modulation (that is, ignoring of |h|2 coefﬁcient)
leads to reducing the SNR at the receiver (when transmitting over the Rayleigh channel) by approximately
3 dB.
Below we will consider the simple generalization of this approach for the case of space-time coding,
when using two transmit antennas.
Suppose that k-th data block encoded by block space-time code (STBC) is represented by the vector
of signals:
Sk =
 sk
1
sk
2

This vector will be determined by the preceding vector Sk−1 and 2m input information bits. The signal
S0 will be assumed ﬁxed and known beforehand. Notice that vectors:
V1(Sk) =
 sk
1
sk
2

,
V2(Sk) =
 (sk
2)∗
−(sk
1)∗

form the orthogonal basis. If the vector Sk is unit-length, then the lengths of V1(Sk) and V2(Sk) will also
be equal to one (otherwise these vectors may be normalized).
Next, consider the set V consisting of 22m different (2 × 1)-vectors P1, P2, . . . , P22m of unit-length.
Suppose that the one-to-one mapping F from 2m-bit binary sequences to elements of V is deﬁned. Then
the encoding procedure is as follows.
For 2m input bits obtain the vector Pk = (Pk
1, Pk
2)T ∈V by using the F mapping. Then:
Sk = Pk
1V1(Sk−1) + Pk
2V2(Sk−1)

MIMO
337
k
P
k
S
1
k−
S
2m
Figure 8.28
Encoder for differential space-time code
Since V1(Sk) and V2(Sk) form the orthogonal basis, then:
Pk
1 = [V1(Sk−1)]H · Sk = sk
1(sk−1
1
)∗+ sk
2(sk−1
2
)∗
Pk
2 = [V2(Sk−1)]H · Sk = sk
1sk−1
2
−sk
2sk−1
1
After that obtained signal Sk is transmitted by means of STBC based on orthogonal design, for example
using the Alamouti code. The encoder scheme is shown in Figure 8.28.
We consider the decoding procedure for the case of one receive antenna. In section 8.2.3 it was shown
that the received signals may be written as:
r k
1 = h1sk
1 + h2sk
2 + ηk
1
r k
2 = −h1(sk
2)∗+ h2(sk
1)∗+ ηk
2
where h1, h2 are channel transfer coefﬁcients, ηk
1, ηk
2 −Gaussian noise. Deﬁne the vector R as:
R =

(r k−1
1
)∗r k
1 + r k−1
2
(r k
2)∗
(r k
2)∗r k−1
1
−r k
1(r k−1
2
)∗
 
= (|h1|2 + |h2|2)Pk + N
In fact the obtained expression reminds (8.39) for DPSK with one transmit antenna. As in the case
of DPSK, multiplication of vector Pk by coefﬁcient (|h1|2 + |h2|2) does not change the geometry of
detection region, and to ﬁnd the estimate ˜Pk for the transmitted signal Pk we need to ﬁnd in set V a vector
closest to R. Inverse mapping F−1 completes the decoding. The decoder scheme is shown in Figure
8.29.
As for DPSK, the described differential space-time scheme leads to 3 dB loss due to ignoring the
scaling coefﬁcient in the detection procedure.
Concrete examples of the set V and mapping F selection, allow the decoder to be simpliﬁed, and also
the generalizations for the cases of more antennas may be found in [12, 14, 16–18].
8.6
Spatial Multiplexing
8.6.1
General Concepts
In sections 8.2 and 8.3 we considered the transmission over MIMO channel by means of the space-time
coding. The main task of space-time code is providing the diversity gain in multiantenna transmission
and receiving, that is, providing the receiver with different responses of the same signals, which should
Figure 8.29
Decoder for differential space-time code

338
Modulation and Coding Techniques in Wireless Communications
Figure 8.30
Spatial multiplexing
improve the receiving reliability under conditions of transmission over the channels with fading and
dispersion. As has been noted in section 8.2, the rate of space-time code in (8.13) is R = K/T , that is,
it characterizes the number K of symbols which may be transmitted within the period of T time slots.
In section 8.3 the orthogonal space-time codes, with rate R ≤1 were considered, that is, the maximal
throughput of these codes (with R = 1) is one symbol per one time slot (or per one channel use). With
this limitation on the coding scheme throughput the orthogonal space-time codes allow the maximal
diversity to be achieved. At the same time simple maximum likelihood decoding procedure exists for
these codes.
The architecture of the MIMO system may also be used for achieving other goals, for instance,
increasing the throughput to more than one symbol per channel use, at the cost of diversity gain
decreasing, and hence, increasing of the error probability. For example, this may be acceptable and
desirable in applications operating at relatively high SNRs, where error rate is relatively low, but the high
transmission rate should be (and may be) achieved.
The possible solution for this problem is the spatial multiplexing technique. The idea of this principle
is shown in Figure 8.30. Transmitted symbols s1, . . . , sm are split into N parallel streams, which are then
modulated (and possibly encoded) and then transmitted over some dedicated antenna or by N antennas
simultaneously. From the system architecture point of view the procedures of modulation and coding are
not principal, so we will not take them into account in what follows.
If there are M antennas used for receiving, and s = (s1, . . . , sN) is the vector intended for transmission
over the N transmit antennas at some ﬁxed time point then the received vector r = (r1, . . . ,rM) will be:
r = s · H + η
(8.42)
where H is (N × M)-matrix of channel transfer coefﬁcients in (8.8), and η is M-component vector of
Gaussian noise.
Then the maximum likelihood decoding (which in Gaussian channel coincides with the minimal
Euclid distance decoding) consists in ﬁnding the vector s minimizing the function dE (r, s · H), where
dE (a, b) is the Euclidean distance between vectors a and b. Unlike the case of space-time codes, we do
not deﬁne the structure of the codewords s (for example, the structure of orthogonal matrix). Due to this
fact the decoding may be performed by the total search through all the modulation signals. If the signal
constellation consists of B symbols, then the decoding would require exponential search in B N possible
variants instead of linear search in BN variants required for the codes from section 8.3. In practice such
decoding complexity is unacceptable in most cases, and for the decoding the more simple sub-optimal
procedures providing acceptable error probability are used.
An example of such simpliﬁcation is the decoding in the sphere; an approach traditionally exploited
in error-correcting coding theory. In this case the search is performed only amongst those codewords,

MIMO
339
Figure 8.31
V-BLAST decoder (optimal ordering {s1, . . . , sN } is assumed)
which are somehow within a deﬁned sphere of some ﬁxed radius and with the centre in the received
vector r rather than by all the codewords. An example of such decoding is sphere detection described in
Chapter 5.
Next we will consider some examples of spatial multiplexing based on different versions of space-time
architectures BLAST (Bell Labs Layered Space-Time architectures) [11].
8.6.2
V-BLAST
First we will describe the architecture of vertical BLAST (V-BLAST) [42]. The encoder structure is in fact
similar to that shown in Figure 8.30, and received word is described by the expression in (8.42). It may be
noted that with the coding scheme as in Figure 8.30, when the transmission is made in fact independently
over the N antennas, the decoding task is equivalent to the user detection task when receiving signals
from N independent users, so the methods being used in systems with multiple users are applicable here.
Step-by-step decoder described in [42] successively processes the symbols (layers) and is called SIC
(successive interference cancellation). This algorithm works as follows (see Figure 8.31).
1. The codeword symbols s = (s1, . . . , sN) should be ordered by the decreasing power of the correspon-
dent received signals (decreasing of correspondent SNR). In what follows we will assume that the
ordering in consideration coincides with the initial ordering.
2. Suppose that for some 2 ≤i ≤N the symbols s1, . . . , si−1 are already detected, and their corre-
spondent estimations ˜s1, . . . , ˜si−1 are obtained. Then before the detection of symbol si the impact of
already detected symbols for the received vector r is taken into account as:
r(i) = r −
i−1

j=1
˜s j · h( j)
where h( j) is the j-th column of the channel matrix H. Detection of symbol si is done by the vector
r(i). In fact this step resembles the functioning of decision feedback equalizer (DFE, see section 5.1.3).
For the detection of symbol s1 this step is omitted, r(1) = r is assumed. It may be shown that in this
case the received vector after i-th decoding step is equal to:
r(i+1) = r(i) −˜sih(i)
At the next step the detection of correspondent symbol si is made by the received vector r(i).
3. The detection of symbol si by vector r(i) is made with the help of a procedure called interference
nulling. In the vector r(i) the symbols which have been already detected are already taken into account,
so the detection is reduced to accounting symbols which are not yet detected, and the impact of which
is assumed simple as noise. Such detection may be performed by means of ZF or MMSE equalizers
(see section 5.1.2).

340
Modulation and Coding Techniques in Wireless Communications
(a) ZF-nulling
In the case of Zero-Force (ZF) nulling to extract the sih(i) from r(i) the vector r(i) may be multiplied
by the column ˜h(i), which is orthogonal to the columns h( j) for j = i + 1, i + 2, . . ., N, but which
is not orthogonal to the column h(i). Such column ˜h(i) may be obtained as i-th column of the
nulling matrix 6H+, calculated as follows. Replace the rows 1, 2, . . ., i −1 of matrix H by zeros,
obtaining the matrix 6H (that is, the matrix not accounting the impact of other antennas), then 6H+
will be the pseudo-inverse (Moore-Penrose generalized inverse) to the matrix 6H:
6H+ = 6HH · (6H · 6HH)−1
Then:
r(i) · ˜h(i) = si + N · ˜h(i)
where N · ˜h(i) is Gaussian noise, and therefore the symbol si may be detected as symbol ˜si,
closest (in given constellation) to r(i) · ˜h(i).
(b) MMSE-nulling
In the case of minimum mean-square error (MMSE) nulling the detection is made similarly, but
in correspondence with MMSE criterion the nulling matrix 6H+ is calculated as:
6H+ = 6HH ·
IN
γ + 6H · 6HH
−1
where γ is SNR at the receiver.
To perform the described decoding we should determine the symbols detection order at its ﬁrst step.
This procedure may be different for different equalization methods used for detection. For example,
in [42] when using the ZF-equalizer (which is not taking into account the noise during detection, and
therefore the noise may be enhanced, but the correspondent noise enhancing factor may be calculated)
the ordering is proposed to minimize the maximal noise enhancing factor. In [42] it is proved that the
global optimum by this criterion may be achieved, if at each step the locally optimal symbol is selected,
that is, the symbol giving the smallest noise enhancing factor.
To overcome the necessity of optimal ordering the algorithm of parallel interference cancellation
(PIC) may be considered [33]. This algorithm may be described as follows.
1. In the absence of SIC ordering all symbols (layers) are detected simultaneously as
˜s = H+ · r
where H+ = HH · (H · HH)−1 is pseudo-inverse of the channel matrix H.
2. Interference cancellation in the received vector is performed as
r(i) = r −

j̸=i
˜s j · h( j)
where r(i) is the vector of received symbols with interference cancellation in all symbols except i-th,
h( j) is j-th column of the channel matrix H.
3. At the interference nulling step the correspondent nulling matrix 6H+ is calculated by ZF or MMSE
criterion similar to SIC algorithm, but for its computation during detection the symbol ˜si all rows in
matrix channel, except i-th, are nulled, and not the rows correspondent to preceding detected symbols,
as in SIC algorithm.
PIC algorithm, which is not taking into account ordering, in general loses by the error probability to
the SIC algorithm with optimal ordering, but it may be combined with SIC algorithm, which may give
advantage compared to basic SIC algorithm.

MIMO
341
Layer 1
Layer 3
Layer 1
Layer 2
Layer 3
Layer 1
Layer 1
Layer 2
Layer 3
Layer 3
Layer 1
Layer 2
Layer 2
Layer 3
Layer 1
Layer 2
Layer 3
Layer 2
Antenna 1
Antenna 2
Antenna 3
t = 1
t = 2
t = 3
t = 4
t = 5
t = 6
t = 7
t = 8
Figure 8.32
Diagonal transmission using D-BLAST layers
8.6.3
D-BLAST
Another variant of BLAST architecture, called diagonal BLAST (D-BLAST) [10], differs from the consid-
ered V-BLAST by the procedure of mapping the input symbols to the parallel streams being organized. In
V-BLAST architecture the input symbols were consecutively distributed over the transmitting antennas
from “top” to “down”, (see Figure 8.31), which gives the name to the whole system. In the case of
D-BLAST the input symbols are distributed over the streams called “layers”, and at each consecutive
moment of transmission the mapping of these layers to the transmitted antennas is cyclically shifted,
forming some diagonal structure.
Let us explain the functioning of the system by example. Let there be N = 3 transmit antennas. Then
the input symbols stream is split into three layers, and the transmission is made as shown in Figure 8.32.
At ﬁrst time slot t = 1 the symbol of the ﬁrst layer is transmitted from the ﬁrst antenna. At the second
time slot the symbol of the ﬁrst layer is transmitted from the second antenna, while the ﬁrst antenna
transmits the symbol of Layer 3 and so on. It may be noticed that not all antennas are taking part in the
transmission at N −1 initial and N −1 conclusive time slots. This slightly reduces the throughput of
the system.
As can be seen from the Figure 8.32, the symbols belonging to the same layer are transmitted by
diagonal in space-time matrix. In fact such a scheme represents the kind of interleaver, and the idea
behind it is to avoid grouping of errors into bursts in case one of the antennas is in fading.
Decoding is performed in a very similar way to the decoding in V-BLAST system, but taking into
account the diagonality of D-BLAST. First, the decoding of the ﬁrst (upper) diagonal consisting of N
symbols from the Layer 1 is performed. Since at the ﬁrst time slot there is only one antenna from which
transmission is made, the received symbol does not interfere with the other signals from other antennas,
and detection may be performed, for example, by means of conventional MRC procedure (see section
8.2.1). At the second time slot the signal from the ﬁrst antenna (transmitting the symbol from the Layer 3)
is considered as noise, and the signal from the second antenna (Layer 1) is decoded as in V-BLAST.
At the third time slot the noise from Layers 2 and 3 should be compensated to decode Layer 1. After
that N symbols from the diagonal of Layer 3 is decoded, with taking into account that the signals from
Layer 2 are not decoded yet and considered as noise, and the signals from Layer 1 are already known
and may be compensated as in V-BLAST. Then the decoding proceeds in the same way, “moving” by
the diagonals in Figure 8.32 from up to down, compensating received signals by the values of already

342
Modulation and Coding Techniques in Wireless Communications
Figure 8.33
Turbo-BLAST encoding scheme
decoded diagonals, which are placed above the current diagonal, and considering the signals from the
lower diagonals as noise.
The difference between decoding in V-BLAST and D-BLAST is that in the case of D-BLAST there
is no need for the signals sequence ordering to provide detection, since the order here is deﬁned by the
interleaving scheme.
8.6.4
Turbo-BLAST
One more variant of BLAST architecture proposed in [34] describes the joint usage of spatial multiplexing
with error-correcting coding of obtained streams. Encoding scheme for such Turbo-BLAST architecture
is shown in Figure 8.33. The data split by N streams are coded with the error-correcting code, and after
that are subject to space-time interleaving. In [34] the modiﬁcation of the scheme shown in Figure 8.32
is considered as space interleaver. This scheme is shown in Figure 8.34, where the distribution of layers
over antennas at time slot t is simply the cyclic shift of the distribution at moment t −1, as in D-BLAST,
but there are no idle antennas at the beginning and ending of transmission. The random interleaving is
used as time interleaving.
In [34] it is shown that the proposed scheme allows the artiﬁcial channel with time-varying param-
eters from the quasi-static communication channel with fading to be obtained, in this case space-time
Figure 8.34
Space interleaving in Turbo-BLAST

MIMO
343
Figure 8.35
Equivalent coding scheme for Turbo-BLAST
interleaving acts as additional channel coding scheme (with rate 1), besides block error-correction coding.
Such equivalent coding treatment for Turbo-BLAST is given in Figure 8.35.
In fact we have serially concatenated code, in which outer and inner encoders are separated by
interleaver, this is the classical scheme of turbo-code. An iterative decoding scheme may be applied to
such code, where the inner decoder is SISO (soft in/soft out) detector, and the outer decoder consists of
the decoders of correspondent error-correcting codes. As in usual iterative turbo-decoding schemes, the
outer and inner decoders are exchanging information with each other. The scheme of such decoder is
given in Figure 8.36.
Figure 8.36
Iterative decoder for Turbo-BLAST

344
Modulation and Coding Techniques in Wireless Communications
8.7
Beamforming
In case of closed-loop system (see section 8.1.3), when the information about the channel is available to the
transmitter (this information is sent from the receiver side over the feedback channel), the performance of
the system may be improved if the “beams” transmitting the data are “tuned” corresponding to the known
(estimated) current channel state. Such procedure is called beamforming and may be performed both in
analogue domain and with digital data. In this section we will brieﬂy consider “digital beamforming”
techniques [16, 27].
Since information about the channel state coming from the feedback channel (CSI, channel state
information) is usually non-ideal, this may decrease the effect of beamforming, however, in this case
combining of space-time coding techniques and digital beamforming methods may be useful [21], see
Figure 8.37. Then, instead of sending the codeword C (represented by matrix) of the space-time code to
the transmitting antennas, the following linear transformation will be used:
C′ = C · W
(8.43)
where W is the beamforming matrix. Selection of matrix W may be done corresponding to different
criteria. For example [16, 21], one criterion for the construction may be the minimization of maximal
value of pairwise conditional error probability P(Ck →Cl|ˆh). This probability is correspondent to
the event that after transmission of codeword Ck of space-time code and given estimation of channel
realization ˆh the maximum likelihood decoding makes solution in favour of the codeword Cl. If the
upper bound on this probability is denoted as:
V (Ck, Cl) ≥P(Ck →Cl|ˆh)
then it may be shown [21] that:
log V (Ck, Cl) = f (mh|ˆh) −log det(g(A(Ck, Cl)))
where f (mh|ˆh) is some function from conditional mean of the path gains given the partial CSI, that
is, determined by the channel and its estimation, and g(A(Ck, Cl)) is some function from the matrix
A(Ck, Cl) = (Cl −Ck)H(Cl −Ck) deﬁned in section 8.2.4, that is, determined by the space-time code
and in fact is the determinant criterion.
Then, in the case of absence of CSI, the transmission power is uniformly distributed across all beams.
In the case of ideal CSI the ﬁrst term is dominating in the obtained criterion, and the energy is concentrated
in the best beam. In the case of non-ideal CSI the second term is dominating, and matrix W is optimized
to increase the level of spatial diversity (in fact this is achieved by means of determinant criterion, see
section 8.2.4).
As an additional example we consider the usage of beamforming in WCDMA/HSDPA standard [1]. In
closed-loop mode 1 (CL1) two antennas are used for transmission, each corresponding to some “weight”
Input
Space-time 
encoder
Beamforming 
linear
transformation
Antenna 1
Antenna 2
Antenna N
Antenna 1
Antenna M
Receiver
processing
Output
Feedback channel
Channel Side Information (CSI)
Figure 8.37
Combining of space-time coding and beamforming

MIMO
345
w1 and w2 [23, 25]. In fact these values are complex values, multiplication by which tunes the phase of
the transmitted signals.
Calculation of the tuned phase is made to maximize the received power:
P = wH · HH · H · w
where w = [w1, w2]T and H = [h1, h2] represent the estimated channel impulse responses for the trans-
mission antennas 1 and 2, of length equal to the length of the channel impulse response. During soft
handover, the UE computes the phase adjustment to maximize the total UE received power from the cells
in the active set. It can be done by maximizing the following function:
P = wH
 K

n=1
HH
n Hn

w
where K is the number of base stations in active set, Hi is the channel impulse response matrix for cell
i. Weight w1 is constant equal to 1/
√
2, and w2 may take the values of 1
2 + j 1
2, 1
2 −j 1
2, −1
2 + j 1
2 and
−1
2 −j 1
2. Calculated optimal value of w2 is transmitted over the feedback channel to the base station.
In MIMO 2x2 Dual-stream Transmit Antenna Adaptive Array (D-TxAA) mode it is possible to transmit
two data streams simultaneously. Each stream is transmitted via both transmit antennas. In the same way
as in CL1 the precoding vectors of weighting coefﬁcients are used for each stream. The primary precoding
vector (w1, w2) is used for transmission of stream 1 and the secondary precoding vector (w3, w4) for
transmission of stream 2. The precoding weights are deﬁned as follows:
w3 = w1 = 1/
√
2
w4 = −w2
(8.44)
w2 ∈
)1 + j
2
, 1 −j
2
, −1 + j
2
, −1 −j
2
7
The primary and secondary precoding vectors are orthogonal:
w1 · w∗
3 + w2 · w∗
4 = w3 · w∗
1 + w4 · w∗
2 = w2
1 −w2
2 = 0
(8.45)
Due to this orthogonality it is possible to separate the data streams at the receiver. The precoding weights
are calculated in the receiver and reported to base station. The receiver chooses one of four possible
combinations of precoding weights (actually value of w2 deﬁnes both primary and secondary precoding
vectors) maximizing the throughput for the next transmission. Unlike CL1 the beamforming in MIMO
D-TxAA is used in a more comprehensive way since the maximization of the received power of one
particular stream does not necessarily lead to maximization of the cumulative throughput of both streams.
In the case of MIMO D-TxAA the aim of beamforming is the maximization of SINR in both streams
rather than maximization of the received power as in CL1. For a more detailed description of CL1 and
MIMO D-TxAA see sections 11.2.8 and 11.3.1.5.
Theoretically D-TxAA scheme can double the throughput provided by one stream transmission by
means of spatially multiplexing two data streams. The stream separation at receiver can be done after
equalizer based on antenna equalization with the help of postprocessing exploiting the orthogonality of
the precoding vectors or immediately at the equalizer output with the help of stream equalization.
Consider the data ﬂow corresponding to one particular channelization code depicted in Figure 8.38.
Here symbols s11, s12 represent the output of spreader for stream 1 and symbols s21, s22 output of spreader
for stream 2.
The received signal can be written as follows:
r = HT
1x1 + HT
2x2 + n =
 HT
1 HT
2
 , x1
x2
-
+ n =
, H1
H2
-T , x1
x2
-
+ n = HTx + n

346
Modulation and Coding Techniques in Wireless Communications
w1
w2
s11 , s12
x11 = w1s11 + w3s21 , x12 = w1s12 + w3s22
w3
w4
s21 , s22
x21 = w2s11 + w4s21 , x22 = w2s12 + w4s22
x11 ,  x12
x21  ,  x22 
Tx
r11 ,  r12
r21  ,  r22 
Rx
h11
h22
h12
h21
Figure 8.38
2 × 2 D-TxAA transmitter and channel model
where xi is the transmitted chip sequence from ith transmit antenna, n is the noise vector, and Hi is
channel matrix of ith transmit antenna. Hi is ((F + L) × 2F) matrix, where F is the length of the
equalizer ﬁlter and L is the channel delay spread in chips.
Taking into account the notation in Figure 8.38 the received signal can be written in the form of:
r = (w1H1 + w2H2)T s1 + (w3H1 + w4H2)T s2 + n
(8.46)
where si is ith stream data. The (8.46) can be written as:
r =
 HT
1 HT
2

WT
, s1
s2
-
+ n =
, H1
H2
-T
WT
, s1
s2
-
+ n
where W =
, w1 w2
w3 w4
-
, wi is the diagonal matrix given by wi = wiI, I is (F + L)×(F + L) identity
matrix. Now considering matrix:
˜H = W
 H1 H2

=
 ˜H1 ˜H2

as a modiﬁed channel matrix it is possible to calculate the equalizer ﬁlter coefﬁcients in such a way
to make it possible to obtain the separated stream symbols at the equalizer output, that is, provide the
stream equalization.
In the case where the equalizer ﬁlter is calculated based on matrix H the estimates of
, x1
x2
-
rather than
, s1
s2
-
are obtained at the equalizer output as a result of antenna equalization and these values should be

MIMO
347
STTD
Partial
Encoder
x11, x12,  x13, x14
x21, x22,  x23, x24
x11,  -x21*, x12,  x13,  -x23*, x14
x21, x11*, x22,  x23, x13*, x24
Figure 8.39
Partial STTD Encoder
processed to separate the streams. However, it can be easily done due to the orthogonality of primary
and secondary precoding vectors.
Unfortunately, the streams’ mutual orthogonality may be easily corrupted under fading channel condi-
tions. In this case the streams would not be separated correctly in both cases using antenna equalization
or stream equalization. It is assumed that the usage of adaptive modulation and coding can cope with this
problem. However, the use of link adaptation technique in case of loss of streams’ orthogonality usually
leads to signiﬁcant decrease of data rate and in some cases the equivalent or even higher throughput
can be achieved with one stream transmission using the higher code rate than in MIMO mode which
compromises the idea of using the D-TxAA scheme.
One of the possible improvements in this case is to use space-time coding for decreasing the impact
of fading. In [44] the modiﬁcation of D-TxAA scheme consisting in STTD encoding the output of the
D-TxAA transmitter was suggested. Actually, it is possible to use the method described by (8.43) in
this case but then the matrix W used for the transmission would be different from the one described in
the standard. However, it is not possible to apply STTD encoding to the whole data since it means two
time decrease of the original data rate which immediately leads to performance degradation down to the
level provided by one stream transmission. The possible solution is to apply STTD encoding only to the
part of the original data ﬂow, that is, only to odd symbols at the output of D-TxAA as shown in Figure
8.39. Of course, the additional STTD encoding in this case limits the theoretically possible throughput
of modiﬁed scheme to 2/3 of maximum theoretically achieved throughput offered by the original scheme
(which is claimed to be 28 Mbps), but this latter value of throughput is not possible to achieve in any
case under fading conditions.
Note that taking into account values of precoding beamforming weights in (8.44) the STTD encoding
of D-TxAA output keeps the orthogonality of the original streams. The application of STTD encoding
on top of D-TxAA scheme makes it impossible to use the stream equalization. Thus, from now on we
will consider only antenna equalization.
Now assuming that the data at the output of D-TxAA scheme were encoded with the help of partial
STTD encoder represented in Figure 8.39 the output of the despreader after equalization can be written
as follows:
d11 = h11x11 + h21x21 + n11,
d21 = h12x11 + h22x21 + n21
d12 = −h11x∗
21 + h21x∗
11 + n12,
d22 = −h12x∗
21 + h22x∗
11 + n22
d13 = h11x12 + h21x22 + n13,
d23 = h12x12 + h22x22 + n23
(8.47)
where di j is the jth output of despreader corresponding to Rx antenna i, i ∈{1,2}; hi j is the channel
coefﬁcient of the path from Tx antenna i to Rx antenna j, i, j ∈{1,2}; ni j is the receiver noise at antenna
i, i ∈{1,2}.
In turn the symbols x11, x21, x12, x22 shown in Figure 8.38 can be represented as follows:
x11 = w1s11 + w3s21,
x21 = w2s11 + w4s21
x12 = w1s12 + w3s22,
x22 = w2s12 + w4s22
(8.48)
Assume that equalizer provides perfect channel estimates ˆhi j = hi j. For the sake of simplicity, we will
use only notation hi j. Then the estimates of symbols x11 and x21 in accordance with [2] can be found

348
Modulation and Coding Techniques in Wireless Communications
from the following equations:
h∗
11d11 + h∗
12d21 + h21d∗
12 + h22d∗
22 = x11
|h11|2 + |h12|2 + |h21|2 + |h22|2
+ h∗
11n11 + h∗
12n21 + h21n∗
12 + h22n∗
22
(8.49)
h∗
21d11 + h∗
22d12 −h12d∗
22 −h11d∗
21 = x21
|h11|2 + |h12|2 + |h21|2 + |h22|2
+ h∗
21n11 + h∗
22n12 −h12n∗
22 −h11n∗
11
Using the estimates ˆx11 and ˆx21 the estimates of symbols s11 and s21 can be obtained with the help of
(8.45) and (8.48) as follows:
ˆs11 = ˆx11w∗
1 + ˆx21w∗
2
ˆs21 = ˆx11w∗
3 + ˆx21w∗
4
(8.50)
The estimates for symbols s12 and s22 as it follows from (8.47), (8.48) and (8.45) are given by:
d13

w∗
1h22 −w∗
2h12

+ d23

w∗
2h11 −w∗
1h21

= s12 (h11h22 −h12h21)
+ n13

w∗
1h22 −w∗
2h12

+ n23

w∗
2h11 −w∗
1h21

(8.51)
d13

w∗
3h22 −w∗
4h12

+ d23

w∗
4h11 −w∗
3h21

= s22 (h11h22 −h12h21)
+ n13

w∗
3h22 −w∗
4h12

+ n23

w∗
4h11 −w∗
3h21

Obviously the estimates given by (8.49) and (8.50) are more robust than ones given by (8.51) due to
the complex multiplier (h11h22 −h12h21) in (8.51). Thus the symbols di(3k+1), di(3k+2) processed with the
help of (8.49) and (8.50) are more reliable than symbols di(3k+3) obtained with the help of (8.51).
References
[1] 3GPP RAN WG1, TS25.201: Physical layer – general description, 3GPP, Tech. Rep., June 2000.
[2] Alamouti, S. A Simple Transmit Diversity Technique for Wireless Communications. IEEE Journal on Selected
Areas in Communications, 16:1451–1458, Oct. 1998.
[3] Bello, P. Characterization of randomly time-variant linear channels. IEEE Transactions on Communication
Systems, CS-11: 36–393, 1963.
[4] Blahut, R. Theory and Practice of Error Control Codes. Addison-Wesley, 1984.
[5] Brennan, D.G. Linear diversity combining techniques. Proc. IRE, vol.47, no.1, pp. 1075–1102, June 1959.
[6] Burr, A. The multipath problem: an overview. In IEE Colloquium on Multipath Countermeasures. London, 23
May 1996, Colloquium Digest 1996/120.
[7] Burr, A. Modulation and Coding for Wireless Communication. Prentice Hall, 2001.
[8] Chen, Z., Yuan, J., Vucetic, B. Improved space-time trellis coded modulation scheme on slow fading channels.
Electronic Letters, 37(7):440–441, Mar. 2001.
[9] Cover, T.M., Thomas, J.A. Elements of Information Theory. Wiley, 1991.
[10] Foschini, G. Layered space-time architecture for wireless communication in a fading environment when using
multi-element antennas. Bell Labs Technical Journal, pages 41–59, 1996.
[11] Foschini, G., Chizhik, D., Gans, M., Papadias, C., Valenzuela, R. Analysis and performance of some basic
space-time architectures. IEEE Journal on Selected Areas in Communications, 21(3):303–320, Apr. 2003.
[12] Ganesan, G., Stoica, P. Differential modulation using space-time block codes. IEEE Signal Processing Letters,
9(2):57–60.
[13] Hanzo, L., Liew, T., Yeap, B. Turbo Coding, Turbo Equalisation and Space-Time Coding. Wiley-IEEE Press,
2002.
[14] Hochwald, B., Marzetta, T. Unitary space-time modulation for multiple-antenna communications in Rayleigh
ﬂat fading. IEEE Trans. on Information Theory, 46(2):543–564.
[15] Ionescu, D. New results on space-time code design criteria. IEEE Wireless Communications and Networking
Conference (WCNC), pages 684–687, 1999.
[16] Jafarkhani, H. Space-time coding. Theory and Practice. Cambridge University Press, 2005.

MIMO
349
[17] Jafarkhani, H., Tarokh, V. A differential detection scheme for transmit diversity. IEEE Journal on Selected Areas
in Communications, 18(7):1169–1174.
[18] Jafarkhani, H., Tarokh, V. Multiple transmit antenna differential detection from generalized orthogonal designs.
IEEE Trans. on Information Theory, 47(6):2626–2631.
[19] Jakes, W. Microwave Mobile Commumication. Wiley, 1974.
[20] Jankiraman, M. Space-Time Codes and MIMO Systems. Artech House, 2004.
[21] Jongren, G., Skoglund, M., Ottersten, B. Combining beamforming and orthogonal space-time block coding.
IEEE Trans. on Information Theory, 48(3): Mar. 2002, 611–27.
[22] K¨uhn, V. Wireless Communications over MIMO Channels. Applications to CDMA and Multiple Antenna
Systems. Wiley, 2006.
[23] Kurjenniemi, J., Leino, J., Kaipainen, Y., Ristaniemi, T., Closed Loop Mode 1 Transmit Diversity with High
Speed Downlink Packet Access, ICCT 2003, Beijing, China, Apr, 2003.
[24] Lee, W. Mobile Communications Engineering. McGraw Hill, 1982.
[25] Leino, J., Kurjenniemi, J., Rinne, M., Analysis of Fast Alpha Switching for Closed Loop Mode 1 Transmit
Diversity with High Speed Downlink Packet Access, In Proceedings of IEEE Vehicular Technology Conference
(VTC) fall 2004 LA, USA, 26–29 Sept. 2004.
[26] Liang, X, Xia, X. On the nonexistence of rate-one generalized complex orthogonal designs. IEEE Transactions
on Information Theory, 49(11):2984–2989, Nov. 2003.
[27] Litva, J. and Lo, T. K.-Y. Digital Beamforming in Wireless Communications. Artech House Publishers, 1996.
[28] Liu, Y., Fitz, M. Space-time turbo codes. 13th Annual Allerton Conf. on Commun. Control and Computing,
Sept. 1999.
[29] MacWilliams, F., Sloane, N. The Theory of Error-Correcting Codes. North-Holland publishing company, 1977.
[30] Peterson, W., Weldon, E. Error-Correcting codes. MIT Press, 1972.
[31] Proakis, J. Digital communications. McGraw Hill, 1995.
[32] Robertson, P., Worz, T. Bandwidth-efﬁcient turbo trellis coded modulation using punctured component codes.
IEEE Journal on Selec. Areas in Communications, 16(2):206–218, Feb. 1998.
[33] Sellathurai, M., Haykin, S. A simpliﬁed diagonal blast architecture with iterative parallel interference cancela-
tion receivers, IEEE International Conference on Communications, vol. 10, pp. 3067–3071, 2001.
[34] Sellathurai, M., Haykin, S. TURBO-BLAST for wireless communications: theory and experiments. IEEE Trans.
on Signal Processing, 50(10):2538–2546, Oct. 2002.
[35] Simon, M. Evaluation of average bit error probability for space-time coding based on a simpler exact evaluation
of pairwise error probability. Int. Jour. Commun. and Networks, 3(3):257–264, Sept. 2001.
[36] Sklar, B. Digital Communications. Fundamentals and Applications. Prentice Hall, 2001.
[37] Tarokh, H., Seshadri, V., Calderbank, A. Space-time codes for high data rate wireless communication: perfor-
mance analysis and code construction. IEEE Transactions on Information Theory, 44: 744–765, Mar. 1998.
[38] Tarokh, V., Jafarkhani, H, Calderbank, A. Space-time block codes from orthogonal designs. IEEE Transactions
on Information Theory, 45: 1456–1467, 1999.
[39] Tarokh, V., Jafarkhani, H, Calderbank, A. Space-Time Block Coding for Wireless Communications: Performance
Results. IEEE J. Select. Areas Commun., 17(3):451–460, Mar. 1999.
[40] Vucetic, B., Yuan, J. Space-Time Coding. Wiley, 2003.
[41] Wang, H., Xia, X. Upper bounds of rates of space-time block codes from complex orthogonal designs. IEEE
Transactions on Information Theory, 49(10):2788–2796, Oct. 2003.
[42] Wolniansky, P., Foschini, G., Golden, G., Valenzuela, R. V-BLAST: an architecture for realizing very high data
rates over the rich-scattering wireless channel. International Symposium on Signals, Systems and Electronics
(ISSSE), pages 295–300, Sept. 1998.
[43] Zhang, W. Simulation and modeling of multipath mobile channels. In Proceedings of the 44th IEEE Vehicular
Technology Conference. Stockholm, June, pp. 160–4.
[44] Semenov, S. Modiﬁcation of the D-TxAA Scheme for Fading Channel. In Proceedings of the Fourth Advanced
International Conference on Telecommunications 2008. Athens, June 2008, pp. 138–142.


9
Multiple Access Methods
Dmitry Osipov1, Jarkko Paavola2, and Jussi Poikonen2
1Institute for Information Transmission Problems, Russian Academy of Sciences, Russia
2Department of Information Technology, University of Turku, Finland
In practice, it is not enough that a single high data rate stream can be transmitted through the air from
the transmitter to the receiver. Rather, wireless communication systems must be able to serve tens or
even hundreds of users simultaneously with multimedia applications requiring very high data rates. The
method allowing several users to communicate simultaneously is called multiple access (MA). In this
chapter different strategies to implement multiple access are presented.
In a cellular system, the coverage area is divided into parts called cells. Each cell has a base station,
which is connected with all user terminals inside the cell. In cellular telecommunication systems, the
transmission from the base station to a user terminal (downlink, forward link) and the transmission from
a terminal to the base station (uplink, reverse link) must be separated. Traditionally downlink and uplink
transmissions use different frequencies or they occur consecutively. These two options are referred to
as frequency division duplexing (FDD) and time division duplexing (TDD) [8]. The method allowing
several users to communicate simultaneously inside a cell is called a multiple access technique. The
capacity of multiple access techniques refers to the maximum number of users K served inside one cell.
Here, the term capacity refers speciﬁcally to multiple access capacity. From the information theory point
of view the maximal rate of data transmitted through the channel is referred to as channel capacity to
make a distinction from the latter (as established by Claude Shannon [63]). Classical multiple access
methods are based on orthogonality, thus they do not inﬂict multiple access interference (MAI) within
the communication system. To provide orthogonality signals can be non-overlapping in the time domain
or in the frequency domain, but the non-overlapping condition is only sufﬁcient, not necessary. In code-
division systems signals overlap in both domains, being orthogonal due to proper code structure. The
capacity of orthogonal multiple access methods is K = W T, where T is a ﬁnite transmission time, and
W is the width of the available frequency band. Adding users to systems beyond this limit inﬂicts MAI.
The number of allowed extra users depends on the tolerable amount of interference.
The ﬁrst generation analog cellular systems used frequency division multiple access (FDMA), where
different users communicate on different frequencies. The FDMA is not very convenient from the imple-
mentation point-of-view, since K parallel passband ﬁlters are required in the receiver and orthogonality is
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

352
Modulation and Coding Techniques in Wireless Communications
difﬁcult to preserve in practice. In the cellular communication environment the cells must be clustered to
ensure that the same frequencies are not used in adjacent cells, which would cause inter-cell interference.
Most of the 2G systems used a combination of time division multiple access (TDMA) with FDMA. In
TDMA, the time axis is divided into slots allocated to different users. Pure TDMA allows all users to
have the whole bandwidth at their disposal.
The 3G systems and one 2G system have adopted code division multiple access (CDMA) as their
multiple access technique. In CDMA users communicate simultaneously within the same frequency
band. Different users are separated in the receiver with the help of an individual code signal. At the time
of deployment of the 2G systems, CDMA seemed to be too complex from the implementation point-
of-view. Thus, only one 2G standard, called IS-95 or cdmaOne, uses CDMA. The rapid development
in digital technology has enabled large scale implementations of CDMA in contemporary consumer
electronics.
Let us consider the MA problem in more detail. Assume that there are K0 users that are allowed
to transmit in the system under consideration (further on they will be referred to as subscribers) and
within the scope of consideration K users (K0 > K) are transmitting data via the wireless channel in
use (further on they will be referred to as active users). Hereinafter two MA system models will be
considered. Within the scope of the ﬁrst model it is assumed that there is a central node called a base
station. The base station can communicate with each user and vice versa. It is assumed that users are
allowed to communicate directly only with the base station but not with each other. Thus, if a certain
user wants to transmit a message to another active user he is to transmit it to the base station. The base
station transmits all the messages to the recipients (this model describes many of the contemporary MA
systems for example, cellular or satellite systems).
As mentioned, in real life systems the uplink channel and the downlink channel are separated either
in the frequency domain or in the time domain. It should be noted that the downlink channel is a one-to-
many or broadcasting channel. Thus, all the data streams can be transmitted synchronously. Transmission
via the uplink channel is, on the other hand, a many-to-one transmission. So it is very difﬁcult to fully
synchronize data streams transmitted by different active users.
On the other hand, it should be noted that it is possible to utilize synchronous CDMA in the uplink.
As the cell size is shrinking in the so called hot-spot areas, where extremely high data rates are required,
pico cells are utilized. They have coverage areas in the scale of meters or few tens of meters. There,
the synchronism can be maintained within a fraction of bit interval also in the uplink due to very
small distance between a transmitter and the receiver. Other such quasi-synchronous systems are also
proposed for satellite [64] systems, which use a special spreading code to transmit timing information,
and microcellular [65] environments, where receiver processing transforms an asynchronous channel into
the synchronous equivalent. The synchronous CDMA system developed by Cylink relied on network
synchronization for both downlink and uplink [66]. Special orthogonal signals can be constructed to
such a quasi-synchronous channel to combat possible small synchronization errors [67, 68].
Within the scope of the second MA model (ad-hoc network) all the users are allowed to communicate
with each other. Thus the number of channels that can be potentially requested in an ad hoc network is
much greater than in the system with the base station (if the number of active users is the same).
In cellular systems the base station of a certain cell can control activity of all the users in the cell acting
as a central node. In ad hoc networks there is no base station and, thus, if control is to be maintained one
of the active users is to act as a central node. If for some reason this user exits the system (that is, cannot
transmit information to the users in the network under consideration) some other user is to undertake the
task. Hereinafter this type of control will be referred to as “decentralized control”. Further on we shall
assume that any user in the system under consideration is able to transmit to any other.
It should be noted that there are quite a number of MA techniques and the number of techniques
resulting from their combination is even greater. Further on only the most fundamental multiple access
techniques will be considered. However, in order to give some new insights into the ﬁeld of multiple

Multiple Access Methods
353
access this consideration will be complemented by a short survey of some recently proposed multiple
access techniques that can be considered candidates for future implementation in real-life systems. It
should be noted that the process of designing real life MA systems and their implementation results in a
whole complex of problems (for example, power control, channel estimation and so on). Thus it is worth
mentioning that in the course of our consideration of a certain MA method all the theoretical results to
be stated are the ones obtained under idealized conditions.
In general, application of any of the abovementioned MA techniques reduces to converting the channel
in use into a set of disjoint point-to-point channels (in either frequency domain, time domain or both).
By using this approach high spectral efﬁciency can be obtained but unfortunately the aforesaid approach
has certain limitations and drawbacks.
Theoretically speaking it is possible to assign a distinct channel to each subscriber and thus no control
is needed in the system under consideration. However, this is possible only if the number of subscribers is
few, which certainly is not the case for the majority of modern systems. Thus, in real life systems based
on the abovementioned principle control is to be introduced at least in terms of assigning respective
channels to the active users, that is, the subscribers who intend to transmit data in the system under
consideration will have informed the base station (or the node that acts as one) thereof in advance.
It has been assumed that active users transmit information continuously. However, it turns out that in
many real-life systems this is not true. For instance, as has been stated by Viterbi [60], in a two-person
telephone conversation each user involved is active from 35% to 50% of time. Note that, since in each
channel only one user is allowed to transmit. this channel remains unused throughout all the time period
within which the user is not active. Thus, in the previous example the channel allocated to each of
the users remains idle for the most of the time. The same holds for various applications where users
transmit relatively short messages (for example, commands, requests, authentication information and
so on) Therefore classic techniques based on allocating a disjoint portion of a time-frequency resource
to each user appear to be very inefﬁcient in terms of channel usage for all applications but for those
implying long-term transmission of long messages (for example, multimedia.) To increase the channel
usage efﬁciency of the systems under consideration it is crucial to allocate time and frequency resources
that are unused at the moment to the users who are currently active (it is to be noted that switching is
possible only if control is introduced into the system under consideration.) This holds even for systems
implying long-term transmission since some users may enter the system or new users may exit from the
system. Unfortunately, rapid switching between users is practically impossible and, thus, the problem of
channel usage efﬁciency remains one of the major weaknesses of the method under discussion. Moreover,
the number of active users’ rapid changes (for example, due to active users’ high mobility) may result in
a very inefﬁcient usage of the control channel.
Another weakness of the method under consideration is its eavesdropping and jamming vulnerability.
In the case of a single user transmission it is easy for the intruder to ﬁnd out which sub-band and/or
time slot is assigned to the user. Once this task has been solved the problem of eavesdropping or
jamming a signal from the respective user simpliﬁes drastically. As the number of active users grows
the task of detecting numbers of time slots and/or sub-bands used by a certain active user becomes more
cumbersome. However, in the case of jamming an intruder is to solve a much simpler task – to detect
whether this sub-band or time slot is allocated to some active user. In section 9.4 modern MA strategies
that are much more jamming and eavesdropping-proof strategies will be considered).
9.1
Frequency Division Multiple Access
The simplest and most intuitive way to solve an MA problem is to allocate a disjoint portion of a time-
frequency resource to each user. For instance, in frequency division multiple access (FDMA) systems
the total bandwidth is subdivided into a set of narrowband subchannels with each user being allowed to
transmit or receive only in the subchannels assigned to him (see Figure 9.1).

354
Modulation and Coding Techniques in Wireless Communications
Frequency
Time
- user #1
- user #2
- user #3
- user #4
Figure 9.1
FDMA allocation
The basic idea of FDMA is to allocate transmission resources to a number of users in the frequency
domain in a non-interfering manner. Thus FDMA is an orthogonal multiple access method (like TDMA),
as opposed to non-orthogonal methods described in section 9.3, where controlled interference between
users is accepted. Orthogonal MA methods are not capacity-achieving in the information theoretic sense
[69], but offer other advantages such as simplicity of realization and ﬂexible system design.
Since the principle of FDMA is to provide a number of users a portion of the total available frequency
spectrum, it can easily be applied for continuous-time multiple access. Therefore FDMA was widely
used for example in ﬁrst-generation analog cellular phone systems such as NMT or AMPS [70]. FDMA
can be realized simply by communicating with different users by independent band-limited single-carrier
transmissions, as described for frequency division multiplexing. Again, this requires the allocation of
guard-bands between the users’ sub-bands to reduce interference between users due to non-ideal bandpass
ﬁltering, possible carrier frequency offsets and Doppler spreading of received signals due to receiver
mobility. The use of guard-bands reduces the overall spectral efﬁciency of a system.
Conventional analog FDMA systems such as the ones mentioned above do not offer a lot of ﬂexibility
in the allocation of spectral resources to the users: increasing the number of frequency slots available to a
user would require the user to have a receiver capable of processing transmissions over disjoint frequency
bands, which would require either multiple receivers or complicated wide-band signal processing in the
receiver. The ﬂexibility of resource allocation with FDMA can be greatly improved by realizing it
using OFDM techniques (see Chapter 2); for such realizations, the term Orthogonal Frequency Division
Multiple Access (OFDMA) is used. OFDMA will be described in more detail in subsection 9.1.2.
Any practical communication system deals with a certain signal space with ﬁnite dimension, which
can be quantiﬁed for real-valued signal representations as 2W T , or WT for complex-valued signals where
T is a ﬁnite transmission time, and W is the width of the available frequency band. In MA systems, this
signal space is partitioned and allocated to a number of users. A crucial question in designing large-scale
MA systems is how to allow a large number of users to share the limited signal space resource. A
solution is to spatially separate the signals of users operating with the same resources. This reuse of
the signal space is the basis of cellular networks. Also, multiple-antenna methods such as beamforming
can be utilized to mitigate interference between users sharing the same resources in MA systems. In the
following, we consider in more detail spectral reuse in FDMA systems.

Multiple Access Methods
355
Figure 9.2
Example of spectral reuse assuming a hexagonal tiling of a transmission area. The dashed line indicates
a cell cluster with three hexagonal cells (that is, the total spectral resource is distributed into three parts, and thus the
reuse factor is 1/3), and dR indicates the reuse distance
9.1.1
Spectral Reuse
Orthogonal MA methods such as TDMA and FDMA are by deﬁnition designed so that there is no
interference between users operating over different time/frequency intervals. In practice, the delay and
Doppler spreads inherent in wireless transmission environments and mobile reception may cause loss
of orthogonality and subsequent interference, which is comparable to MAI in non-orthogonal CDMA
systems, but not controlled, or directly related to the number of users sharing the resources.
A more relevant interference effect in orthogonal MA systems is that between users sharing the same
time/frequency resources. Cellular networks are a practical approach to reducing such interference. The
spatial area of a cellular network is partitioned into cell clusters (see Figure 9.2), each containing N
cells with one base station each. In an FDMA network, for each cluster of cells, the total available
frequency bandwidth is partitioned into N groups of frequency slots, which are allocated to the cells
within each cluster. Each cell can accommodate KU users, where KU depends on the partitioning of the
total spectral resources, that is, N, and on the utilization of frequency bands within the cells (for example,
full duplex/half duplex communication). Each cell cluster can thus serve a maximum of KUN users. In
the total FDMA network area spectral reuse is achieved by organizing the cell clusters so that there is
maximal attenuation between signals originating from cells using the same frequency slots. Typically
this means designing the network for maximal spatial separation between such cells. Frequency reuse
factor refers to the fraction of the total spectral resources allocated to a single cell (and thus the fraction of
the total network area occupied by cells with a given frequency allocation). For simple FDMA networks
with omnidirectional BS transmitters the frequency reuse factor is simply 1/N as shown in Figure 9.2.
For purposes of system analysis, cellular network topologies are often approximated as a two-
dimensional tiling of identically shaped cells, for example hexagonal cells to approximate omnidirectional
propagation, or diamond-shaped cells to approximate dense urban street grids. A crucial design issue for
cellular FDMA networks is then how many cells must be included into each cell cluster. Having more
cells in a cluster increases the separation between cells of the same type, but decreases the efﬁciency of
overall spectrum usage within the network. Reuse distance, denoted in Figure 9.2 by dR, can be deﬁned as
the distance between the centers (or base-stations) of the two cells utilizing the same frequency resources.
Increasing the reuse distance decreases the amount of inter-cell interference experienced by the users,
but it also decreases the efﬁciency of spectrum utilization within the network. The reuse distance should
thus be minimized according to the attenuation needed to reach a given average signal-to-interference
ratio within the network. This attenuation in turn is also dependent on inter-cell propagation conditions,

356
Modulation and Coding Techniques in Wireless Communications
which are, in modelling cellular networks, typically approximated by an environment-speciﬁc path loss
exponent.
9.1.2
OFDMA
Orthogonal frequency division multiple access is a MA scheme that utilizes OFDM (see Chapter 2) as the
transmission method. OFDMA is a special case of FDMA, which retains the beneﬁts of OFDM versus
single-carrier digital transmission (for example, efﬁcient handling of multipath propagation effects), and
improves the overall spectral efﬁciency and ﬂexibility of resource allocation compared to traditional
FDMA. This ﬂexibility can be realized not only by assigning unequal numbers of subcarriers to users,
but also through user-speciﬁc subcarrier distribution, power allocation and bit loading. Furthermore,
this ﬂexibility offers a possibility for taking advantage of multiuser diversity, where the variation of the
frequency-selective fading experienced by the users is taken into account in the subcarrier allocation.
Finally, as OFDM signals are by deﬁnition arranged into symbols of ﬁnite duration, OFDMA allows
users to ﬂexibly share both frequency carriers and time slots – in this sense it can be considered a
hybrid FDMA/TDMA scheme. In the following we primarily focus on OFDMA resource allocation in
the frequency domain.
Assume that in a given time slot, a frequency resource corresponding to KSC OFDM subcarriers is
available for downlink data transmission (that is, transmission overhead is excluded), and that this total
set of carriers is equally and disjointly allocated to a cell cluster with N cells. If KU users are then
to be provided an equal number of subcarriers within a given cell during the considered time slot,
a relevant question is how to allocate the approximately KSC/(NKU) subcarriers to each of the users.
Since the transmission channels between the base station and each of the users differ, generally a good
solution in frequency-dependent fading channels would be to allocate the spectral resources so that each
user is provided data over the subcarriers corresponding to the best channel conditions, thus taking
advantage of the multiuser diversity mentioned above. This requires knowledge of the transmission
channels between the base station and the receivers, or channel state information (CSI). Even if CSI
is available, optimizing the subcarrier allocation over all possible combinations may not be feasible in
real systems. A practical simpliﬁcation is to optimize the allocation for chunks of subcarriers, that is,
instead of individual subcarriers, blocks consisting of several consecutive subcarriers are assigned to the
users. Scheduling the subcarriers of a single user arbitrarily over the available frequency spectrum is
referred to as distributed subcarrier allocation, while in localized allocation the subcarriers of a single
user are adjacent. Figure 9.3 illustrates the two approaches. It should be noted that even if CSI is not
available at the transmitter, allocating carriers or chunks of carriers to users according to pseudorandom
permutations, that is, using interleaving, averages the aggregate channel quality for the users.
Considering downlink transmission for a single user with ﬁxed subcarrier allocation, the total data
throughput is generally dependent on the allocation of transmission power to the subcarriers, and the
bit loading, or assignment of complex modulation symbols to the subcarriers. The optimal solution for
power allocation over varying channel conditions with CSI available is the well-known water ﬁlling
algorithm [69], which has also been generalized as multi-user water ﬁlling algorithms (see for example
[71–72]), which simultaneously address the issue of subcarrier allocation. Bit loading algorithms (for
example [73]) combine optimization of the power allocation with ﬁnding the optimal number of bits
(that is, the signal constellation size) to be allocated to each subcarrier when adaptive modulation is
used. Efﬁciency of spectrum usage can be further increased by utilizing intracell frequency reuse. This
can be implemented for example with embedded or hierarchical modulation schemes, where high-rate
and low-rate signals are superimposed on a single subcarrier, and assigned to users with good and bad
channel states, respectively. Figure 9.4 shows an example of embedded modulation using a 64-QAM
signal constellation for a given subcarrier. A detailed study of embedded modulation and frequency reuse
in OFDMA systems is given in [74].

Multiple Access Methods
357
Subcarr er
spectra
Frequency
KSC/(NKU)
…
KSC/(NKU)
…
KSC/(NKU)
…
…
…
Frequency
Subcarr er
spectra
Figure 9.3
Conceptual examples of distributed (upper) and localized (lower) frequency allocation in one OFDMA
cell. The black, gray and light gray lines depict theoretical subcarrier spectra for three users. The approximate number
of carriers available to each user is indicated in the lower ﬁgure
One example of the additional system design ﬂexibility provided by OFDMA compared to earlier
FDMA systems is the fractional frequency reuse scheme deﬁned in the mobile WiMAX standard [75].
With this reuse scheme users near the base station of each cell are allowed to use the entire available
frequency spectrum, as they are less prone to suffer from intercell interference. Users near the cell borders
are allocated non-overlapping sets of subcarriers within the cell cluster. This principle is illustrated in
Figure 9.5, where frequency reuse for three neighbouring cells is shown.
Figure 9.4
Example of embedded modulation. A low resolution signal corresponding to the selection of one of the
four groups of modulation symbols (marked with gray squares) is robust against noise and can be transmitted to a
user with a poor channel quality. A higher-rate signal is mapped to the modulation symbols within the selected group
(marked with dots), which can be transmitted to a user with good channel quality

358
Modulation and Coding Techniques in Wireless Communications
Figure 9.5
Example of fractional frequency reuse. Users on the edges of three cells are assigned non-overlapping
portions of the available frequency resource (denoted by F1, F2, F3), while users near the base stations of the cells are
assigned the entire available spectrum
9.1.3
SC-FDMA
As described in Chapter 2, one of the disadvantages of OFDM transmission is the large peak-to-average
power ratio (PAPR). To reduce signal distortion, the transmitter ampliﬁer should operate in the linear
region, which in the presence of a high PAPR results in low transmitter power efﬁciency. This is especially
challenging in the uplink of OFDMA systems with possible mobile users, as power consumption is
typically a critical issue for portable terminals. Single-carrier frequency division multiple access (SC-
FDMA) offers one solution to this problem. SC-FDMA can be considered as a modiﬁed OFDMA
transmission scheme, where the data (complex modulation symbols) allocated to the subcarriers of a
user are precoded using an additional discrete Fourier transform operation as illustrated in Figure 9.6.
Figure 9.6
SC-FDMA transmitter operations. The input is N modulation symbols. The frequency domain signal
with M subcarriers contains the discrete Fourier transform of the input symbols, zero-valued carriers, and pilot
symbols. Assuming a distributed subcarrier allocation (referred to as Interleaved SC-FDMA, or IFDMA) results in
the shown time-domain signal

Multiple Access Methods
359
As a result, with a distributed subcarrier allocation where the input data is distributed evenly over the
available bandwidth, the time domain samples of the transmitted signals are copies of the original complex
modulation symbols to be transmitted. This considerably reduces the PAPR. A tutorial presentation on
SC-FDMA is given in [76].
9.1.4
WDMA
In optical communications it is practical to describe carriers with their wavelength rather than with their
frequency as in radio communications. Wavelength (λ) and frequency (f) have a simple relation as λ=c/f,
where c is the speed of light. As wavelength and frequency are inversely proportional, and since radio
and light are both forms of electromagnetic radiation, the two terms can be considered as equivalent.
Further details on optical multiplexing can be found, for example in [77].
9.2
Time Division Multiple Access
In time division multiple access (TDMA) systems the transmission period is divided into time slots, each
user being allowed to transmit or receive only within the slots assigned to him (it is assumed that slots
are cyclically repeated in time, that is, if the transmission period is divided into Kslots; the slot next to
the K-th user slot is again the ﬁrst user slot). See Figure 9.7.
Data transmission for users of a TDMA system is not continuous but occurs in bursts. Due to burst
transmission, synchronization overhead is required in TDMA systems. In addition, guard slots are
necessary to separate users. Generally, the complexity of TDMA mobile systems is higher compared
with that of the FDMA systems.
Frequency
Time
- user #1
- user #2
- user #3
- user #4
Figure 9.7
TDMA

360
Modulation and Coding Techniques in Wireless Communications
The practically achievable capacity of pure TDMA is limited by peak power. Peak power, which is the
maximal amount of power emitted by a transmitter, should not be dramatically higher than the average
transmitted power, since large power variation causes signal distortion due to ampliﬁer nonlinearity in
the transmitter. Small duration of time slots entails big power emission, which is impractical in battery
powered mobile devices. Also, in cellular environment the frequency re-use restricts the maximum
emitted power. For example in GSM the number of time slots is eight. Thus, in order to function in real
systems, TDMA must be combined with FDMA.
9.3
Code Division Multiple Access
Spread spectrum system is deﬁned in many sources (for example, [60, 78]) as a system, which employs
much wider bandwidth than required by the data rate to be transmitted. This deﬁnition, however, is
ambiguous. For example, in the GSM cellular standard users reserve the bandwidth of approximately
200 kHz to transmit data at a rate between 9.6-13 kbps, but GSM does not involve any spread spectrum
methods in the transmission of user data. Here, we use an older and more universal deﬁnition which can
be found for example in [16]. There a spread spectrum signal is deﬁned as a signal, whose time-frequency
product that is the product of signal duration, T, and its required bandwidth, W, is much greater than one
WT ≫1. For plain signals that are not employing spread spectrum methods, the relation in question is
WT ≈1.
In principle, spread spectrum systems have numerous merits when compared to systems utilizing plain
signals. These merits include good performance in a multipath environment, resistance to narrow-band
interference, privacy, possibility for exact time and location measurement, and good electromagnetic com-
patibility. The most important merit regarding this chapter is the possibility of employing CDMA as a mul-
tiple access method. In addition, in a cellular environment CDMA makes universal frequency re-use pos-
sible, which increases the capacity and enables the use of soft handover to enhance the performance [60].
Here the two most fundamental code division techniques will be considered: Direct-Sequence CDMA
(DS-CDMA) and Frequency Hopping CDMA (FH-CDMA). Hereinafter an overview of these two fun-
damental CDMA techniques will be given. In our treatment of CDMA methods we will for the most part
follow monographs by Zigangirov [58] and Ipatov [16].
9.3.1
Direct-Sequence CDMA
Let us assume for simplicity that Kactive users that are synchronized in transmitter-side with each other
are to transmit binary BPSK modulated sequences bk of length Lm. Before transmitting a signal each user
multiplies it by an individual code sequence of length Nc chips. Expression chip is used to distinguish
code sequence symbols from information bearing bits. Further we shall assume that the code sequence
is also BPSK modulated. Let us further assume that each signature is mapped into a sequence sk(t) of
Nc rectangular pulses of duration Tc and each element of the sequence bk (or equivalently a rectangular
pulse of duration T = NcTc) is modulated by sk (t). This operation is shown in Figure 9.8.
Note that the bandwidth of both the signature signal and the resulting signal W =
1
Tc is N times greater
than that of the original signal W0 = 1
T =
1
NTc . In other words by multiplying the signal that is to be sent
by a spreading sequence we are, so to say, spreading the signal spectrum over a larger bandwidth. Thus,
the device implementing the operation is called a spreader and that is why DS-CDMA is referred to as
spread spectrum communication technique.
The resulting (spread) signal is given by:
xk(t) =

Pk
Lm

i=1
bk(i)sk(t −iT)
(9.1)

Multiple Access Methods
361
Figure 9.8
Spreading in DS CDMA
where √Pk is energy per bit and the energy of spreading code sk(t) is normalized to unity. The transmitted
signals from all active users are then modulated and sent via the channel in use. General transmitter
structure is shown in Figure 9.9.
Let us consider coherent reception of the signal sent by the active user under consideration. Further on
we shall assume that both the relative delay of the user under consideration and the phase of the signal
from the user under consideration are known to the receiver. At the receiver end the resulting signal is
demodulated. The received signal is given by:
r(t) =
K

k=1

Pk
Lm

i=1
bk(i)sk(t −iT −τk) + n(t)
(9.2)
where τ k denotes random delay caused by impulse response of the channel hk(t). It is assumed for
simplicity that the channel does not cause any other distortions to the signal. CDMA system enables
utilization of multipath diversity with a so called RAKE received, which is presented in section 9.3.1.2.
The output of the demodulator of k-th user in i-th bit interval is given by:
b∗
k(i) =
(i+1)T

iT
r(t)sk(t)dt
=

Pkbk(i) +
K−1

l=1,l̸=k

Plbl(i)
(i+1)T

iT
sl (t + iT + τl) sk (t −iT ) dt



Multiple access interference
+
(i+1)T

iT
n(t)sk (t) dt



Noise component after
receiver ﬁltering
(9.3)

362
Modulation and Coding Techniques in Wireless Communications
Figure 9.9
DS-CDMA: Multiple access principle
and the estimated bit value for antipodal BPSK is:
ˆbk(i) = sign

b∗
k(i)
	
(9.4)
Note that the value of the component that is introduced by other users’ inﬂuence depends on the values of
cross-correlation function of the spreading sequences in use. Thus spreading sequences are to have small
cross-correlation values. Furthermore if multipath propagation is present, the value of the component
that is introduced by the inter-symbol interference depends on the values of the spreading sequence’s
autocorrelation function side lobes. Moreover it should be noted that since one spreading sequence can
be used by one user only the number of spreading sequences in the set in use denotes the number of
active users that can simultaneously transmit in the system under consideration. Thus it is desirable to
obtain sets of spreading sequences having lengths of great powers.
9.3.1.1
Spreading Code Design Aspects
Spreading code design is a problem of minimizing cross-correlation between sequences and minimizing
side lobes of code sequence autocorrelation function. In addition, the cross-correlation and autocor-
relation values should be known for the cases where perfect code sequences cannot be employed.
Comprehensive description on code sequence is found in [85].
If relative delays, τ l in (9.3), between different transmissions are known in the receiver, orthogonal
code sequences can be used, which completely eliminate multiple access interference (MAI). These
can be obtained for example with a Walsh-Hadamard construction [16]. In UMTS system orthogonal

Multiple Access Methods
363
code sequences are called OVSF codes [86] as they have been designed to support various data rates.
Unfortunately, total synchronism between active users is difﬁcult to obtain in practice especially in the
uplink. Also, the number of orthogonal code sequences is limited by K = Nc = WT. Increasing the
number of code sequences beyond code sequence length Nc is called overloading or oversaturation.
[16, 87, 88].
In asynchronous transmission mode and in the presence of multipath propagation, one of the most
popular design criteria is the minmax criterion (see [16]) based on lower bounds for the so-called total
squared correlation (TSC) of a set of sequences, which is given by:
cmax = max (cc, ca)
(9.5)
where cc is the maximum value of crosscorrelations and ca is the maximum value of autocorrelation
sidelobe of a certain set of sequences respectively. Let us consider a set of sequences in vector format
(that is, each chip is one element of a sequence vector) S = {s1, s2, . . . , sK} of length Nc satisfying the
condition |sk| = 1. Welch [53] derived the following lower bound for the TSC of such a set:
c2
max ≥K −1
K Nc
for
K > 1
(9.6)
(in fact the aforesaid bound is just a corollary of the theorem enunciated by Welch) for K ≫1 this bound
simpliﬁes to:
c2
max ≥1
Nc
(9.7)
Another bound has been proposed by Sidelnikov [46] for the sequences whose symbols were complex
q-th roots of unity for some integer q. For q = 2 and K ≥Nc
2 this bound simpliﬁes to:
c2
max ≥2
Nc
(9.8)
Thus, according to the minmax criteria, TSC of the set of spreading sequence is to approach the Welch
bound or at least Sidelnikov bound as Nc grows.
It should be noted that code sequences lying exactly on the Welch bound (Welch Bound Equality
(WBE) sequences) have the remarkable property that while they minimize the MAI power, they also
maximize the Shannon capacity [89]. However, if the number of active users changes in the system, the
capacity property is lost and all code sequences should be re-allocated. Therefore WBE sequences have
not been utilized in practical systems [90].
Gold sequences [13] and Kasami sequences [19] have been proposed for spreading in the uplink
transmission in modern CDMA standards (for example, Wideband CDMA [54]). The set of Gold
sequences of order n (their period is given by Nc = 2n −1) consists of K = 2n + 1 sequences and the
TSC of this set approaches Sidelnikov bound as n (and hence Nc) grows for all n ̸= 0 mod 2. The small
set of Kasami sequences order n (their period is given by Nc = 2n −1 and such sequences exist for all
n = 0 mod 2) consists of K = 2n/2 sequences and the TSC of this set approaches Welch bound as Nc
grows (note, however, that WCDMA uses the so-called large Kasami set [58] that includes both the Gold
sequences and the small set of Kasami sequences as subsets and consists of K = 2(3n)/2sequences (if
n = 0 mod 4) and of K = 2(3n)/2 + 2n/2 sequences (if n = 2 mod 4).) However, there are other sets of
sequences. For instance, Kamaletdinov [17] proposed to complement the small Kasami set with Bent-
functions, which results in almost twofold increase of the set cardinality K = 2(n/2)+1 and does not affect
the correlation properties (note, however, that this set exists for n = 0 mod 4only). A number of other
sets of sequences with good correlation properties has been constructed (see ([18], [25], [26]) including
non binary ones ([2], [5], [22], [24], [47]).

364
Modulation and Coding Techniques in Wireless Communications
9.3.1.2
CDMA Receiver Issues
The simplest form of the CDMA detector is the so-called conventional or single-user detector, which
simply calculates the sign of the decision statistic given by (9.4).
This detector works in the same manner as in the case of a single user transmission. Note that the
complexity of the single-user receiver is very low. However, it has certain drawbacks. A single-user
detector performs well if the power of noise (that is, background noise, other users’ interference and
inter symbol interference) is much smaller when compared to that of the signal. It has been stated
above that other users’ interference impact can be reduced by an appropriate spreading sequence choice.
However, whatever spreading sequences are used, as the number of active users grows, the impact of the
other users’ interference increases, which results in substantial degradation of the performance of the
single-user detector.
Let us now assume that the power of the signals from some users at the receiver side is sufﬁciently
greater than the power of the signals from other users (for example, because the former are much closer
to the receiver than the latter). In that case the interference caused by the signals with greater power
can completely swamp the signals with smaller power (the so-called near-far effect). The near-far effect
can be overcome by the power control introduction. However if the system load is great the single-user
detector performance will be poor due to other users’ interference impact.
In order to detect signals sent from the active users even in the case of asynchronous transmission
(that is, if other users’ interference is unavoidable due to spreading sequences’ non-orthogonality) a
detector is needed that uses all the information obtained from all the matched ﬁlters of all the users, that
is, a Multi-user detector (MUD). The optimal maximum likelihood multi-user detector (ML MUD) can
be derived by rewriting equations corresponding to the outputs of the channel matched ﬁlters in matrix
notation:
¯b∗= R ¯b + ¯n
(9.9)
where
R =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
ρ11 (0)
ρ12 (0)
· · ·
ρ1K (−2M)
ρ21 (0)
ρ22 (0)
ρ2K (−2M)
...
ρ11 (1)
ρ12 (1)
· · ·
ρ1K (−2M + 1)
...
...
ρK1 (2M)
ρK2 (2M)
· · ·
ρK K (0)
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
(9.10)
is the cross-correlation matrix. ML detection is a problem of choosing the transmitted sequence ¯y that
maximizes the conditional probability to obtain ¯b∗at the output of the receiver (the transmitted sequence
is chosen from a set of all possible binary sequences of length K, all sequences are considered to be
equiprobable):
ˆbk
OMD = arg max
¯y∈{−1;1}

p
 ¯b∗ ¯y
	
(9.11)
Since all components ¯n are normally distributed, (9.11) yields:
ˆbk
OMD = arg min
¯y∈{−1;1}

−¯yT ¯b∗+ 1
2 ¯yT R ¯y

(9.12)
Unfortunately, the complexity of this detector grows exponentially with the number of active users. To
reduce the complexity of detecting a number of sub-optimal MUD detectors has been proposed [51].
Suboptimal multiuser receivers aim to cause minimal decrease in the performance of the receiver
while providing simple implementation. Suboptimal receivers can be divided into linear [79, 80] and
non-linear [81–84] categories, where the latter is also referred to as decision-driven multiuser receiver.

Multiple Access Methods
365
Figure 9.10
RAKE receiver
Developments in the ﬁeld of multiuser detection have been studied profoundly in [51], which also
contains an extensive reference list on the subject.
Let us now make some additional notes on DS-CDMA in multipath channels. The output of the
multipath wireless channel is given by the sum of multiple shifted and attenuated replicas of the input
signal. Thus, some replicas may add destructively, which results in fading phenomenon. The RAKE
receiver decreases the fading impact by receiving replicas of the signal propagating via different paths
separately and combining them again in order to maximize the received energy emerging due to multipath
propagation. Thus, the RAKE receiver exploits multipath diversity. Let us assume that the transmitted
signals’ energies and the channel attenuation factors and delays of all paths for all the active users are
perfectly known to the receiver, that is, ideal channel and time offset estimation are maintained in the
system under consideration (note that although the transmitters of different users can be unsynchronized,
the transmitter and the receiver corresponding to each user should be synchronized.) Then the signal
can be received by the RAKE receiver (initially proposed in [42].) The RAKE receiver is shown in
Figure 9.10.
It is to be noted that in the general model that has been considered above it is assumed that the number
of paths via which a signal from a certain user propagates, is different for each user. Moreover it is
assumed that the number of paths is known to the receiver and the number of “ﬁngers” of the RAKE
receiver is equal to the number of paths. In actual life, however, the number of paths, via which the signal
propagates, is unknown to the receiver and furthermore in most real-life applications the actual number
of paths can be great, thus making the complexity of the receiver unacceptably high. That is why in
real-life systems all the RAKE receivers have the same number of “ﬁngers” (as a rule, RAKE receivers
with moderate number of “ﬁngers” are used).

366
Modulation and Coding Techniques in Wireless Communications
We have considered coherent reception of BPSK modulated signals since it is convenient for explaining
DS-CDMA basics. However, in DS-CDMA noncoherent reception (for example, in the downlink if
reduced ﬁrst-order Reed-Muller codes are used) and other modulation techniques (QPSK, DPSK) can
be applied (for a comprehensive survey on this matter see [58]).
We have also assumed that the transmitter and the receiver of the user under consideration are
synchronized. Moreover, it has been assumed that the receiver has complete information on the received
signal (that is, delays, attenuation factors and phase shifts of all the paths; signals energies, initial phases
and relative delays of all the signals). In real-life system synchronization and parameters estimation is a
very cumbersome task. However, the solution of these problems (primarily initial synchronization) is an
indispensable condition for using a DS-CDMA technique in real-life applications.
Potentially, DS-CDMA systems provide a larger radio channel capacity (that is, the number of active
users that can simultaneously transmit in the system under consideration) than ﬁxed access systems.
Moreover, DS-CDMA systems are more adaptable. As has been stated above, if a ﬁxed access system
is implemented in order to maximize channel use efﬁciency even a small change in the system load
results in reassignment of sub-bands or slots (or both if the system in question uses mixed strategy). In
DS-CDMA, however, a small change in system load results in only a slight change of performance of the
active users remaining in the system. However, even if the system load leaps (which can hardly happen in
real life applications) the DS-CDMA system is not to be reconﬁgured. In ﬁxed access methods the base
station is to fully control the transmission of all the active users, whereas in many random access systems
(for example, slotted ALOHA, see section 9.5) it is to provide feedback broadcasting the results of the
reception. In DS-CDMA, however, neither full control nor reception conﬁrmation is needed. Moreover,
in ﬁxed access systems the only way to change information transmission rate not requiring resource
reallocation is to change the parameters of the outer code in use. In DS- CDMA in addition to different
outer codes active users can use spreading sequences with different spreading factors or one user can
use several different spreading sequences simultaneously (however, the latter approach is better suited
for downlink transmission since in this case all the threads are synchronized).
9.3.2
Frequency-Hopping CDMA
As has been pointed out above, up-to-date real life systems are to be protected against unauthorized
users’ activity. Frequency-Hopping code division multiple access (FH-CDMA) is the fundamental MA
concept for solving the task. In conventional frequency hopping the entire available frequency band is
divided into Q sub-bands or sub-channels. Following the terminology used in [58] we shall further on
refer to the set of all sub-bands available to the user as a hopset. Each user’s transmitter chooses one of
the Q sub-bands (using a specialized sub-band numbers generator) and transmits a signal via the chosen
sub-band using a conventional modulation technique (for the most part FSK is used). In the multiple
access theory it is common to refer to each change of the sub-band in use as a hop. The process of
switching between the sub-bands (which can be also interpreted in terms of assigning sub-bands to the
users) is called frequency hopping. Note that the sequence of sub-bands numbers chosen by the aforesaid
generator of the user under consideration can be interpreted as a code sequence.
Let us denote the time duration between transmission of two consecutive symbols as T .The time
duration between hops is called hop duration or hopping period and is denoted by Tc. Frequency
hopping can be classiﬁed as slow or fast. Slow frequency hopping occurs if one or more q-ary symbols
are transmitted in the interval between frequency hops. Thus, slow frequency hopping implies that the
symbol rate 1/T exceeds the hopping rate 1/Tc. Fast frequency hopping occurs if there is more than one
frequency hop during one symbol transmission time.
Frequency hopping (assigning sub-bands to the users) can be either coordinated or uncoordinated.
Coordinated hopping implies that the code sequence information about other users must be used for the
choice of the code. Thus, this approach is suited only for the downlink transmission. The uncoordinated

Multiple Access Methods
367
frequency hopping has a number of advantages (it is well protected from unauthorized users’ activity, and
does not require sophisticated protocols, which are inevitable in a system with coordinated subcarrier
assignment) and is well suited for uplink transmission. We shall consider uplink transmission, and,
hence, uncoordinated subcarrier assignment strategies. In turn, the uncoordinated subcarrier assignment
strategies can be divided into two groups. Methods of the ﬁrst group exploit code sequences specially
designed for multiple access systems and satisfying certain requirements. However, designing a set of
sequences well suited for the uplink transmission in real life applications is a cumbersome task. The
second group includes methods where subcarrier numbers are assigned to users pseudorandomly. This
method is well suited for the uplink transmission.
Let us now consider the reception strategy. It is assumed that the receiver sub-band numbers generator
is to be synchronized with that of the transmitter. The latter means that with the reception of a symbol
the receiver sub-band numbers generator generates (that is, chooses from the set of numbers of all the
sub-bands available to the system subscribers) the number of the very sub-band that has been used by the
sender. The reception procedure boils down to two successive procedures: dehopping (that is, extracting
the narrowband signal from the subcarrier used by the corresponding user to transmit the symbol of
interest) and demodulating.
Since the time of introduction FH CDMA has been considered to be a fundamental technique for
designing multiple access systems invulnerable to unauthorized users’ activity. As has been mentioned
above frequency hopping can be either coordinated or uncoordinated and the uncoordinated frequency
hopping can use either special code sequences or pseudorandom code sequences. However, whatever
code sequences are used it is assumed the sequences in question are unknown to other users (authorized or
unauthorized, that is, nobody but the transmitter and the receiver) and they cannot obtain this information.
Thus, frequency hopping is well protected from unauthorized users’ activity. However, recently an MA
technique that is even better protected in this respect has been proposed. This technique will be considered
in section 9.4.3.
9.4
Advanced MA Methods
By combining the techniques considered above a whole range of conjoined MA methods can be obtained.
Next some proposed candidates for future MA solutions are presented brieﬂy.
9.4.1
Multicarrier CDMA
DS-CDMA is not just a multiple access technique but also a concept. It is well combined with multicarrier
transmission resulting in a whole complex of MA techniques. In MC-CDMA [6], [11], [57] a data stream
from each active user is divided into Np low rate parallel data streams each being spread by its own chip
of the Np-chip spreading sequence and sent via its own subcarrier. Thus, MC-CDMA is a combination of
multicarrier transmission (for example, by means of OFDMA) and spreading in the frequency domain.
However, this method is better suited for downlink transmission. In DS-MC-CDMA (T) [9] the sequence
to be transmitted is ﬁrst spread in the time domain and then transmitted via multiple subcarriers. Thus, it
can be thought of as classical DS-CDMA combined with multicarrier transmission. This technique can
be applied for uplink transmission. DS-MC-CDMA (TF) [56] combines spreading in the time domain
and spreading in the frequency domain. The approach has certain advantages over both MC-CDMA and
DS-CDMA (for example, the complexity of the receiver is lower.) In Multi Tone CDMA (MT-CDMA)
[50] the initial data stream is converted into a multiplicity of parallel streams each of the latter being
then spread in the time domain so that the spectrum of each subcarrier prior to spreading can satisfy
the orthogonality condition with the minimum frequency separation. Therefore the resulting spectrum
of each subcarrier no longer satisﬁes the orthogonality condition. Thus, the MT-CDMA suffers from
intersubcarrier overlapping. However, MT-CDMA can use longer codes (the length of the code depends

368
Modulation and Coding Techniques in Wireless Communications
on the number of available subcarriers), which results in radio channel capacity increase (compared to
conventional DS-CDMA) and enables better self-interference and MAI combating. For a more detailed
overview of multicarrier techniques the reader is encouraged to refer to [14].
9.4.2
Random OFDMA
Random OFDMA has been proposed in [34] and considered in more detail in [37]. Several modiﬁcations
were considered in [27–36]. In the basic random OFDMA system model, the channel in use is split into
N subchannels. Each user is assigned a set of n subchannels randomly chosen from the abovementioned
set of Nsubchannels. If several users overlap in certain subchannels these subchannels are considered to
be corrupt.
Note that within the scope of the scheme under consideration it is assumed that the set of subchannels
that are assigned to a certain user is not to change, that is, this set serves as a certain user’s personal
identiﬁer. In modern applications, N = 2m with mvarying from 12 to 14. Thus though in real-life
systems only approximately ˜N = [0, 8 · N] subchannels can be used, the number of available subchannels
amounts to several thousands and even for moderate values of n the number of possible sets is much
greater than the world population. Therefore it is assumed that the probability of a large number of
subchannels in two users’ sets overlapping is small. Moreover, it is assumed that the base station knows
which users transmit inside its cell (or can obtain this information by analyzing the channel output).
Thus, the base station knows all the corrupt subchannels. This information can be used for example, for
joint decoding (see [32]). Note, that within the scope of this scheme high order modulation alphabet
can be used, thus, enabling high data rates. Besides it is worth mentioning that the maximum number of
users in this model is “soft-limited”, as in CDMA.
On the basis of simulation results (obtained for the wireless channel model derived in [10] the
bandwidth 10 MHz and velocity of mobile users v=50 km/h) it is stated in [37] that the random OFDMA
system considered above can perform at least as well as GSM and USDC (IS-45).
A block scheme for the selection of subchannels and also the division into subgroups of sub-
channels was considered in [34]. Within the scope of the block selection scheme special sequences
¯a = (a1, a2, . . . , ak) have been searched with the property of any value bi j =

ai −a j
	
mod K(where
Kis the number of active users) appearing only once. Within the scope of the scheme in question each
active user is assigned a set of subchannels fi = (s + ai), where s is the number of the respective active
user. In this case only three outcomes are possible: two users may either not overlap, overlap in only one
subchannel or they may overlap in all the subchannels.
If in the block selection scheme the number n of subchannels per user is greater than k, the total number
Nof subchannels can be divided into Nsg = n
k subgroups. Each subgroup must have Ns > Ksubchannels,
so that the block selection scheme can still be applied in each subgroup.
In [34] it was shown that the block selection schemes are better for users having less corrupted
subchannels (best users), but these schemes have a larger number of corrupted subchannels for other
users than the completely random scheme for all N subchannels. The results for the random selection of
n subchannels from all the Nsubchannels N are very similar to the results with division into n subgroups
of Ns = n
k subchannels and random selection of only one subchannel in each subgroup.
A search of better selection schemes based on t-designs [15] and constant weight codes [3] has been
performed. However, as is stated in [37], “a t-design with given parameters interesting for the considered
system (large N, small n) does not exist.” Besides, the construction of very low rate constant weight
codes for the given parameters (great codeword length and very small weight) seems impossible.
However, if it is assumed that the central organization has no a priori knowledge about which users
will be active in each cell of the system, the best selection strategy is to select randomly n subchannels
with equal probability of selecting a given subchannel (p = 1
N ), according to the principle of maximum
entropy in statistics, as shown in [37].

Multiple Access Methods
369
9.4.3
DHA-FH-CDMA
The Dynamic Hopset Allocation FH-OFDMA (DHA-FH-OFDMA) has been introduced in [61] and
considered in more detail in [41]. Several modiﬁcations were considered in [38–40], [62]. Hereinafter
we shall consider one of the most promising versions of this concept that has been proposed: DHA-FH-
OFDMA with non-coherent threshold detection.
Let us now consider the basics of the scheme under consideration in more detail. Consider a multiple
access system where K active users transmit data to the base station through a channel split into Q
frequency subchannels; the transmission is asynchronous and uncoordinated (that is, neither of the users
has information about the others). It is assumed that all the users transmit binary q-tuples. In the course
of the transmission of each consecutive tuple the subchannel number generator assigned to the user under
consideration chooses (in a random manner) 2qsubchannels out of Q subchannels. Each tuple (or a part
of the tuple) to be transmitted by the aforesaid user within the frame is mapped into the number of the
subchannel, via which the signal is to be transmitted.
In what follows we shall assume that in the system under consideration optimal power control is used.
The latter means that the powers of all the signals from distinct users are equal at the receiver side. It
is assumed that the base station is equipped with the subchannel numbers generator synchronized with
that of the active user. The latter means that within the scope of the reception of the respective tuple, the
subchannel numbers generator of the base station produces the very same subchannel numbers vector
that has been generated by the subchannel numbers generator of the user under consideration . Note, that
this assumption is not restrictive since synchronized generators are an essential part of any conventional
FH-CDMA system. Thus, we simply replace a generator producing random numbers with a generator
producing random vectors.
Within the scope of the reception of a certain tuple sent by the user under consideration the receiver
measures the values of power for all the signals received through the subchannels chosen by the sub-
channel numbers generator of the user under consideration obtaining q statistics in that manner. Thus,
the receiver is to decide which subchannel has actually been used by the active user under consideration.
To do so the receiver compares each statistic value with a certain threshold (here we assume that the
value of the threshold has been chosen in advance and is not to be changed.) If threshold crossing is
detected in only one subchannel, the tuple corresponding to the subchannel where the threshold crossing
was registered is accepted. Otherwise, an erasure decision is made. If a tuple other than the transmitted
one is accepted, we say that an error has occurred. A block diagram of the transmission in a DHA FH
OFDMA system is shown in Figure 9.11.
In many respects DHA-FH-OFDMA is similar to FH-CDMA using FSK (let us from now on call it
FSK-FH-CDMA). The main difference between them is that no matter how the subchannels are assigned
to a certain active user in FSK-FH-CDMA distributed over the entire set of subchannels, the distribution
in question is known to the jammer or at least can be detected by him (we assume that all system
parameters, for example, total number of subchannels, modulation type, parameters of the outer code
and so on, are known to the jammer) and thus the jammer can determine which sub-band has been used
for transmission and send a signal (probably having great power) via another subchannel from the same
sub-band, causing in that way error or erasure (depending on the receiver strategy in use.) In contrast,
in DHA-FH-OFDMA the vector of subchannels that can be used by a certain user is known to the pair
“active user – base station” only. Thus, in the system under consideration it is almost impossible for
unauthorized users to block the transmission by intentionally sending signals via any of the subchannels
chosen by the subchannels number generator of the user under consideration but for the one that has
been used by the aforesaid user himself.
Let us now consider the process of the threshold reception procedure that has been analyzed above
in terms of two probabilities: probability of a false alarm (that is, probability to detect a signal in the
subchannel via which no signal has been transmitted) and probability of a miss (that is, probability
not to detect a signal that has been transmitted by the user under consideration via the subchannel in

370
Modulation and Coding Techniques in Wireless Communications
Figure 9.11
DHA-FH-OFDMA

Multiple Access Methods
371
question). Simulations show that for any threshold value that ensures a sufﬁciently low probability of
false alarm (say pF < 0.1) the probability of a miss decreases as the power of the signal transmitted
by an interfering user (either authorized (that is, any active user but for the one under consideration)
or unauthorized (that is, jammer)) increases (as compared to that of the signal transmitted by the user
under consideration). Thus, if the number of active users (either authorized or unauthorized) grows it is
the probability of erasure not the probability of error that increases (since error is possible if and only if
the signal transmitted via the subchannel used by the user under consideration has not been detected.)
Moreover, simulation results show that radio channel capacity of the DHA-FH-OFDMA system amounts
to several hundreds of users (if optimal power control is maintained), which is sufﬁciently greater than
that of the conventional FH systems.
9.5
Random Access Multiple Access Methods
As has been mentioned above, in the system where each active user is allocated a disjoint portion of the
time-frequency resource each user intending to enter the MA system or to exit it is to state the intention
in advance. If the user in question is an active user (that is, has been transmitting data in the system under
consideration) the respective uplink and downlink channels can be used (however, in this case a certain
part of a frame is to be assigned to control information, which results in rate decrease both in uplink
and downlink channels). Assume, however, that the user in question has not yet transmitted data in the
system under consideration and wants to enter the system. To declare thereof a special MA method is
needed, that is, a method enabling any user to use a certain part of a certain time-frequency resource (or
at least try to do so) as soon as he needs to do so, that is, as soon as he has the data to transmit. Such a
method can also be made use of in ad hoc networks since in ad hoc networks there is no central node
that can assign sub-channels and the number of users (and, respectively, the number of point-to-point
sub-channels that can potentially be requested) is unbounded.
This concept is called random access or free-to-all access since all the users try to communicate with the
base station (or in the case of an ad hoc network with each other) acting pursuant to a certain statistical
strategy. Thus messages from different users may occasionally collide, which results in information
losses. In random access systems it is customary to use retransmission to solve this problem. Thus some
sort of a feedback is needed (to inform the user, who has transmitted a message, that the transmission has
failed) as well as a special strategy enabling the user in question to decide at what instant he is to make
another attempt. Hereinafter a brief overview of random access methods will be given. In our treatment
of random access methods we will for the most part follow the papers by Gallager [12] and Kleinrock
[20].
The simplest random access technique is the so called slotted ALOHA ([43]). Let us consider uplink
transmission, that is, a set of users each trying to transmit a message (hereinafter following the term
used in [12] we shall refer to it as packet). In classic slotted ALOHA the entire time interval, within
which the channel is available for uplink transmission (theoretically inﬁnite), is divided into slots, packet
transmission being allowed only within a certain slot. Thus, if a packet is generated in the middle of a
slot it is to wait until the next slot boundary before it is transmitted. Moreover, it is assumed that:
(a) all the users’ transmitters are synchronized;
(b) messages are of ﬁxed length and they ﬁt exactly one time slots, that is, a message is to be neither
longer nor shorter (note that this assumption precludes both the possibility of sending short packets
to make reservations for long packets and the possibility of carrier sensing, which is to be discussed
later);
(c) if more than one transmitter sends a packet in a slot (this situation is referred to as collision) the
receiver gets no information about the contents or origins of the transmitted packets;

372
Modulation and Coding Techniques in Wireless Communications
Figure 9.12
Slotted ALOHA
(d) whatever the result of the reception from a certain slot (either no packets have been transmitted, one
packet has been transmitted or more than one packet has been transmitted in the slot in question,
that is, a collision occurred), each user is informed about it by the beginning of the next slot, that is,
it is assumed that there is an immediate error-free feedback from the base station to all the users and
the receiver can distinguish between an idle slot and a collision.
If a collision occurs all packets involved are backlogged and are to be retransmitted in the next slot with
a certain ﬁxed probability p(1 > p > 0). An example of the transmission in a slotted ALOHA system
is shown in Figure 9.12.
Let us assume that the number of users is K, the probability that a user will transmit a packet in
some slot is Gi and Si(Si < Gi) is the probability of a successful transmission (that is, the probability
of the fact that collision hasn’t occurred.) Assume further that all K users operate independently and the
probability of the users’ transmission in the current slot does not depend on the users’ transmissions in
the previous slot. Then the normalized channel trafﬁc is given by:
G =
K

i=1
Gi
(9.13)
and normalized channel throughput S (expected number of successful packets per packet transmission
time) is given by:
S =
K

i=1
Si
(9.14)
The probability that the packet from the ith user will not collide with the packets from other users is
given by:
Qi =
K

j=1, j̸=i

1 −G j
	
(9.15)
Note that Si = QiGi

Multiple Access Methods
373
Let us assume that all the users are identical, that is:
Si = S
K
Gi = G
K
Then:
S = G

1 −G
K
K−1
(9.16)
then if K →∞we obtain:
S (G) = Ge−G
(9.17)
note that:
Smax = max
G
S (G) = 1
e
(9.18)
and Gmax = arg

max
G
S (G)

= 1
Note that this result has been obtained under the condition K →∞.
Let us consider the abovementioned assumptions in more detail. Primarily it is to be noted that it has
been assumed that a packet can be backlogged only due to collision, that is, a packet being transmitted
is not affected by either background noise or channel distortion. However, in real-life applications the
transmitted data will also be corrupted by the background noise (in the case of a satellite communication
system) or both background noise and fading (for example, in the case of a cellular system). Thus, it is
evident that forward error correction coding (FEC) is to be applied. However, distinguishing between an
idle slot and a collision (see assumption d.) remains a cumbersome problem (this problem can hardly
be solved by applying the existing error correcting codes. Non-coherent threshold decision seems more
promising but if the SNR is low the probability of a wrong decision is still substantial).
It is worth mentioning that under some conditions the packet arriving with the largest power at the
receiver could be received correctly even in the presence of other packets with lower power, that is, not
all packets, which collide on a communications channel, will be lost. Packets attenuated due to channel
properties (for example, fading, shadowing) may not be strong enough to corrupt packets with higher
power [7, 23]. In communication theory the ability of a base station to receive correctly one packet
when two or more packets arrive simultaneously is often referred to as capture effect. It is to be noted
that we have not considered capture effect within the scope of our consideration. Though the problem
of capture effect impact on random access techniques performance falls out of the ﬁeld of the present
chapter and will not be considered here (for more information on the subject, please, refer to [43]) we
can still conclude that assumption c. is unrealistic.
Within the scope of the foregoing consideration of slotted ALOHA an assumption of immediate
feedback has been used. The assumption of immediate feedback is unrealistic, but as is stated in [12],
“collision resolution algorithms can usually be modiﬁed to deal with delayed feedback” (collision resolu-
tion algorithms are to be discussed later.) Finally let us note that slotted ALOHA requires synchronization
(see assumption a.)
Hereinabove it has been shown that in slotted ALOHA if all the users operate independently, the
probability of the users’ transmission in the current slot does not depend on the users’ transmissions in
the previous slot and all the users are identical, the maximum throughput is Smax = max
G
S (G) = 1
e . In
fact this value is the upper bound for classical slotted ALOHA, that is, the system where retransmission
of the backlogged packet depends only on the probability of retransmission (0 < p < 1). However, the
maximum throughput can be further increased if the collision resolution algorithms, for example, the tree
algorithms [4] are used. Within the scope of the tree algorithm it is assumed that the system alternates
between two modes, the “normal” mode and the “collision resolution” mode. When a collision occurs

374
Modulation and Coding Techniques in Wireless Communications
in some slot all the users go into the “collision resolution” mode. This means that all the users that were
not involved in the collision (that is, have not transmitted data in the preceding slot) are not allowed
to transmit before the collision resolution. As for the users who were involved in the collision they are
all to select (independently) one of the two subsets with equal probability (this procedure is sometimes
referred to as “coin ﬂipping”). In the slot following the collision, the users who got into the ﬁrst subset
try to transmit. If another collision occurs, the ﬁrst subset is further split into two smaller subsets. The
ﬁrst of these subsets is transmitted in the next slot, and if this transmission is successful or idle (that
is, the ﬁrst submit happens to be empty), the second of the subsets is transmitted in the following slot.
Thus, whenever the transmission of a subset results in a collision, the subset is split into two. So the split
subsets form a tree. When all subsets have been exhausted all the users return to the “normal mode”. This
approach has been reﬁned by eliminating the “normal mode” (the idea was that if a number of time slots
have been spent to resolve the collision it is very likely that within the respective period a number of users
ready to transmit packets has arrived; thus it is most likely that the system will return into the “collision
resolution” mode after the next slot.) The resulting algorithm has been further improved by Messy who
noted that if a certain subset had been split the number of elements in this set was certainly more than one.
Thus if the ﬁrst of the two subsets obtained by splitting the aforesaid subset happens to be empty we can
conclude that the second slot contains more than one element. And we need not spend a slot to conﬁrm it.
Instead we can proceed directly to resolving collision in the second subset. Further improvements ([49])
resulted in the introduction of the ﬁrst-come ﬁrst-served (FCFS) algorithm (Tzybakov and Mikhailov
showed in [49] that the optimized version of this algorithm yields Smax = 0, 4878).
In pure ALOHA (unslotted ALOHA) any user is allowed to start transmission at an arbitrary moment.
Historically unslotted ALOHA was the ﬁrst random access technique that has been developed [1]. In the
original pure ALOHA system it has been assumed that if several packets overlap (say packet A overlaps
with packet B, which also overlaps with packet C as is shown in Figure 9.13) all packets involved are
backlogged and are to be retransmitted at the end of the delay period, its duration being a random value
τ, its distribution being given by:
p(τ) = αe−ατ
(9.19)
Let Tp be the packet duration. Due to the backoff algorithm that has been considered above, aggregate
trafﬁc arrival that results from new arrivals and retransmissions has a Poisson distribution with an average
number of arrivals of G
X . Collision may occur if at least one packet arrives within the time interval equal
Figure 9.13
Unslotted ALOHA

Multiple Access Methods
375
to 2Tp. The probability of the arrival of k packets within this interval is given by:
p (k) = (2G)k
k!
e−2G
(9.20)
Thus a normalized channel throughput is given by:
S = G · p (0) = G · e−2G
(9.21)
and
Smax = max
G
S (G) = 1
2e
(9.22)
that is, the maximum throughput of unslotted ALOHA is two times smaller than that of the slotted
one. On the other hand, unslotted ALOHA does not need synchronization, that is, it is much easier to
implement. Moreover, it is to be noted that in unslotted ALOHA packets can be of arbitrary length.
In ALOHA-based systems an active user who has sent a packet via the channel in use can be notiﬁed
that the aforesaid channel is occupied only if the packet in question has been backlogged. Carrier Sensing
Multiple Access (CSMA) initially proposed in [21] uses a different approach: it is implied that before
sending a packet via the channel in use the user is to sense the medium in order to ﬁnd out if some user is
currently transmitting via the channel in use. If the answer is positive (that is, the channel is occupied),
the user in question is not allowed to transmit. CSMA is well suited for ad hoc networks. Note that within
the scope of this approach it is implied that any user can receive signals sent by any other active user.
However, this is not always the case. Assume that a certain user B cannot receive information from slot
A (for example, since signal attenuation is too big and user B simply cannot detect a signal from user
A). Thus, he will consider the channel in use to be idle even within the scope of transmission of a signal
sent by A and can transmit a packet (transmission protocols are to be considered later) causing, thus,
a collision. This problem is known as the hidden node problem. However, for the sake of simplicity in
what follows we shall not consider the hidden node problem, that is, we shall consider an ad hoc network
where each user can receive messages sent by any other user if no collision has occurred; and, thus,
carrier sensing always enables the user in question to obtain precise information on the medium state.
Like ALOHA CSMA can be either slotted or unslotted. Hereinafter for the sake of simplicity we shall
consider slotted CSMA systems. As has been stated above in CSMA each user senses the channel until
it is idle. In 1-persistent CSMA each user that is ready to transmit does so as soon as the channel is
found idle. Thus if two or more users were ready to transmit before the channel in use became available
a collision would occur. Moreover, since all these users will constantly transmit that results in constant
collision. In non-persistent CSMA (np-CSMA) the user senses the medium ﬁrst. If it is idle the user is to
transmit his packet. Otherwise the user in question is to choose a random time period (in the slotted case
a random number of slots), wait until this period is over and repeat the preceding steps. A random backoff
period results in sufﬁcient collision probability reduction. However, idle periods that are unavoidable in
this case lead to efﬁciency degradation. In p-persistent CSMA a random strategy is applied, that is, if the
channel becomes available each user that is ready to transmit is to do so with probability p or defer his
transmission by one slot with probability1 −p. If the transmission has been deferred by one slot the user
under consideration is to repeat the preceding steps at the end of this slot. This technique is considered
to be a good tradeoff between 1-persistent CSMA and non-persistent CSMA. However, in wireless ad
hoc networks it is common to apply CSMA with collision avoidance (CSMA\CA), which is a slightly
modiﬁed version of non-persistent CSMA. Note that like other CSMA techniques applied in wireless
communications this method only tries to avoid collisions. However, collisions can still occur. Thus, like
ALOHA, CSMA needs some sort of feedback. Therefore in CSMA\CA the receiver is to transmit a
special acknowledgment message after each transmission (the latter is to be transmitted without sensing
the carrier in a special slot, in which no one but the recipient is to transmit.) If the sender fails to receive
an acknowledgment message retransmission is applied.

376
Modulation and Coding Techniques in Wireless Communications
CSMA is known to have a better throughput than ALOHA. However, both concepts are very vulnerable
to unauthorized users’ activity.
9.6
Conclusions
In this chapter several fundamental multiple access techniques have been considered, namely the ﬁxed
access methods, the random access and the code division methods. Also, in order to give some new
insights into the ﬁeld of multiple access this consideration has been complemented by a short survey
of several recently proposed multiple access techniques that can be considered candidates for future
implementation in real-life systems.
References
[1] Abramson, N., The ALOHA System - Another Alternative for Computer Communications, pp. 281–285 in
Proceedings of the Fall Joint Computer Conference, 1970.
[2] Boztas, S., Hammons, Jr. A. R., and Kumar, P. V., 4-phase sequences with near-optimum correlation properties,
IEEE Trans. Inform. Theory, vol. 38, pp. 1101–1113, May 1992.
[3] Brouwer, A.E., Shearer, J.B., Sloane, N.J.A., Smith, W.D., A New Table of Constant WeightCodes, IEEE Trans.
on Information Theory, vol. 36, no. 6, pp. 1334–1380, Nov. 1990.
[4] Capetanakis, J. I., The multiple access broadcast channel: Protocol and capacity considerations, Ph.D. disser-
tation Dept. of Elec. Eng., Mass. Inst. of Tech., Cambridge, MA, Aug. 1977.
[5] Chen, C-C., Yao, K., Umeno, K., and Biglieri, E. Design of Spread-Spectrum Sequences Using Chaotic Dy-
namical Systems and Ergodic Theory IEEE Transactions on circuits and systems—I: Fundamental theory and
applications, vol. 48, no. 9, September 2001.
[6] Chouly, A., Brajal, A., Jourdan, S., Orthogonal Multicarrier Techniques Applied to Direct Sequence Spread
Spectrum CDMA Systems, Proc. of IEEE GLOBECOM ‘93, Houston, USA, Nov. 1993, pp. 1723–1728.
[7] Cidon, I., Kodesh, H., Sidi, M., Erasure, Capture, and Random Power Level Selection in Multiple-Access
Systems, IEEE Trans. on Communications, vol. 36, no. 3, pp. 263–271, March 1988.
[8] Cosovic, I., Schnell, M., Time Division Duplex MC-CDMA for Next Generation Mobile Radio Systems In proc
of the 10th Telecommunications forum TELFOR’2002, Belgrade, Yugoslavia, Nov. 26–28, 2002.
[9] DaSilva, V. M., Sousa, E. S., Performance of Orthogonal CDMA Codes for Quasi-Synchronous Communication
Systems, Proc. of IEEE ICUPC “93, Ottawa, Canada, Oct. 1993, pp. 995–999.
[10] EC-COST 207, Final report, Digital land mobile radio communications, Commission of the European Com-
munities, EUR 12160 EN, Brussels, 1989.
[11] Fazel, K. and Papke, L., On the Performance of Convolutionally-Coded CDMA/OFDM for Mobile Communi-
cations Systems, in Proc. IEEE PIMRC’93, (Yokohama, Japan), pp. 468–472, September 1993.
[12] Gallager, R., A Perspective on Multiaccess Channels IEEE Trans. Information Theory vol. it-31, no. 2, March
1985.
[13] Gold, R., Optimal binary sequences for spread spectrum multiplexing, IEEE Trans. Information Theory,
vol. IT-13, 1967. pp. 619–621.
[14] Hara, S., Prasad, R., Overview of Multicarrier CDMA IEEE Commun. Mag., Dec. 1997, pp. 126–133.
[15] Hall, Jr. M., Combinatorial Theory Blaisdell, Waltham, Mass., 1967.
[16] Ipatov, V. P., Spread spectrum and CDMA: principles and applications. John Wiley and Sons, 2005.
[17] Kamaletdinov, B. Zh. An Optimal Ensemble of Binary Sequences Based on the Union of the Ensembles of
Kasami and Bent-Function Sequences Problems of Information Transmission vol. 24, no. 2, pp. 167–169,
1988.
[18] Kamaletdinov, B. Zh. Optimal Sets of Binary Sequences Problems of Information Transmission pp. vol. 32, no.
2, 171–175, 1996.
[19] Kasami, T., Weight distribution formula for some class of cyclic codes, Coordinated Science Laboratory,
University of Illionos, Urbana, Technical Report R-285 (AD632574), 1966.
[20] Kleinrock, L. On Queueing Problems in Random-Access Communications IEEE Transactions on Information
Theory, vol. it-31, No. 2, March 1985.

Multiple Access Methods
377
[21] Kleinrock, L., Tobagi, F.A., Packet switching in radio channels: Part I - Carrier Sense Multiple-Access modes
and their throughput-delay characteristics, IEEE Trans. on Communications, vol. 23, no. 12, pp. 1400–
1416, Dec. 1975.
[22] Kumar, P. V., Moreno, O., Prime-phase sequences with periodic correlation properties better than binary
sequences, IEEE Trans. Inform. Theory, vol. 37, pp. 603–616, May 1991.
[23] Linnartz, J.P., Prasad, R., Near-Far Effect on Slotted Aloha Channels with Shadowing and Capture, pp. 809–
813 in Proceedings IEEE Vehicular Technology Conference, 1989.
[24] Mazzini, G., Setti, G., and Rovatti, R. Chaotic Complex Spreading Sequences for Asynchronous DS-CDMA
IEEE Transactions on circuits and systems—I: Fundamental theory and applications, vol. 44, no. 10, October
1997.
[25] No, J. S., Kumar, P. V., A new family of binary pseudorandom sequences having optimal periodic correlation
properties and large linear span, IEEE Trans. Inform. Theory, vol. IT-35, No. 2, pp. 311–319, Mar. 1989.
[26] No, J. S., Yang, K., Chung, H., Song, H.-Y., New Construction for Families of Binary Sequences with Optimal
Correlation Properties, IEEE Transactions on Information Theory, vol. 43, No. 5, September 1997.
[27] Nogueroles, R., On multiple access strategies for multicarrier transmission, Winter School on Coding and
Information Theory, M¨olle, December 15–18, 1996.
[28] Nogueroles, R., On Multiple Access Strategies for Multicarrier Transmission in Mobile Radio Systems, Technical
Report ITUU-TR-1997/02, Abt. Informationstechnik, Universit¨at Ulm, February 1997.
[29] Nogueroles, R., Bossert, M. Comparison of multicarrier FDMA strategies for mobile radio systems, pp. 143–148
in Proceedings IEEE Communications Society Chapter Germany Workshop Kommunikationstechnik, Schloβ
Reisensburg, January 29–31, 1997.
[30] Nogueroles, R., Bossert, M., Donder, A., Zyablov, V. Improved Performance of a Random OFDMA Mobile
Communication System, pp. 2502–2506 in Proceedings 48th IEEE Vehicular Technology Conference VTC’98,
Ottawa, Ontario, Canada, May 18–21, 1998.
[31] Nogueroles, R., Bossert, M., Donder, A., Zyablov, V. Performance of a Random OFDMA System for Mobile
Communications, pp. 37–43 in Proceedings 1998 International Zurich Seminar on Broadband Communications,
Switzerland, February 17–19, 1998.
[32] Nogueroles, R., Bossert, M., Zyablov, V. Capacity of MC-FDMA in Mobile Communications, pp. 110–114
in Proceedings 8th IEEE International Symposium on Personal Indoor and Mobile Radio Communications,
Helsinki, Finland, September 1–4, 1997.
[33] Nogueroles, R., Bossert, M., Zyablov, V. Estimation of user capacity in mobile radio multiple access systems
based on multicarrier modulation, pp. 282–283 in Proceedings 4th Int. Symposium on Comm. Theory &
Applications, U.K., July 13–18, 1997.
[34] Nogueroles, R., Bossert, M., Zyablov, V. Multiple access and collision problem in multifrequency transmission
systems, pp. 225–230 in Proceedings Fifth International Workshop on Algebraic and Combinatorial Coding
Theory, Bulgaria, June 1–7, 1996.
[35] Nogueroles, R., Bossert, M., Zyablov, V. Performance of a Novel Mobile Communication System based on
Random MC-FDMA, Proceedings 2. OFDM-Fachgespr¨ach, Braunschweig, September 16–17, 1997.
[36] Nogueroles, R., Bossert, M., Zyablov, V. Random Access in an OFDMA System, pp. 20–25 in Proceedings
Workshop Advances on Multiuser Communications, DLR Oberpfaffenhofen, February 19–20, 1998.
[37] Nogueroles, R., Performance Considerations of OFDMA Radio Communication Systems”, PhD Thesis, Uni-
versit¨at Ulm, Ulm, 1998.
[38] Osipov, D. On the performance of a FH-MC-CDMA system. In Proc. of the 2nd International Workshop
on Multiple Access Communications (MACOM 2009) afﬁliated with the IEEE International Conference on
Communications 2009 (ICC 2009) Dresden, Germany, 14–18 June, 2009.
[39] Osipov, D. On the probabilistic description of a FH- OFDMA with a MAXP receiver In Proc. of the XII-th
International Symposium on Problems of Redundancy in Information and Control Systems, St.-Petersburg,
26–30 May, 2009.
[40] Osipov, D. S. Asynchronous OFDMA system with woven turbo coded modulation. In Proc. of the Interna-
tional Workshop on Multiple Access Communications (MACOM 2008) afﬁliated with the 15-th International
Conference on Telecommunications (ICT 2008), St.-Petersburg, June 16–19, 2008.
[41] Osipov, D. Multiple access with concatenated coding (in Russian) Ph. D. Thesis, IITP RAS, Moscow, 2008.
[42] Price, R., Green, P. E., A communication technique for multipath channels, Proc. IRE, vol. 46, pp. 555–570.
[43] Roberts, L.G., ALOHA Packet System with and without Slots and Capture, Computer Communications Review,
vol. 5, no. 2, pp. 28–42, April 1975.

378
Modulation and Coding Techniques in Wireless Communications
[44] Ruiz, A., Ciofﬁ, J.M., Kasturia, S., Discrete multiple tone modulation with coset coding for the spectrally shaped
channel, IEEE Trans. on Communications, vol. 40, no. 6, pp. 1012–1029, June 1992.
[45] Sarwate, D. V., Bounds on crosscorrelation and autocorrelation of sequences, IEEE Trans. Inform. Theory, vol.
IT-25, pp. 720–724, Nov. 1979.
[46] Sidelnikov, V. M., On mutual correlation of sequences,” Sov. Math.–Dokl., vol. 12, pp. 197–201, 1971.
[47] Sol’e, P., A quaternary cyclic code and a family of quadriphase sequences with low correlation properties, In
Coding Theory and Applications, Lecture Notes in Computer Science vol. 388. pp.193–201, 189.
[48] Sun, F.-W., Leib, H., Optimal Phases for a Family of Quadriphase CDMA Sequences IEEE Transactions on
Information Theory, vol. 43, no. 4, July 1997 pp.1205–1217.
[49] Tsybakov, B. S., Mikhailov, V. A., Random multiple access of packets: Part and try algorithm, Problems of
Information Transmission, vol. 16, no. 4, 1980., pp. 65–79.
[50] Vandendorpe, L., Multitone Spread Spectrum Multiple Access Communications System in a Multipath Rician
Fading Channel, IEEE Trans. Vehic. Tech., vol. 44, no. 2, 1995, pp. 327–337.
[51] Verdu, S. Multiuser detection, Cambridge University Press, 1998.
[52] Weinstein, S.B., Ebert, P.M., Data Transmission by Frequency-Division Multiplexing Using the Discrete Fourier
Transform, IEEE Trans. on Communication Technology, vol. 19, no. 5, pp. 628–634, October 1971.
[53] Welch, L. R., Lower bounds on the maximum cross correlation of signals, IEEE Trans. Inform. Theory,
vol. IT-20, pp. 397–399, May 1974.
[54] WCDMA for UMTS, Radio Access for Third Generation Mobile Communications. Second Edition. ed. H. Holma,
A. Toskala, New York, Wiley, 2002.
[55] Yang, L. L., Hua, W., Hanzo, L., Multiuser Detection in Multicarrier CDMA Systems Employing Both Time-
Domain and Frequency-Domain Spreading, In Proceedings of IEEE PIMRC’2003, Beijing China, 7–10 Septem-
ber, 2003.
[56] Yang, L-L., Hanzo, L., Multicarrier DS-CDMA: A Multiple Access scheme for ubiquitous broadband wireless
communications IEEE Communications Magazine, pp. 116–124, October 2003.
[57] Yee, N., Linnartz, J. P., Fettweis, G., Multi-carrier CDMA in Indoor Wireless Radio Networks, in Proc. IEEE
PIMRC’93, (Yokohama, Japan), pp. 109–113, September 1993.
[58] Zigangirov, K. Sh. Theory of Code Division Multiple Access Communication, IEEE Press, Piscataway, New
Jersey, 2004.
[59] Zimmerman, M.S., Kirsch, A.L., The AN/GSC-10 (KATHRYN) Variable Rate Data Modem for HF Radio, IEEE
Trans. on Communication Technology, vol. 15, no. 2, pp. 197–204, April 1967.
[60] Viterbi, A. J. CDMA - Principles of Spread Spectrum Communication. Addison-Wesley, 1995.
[61] Zyablov, V. V., Osipov, D. S., On the optimum choice of a threshold in a frequency hopping OFDMA system.
Problems of Information Transmission, Vol. 44, No. 2, pp. 91–99, 2008.
[62] Zyablov, V. V., Osipov, D. S., Equidistant code-based signal-code construction in multiple-access system with
concatenated coding (in Russian) In Proc. of the conference “Information Technologies and Systems” ITAS 09
Bekasovo, 15-18 December, 2009. pp. 145–151.
[63] Shannon, C.E., A mathematical theory of communication, Bell Systems Technical Journal, vol. 27, pp. 379–
423, 623–656, July–October 1948.
[64] Gaudenzi, R., Elia, C., Viola, R., Band-limited quasi-synchronous CDMA: A novel satellite access technique
for mobile and personal communications systems, IEEE Journal on Selected Areas on Communication, vol. 10,
no. 2, pp. 328–343, February 1992.
[65] Kajiwara, A., Nakagawa, M., Microcellular CDMA system with a linear multiuser interference canceller, IEEE
Journal on Selected Areas on Communication, vol. 12, no. 4, pp. 605–611, May 1994.
[66] Omura, J., Yang, P., Spread spectrum S-CDMA for personal communication services, in Proc. MILCOM 1992,
San Diego, United States, October 1992.
[67] DaSilva, V. and Sousa, E. Multicarrier orthogonal CDMA signals for quasi-synchronous communication sys-
tems, IEEE Journal on Selected Areas on Communication, vol. 12, no. 5, pp. 842–852, June 1994.
[68] Suehiro, N. A signal design without co-channel interference for approximately synchronized CDMA systems,
IEEE Journal on Selected Areas on Communication, vol. 12, no. 5, pp. 837–841, June 1994.
[69] Cover, T. M., Thomas, J. A. Elements of Information Theory, Wiley, New York, 1990.
[70] Goldsmith, A. Wireless Communications, Cambridge University Press, New York, 2005.
[71] M¨unz, G., Pﬂetschinger, S., Speidel, J. An Efﬁcient Waterﬁlling Algorithm for Multiple Access OFDM, Proc.
IEEE Global Telecommunications Conference 2002 (Globecom ‘02), Taipei, Taiwan, November 2002.

Multiple Access Methods
379
[72] Yu, W. Multiuser Water-ﬁlling in the Presence of Crosstalk, Information Theory and Applications Workshop,
San Diego, CA, U.S.A. Jan-Feb., 2007.
[73] Papandreou, N., Antonakopoulos, T. A New Computationally Efﬁcient Discrete Bit-Loading Algorithm for DMT
Applications, IEEE Transactions on Communications,vol. 53, no. 5, May 2005.
[74] Pietrzyk, S. OFDMA for Broadband Wireless Access, Artech House Publishers, London, 2006.
[75] IEEE, Air Interface for Fixed and Mobile Broadband Wireless Access Systems, IEEE Standard, P802.16e/D12,
February, 2005.
[76] Myung, H. G., Lim, J., Goodman, D. J. Single Carrier FDMA for Uplink Wireless Transmission, IEEE Vehicular
Technology Magazine, September 2006.
[77] Cheung, N.K., Nosu, K., Winzer, G. Guest Editorial / Dense Wavelength Division Multiplexing Techniques for
High Capacity and Multiple Access Communication Systems, IEEE Journal on Selected Areas in Communica-
tions, vol. 8 no. 6, August 1990.
[78] Sklar, B. Digital Communications, 2nd ed. Prentice Hall, 2001.
[79] Lupas, R. and Verdu, S. Linear multiuser detectors for synchronous code-division multiple-access channels,
IEEE Transactions on Information Theory, vol. 35, no. 1, pp. 123–136, January 1989.
[80] Madhow, U. and Honig, M. MMSE interference suppression for direct-sequence spread-spectrum CDMA, IEEE
Transactions on Communications, vol. 42, no. 12, pp. 3178–3188, December 1994.
[81] Varanasi, M. and Aazhang, B. Near-optimum detection in synchronous code-division multiple access systems,
IEEE Transactions on Communications, vol. 39, no. 5, pp. 725–736, May 1991.
[82] Xie, Z., Short, R. and Rushfort, C. A family of suboptimum detectors for coherent multiuser communication,
IEEE Journal on Selected Areas on Communication, vol. 8, no. 4, pp. 683–690, May 1990.
[83] Duel-Hallen, A. A family of multiuser decision-feedback detectors for asynchronous code-division multiple-
access channels, IEEE Transactions on Communications, vol. 43, no. 2, pp. 421–434, February 1995.
[84] Patel, P. and Holtzman, J. Analysis of a simple successive interference cancellation scheme in a DS/CDMA
system, IEEE Journal on Selected Areas on Communication, vol. 12, no. 5, pp. 796–807, June 1994.
[85] Fan, P. and Darnell, M. Sequence Design for Communication Applications. Wiley, 1996.
[86] Walke, B., Seidenberg, P. and Althoff, M. P. UMTS: The Fundamentals. Wiley, 2003.
[87] Paavola, J. Signature Ensembles and Receiver Structures for Oversaturated Synchronous DS-CDMA Systems,
Ph.D. dissertation, University of Turku, 2007.
[88] Vanhaverbeke, F. Digital communication through overloaded channels, Ph.D. dissertation, University of Ghent,
2005.
[89] Rupf, M. and Massey, J. L. Optimum sequence multisets for synchronous code-division multiple-access chan-
nels,” IEEE Transactions on Information Theory, vol. 40, no. 4, pp. 1261–1266, July 1994.
[90] Kapur, A., Varanasi, M. and Mullis, C. On the limitation of generalized Welch-Bound equality signals, IEEE
Transactions on Information Theory, vol. 51, no. 6, pp. 2220–2224, June 2005.


10
Standardization in IEEE
802.11, 802.16
Tuomas Laine1, Zexian Li1, Andrei Malkov1, and Prabodh Varshney2
1Nokia Corporation, Finland
2Nokia, USA
10.1
IEEE Overview
The IEEE- Standard Association’s involvement in electrical standards dates back to 1890, when the
American Institute of Electrical Engineers (AIEE) proposed a recommendation for the practical unit of
self-induction. As a pioneer in voluntary electrical and information technology standards activity, IEEE
became a founding member of American National Standards Institute (ANSI) in 1918.
In 1963, when the AIEE merged with the Institute of Radio Engineers (IRE) to form the IEEE, a formal
standards body was established to support standards development. Envisioning the expanded role that
standards were to play in the future and their impact on industry, IEEE formed its ﬁrst Standards Board
in 1973. As a standards body, the IEEE-Standard Association (IEEE-SA) has responded to changes in the
marketplace and as a result, the IEEE-SA of today is quite different and innovative, but still committed
to providing the most current, reliable standards knowledge. On average, the IEEE-SA publishes 80 new
and revised standards annually and conducts over 245 standards projects ballots, in which a combination
of approximately 13,000 individuals participate.
Overview of IEEE Standards Association Organization is shown in Figure 10.1. The IEEE-SA is
represented on the IEEE Board of Directors & IEEE Executive Committee. The IEEE-SA is assigned
authority for the standardization activities of the IEEE by the IEEE Board of Directors. The IEEE-SA
fulﬁlls this assignment by activities such as, but not limited to:
r Encouraging active development of needed standards. This involves, for example, promotion of open
and innovative deliberations that result in broad consensus in accordance with due process procedures
detailed in the bylaws and operations manuals of the subsidiary boards and committees of the IEEE-SA
Board of Governors.
r Building upon the strengths of the standards developing community by involving appropriate interests
and outside organizations.
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

382
Modulation and Coding Techniques in Wireless Communications
Figure 10.1
IEEE Standards Association (SA) Organization Overview
r Representing IEEE to external bodies on standards matters. This includes providing for cooperation
with and IEEE participation in the activities of other organizations consistent with its scope and
responsibilities.
r Appointing IEEE members to participate in external bodies on standards matters based on nominations
submitted by the IEEE Societies. The IEEE-SA also provides speakers to make presentations at
meetings and conferences on subjects related to IEEE’s standards interests and to participate in panels
on standards-related subjects.
With the approval of the IEEE Board of Directors and as authorized, the IEEE-SA Board of Governors
may establish groups:
r To act for the IEEE in product testing or in certiﬁcation of products or systems to comply with IEEE
standards, or
r To offer opinion in the name of the IEEE on the conformance of products or systems to the requirements
of IEEE standards for their intended use and safe operation.
Overview of IEEE Standard Association Standard Board Organization is shown in Figure 10.2. The
IEEE-SA Standards Board (IEEE-SA SB) is established by the IEEE-SA Board of Governors. The
IEEE-SA Standards Board is responsible on an Institute-wide basis for:
r Encouraging and coordinating the development of IEEE standards.
r Reviewing all proposed IEEE standards to determine whether the proposed standards conform to the
requirements established by the IEEE-SA Standards Board and whether consensus has been achieved
for approval of the proposed standards.
– Consensus is established when, in the judgment of the IEEE-SA Standards Board, substantial
agreement has been reached by directly and materially affected interest categories.
– Substantial agreement means much more than a simple majority, but not necessarily unanimity.

Standardization in IEEE 802.11, 802.16
383
Figure 10.2
IEEE Standard Association Standard Board (SA SB) Organization Overview
– Consensus requires that all views and objections be considered, and that a concerted effort be made
toward their resolution.
Matters of standards policy, ﬁnancial oversight, new directions in standardization, and other standards-
related activities in ﬁelds of interest to the Institute are the responsibility of the IEEE-SA Board of
Governors (BOG).
Procedures Committee (ProCom): This committee is responsible for recommending to the IEEE-SA
Standards Board improvements and changes in its bylaws, procedures, and manuals to promote efﬁcient
discharge of responsibilities by the IEEE-SA Standards Board and its committees.
New Standards Committee (NesCom): This committee is responsible for ensuring that proposed
standards projects are within the scope and purpose of the IEEE, that standards projects are assigned to
the proper society or other organizational body, and that interested parties are appropriately represented
in the development of IEEE standards. The committee examines Project Authorization Requests (PARs)
and makes recommendations to the IEEE-SA Standards Board regarding their approval.
Standards Review Committee (RevCom): This committee is responsible for reviewing proposals for
the approval of new and revised standards and for the reafﬁrmation or withdrawal of existing standards
to ensure that the proposals represent a consensus of the members of the ofﬁcial IEEE sponsor balloting
group. The committee routinely examines submittals to ensure that all applicable requirements of the
IEEE-SA Standards Board Operations Manual have been met and make recommendations to the IEEE-
SA Standards Board regarding their approval.
Audit Committee (AudCom): This committee provides oversight of the procedures used in the
standards-development activities of IEEE Standards Sponsors and review of the procedures used by
the Accredited Standards Committees for whom the IEEE serves as (co-)secretariat. This committee also
oversees the submission of Sponsor annual reports.
Patent Committee (PatCom): This committee provides oversight for the use of any patents and patent
information in IEEE standards. This committee reviews any patent information submitted to the IEEE
Standards Department to determine conformity with patent procedures and guidelines.

384
Modulation and Coding Techniques in Wireless Communications
Administrative Committee (AdCom): The Administrative Committee acts for the IEEE-SA Standards
Board between meetings and makes recommendations to the IEEE-SA Standards Board for its disposition
at regular meetings.
Standards Coordinating Committees (SCCs): When the scope of a standards activity is too broad to
be encompassed in a single IEEE Society, or a society may ﬁnd itself in a position where it is unable to
carry out the work needed to meet an identiﬁed need then the IEEE-SA Standards Board shall establish
its own committees to perform the required functions.
The IEEE is represented on the Standards Committees (ASCs) in which it has a substantial interest.
This provides IEEE with an opportunity to have a direct inﬂuence on the development of an American
National Standard generated by the ASC.
IEEE 802 is a standard committee sponsored by the Computer Society. The Computer Society is one
of the IEEE Societies and councils.
All IEEE standards development is based on projects that have been approved by the IEEE-SA
Standards Board, and each project shall be the responsibility of a Sponsor. Projects within IEEE 802,
P802.xx, are sponsored by the Computer Society through LAN/MAN Standard Committee (LMSC).
The Sponsor accepts responsibility for oversight of any of its assigned standards, including overseeing
coordination, balloting, and making annual activity reports to the IEEE-SA Standards Board. Each
Sponsor operates in accordance with a written set of policies and procedures (P & P). There are
also operating procedures available for Sponsors developing a standard using the entity method of
participation, and Sponsors utilize these procedures as the basis for entity standardization.
These projects with P802.xx form a family of IEEE standards dealing with local area networks and
metropolitan area networks. The services and protocols speciﬁed in IEEE 802 map to the lower two
layers (Data Link and Physical) of the seven-layer OSI networking reference model. These standards
deal with Ethernet, Token Ring, Bridging & Virtual bridged LANs, WLAN, Wireless Personal Area Net-
work (WPAN): Bluetooth, Zigbee, in or around a body, and so on, Broadband Wireless Access Systems
(WiMAX), Media independent handover and Wireless Regional Area Networks (WRAN). Work is orga-
nized into a number of Working Groups (WGs) and Technical Advisory Groups (TAGs) operating under
the oversight of a sponsor Executive Committee (EC). Current active working groups within IEEE 802 are:
r 802.1 Higher Layer LAN Protocols Working Group
r 802.3 Ethernet Working Group
r 802.11 Wireless LAN Working Group
r 802.15 Wireless Personal Area Network (WPAN) Working Group
r 802.16 Broadband Wireless Access Working Group
r 802.17 Resilient Packet Ring Working Group
r 802.18 Radio Regulatory TAG
r 802.19 Coexistence Working Group
r 802.20 Mobile Broadband Wireless Access (MBWA) Working Group
r 802.21 Media Independent Handover Services Working Group
r 802.22 Wireless Regional Area Networks
10.2
Standard Development Process
Typically a Study Group (SG) is formed when a new area is ﬁrst investigated for standardization. The
SG can be within an existing WG or TAG, or it can be independent of the WGs. A new project within an
existing group is typically developed by a Sub- Group or Task Group, while a new independent project
can lead to the creation of a completely new WG.
Each standard, recommended practice, or guide begins as a group of people with an interest in
developing the standard. A Project Authorization Request (PAR) is normally submitted for approval

Standardization in IEEE 802.11, 802.16
385
within six months of the start of work. In order to avoid duplication, provide for effective management
of overall efforts, and expedite approval of ﬁnal documents, all requests for an initiation of a standards
project, in the form of a PAR, shall be approved by the IEEE-SA SB. The IEEE-SA SB has assigned
to NesCom the preliminary review of PARs and the responsibility for recommending ﬁnal approval to
the Board. Sponsors are required to submit a PAR at the earliest opportunity when a standards project
is contemplated or work is started. PARs that have been submitted by Sponsors to the Secretary of the
IEEE-SA Standards Board by the established deadline shall be submitted by the Secretary to the New
Standards Committee (NesCom) for review. Unless speciﬁcally authorized by the IEEE-SA Standards
Board, no proposed standard or revision shall be considered by RevCom without prior approval of the
project by the IEEE-SA Standards Board. The lifetime of a PAR shall be four years. In LMSC, new
projects require supporting material in the form of 5- Criteria to show that they meet the charter of LMSC.
The draft PAR is voted on by the EC, and then it goes to the IEEE Standards Board New Standards
Committee (NesCom) which recommends it for approval as an ofﬁcial IEEE Standards Project. Part
of the PAR identiﬁes if there will be liaisons with outside standards groups, for instance International
Telecommunication Union (ITU) for some international standards. The liaisons help avoid conﬂicts or
duplication of effort within an area.
Technical proposals are presented and evaluated either in working group or task group meetings, and
a draft standard is written and voted on by the WG. Typically there are six face-to-face meetings every
year for working groups. Three of these meetings are called Plenary meetings. In Plenary meetings, all
the working groups of IEEE 802 meet and three are called interim meetings. In interim meetings some
working groups may meet and some may not. Further, for interim meeting working groups may decide
to meet at different locations. When the TG/WG reaches enough consensus on the draft standard, a WG
Letter Ballot is done to release it from the WG. It is next approved by the EC and then goes for Sponsor
Letter Ballot.
After the Sponsor Letter Ballot has passed and “No” votes are resolved, the draft Standard is sent to the
IEEE Standards Board Standards Review Committee (RevCom). All IEEE standards shall be approved
by the IEEE-SA Standards Board prior to publication. The IEEE-SA Standards Board has assigned
to RevCom the review of standards submittals and the responsibility for recommending ﬁnal approval
to the IEEE-SA Standards Board. Proposed standards, together with the required documentation, that
has been submitted by Sponsors to the Secretary of the IEEE-SA Standards Board by the established
deadline shall be submitted by the Secretary to the Standards Review Committee (RevCom) for review.
Approval by the IEEE-SA Standards Board indicates that the requirements of the IEEE-SA Standards
Board Operations Manual and these bylaws have been satisﬁed and, speciﬁcally, that the ﬁnal results of
the ballot and statements submitted by other coordinating bodies who participated in the development
of the standard indicate that consensus has been achieved and unresolved negative ballots have been
considered together with reasons why the comments could not be resolved. Once it is recommended by
RevCom and approved by the Standards Board, it can then be published as an IEEE standard.
Some draft standards in LMSC are also sent to ISO at the time they go to Sponsor Letter Ballot.
Parallel approval in ISO JTC1/SC6 (Joint Technical Committee 1, Subcommittee 6 - responsible for
LANs) may lead to publication as an ISO standard. The process from start to ﬁnish can take several years
for new standards, and less for revisions or addenda to existing standards.
10.3
IEEE 802.11 Working Group
IEEE 802.11 is considered to be the home of WLAN standardization. Activities in 802 started in 1980.
The number “802” was simply the next free number IEEE could assign. In 1987 activities in 802.4L
(token bus) were started. 802.11 working group was established in 1990 as outgrowth from 802.4L.
802.11 published its ﬁrst standard in 1997, standardizing three physical layers, infrared operating at
1 Mbps data rate, Direct sequence spread spectrum and Frequency hopping spread spectrum in 2.4 GHz
band using 20 MHz bandwidth with 1 and 2 Mbps data rates.

386
Modulation and Coding Techniques in Wireless Communications
In 1999, 802.11a was standardized. This standard provided variable data rates from 6 Mbps to 54
Mbps in 5 GHz band using 20 MHz channels. It uses OFDM based air interface. Also in the same year,
802.11b was standardized. This standard uses same air interface (Direct sequence spread spectrum) as
base 802.11 standard but increased the data rate to 11 Mbps in 2.4 GHz band. In practice 802.11b has a
greater range than 802.11a because of lower frequency in which 802.11b operates but 802.11a offered
higher data rates than 802.11b.
802.11c is a network interoperability standard that deals with bridge operation procedures in wire-
less bridges or access points was published in 2001. It was incorporated in 802.1D in 2004. Also in
2001, 802.11d speciﬁed operation in additional regulatory domains. This includes addition of a country
information element to beacons, probe requests, and probe responses. The country information ele-
ments simpliﬁes the creation of 802.11 wireless access points and client devices that meet the different
regulations enforced in various parts of the world.
In 2003, 802.11g introduced OFDM air interface in 2.4 GHz band and increased the data rate to 54
Mbps using 20 MHz channel bandwidth. This standard is backward compatible with 802.11b. Also in the
same year 802.11h speciﬁed Spectrum and Transmit Power Management Extensions in 5 GHz band to
solve problems like interference with satellites and radar. It was originally designed to address European
regulations but is now applicable in many other countries. The standard provides Dynamic Frequency
Selection (DFS) and Transmit Power Control (TPC) to the 802.11 MAC.
In 2004, 802.11i speciﬁed security mechanisms for WLAN. It replaced the short authentication and
privacy clause of the original standard with a detailed security clause. In the same year 802.11j standard
was created for the Japanese market. It allows Wireless LAN operation in the 4.9 to 5 GHz band to
conform to the Japanese rules for radio operation for indoor, outdoor and mobile applications.
In 2005, 802.11e deﬁned a set of Quality of Service enhancements for WLAN applications through
modiﬁcations to the Medium Access Control (MAC) layer. This is of importance for delay-sensitive
applications, such as Voice over Wireless IP and Streaming Multimedia.
Task group TGma was authorized to incorporate many of the amendments made to base 802.11-
1999 standard. REVma or 802.11ma, as it was called, created a single document that merged eight
amendments (802.11a, b, d, e, g, h, i, j) with the base standard 802.11-1999. Upon approval on 8 March
2007, 802.11REVma was renamed to the current base standard IEEE 802.11-2007.
In 2008, 802.11k created a standard for a basic set of radio resource measurements. These mea-
surements are required to provide services such as roaming, coexistence, and so on. It is necessary to
provide these measurements and other information in order to manage these services. Also in 2008,
802.11r speciﬁed fast BSS Roaming/Transition within WLAN networks meeting the real-time handover
requirements without compromising the security principles. Further, 802.11y created a standard which
enables high powered Wi-Fi equipment to operate on a co-primary basis in the 3650 to 3700 MHz band
in the United States, except when near a grandfathered satellite earth station.
Recently in 2009, two new standards were created by 802.11. 802.11n added new features like multiple
input multiple output, 40 MHz channel bandwidth and frame aggregation. Using these features 802.11n
was able to increase the data rate capability to 600 Mbps (using four spatial stream in 40 MHz channel)
from 54 Mbps provided by 802.11a and 802.11g. Also 802.11w created a standard to extended 802.11i
to provide protection for selected management frames for example, Disassociation and Deauthentication
frames and broadcast/multicast management frames.
10.4
IEEE 802.16 Working Group
IEEE 802.16 is another WG of the IEEE 802 LAN/MAN Standards Committee. Ofﬁcially the WG
starts efforts since 1999 and the ﬁrst ofﬁcial WG meeting was held in May 1999. The IEEE 802.16 WG

Standardization in IEEE 802.11, 802.16
387
on Broadband Wireless Access Standards is responsible for developing standards and recommended
practices to support the development and deployment of broadband Wireless Metropolitan Area Networks
(WirelessMANTM).
Although the 802.16 family of standards is ofﬁcially called WirelessMAN in IEEE, it has been
commercialized under the name of “WiMAX” (Worldwide Interoperability for Microwave Access) by
the industry alliance called the WiMAX Forum. The mission of the Forum is to promote and certify
compatibility and interoperability of broadband wireless products based on the IEEE 802.16 standards.
Here we will focus on IEEE 802.16 WG only.
The ﬁrst issue of the standard speciﬁcs a set of PHY and MAC layer standards was the IEEE Standard
802.16-2001 [1], completed in October 2001 and published on 8 April 2002, deﬁned the WirelessMANTM
air interface speciﬁcation for wireless metropolitan area networks (WMANs). The intention behind the
ﬁrst release of the standard was to deﬁne a technology for broadband wireless access (BWA) for ﬁxed
users, as an alternative to cabled access networks, such as digital subscriber line (DSL) links. For
this reason, the original IEEE 802.16 deﬁnes a point-to-multi-point (PMP) network architecture where
resources are shared with control from a central node called base station (BS) to a set of subscriber
stations (SS). From its ﬁrst release, the medium access control (MAC) layer was connection-oriented and
supported quality of service (QoS). The standard, as approved in 2001, addresses frequencies from 10 to
66 GHz in line-of-sight (LOS) operations using single carrier transmission only. The standard employs
QPSK, 16-QAM and 64-QAM as modulation schemes and the modulation scheme can be changed from
frame to frame. Moreover, the standard was designed to evolve as a set of air interfaces based on a
common MAC protocol, but with physical layer speciﬁcations dependent on the spectrum of use and the
associated regulations.
In 2003, a new version of the standard, IEEE 802.16a-2003, was published with support for non-
LOS (N-LOS) operations in frequencies from 2 to 11 GHz, extending the geographical reach of the
network.
The subsequent milestone in standard development was IEEE 802.16-2004 [2] which introduced
support for two additional physical layers: orthogonal frequency division multiplexing (OFDM) and
orthogonal frequency division multiple access (OFDMA). In 2005, a new version of the standard was
released to enable combined ﬁxed and mobile operations in licensed bands. The aforementioned stan-
dard, IEEE 802.16e-2005 [3], was deﬁned as an amendment to IEEE 802.16-2004 and added several
features related to mobile operations and mobile stations (MSs), including power saving, idle mode,
handover and an improved OFDMA physical layer. After the 2005 release, the standard development
continued to deﬁne the management information base (MIB) for MAC and PHY (IEEE 802.16f) and
the management plane and procedures (IEEE 802.16g), to improve the co-existence for license-exempt
operation (IEEE 802.16h), to introduce relay capabilities (IEEE 802.16j), and to reﬁne the MAC and
PHY procedures for mobile operations (IEEE 802.16-2009). The latter is also known as the 2009 release,
and brings the following major changes: half-duplex mobile terminal operations in OFDMA frequency
division duplexing (FDD), load balancing, robust header compression (ROHC), enhanced mechanism
for resource allocation (for example, persistent allocation), support for location-based services (LBSs)
and multicast and broadcast services (MBSs) [10.11]. The clean up for IEEE 802.16-2009 also involved
incorporating the IEEE 802.16f and IEEE 802.16g amendments, and removing some stale features, such
as the mesh mode.
Targeting to meet the requirement of IMT-Advanced (IMT-A) air interface, by the end of 2006, IEEE
802.16 working group (WG) has set up a new task group IEEE 802.16m (TGm). The purpose of IEEE
802.16m TG is to propose an advanced air interface which will include enhancements and extension to
IEEE 802.16-2004 and IEEE 802.16e-2005. In addition to this, the new radio interface will be contributed
to ITU Radiocommunication Sector (ITU-R) as a radio technology proposal for IMT-A. The development
of 802.16m is still ongoing, but the RIT proposal submission based on 802.16m was submitted to ITU
in 2009.

388
Modulation and Coding Techniques in Wireless Communications
10.5
IEEE 802.11
10.5.1
Overview and Scope
Wireless Local Area Network (WLAN) technology based on the IEEE 802.11 standard has become very
successful during the recent years. There is a huge deployed base of WLAN devices and the shipment
rates have been constantly increasing. From a consumer point of view WLAN is becoming a basic
connectivity feature even in low price category devices.
The IEEE 802.11 standard speciﬁes the physical layer (PHY) and the data link layer (layers 1 and 2,
respectively) of the Open System Interconnection (OSI) model protocol stack. In this chapter the physical
layer (layer 1) features of the most relevant parts of the standard are described. Furthermore, due to the
wide scope of the baseline 802.11 speciﬁcation and the numerous amendments, the focus is mainly on
the most recent and commonly available variants of the technology.
The original speciﬁcation from year 1997 deﬁnes three different PHYs: frequency-hopping spread
spectrum (FHSS), direct sequence spread spectrum (DSSS) and infrared (IR). None of the mentioned
PHYs are widely used today. The original speciﬁcation has since been extended with a large number of
amendments over time.
The following PHY related amendments of WLAN are discussed in this chapter:
r 802.11a: Orthogonal frequency division multiplexing (OFDM) PHY speciﬁcation for the 5 GHz band
r 802.11b: High Rate direct sequence spread spectrum (HR/DSSS) PHY speciﬁcation
r 802.11g: Extended Rate PHY speciﬁcation
r 802.11n: High Throughput (HT) PHY speciﬁcation
Additionally some discussion is included about selected standardization activities that are currently
ongoing in the 802.11. Speciﬁcally there is discussion about the very high throughput (VHT) task groups
TGac and TGad.
10.5.2
Frequency Plan
All the WLAN PHY variants of interest in the context of this discussion are either using the 2.4 GHz ISM
(industrial, scientiﬁc and medical) or the 5 GHz U-NII (Unlicensed National Information Infrastructure)
radio frequency bands. Both bands are unlicensed in most countries, and they are usually regulated by
Table 10.1
List of available WLAN channels in Europe and North America
Channel
Frequency [GHz]
Europe
North America
1
2.412
X
X
2
2.417
X
X
3
2.422
X
X
4
2.427
X
X
5
2.432
X
X
6
2.437
X
X
7
2.442
X
X
8
2.447
X
X
9
2.452
X
X
10
2.457
X
X
11
2.462
X
X
12
2.467
X
13
2.472
X

Standardization in IEEE 802.11, 802.16
389
Table 10.2
Commonly available channels worldwide in
5 GHz band
Band
Channel
Frequency [GHz]
U-NII Lower
5.15–5.25 GHz
36
5.18
40
5.20
44
5.22
48
5.24
U-NII Middle
5.25–5.35 GHz
52
5.26
56
5.28
60
5.30
64
5.32
a national regulatory authority. For the most part regulation of these unlicensed bands is harmonized
throughout the world.
In the 2.4 GHz ISM band there are several designated channels that are spaced 5 MHz apart. WLAN
signals require wider channel separation, and therefore adjacent channels overlap and cause interference
to each other. In the following Table 10.1 there is a list of available 2.4 GHz WLAN channels and
indication of commonly used non-overlapping channels in Europe and in North America.
The regulation for the 5 GHz frequency band varies throughout the world. Generally there is a
substantially larger amount of unlicensed band available than in the 2.4 GHz band. Typically the channel
separation is 20 MHz, which corresponds better to the WLAN signal bandwidth. The list of available
channels is country speciﬁc and from the user perspective also dependant on the supported channels by the
WLAN equipment. In the following Table 10.2 there is a list of commonly available channels worldwide.
10.5.3
Reference Model
The reference model provides an architectural overview of the system, where different parts of the system
and the interaction model between the entities can be seen. The two major parts of an 802.11 system are
the physical layer and the medium access control (MAC) sublayer. They correspond mostly to the OSI
reference model layering. Also there is a distinction between the data plane and the management plane.
The reference model is illustrated in Figure 10.3.
Each protocol layer provides a service access point (SAP) towards upper layers in order to allow
the upper layers to use its data plane services. In addition a SAP is deﬁned towards a corresponding
management entity for using the control plane services of each protocol layer.
In the data plane the lowest layer speciﬁed by 802.11 is the physical medium dependent (PMD)
sublayer. The PMD sublayer is located directly above the wireless physical medium and it provides
services to upper layers for transmitting data frames over the medium using spread spectrum or carrier
modulation techniques. Furthermore, the PMD sublayer provides carrier sense indication for detecting
activity on the radio channel. This information can be used by the MAC sublayer in order to assess
whether the channel is currently idle or busy.
The upper part of the physical layer is the physical layer convergence procedure (PLCP) sublayer.
It is using the service provided by the PMD sublayer. The main functionality of the PLCP sublayer is
frame exchange between the PHY and MAC layers.
Each of the different PHYs deﬁned in the baseline 802.11 and in the amendments is unique in terms
of PMD and PLCP details. The overall reference model and SAP deﬁnitions still apply for all of them.

390
Modulation and Coding Techniques in Wireless Communications
MAC sublayer
management entity 
management entity 
PMD sublayer
PLCP sublayer
MAC sublayer
PHY sublayer
management entity
Station
Data link layer
Physical layer
Data plane
Management plane
Figure 10.3
802.11 system reference model
10.5.4
Architecture
The most fundamental component of the WLAN architecture is a station (STA), which is connected to
the wireless medium. A STA consists of at least a PHY and a MAC. When there are multiple STAs
that communicate between each other, they form a basic service set (BSS) together. If there is no access
point (AP) present, the conﬁguration is said to be an independent BSS (IBSS). IBSS is also referred
to as WLAN ad-hoc mode. In ad-hoc mode STAs communicate directly towards each other without a
centralized forwarder device. When there is an AP present in addition to regular STAs, the conﬁguration
is commonly referred to as infrastructure BSS. Currently infrastructure mode is clearly the dominant
AP
STA 3
STA 1
b)
a)
STA 2
STA 4
STA 5
Figure 10.4
Illustration of a) ad-hoc mode and b) infrastructure mode

Standardization in IEEE 802.11, 802.16
391
AP 2
STA 3
STA 4
AP 1
STA 1
STA 2
BSS 1
BSS 2
DS
Figure 10.5
Example of an ESS
operational mode in deployed WLAN networks. Ad-hoc mode is rarely used, although many devices
have support for it also. Example physical network topologies for both operational modes are shown in
Figure 10.4.
Multiple BSSs may form an extended service set (ESS) by interconnecting with each other using a
distribution system (DS). The DS can for example be based on IEEE 802.3 wired technology. The 802.11
MAC SAP is designed to be compliant with 802.3 MAC SAP. Also the MAC address formats and address
spaces between the technologies are compatible. Therefore it is possible to bridge MAC frames directly
between these networks. Figure 10.5 depicts an example ESS conﬁguration.
10.5.5
802.11a
The 802.11a amendment deﬁnes an OFDM PHY for the 5 GHz band. Originally the speciﬁcation was
released in 1999 and it was incorporated to the main 802.11 standard in the 2007 revision [8]. It allows
data rates up to 54 Mbit/s. Today the 802.11a WLAN variant is used mainly in corporate environments,
because consumer class devices with 5 GHz capabilities have become available much later than 2.4 GHz
devices.
The 802.11a signal bandwidth is speciﬁed as 20 MHz. The OFDM uses 52 subcarriers with 0.3125
MHz spacing. At the target maximum bitrate the chosen number of subcarriers provides a practical
compromise that allows a sufﬁcient symbol guard interval while keeping the complexity and cost at a
reasonable level. A guard interval is required between symbols to remove inter-symbol interference from
the received signal. The required guard interval length depends on the delay spread of a typical usage
environment for the technology.
Forty-eight of the total 52 subcarriers are used for data and four are used as pilot subcarriers. Every
data subcarrier is modulated using binary or quadrature phase shift keying (BPSK or QPSK) or using
16- or 64-quadrature amplitude modulation (16-QAM or 64-QAM). The OFDM symbol time is 4 µs,
which corresponds to the symbol rate of 250 000 symbol/s.
As forward error correction (FEC) mechanism 802.11a uses convolutional coding. The allowed coding
rates are 1/2, 2/3, or 3/4. Coding is implemented across all subcarriers, which helps to even out the effects
of narrowband interference or narrowband fading to the overall OFDM bit error ratio (BER). Decoding

392
Modulation and Coding Techniques in Wireless Communications
Table 10.3
802.11a modulation and coding schemes
Modulation
Coding rate
Data rate [Mbit/s]
BPSK
1/2
6
BPSK
3/4
9
QPSK
1/2
12
QPSK
3/4
18
16-QAM
1/2
24
16-QAM
3/4
36
64-QAM
2/3
48
64-QAM
3/4
54
by the commonly used Viterbi algorithm is recommended. Table 10.3 lists all possible modulation and
coding schemes (MCS) for 802.11a and their corresponding data rates.
The 802.11a PLCP protocol data unit (PPDU) consists of the PLCP preamble, the SIGNAL ﬁeld and
the data. The frame format is illustrated in Figure 10.6.
The OFDM physical protocol unit starts with a preamble, which consists of 12 OFDM symbols. The
main purpose of the preamble is to synchronize the transmitter and receiver to have common timing. The
ﬁrst part of the preamble is 10 short symbols each having 0.8 µs duration. They are transmitted without
a guard interval. This is referred to as the short training sequence. It is used for signal detection, gain
control, possible antenna selection and coarse synchronization. Following the short training sequence
there is a long training sequence consisting of two 3.2 µs symbols preceded by a guard interval of 1.6
µs. It is used for channel estimation and ﬁne frequency acquisition.
After the preamble there is a SIGNAL ﬁeld that is encoded within a single OFDM symbol using BPSK
modulation and convolutional coding at 1/2 coding rate. SIGNAL includes the RATE and LENGTH ﬁelds.
RATE deﬁnes the MCS used for the rest of the data unit. LENGTH is an integer value representing the
number of octets in PLCP service data unit (PSDU). Additionally SIGNAL includes a parity bit for
error detection and tail bits that are set to zero. Like all other 802.11a OFDM symbols the duration of
the SIGNAL is 4 µs including a 0.8 µs guard interval.
PLCP preamble
SIGNAL
DATA
One OFDM symbol
BPSK, r = 1/2
Variable length
OFDM MCS according to RATE
RATE
Reserved
LENGTH
Parity
Tail
SERVICE
PSDU
Tail
Pad bits
PLCP header
Figure 10.6
802.11a PPDU frame format
10.5.6
802.11b
The 802.11b amendment extends the DSSS PHY of the original standard with increased throughput up
to 11 Mbit/s. Like the 802.11a amendment, it was originally released in 1999 and it was incorporated

Standardization in IEEE 802.11, 802.16
393
PLCP
Scrambler
Splitter
DQPSK
modulator
Code word
selector
2 bits
2 or 6 bits
Figure 10.7
802.11b transmitter
to the main 802.11 standard in the 2007 revision [8]. It uses the unlicensed 2.4 GHz frequency band for
communication. Since its release it has become one of the most common WLAN variants worldwide,
and it is still supported by most WLAN capable devices today.
The DSSS PHY in the original 802.11 speciﬁcation deﬁnes data rates of 1 and 2 Mbit/s. The information
signal is spread to wider bandwidth using static repeating chip sequences at a much higher chip rate than
the information bit rate. 11-bit code words are transmitted 1 million times per second. Each code word
carries one or two information bits depending on the data rate.
Encoding more bits into a single 11-bit code word is no longer practical using regular phase shift
keying techniques. Detecting ﬁner phase shifts at the receiver especially in the presence of inter-symbol
interference requires signiﬁcantly more advanced and expensive technology. Therefore the higher data
rates of 5.5 and 11 Mbit/s use an alternative encoding method. Complementary code keying (CCK)
transmits chip stream in symbols of eight chips at the rate of 11 Mchip/s. Depending on the data rate
either 4 or 8 bits are encoded to a single code word. Sophisticated transforms are used to derive the code
words from the data.
With both 5.5 and 11 Mbit/s data rates the two ﬁrst bits of a transmitted data block are used for
determining the phase shift of the modulated code word. The rest of the bits in the data block select the
codeword to be modulated. The total size of a data block is 4 or 8 bits corresponding to 5.5 and 11 Mbit/s
data rates respectively. A simpliﬁed transmitter structure is shown in Figure 10.7.
All PPDU bits are scrambled before transmission by the DSSS PMD. The purpose of scrambling is
to randomize long sequences of 0s or 1s within the data. The receiver can descramble the data after
demodulation and de-spreading.
The High Rate DSSS PHY deﬁnes also a PPDU format speciﬁc to the PHY. The frame consists
of a PCLP preamble, PLCP header and PSDU. Two different preambles and headers are deﬁned. The
mandatory long preamble and header interoperate with the original 802.11 DSSS PHY. The short
preamble and header are added in the 802.11b amendment as optional and are not interoperable with the
legacy DSSS PHY. The frame format is illustrated in Figure 10.8.
The ﬁrst part of the preamble is the SYNC ﬁeld, which is a string of scrambled 1s. The receiver uses it
to detect the incoming signal and synchronize timing. Following SYNC comes the 16-bit start of frame
delimiter (SFD). SFD marks the start of the PPDU frame.
PLCP preamble
PLCP header
PSDU
SYNC
SFD
SIGNAL
SERVICE
LENGTH
CRC
Figure 10.8
802.11b PPDU format

394
Modulation and Coding Techniques in Wireless Communications
Table 10.4
Long and short PPDU comparison
Long PPDU
Short PPDU
PLCP preamble modulation
1 Mbit/s DBPSK
1 Mbit/s DBPSK
PLCP preamble length
144 bits, 144 µs
72 bits, 72 µs
PLCP header modulation
1 Mbit/s DBPSK
2 Mbit/s DQPSK
PLCP header length
48 bits, 48 µs
48 bits, 24 µs
PSDU bitrates
1, 2, 5.5 and 11 Mbit/s
2, 5.5 and 11 Mbit/s
The PLCP header consists of the SIGNAL, SERVICE, LENGTH and CRC ﬁelds. The 8-bit SIGNAL
ﬁeld indicates the PHY data rate used for the PSDU. The integer value multiplied by 100 kbit/s equals
the PSDU rate. The SERVICE ﬁeld includes indication of the used modulation method and indication
of the LENGTH ﬁeld extension. The LENGTH ﬁeld is a 16-bit integer value representing the duration of
the PSDU in microseconds. CRC is used for error detection. If an error is detected, the receiving MAC
can choose to reject the frame.
The short PPDU format provides an enhanced throughput compared to the long PPDU format, but
since the two formats are not compatible, the short PPDU format required all devices in the network to
support 802.11b. The main differences are listed in Table 10.4.
10.5.7
802.11g
The 802.11g amendment deﬁnes an extended rate PHY (ERP) for the DSSS PHY in the original
speciﬁcation and the high rate DSSS PHY in the 802.11b amendment. It supports data rates up to 54
Mbit/s in the 2.4 GHz unlicensed frequency range. The speciﬁcation was originally released in 2003 and
it was incorporated to the main 802.11 standard in the 2007 revision [8]. The standard has been very
widely adopted all over the world.
An ERP system supports data rates speciﬁed in the DSSS and high rate DSSS PHY speciﬁcations,
which makes it backwards compatible with the mentioned systems. Furthermore, the radio part imple-
ments all mandatory modes of 802.11a using the 2.4 GHz frequency band and channelization plan. Table
10.5 includes the data rates and modulation schemes that are used in different ERP modes.
An ERP system must support three different PPDU frame formats: the long and short DSSS frame
formats speciﬁed in 802.11b and the OFDM frame format speciﬁed in 802.11a. Additionally there are
Table 10.5
ERP modes
Data rate
Modulation scheme
1 Mbit/s
DBPSK + DSSS
2 Mbit/s
DQPSK + DSSS
5.5 Mbit/s
DQPSK + DSSS/CCK
11 Mbit/s
DQPSK + DSSS/CCK
6 Mbit/s
OFDM
9 Mbit/s
OFDM
12 Mbit/s
OFDM
18 Mbit/s
OFDM
24 Mbit/s
OFDM
36 Mbit/s
OFDM
48 Mbit/s
OFDM
54 Mbit/s
OFDM

Standardization in IEEE 802.11, 802.16
395
optional frame formats speciﬁed in 802.11g. The receiver distinguishes the PHY mode using the PLCP
preamble and demodulates the rest of the PPDU accordingly.
The maximum throughput of 802.11g is comparable to 802.11a. However, if there are legacy DSSS
mode devices present in the network, the aggregate throughput is decreased signiﬁcantly. The reason is
lower air time utilization efﬁciency DSSS mode due to the relatively long PLCP preamble and header
duration.
10.5.8
802.11n
802.11n [10.9] is an amendment to the year 2007 revision of the original 802.11 speciﬁcation. The
target has been to signiﬁcantly increase the network throughput of the preceding WLAN standards.
The amendment speciﬁes a new high throughput (HT) OFDM PHY in order to achieve the goal. The
introduced enhancements in the PHY layer include multi-antenna MIMO techniques and 40 MHz channel
bandwidth. In the MAC layer the new mechanisms include for example frame aggregation. The features
of 802.11n are capable of supporting data rates up to 600 Mbit/s.
The standard was ratiﬁed by the IEEE in October 2009. However, there have already been products
available for several years before ratiﬁcation that have been implemented using a draft version of the
standard. The Wi-Fi Alliance has been granting certiﬁcations for interoperability based on the draft
standards since 2007. The certiﬁed devices will remain compatible with the ﬁnal version of the standard.
An HT system may operate either in the 2.4 GHz or the 5 GHz frequency band. When operating in
the 5 GHz range the HT system is backwards compatible with the 802.11a speciﬁcation and similarly in
the 2.4 range it is compliant with 802.11g. Support of both bands within a single device is optional.
Similarly to the previous OFDM PHYs, 802.11n OFDM subcarriers are modulated using BPSK,
QPSK, 16-QAM or 64-QAM. The subcarrier spacing is identical to the previous OFDM PHYs, but the
maximum allowed number of data subcarriers is increased from 48 to 52 in a 20 MHz channel.
The signal bandwidth may be either 20 MHz or 40 MHz. In practice the 40 MHz channel provides
approximately double throughput compared to the 20 MHz channel. However, the availability of con-
tiguous 40 MHz channels may be limited due to interference. The problem is prevalent especially in
the 2.4 GHz range, which has a low number of non-overlapping channels and typically high amount of
devices present. The support for 40 MHz channel bandwidth is optional for all devices.
802.11n supports different MIMO techniques such as spatial division multiplexing (SDM), receive
diversity and beamforming. Support for two spatial streams in 20 MHz channel is mandatory for AP
devices. All other MIMO features are optional.
MIMO SDM in 802.11n is capable of supporting up to four spatial streams. Current implementations
support typically at most two spatial streams. In practice the number is limited by implementation com-
plexity and cost. SDM efﬁciency is also dependant on the spatial separation of the antennas. Achieving
sufﬁcient separation for signiﬁcant performance increase may not be possible especially on small form
factor devices. In the mandatory MCSs all streams use equal modulation (EQM). Optionally unequal
modulation (UEQM) for individual streams is also supported.
Other optional features that directly affect maximum achievable throughput by means of decreasing
the physical protocol overhead are short guard interval (GI) and the greenﬁeld frame format. The GI
may be shortened from 800 ns to 400 ns with certain preconditions in environments that have sufﬁciently
low delay spread. Typically the short GI is applied only after the highest MCS has been reached by rate
adaptation. The greenﬁeld frame format omits some unnecessary parts in the physical protocol headers
in case there are no non-HT devices present in the network.
There are a large number of combinations of the previously described parameters, which are supported
by the standard. Table 10.6 shows the relationships of MCS parameters that are related to data rate. The
table includes only a subset of all MCSs including only EQM modes for simplicity. MCS indexes 0-7
are mandatory for non-AP devices and MCS indexes 0-15 for AP devices.

396
Modulation and Coding Techniques in Wireless Communications
Table 10.6
Selected 802.11n MCSs
Data rate [Mbit/s]
20 MHz channel
40 MHz channel
MCS
Index
Modulation
Coding
rate
Spatial
streams
800 ns
GI
400 ns
GI
800 ns
GI
400 ns
GI
0
BPSK
1/2
1
6.5
7.2
13.5
15
1
QPSK
1/2
1
13.0
14.4
27
30
2
QPSK
3/4
1
19.5
21.7
40.5
45
3
16-QAM
1/2
1
26.0
28.9
54
60
4
16-QAM
3/4
1
39.0
43.3
81
90
5
64-QAM
2/3
1
52.0
57.8
108
120
6
64-QAM
3/4
1
58.5
65.0
121.5
135
7
64-QAM
5/6
1
65.0
72.2
135
150
8
BPSK
1/2
2
13.0
14.4
27
30
9
QPSK
1/2
2
26.0
28.9
54
60
10
QPSK
3/4
2
39.0
43.3
81
90
11
16-QAM
1/2
2
52.0
57.8
108
120
12
16-QAM
3/4
2
78.0
86.7
162
180
13
64-QAM
2/3
2
104.0
115.6
216
240
14
64-QAM
3/4
2
117.0
130.0
243
270
15
64-QAM
5/6
2
130.0
144.4
270
300
. . .
. . .
. . .
. . .
. . .
. . .
. . .
. . .
31
64-QAM
5/6
4
260.0
288.9
540.0
600.0
. . .
. . .
. . .
. . .
. . .
. . .
. . .
. . .
In order to transmit multiple spatial streams the original data stream is ﬁrst divided into multiple
independent streams. Each spatial stream is then transmitted using a discrete transmit chain including
analog and RF parts for all antennas. A corresponding number of antennas are required at the receiver in
order to recover all the spatial streams. MIMO SDM can potentially increase data rate as a function of the
number of spatial streams. However, the actual gain from spatial multiplexing is inversely proportional
to the amount of spatial correlation between the streams. In addition to spatial separation, multipath
signal propagation can reduce spatial correlation.
In a system that has more receive antennas than the number of spatial streams, a technique known
as receive diversity may be utilized to improve robustness. The signal from different receive antennas
may be combined in a way that substantially increases SNR. The method is referred as maximal ratio
combining (MRC).
One optional feature of 802.11n is the usage of space-time block code (STBC). It is a coding technique
that is used in order to improve reliability of data transfer by exploiting antenna diversity of a MIMO
system. In STBC multiple encoded copies of the same data are transmitted from different antennas.
The copies are combined at the receiver with an increased probability to correctly decode the original
data. The STBC encoder divides the spatial streams further into space-time streams. If STBC is used
in 802.11n, the number of space-time streams is always one or two larger than the number of spatial
streams. The maximum number of space-time streams is four.
Low density parity check (LDPC) code is an advanced coding method that has been introduced into
802.11n as an optional feature. Convolutional coding is still the only mandatory coding method. LDPC is
a very efﬁcient code and it can provide coding gain of a few decibels over convolutional code. Therefore
it improves robustness of an 802.11n system, while maintaining the decoding complexity at a relatively
low level.

Standardization in IEEE 802.11, 802.16
397
Transmit beamforming (TxBF) is an optional capability that is provided in the 802.11n standard. In
a MIMO system TxBF can be achieved by means of applying weights to the different transmit signals
in such a way that reception is improved. It is possible to utilize TxBF for sending data and MRC for
receiving data in a single multi-antenna device. An AP is a typical example of a device that beneﬁts
from such conﬁguration. TxBF can provide relatively good performance improvements, but implies also
increased hardware complexity.
The TxBF method deﬁned in 802.11n is based on knowledge of the propagation environment. To
obtain the knowledge the channel needs to be sounded by transmitting a sounding packet between
the two devices performing the TxBF. The transmit weighting matrix is calculated using the channel
information. Commonly the singular value decomposition (SVD) method is used to solve the matrix.
For simplicity, the details of SVD are not included in this discussion. If the communication channel is
assumed to be reciprocal, implicit channel information feedback can be used. Implicit feedback means
that channel sounding is done in the opposite direction as the TxBF. Explicit feedback on the other hand
means that channel sounding and TxBF are done in the same direction. The explicit feedback method
does not require reciprocal communication conditions, but there is overhead of sending the channel
sounding results back to the transmitter. The TxBF SVD needs to be calculated and applied in digital
baseband to each individual OFDM subcarrier before the RF and analog parts of the transmit chain.
During the 802.11n development one requirement has been to provide some level of backwards
compatibility with legacy 802.11a and 802.11g equipment. For this purpose the following three different
PPDU frame formats have been deﬁned.
r Non-HT format
r HT-mixed format
r HT-greenﬁeld format
Support for the non-HT format and the HT-mixed format is mandatory, but the HT-greenﬁeld format
is optional. Packets of the non-HT format are legacy packets structured according to either 802.11a or
802.11g speciﬁcation, depending on the used frequency band. In the HT-mixed format the PPDU contains
both a legacy preamble and an HT preamble. Although 802.11a/g devices are only able to decode the
legacy part of the PPDU, they will obtain information about the PPDU duration, which is utilized for the
MAC protocol. The HT-mixed format therefore enables coexistence of 802.11n devices and 802.11a/g
devices. The HT-greenﬁeld format is intended for use in environments that contain exclusively 802.11n
devices. Because it contains only the HT preamble, it provides the highest throughput of the different
PPDU formats, but does not support optimal coexistence with 802.11a/g devices.
10.5.9
Future Developments
Currently there are ongoing standardization activities in the 802.11 to further increase the throughput
from 802.11n data rates. Originally the work has started in the very high throughput (VHT) study group
even before the ﬁnal version of 802.11n standard was ratiﬁed. Initially many different ideas were proposed
to the group as the basis for the VHT work. Eventually two separate task groups emerged from the VHT
study group. Each one of them is concentrating on different solutions. The 802.11ac task group (TGac)
is developing a VHT WLAN standard for operation below 6 GHz frequency bands. The 802.11ad task
group (TGad) is working on a 60 GHz VHT WLAN standard.
The target aggregate throughput for multiple STAs in TGac is at least 1 Gbit/s measured at the MAC
SAP interface. For single STA the target is 500 Mbit/s. There have been various PHY proposals for
achieving the target. Some potential PHY techniques include using 80 MHz contiguous or even 160
MHz non-contiguous RF carrier, using higher order OFDM MCSs with 256-QAM and increasing the
maximum number of spatial streams to eight in multi-user MIMO transmission.

398
Modulation and Coding Techniques in Wireless Communications
TGad is targeting for even higher data rates. For a single user the minimum target is 1 Gbit/s measured
at the MAC SAP. There is a large amount of unlicensed spectrum available worldwide in the 60 GHz
frequency band (typically between 57-66 GHz), which usually includes multiple 2 GHz RF carriers.
The wide spectrum allows very high throughput, but the millimeter wave propagation has also some
strict limitations. Path loss in 60 GHz is of a higher magnitude than in 2.4 or 5 GHz. To overcome
the high path loss, directional antennas can be used both in transmitter and receiver side. Because the
wavelength is relatively short, the antennas are also substantially smaller than with traditional WLAN
devices. Consequently multi-element antenna arrays with a large number of antennas become a feasible
solution. With directional antennas the multipath propagation is reduced, which makes MIMO SDM
techniques less effective. Both single carrier and multi-carrier modulation methods are considered for
60 GHz. Physical layer coding is likely to build on 802.11n mechanisms. The options have different
beneﬁts and the selection will be based on requirements derived from usage models.
10.6
IEEE 802.16x
In this section, we will focus on the standards with mobility support, in particular, IEEE 802.16e and
IEEE 802.16m were selected.
10.6.1
Key PHY Features of the IEEE 802.16e
In the following we give the key PHY features of mobile WiMAX technology (PHY and MAC are taken
from IEEE 802.16e) and provide short descriptions.
Scalable OFDMA
OFDMA is the multiple access technique for mobile WiMAX. OFDMA is the Orthogonal Frequency
Division Multiplexing (OFDM) based multiple access scheme and has become the de-facto single choice
for modern broadband wireless technologies adopted in other competing technologies such as 3GPP’s
Long Term Evolution (LTE) DL. OFDMA demonstrates superior performance in nonline-of-sight (N-
LOS) multi-path channels with its relatively simple transceiver structures and allows efﬁcient use of the
available spectrum resources by time and frequency subchannelization.The simple transceiver structure
of OFDMA also enables feasible implementation of advanced antenna techniques such as MIMO with
reasonable complexity. Lastly, OFDMA employed in mobile WiMAX is scalable in the sense that by
ﬂexibly adjusting FFT sizes and channel bandwidths with ﬁxed symbol duration and subcarrier spacing,
it can address various spectrum needs in different regional regulations in a cost-competitive manner.
TDD
The mobile WiMAX Release 1 Proﬁle has only TDD as the duplex mode even though the baseline IEEE
Standards contains both TDD and Frequency Division Duplex (FDD). Even though future WiMAX
Releases will have FDD mode as well, TDD is in many ways better positioned for mobile Internet
services than FDD.
First of all, Internet trafﬁc is asymmetric typically with the amount of downlink trafﬁc exceeding the
amount of uplink trafﬁc; thus, conventional FDD with the same downlink and uplink channel bandwidth
does not provide the optimum use of resources. With TDD products, operators are capable of adjusting
downlink and uplink ratios based on their service needs in the networks.

Standardization in IEEE 802.11, 802.16
399
Advanced Antenna Techniques (MIMO and BF)
Various advanced antenna techniques have been implemented in the mobile WiMAX Release 1 proﬁle
to enable higher cell and user throughputs and improve coverage. As a matter of fact, mobile WiMAX
was the ﬁrst commercially available cellular technology that actually realized the beneﬁts of MIMO
techniques promised by academia for years. With its downlink and uplink MIMO features, both operators
and end-users enjoy up to twice the data rates of Single-Input Single-Output (SISO) rate, resulting in up
to 37 Mbps for downlink and 10 Mbps for uplink sector throughput using just 10 MHz TDD channel
bandwidth.
Mobile WiMAX also enhances the cell coverage with its inherent beamforming (BF) techniques.
Coupled with TDD operation, its powerful BF mechanism allows base stations to accurately form a
channel matching beam to a terminal station so that uplink and downlink signals can reach reliably from
and to terminals at the cell edge, thus effectively extending the cell range.
Full Mobility Support
Full mobility support is one of the main strength of the mobile WiMAX products. The baseline standard
of mobile WiMAX was designed to support vehicles at highway speed with appropriate pilot design
and Hybrid Automatic Repeat Request (HARQ), which helps to mitigate the effect of fast channel
and interference ﬂuctuation. The systems can detect the mobile speed and automatically switch between
different types of resource blocks, called subchannels, to optimally support the mobile user. Furthermore,
HARQ helps to overcome the error of link adaptation in fast fading channels and to improve overall
performance with its combined gain and time diversity.
Frequency Reuse One and Flexible Frequency Reuse
From the operators’ perspective, securing greater frequency spectrum for their services is always costly.
Naturally it is in their best interest if a technology allows decent performance in the highly interference-
limited conditions with frequency reuse one. Mobile WiMAX technology was designed to meet this goal
in a respectable way with its cell-speciﬁc subchannelization, low rate coding and power boosting and
de-boosting features. It also enables real-time application of ﬂexible frequency reuse where frequency
reuse one is applied to terminals close to the cell centre whereas a fraction of frequency is used for
terminals at the cell edge, thereby reducing heavy co-channel interference.
The PHY transmission chains of OFDMA are illustrated in Figure 10.9. The blocks are the same
with the small difference that OFDMA PHY includes a repetition block. The modulation is one of the
four digital modulations described in the previous chapter: BPSK, QPSK, 16-QAM or 64-QAM. The
modulated symbols are then transmitted on the OFDM orthogonal subcarriers.
Randomization
FEC encoder
Interleaving
Repetition
Modulation
IFFT
TX signals
Physical PDU
to be
transmitted
Figure 10.9
OFDMA PHY Chain

400
Modulation and Coding Techniques in Wireless Communications
10.6.2
IEEE 802.16m
Targeted at IMT-Advanced (IMT-A), IEEE 802.16 working group (WG) had set up a new task group
IEEE 802.16m by the end of 2006. The purpose of IEEE 802.16m TG is to propose an advanced air
interface which will include enhancements and extension to IEEE 802.16-2004 [1] and IEEE 802.16e-
2005 [2]. In addition to this, the new radio interface has been contributed to ITU-R as a radio technology
proposal for IMT-A. The IEEE announced on 6th October 2009 that they had submitted a candidate
radio interface technology for IMT-Advanced standardization in the Radio Communication Sector of
the International Telecommunication Union (ITU-R). The proposal [4] documented that IEEE 802.16m
met ITU-R’s challenging and stringent requirements in all four IMT-Advanced “environments”: Indoor,
Microcellular, Urban, and High Speed.
In this section we consider the layer 1 (L1) processing and procedures deﬁned in 802.16m. In both the
downlink and uplink direction, OFDMA is employed as a multiple access scheme. 802.16m supports both
time division duplex (TDD) and frequency division duplex (FDD) modes, including half-FDD (H-FDD)
MS operation. Considering WirelessmMAN-OFDM system,1 the legacy WiMAX system which is built
on top of 802.16e, it is very possible that TDD based system will be deployed ﬁrst. Therefore, in this
chapter we will focus on TDD features only.
10.6.2.1
Frame Structure
10.6.2.1.1
Basic Frame Structure
The OFDM parameters deﬁned in 802.16m are speciﬁed in Table 10.7.
The 802.16m basic frame structure is illustrated in Figure 10.10. Each 20 ms superframe is divided
into four equally-sized 5 ms radio frames. The ﬁrst subframe of each superframe contains the super
frame header (SFH). The SFH is divided into primary SFH (P-SFH) and secondary SFH (S-SFH). The
P-SFH has a ﬁxed size and it is transmitted in every superframe, whereas the S-SFH has a variable size.
Advanced Preamble (A-Preamble) is transmitted at the beginning of every radio frame.
When using the same OFDMA parameters as in Table 10.7 with the channel bandwidth of 5 MHz, 10
MHz, or 20 MHz, each 5 ms radio frame further consists of eight subframes for CP ratio G = 1/8 and
1/16. With the channel bandwidth of 8.75 and 7 MHz, each 5 ms radio frame further consists of seven
and six subframes, respectively, for G = 1/8 and 1/16. In the case of G = 1/4, the number of subframes
per frame is one less than that of other CP lengths for each bandwidth case. A subframe shall be assigned
for either DL or UL transmission. There are four types of subframes:
1. Type-1 subframe consists of six OFDMA symbols,
2. Type-2 subframe consists of seven OFDMA symbols,
3. Type-3 subframe which consists of ﬁve OFDMA symbols, and
4. Type-4 subframe which consists of nine OFDMA symbols. This type shall be applied only to UL
subframe for the 8.75MHz channel bandwidth when supporting the legacy 802.16e frames.
The basic frame structure is applied to both FDD and TDD duplexing schemes, including H-FDD MS
operation. The number of switching points in each radio frame in TDD systems is two, where a switching
point is deﬁned as a change of directionality, that is, from DL to UL or from UL to DL.
In a TDD frame with DL to UL ratio of D:U, the 1st contiguous D subframes and the remaining U
subframes are assigned for DL and UL, respectively, where D + U = 8 for 5, 10 and 20 MHz channel
bandwidths, D + U = 7 for 8.75 MHz channel bandwidth, and D + U = 5 for 7 MHz channel bandwidth.
The ratio of D:U shall be selected from one of the following values: 8:0, 6:2, 5:3, 4:4, or 3:5 for 5, 10
1 As in IEEE 802.16m Speciﬁcation, the legacy WiMAX system is called WirelessMAN-OFDMA system.

Standardization in IEEE 802.11, 802.16
401
Table 10.7
OFDMA parameters
Nominal Channel Bandwidth (MHz)
5
7
8.75
10
20
Over-sampling Factor
28/25
8/7
8/7
28/25
28/25
Sampling Frequency (MHz)
5.6
8
10
11.2
22.4
FFT Size
512
1024
1024
1024
2048
Sub-Carrier Spacing (kHz)
10.94
7.81
9.77
10.94
10.94
Useful Symbol Time Tu (µs)
91.4
128
102.4
91.4
91.4
Symbol Time Ts (µs)
102.857
144
115.2
102.857
102.857
Cyclic
Preﬁx (CP)
Tg=1/8 Tu
FDD
Number of
OFDM
symbols per
Frame
48
34
43
48
48
Idle time (µs)
62.857
104
46.40
62.857
62.857
TDD
Number of
OFDM
symbols per
Frame
47
33
42
47
47
TTG + RTG
(µs)
165.714
248
161.6
165.714
165.714
Symbol Time Ts (µs)
97.143
136
108.8
97.143
97.143
FDD
Number of
OFDM
symbols per
Frame
51
36
45
51
51
Cyclic
Preﬁx (CP)
Tg=1/16 Tu
Idle time (µs)
45.71
104
104
45.71
45.71
TDD
Number of
OFDM
symbols per
Frame
50
35
44
50
50
TTG + RTG
(µs)
142.853
240
212.8
142.853
142.853
Symbol Time Ts (µs)
114.286
160
128
114.286
114.286
FDD
Number of
OFDM
symbols per
Frame
43
31
39
43
43
Cyclic
Preﬁx (CP)
Tg=1/4 Tu
Idle time (µs)
85.694
40
8
85.694
85.694
TDD
Number of
OFDM
symbols per
Frame
42
30
38
42
42
TTG + RTG
(µs)
199.98
200
136
199.98
199.98
and 20 MHz channel bandwidths, and 3:2 or 2:3 for 7 MHz channel bandwidth and 5:2, 4:3, or 3:4 for
8.75 MHz channel bandwidth. In each frame, the Transmission Transaction Guard (TTG) and Receiving
Transmission Guard (RTG) shall be inserted between the DL and UL switching points.
Figure 10.11 illustrates one TDD frame structure example (D:U = 5:3) with the channel bandwidth 5,
10 and 20 MHz where each radio frame is composed of eight subframes for G = 1/8. Each superframe
starts with a preamble used for physical synchronization. There are two types of preambles: Primary

402
Modulation and Coding Techniques in Wireless Communications
Superframe Header
(SFH)
Superframe
(20 ms)
Advanced Preamble
(A Preamble)
Frame
(5 ms)
Figure 10.10
Basic Frame Structure
A-Preamble (PA-Preamble) and Secondary A-Preamble (SA-Preamble). A PA-Preamble is transmitted
on the ﬁrst subframe of the second radio frame, while a SA-Preamble is transmitted at the beginning of
all the other radio frames.
10.6.2.1.2
TDD Frame Structure for Supporting Legacy 802.16e MSs
According to [3], IEEE 802.16m shall provide continuing support and interoperability for legacy
WirelessMAN-OFDMA equipments which are based on 802.16e, including MSs and BSs. Speciﬁ-
cally, the features, functions and protocols enabled in IEEE 802.16m shall support the features, functions
and protocols employed by WirelessMAN-OFDMA legacy equipment. The following are backward
compatibility requirements:
Superframe (4 radio frames, 32 subframes, 20ms)
Radio Frame (5ms)
SF7 (6)
UL
SF0 (5)
DL
SF2 (6)
DL
SF3 (6)
DL
SF4 (5)
DL
SF5 (6)
UL
SF6 (6)
UL
Subframe
SF1 (6)
DL
TTG
RTG
S0
S1
S2
S3
S4
S5
Type 1 Subframe
6 full OFDM symbols - 0,617ms
PA-Preamble
SA -Preamble
Figure 10.11
Frame structure example for 5/10/20 MHz Mode (G=1/8)

Standardization in IEEE 802.11, 802.16
403
s
DL Burst #1
DL Burst
#2
DL Burst
#3
DLBurst
#2
DLBurst
#3
s+1
s+2
s+3
s+4
Preamble
DL-MAP
FCH
DL burst #0 (carrying UL MAP)
UL Burst #1
UL Burst #2
UL Burst #3
OFDMA symbol number
Subchannel Logical Number
DL Burst #1
Preamble
DL-MAP
FCH
DL burst #0 (carrying UL MAP)
16m radio frame
Legacy WirelessMAN OFDMA frame
Ranging/ CQ /Ack Channels
DL
Sub
frame
#1
DL
Subframe
#3
UL
Subframe
#0
DL
Subframe
#2
A-Preamble
Frame Offset
Figure 10.12
TDD frame conﬁguration for supporting the WirelessMAN-OFDMA operation with UL TDM
r An IEEE 802.16m MS shall be able to operate with WirelessMAN-OFDMA BS, at a level of
performance equivalent to that of a WirelessMAN-OFDMA MS.
r Systems based on IEEE 802.16m and the WirelessMAN-OFDMA System shall be able to
operate on the same RF carrier, with the same channel bandwidth; and should be able to operate
on the same RF carrier with different channel bandwidths.
r An IEEE 802.16m BS shall support a mix of IEEE 802.16m and WirelessMAN-OFDMA MSs
when both are operating on the same RF carrier. The system performance with such a mix
should improve with the fraction of IEEE 802.16m MSs attached to the BS.
r An IEEE 802.16m BS shall support handover of a WirelessMAN-OFDMA MS to and from
a WirelessMAN-OFDMA BS and to and from IEEE 802.16m BS, at a level of performance
equivalent to handover between two WirelessMAN-OFDMA BSs.
r An IEEE 802.16m BS shall be able to support a WirelessMAN-OFDMA MS while also
supporting IEEE 802.16m MSs on the same RF carrier, at a level of performance equivalent to
that a WirelessMAN-OFDMA BS provides to a WirelessMAN-OFDMA MS.
In order to support WirelessMAN-OFDMA MSs, 802.16m introduces a special frame structure which
is reported in Figures 10.12 and 10.13 for bandwidths of 5, 10, and 20 MHz. In DL direction, legacy
WirelessMAN-OFDMA and a new system are multiplexed in a time division fashion and the beginning
of legacy and new frames are offset by a ﬁxed number of subframes. This means that the legacy DL
subframe is located at the end of the 802.16m radio frame and the corresponding legacy UL subframe is
located in the subsequent 16m radio frame. In the UL direction, legacy and new system can multiplexed
either in time division (Figure 10.12) or frequency division mode (Figure 10.13).
In UL TDM mode, a subset of UL subframes is dedicated to the WirelessMAN-OFDMA operation to
enable one or more WirelessMAN-OFDMA UL time zones. The subset includes the 1st WirelessMAN-
OFDMA UL time zone to support the transmission of the ranging channel, feedback channel and ACK
channel. Data bursts from the WirelessMAN-OFDMA MSs shall not be transmitted in the UL subframes

404
Modulation and Coding Techniques in Wireless Communications
s
DL Burst #1
DL Burst
#2
DL Burst
#3
DL Burst
#2
DL Burst
#3
s+1
s+2
s+3
s+4
Preamble
DL-MAP
FCH
DL burst #0 (carrying UL MAP)
UL Burst #1
UL Burst #2
UL Burst #3
OFDMA symbol number
Subchannel Logical Number
DL Burst #1
Preamble
DL-MAP
FCH
DL burst #0 (carrying UL MAP)
16m radio frame
Legacy WirelessMAN-OFDMA frame
Ranging/ 
CQI/Ack 
Channels
DL
Sub
frame
#1
DL
Subframe
#3
UL
Subframe
#2 
UL
Subframe
#0
UL
Subframe
#1
DL
Subframe
#2
Primary Preamble
Frame Offset
Figure 10.13
TDD frame conﬁguration for supporting the WirelessMAN-OFDMA operation with UL FDM
for operation of 802.16m Air Interface. Those UL subframes shall be indicated as a UL time zone in the
UL-MAP message.
While in FDM mode, a group of subcarriers (subchannels), spanning the entire UL transmission, is
dedicated to the WirelessMAN-OFDMA operation. The remaining subcarriers, denoted the UL sub-
frames, are dedicated to 802.16m operation. Figure 10.13 illustrates an example frame conﬁguration
for supporting the WirelessMAN-OFDMA operation when FDM mode is used in UL. Data bursts from
the WirelessMAN-OFDMA MSs shall not be transmitted in the UL subchannels group for operation of
16m. The UL subchannels group for operation of the WirelessMAN-OFDMA shall be indicated by the
UL allocated subchannels bitmap TLV or the UL AMC Allocated physical bands bitmap TLV deﬁned
in the UCD message.
From the legacy WirelessMAN-OFDMA MSs point of view, the 802.16m DL (UL) subframes are
just as a separate DL(UL) zone. This enables legacy MS to correctly detect the beginning and the end of
each legacy DL and UL subframe.
10.6.2.1.3
Frame Structure Supporting Wider Bandwidth
One of the main new features introduced in 16m is multiple RF carriers support at the same time. When
the multi-carrier feature is supported, the system may deﬁne and utilize additional RF carriers to improve
the user experience and QoS or provide services through additional RF carriers conﬁgured or optimized
for speciﬁc services. In the case of multi-carrier, a common MAC entity controls a PHY spanning over
multiple frequency channels as shown in Figure 10.14. The RF channels can be of the same or different
bandwidths (for example, 5, 10 and 20 MHz), be on contiguous or non-contiguous frequency bands. The
RF channels may be of different duplexing modes, for example, FDD, TDD, or a mix of bidirectional
and broadcast only carriers.
In general, the same frame structure is used for each carrier in multi-carrier mode operation.
Figure 10.15 illustrates the example of the frame structure to support multi-carrier operation.
These additional RF carriers are the secondary carriers. Each MS is controlled through an RF carrier
which is the primary carrier. Hence, from the MS point of view, a carrier can be either primary or

Standardization in IEEE 802.11, 802.16
405
Frequency
Channel
1
MAC
PHY
Frequency
Channel
N
Figure 10.14
Multicarrier support protocol structure
secondary carrier. A MS has one and only one primary carrier which is used to exchange data and control
information with the BS. A MS may use another carrier(s) to exchange data with the BS, but the control
information is normally transmitted through the primary carrier. Figure 10.15 shows the frame structure
for multi-carrier operations with legacy support. In Figure 10.15, RF carrier 2 has to support legacy
operations, whereas RF carrier 0 and 1 work in 16m mode only.
IEEE 802.16m supports relay operation as well. More speciﬁcally, the two hop data transmission
between BS and MS using an intermediate relay station (RS).
When a RS is deployed it uses the same OFDMA signal parameters as its serving BS. The BS frame
is divided into 16m Access zone and 16m Relay zone. The 16m Access zone position precedes the 16m
Relay zone position inside the frame. The duration of the 16m Access zone and 16m Relay zone may be
different in DL and UL directions. The zone conﬁguration of 16m Access zone and 16m Relay zone is
informed to the ARS by the 802.16m base station.
The BS frame 16m Access zone consists of 16m DL Access zone and 16m UL Access zone, and 16m
Relay zone consists of 16m DL Relay zone and 16m UL Relay zone. The BS frame 16m Access zone is
Figure 10.15
Example of frame structure to support multi-carrier operation in WirelessMAN-OFDMA support
mode

406
Modulation and Coding Techniques in Wireless Communications
used for communication with MSs only. The BS frame 16m Relay zone is used for communication with
RSs and may be used for communication with MSs. In the 16m DL Relay zone the BS transmits to its
subordinate RS and in the 16m UL Relay zone the BS receives transmissions from its subordinate RS.
The RS frame 16m Access zone consists of 16m DL Access zone and 16m UL Access zone and 16m
Relay zone consists of 16m DL Relay zone and 16m UL Relay zone. The RS frame 16m Access Zone is
used for communication with MSs only. In the 16m DL Relay zone the RS receives transmissions from
its superordinate BS and in the 16m UL Relay zone the RS transmits to its superordinate BS.
10.6.2.2
Control Structure (PA-Preamble, Control Channels)
Control channels are used to convey information essential for system operation. Control information is
transmitted hierarchically over different time scales from the superframe level to the subframe level. In
this section, we will address Advanced Preamble (A-Preamble, that is, synchronization channel), DL
control channel and UL control channel.
It should be pointed out that there is no need for 16m MS to decode WirelessMAN-OFDM signaling
for network access.
10.6.2.2.1
DL Control Structure
10.6.2.2.1.1
Advanced Preamble
There are two types of Advanced Preamble (A-Preamble): pri-
mary advanced preamble (PA-Preamble) and secondary advanced preamble (SA-Preamble) deﬁned in
802.16m. One PA-Preamble symbol and three SA-Preamble symbols are transmitted within one super-
frame. The location of the A-Preamble symbol is speciﬁed as the ﬁrst symbol of each frame. PA-Preamble
is located at the ﬁrst symbol of second frame in a superframe while SA-Preamble is located at the ﬁrst
symbol of the remaining three frames.
Figure 10.16 depicts the location of A-Preamble symbols.
10.6.2.2.1.2
Primary Advanced Preamble (PA-Preamble)
PA-Preamble is transmitted within ﬁxed
bandwidth and the length of PA-Preamble sequence is 216. PA-Preamble carries the information of
Figure 10.16
The location of A-Preamble symbol

Standardization in IEEE 802.11, 802.16
407
: PAPreambleCarrierSet
41
43
45
253
255
469
471
257
259
DC
467
Figure 10.17
Subcarriers occupied by PA-Preamble
system bandwidth and system multi-carrier conﬁguration information. When the subcarrier index 256 is
reserved for DC, the allocation of subcarriers is accomplished by the following equation:
P APreambleCarrier Set = 2 · k + 41
where
PAPreambleCarrierSet speciﬁes all subcarriers allocated to the PA-Preamble, and
k is a running index from 0 to 215.
Figure 10.17 depicts the symbol structure of PA-Preamble in the frequency domain.
Among the PA-Preamble sequences, 10 sequences are used for fully-conﬁgured RF carriers and one
PA-Preamble sequence is reserved for partially-conﬁgured carriers. Also PA-Preamble carriers system
bandwidth information which can be used by MS to learn about the BW of SA-Preamble which is the
same as system BW.
10.6.2.2.1.2.1
Secondary Advanced Preamble (SA-Preamble)
The lengths of SA-Preamble se-
quences, NSAP, are 144, 288, and 576 for 512-FFT, 1024-FFT, and 2048-FFT, respectively. The allocation
of subcarriers is accomplished by the following equation, when the subcarrier indexes 256, 512, and
1024 are reserved for DC for 512-FFT, 1024-FFT, and 2024-FFT, respectively:
SAPreambleCarrier Setn = n + 3 · k + 40 · NSAP
144 +
 2 · k
NSAP

(10.1)
where
SAPreambleCarrierSetn speciﬁes all subcarriers allocated to the speciﬁc SA-Preamble,
n is the index of the SA-Preamble carrier-set 0, 1 and 2 representing segment ID,
k is a running index 0 to NSAP -1 for each FFT sizes
Each segment uses an SA-Preamble composed of a carrier-set out of the three available carrier-sets in
the following manner:
r Segment 0 uses SA-Preamble carrier-set 0.
r Segment 1 uses SA-Preamble carrier-set 1.
r Segment 2 uses SA-Preamble carrier-set 2.
Each cell ID has an integer value IDcell from 0 to 767. The IDcell is deﬁned by segment index and an
index per segment as follows:
I Dcell = 256 · n + Idx
where
n is the index of the SA-Preamble carrier-set 0, 1 and 2 representing segment ID,
Idx is a running index 0 to 255.

408
Modulation and Coding Techniques in Wireless Communications
ABCD
EFGH
DC
EFGH
ABCD
EFGH
ABCD
ABCD
EFGH
512 FFT
1024 FFT
2048 FFT
Figure 10.18
Allocation of sequence sub-blocks for each FFT
SA-Preamble sequences are partitioned and each partition is dedicated to a speciﬁc base station type
like macrocell BS, Macro Hotzone BS, Femto BS. The base station types are categorized into macro BS
and non-macro BS cells by hard partition with 255 sequences (85 sequences per segment ∗3 segments)
dedicated for macro BS. The non-macro BS information is broadcast in a hierarchical structure, which
is composed of S-SFH Sub-Packet 3 and AAI SCD message.
For the 512-FFT size, the 288-bit SA-Preamble sequence is divided into eight main blocks, namely,
A, B, C, D, E, F, G, and H. The length of each block is 36 bits. Each segment ID has different sequence
blocks. For the 512-FFT size, A, B, C, D, E, F, G, and H are modulated and mapped sequentially in
ascending order onto the SA-Preamble subcarrier-set corresponding to segment ID as shown in Figure
10.5. For higher FFT sizes, the basic blocks (A, B, C, D, E, F, G, H) are repeated in the same order. For
instance in the 1024-FFT size, E, F, G, H, A, B, C, D, E, F, G, H, A, B, C, D are modulated and mapped
sequentially in ascending order onto the SA-Preamble subcarrier-set corresponding to segment ID.
A circular shift is applied over three consecutive sub-carriers after applying subcarrier mapping. Each
subblock has common offset. The circular shift pattern for each subblock is:
[2,1,0. . .. . .., 2,1,0, . . ..., 2,1,0, 2,1,0, DC, 1,0,2, 1,0,2, . . .. . ., 1,0,2, . . .. . ..1,0,2] where the shift is
right circular.
10.6.2.2.1.3
Superframe Header (SFH)
Superframe Header (SFH) is transmitted in the ﬁrst subframe
in every superframe. It carries essential system parameters and system conﬁguration information. The
SFH is divided into two parts: Primary Superframe Header (P-SFH) and Secondary Superframe Header
(S-SFH). P-SFH is transmitted in every superframe while it is not necessary to transmit S-SFH in every
superframe.
The physical processing block diagram for P-SFH and S-SFH is shown in Figure 10.19. It should be
pointed out that the diagram is applicable to both P-SFH and S-SFH.
TBCC channel coding is used for both P-SFH and S-SFH. The encoded bit sequence is modulated
using QPSK. Two-stream SFBC with two Tx antennas is used for P-SFH and S-SFH transmission. For
more than 2-Tx antenna conﬁgurations, the P-SFH and S-SFH are transmitted using 2-stream SFBC with
precoding, which is decoded by the Mobile Station (MS) without any information on the precoding and
antenna conﬁguration.
CRC
Addition
Channel
Encoding
QPSK
Modulation
MIMO
Encoder/
Precoding
SFH IE
Figure 10.19
Physical processing block diagram for SFH

Standardization in IEEE 802.11, 802.16
409
The P-SFH information element (IEs) contains essential system information and it is mapped to the
P-SFH. The format of the P-SFH information element (IE) is: LSB of super frame number, information
related to S-SFH including: S-SFH change count and change bitmap, S-SFH size extension, MCS
indication of S-SFH, S-SFH scheduling information.
The S-SFH IE is mapped to the S-SFH. Essential system parameters and system conﬁguration in-
formation belonging to the S-SFH are categorized into three S-SFH subpacket IEs such as SP1, SP2
and SP3. These SPs are transmitted in different timing and periodicity. The periodicity of SP (TSP)
is determined with TSP1 < TSP2 < TSP3. Each S-SFH subpacket IE is of a ﬁxed size. S-SFH SP1 IE
contains information for network re-entry. S-SFH SP2 IE contains information for initial network entry
and network discovery. S-SFH SP3 IE contains the rest of system parameters.
10.6.2.2.1.4
Initial Network Entry
In this part, we can have a quick look at the initial network entry
procedure since the procedure is mainly related to DL control information. The procedure for initialization
of an AMS shall be divided into the following steps:
(a) Scan for DL channel (mainly Primary and Secondary Advanced Preamble) and establish DL PHY
synchronization with the BS.
On initialization or after signal loss, the MS shall acquire the DL PHY synchronization by Primary
and Secondary A-Preamble.
The MS shall have nonvolatile storage in which the last operational parameters are stored and,
when the MS needs to acquire DL PHY synchronization, it may at ﬁrst try synchronization using the
stored DL channel information. But if the trial fails, the MS shall begin to scan the possible channels
of the DL frequency band of operation until it ﬁnds a valid DL signal.
(b) Obtain DL/UL parameters (from P-SFH/S-SFH IEs and so on) and establish DL MAC synchroniza-
tion.
For initial network entry, once the MS has achieved DL PHY synchronization with a BS, the MS
shall decode the P-SFH and S-SFH in order to obtain the necessary system information containing
the DL and UL parameters for the initial network entry. Based on the network information such as
the NSP list, the MS shall decide whether to continue the network entry process with this BS or to
scan for other BSs. If bar= this cell does not allow access of new MS and the MS shall select a
different cell to restart network entry procedure.
If the MS succeeds to decode the essential system information, the MS is DL MAC synchronized
with the BS.
(c) Perform ranging and automatic adjustment.
Ranging is the process of acquiring the correct timing offset, frequency offset and power adjust-
ments so that the MS’s transmissions are aligned with the BS, and they are received within the
appropriate reception thresholds.
After DL synchronization, the MS shall attempt to perform initial ranging with the BS. If the
ranging procedure is successfully completed, the MS is UL synchronized with the BS and obtains
Temporary Station ID (TSTID) from the BS.
(d) Negotiate basic capability.
Right after completion of ranging, the MS informs the BS of its basic capabilities by transmitting
station basic capability request message.
Upon receipt of the station basic capability request message from the MS, the BS determines
whether it could allow or could support the requested feature set or MAC and/or PHY protocol
revisions. The BS will send back the basic capability response message to indicate the common
supported features.

410
Modulation and Coding Techniques in Wireless Communications
(e) Perform MS authorization and key exchange.
If authorization support is enabled in basic capability negotiation, the BS and the MS shall perform
authorization and key exchange and key agreement procedure. If authorization support is disabled,
the step of MS authorization and key exchange shall be skipped.
(f) Perform registration, and setup default service ﬂows.
Registration is the process by which the MS is allowed to enter into the network. After authorization
and key exchange are ﬁnished, the MS informs the BS of its capabilities and requests the registration
for entry into the network.
The example procedure for initialization of an MS is shown in Figure 10.20. This ﬁgure shows the overall
ﬂow between the stages of initialization in an MS. This ﬁgure does not include error paths and is shown
simply to provide an overview of the process.
10.6.2.2.1.5
Advanced MAP (A-MAP)
The Advanced MAP (A-MAP) carries unicast service con-
trol information. Unicast service control information consists of user-speciﬁc control information and
No
Scan for
DL channel
Obtain
P-SFH/S-SFH IE
SP1
Remaining S-
SFH IEs
acquired
Ranging&
automatic
adjustments
Ranging & auto
matic adjust
ments complete
& obtain TSTID
assigned
Negotiate
basic capabilities
Basic
capabilities
negotiated
MS authorization
and
key exchange
MS
Authorization &
key exchange
complete
Register with BS
Registration
complete &
obtain STID
assigned & setup
default service
flows
Operational
Cell bar bit == 0?
Yes
DL synch. with
a target cell
established
DL PHY synch.
with a target
cell established
Preferred cell
type?
P-SFH/S-SFH
IE SP1
acquired
Yes
Obtain
Remaining S-SFH
IEs
No
Figure 10.20
MS Initialization Network Entry Procedure

Standardization in IEEE 802.11, 802.16
411
UL
SF 4
UL
SF 6
UL
SF 5
UL
SF 7
DL
SF 0
DL
SF 2
DL
SF 1
DL
SF 3
A-MAP
A-MAP
A-MAP
A-MAP
Figure 10.21
Example of locations of A-MAP region in a TDD system (DL:UL ratio=4:4)
non-user-speciﬁc control information. User-speciﬁc control information is further divided into assign-
ment information, HARQ feedback information, and power control information, and they are transmitted
in the assignment A-MAP, HARQ feedback A-MAP, and power control A-MAP respectively.
All the A-MAPs share a region of physical resources called A-MAP region. A-MAP regions shall be
present in all DL unicast subframes. When default TTI is used, DL data allocations corresponding to
an A-MAP region occupy resources in the Advanced Air Interface (AAI) subframe where the A-MAP
region is located.
A-MAP consists of both user-speciﬁc control information and non-user-speciﬁc control information.
User-speciﬁc control information is further divided into assignment information, HARQ feedback in-
formation, and power control information, and they are transmitted in the assignment A-MAP, HARQ
feedback A-MAP, and power control A-MAP, respectively. All the A-MAPs share a region of physical
resources called A-MAP region. An example of A-MAP region location in TDD with 4:4 subframe
DL:UL split is illustrated in Figure 10.21.
In the DL subframes where the A-MAP regions can be allocated, each frequency partition may contain
an A-MAP region. The A-MAP region occupies the ﬁrst few distributed LRUs in a frequency partition.
The structure of an A-MAP region is illustrated as an example in Figure 10.22. The resources occupied by
A-MAP Region
Pr mary Frequency part t on
Loca zed
D str buted
Figure 10.22
Example location of an A-MAP region

412
Modulation and Coding Techniques in Wireless Communications
Sequence
Generation
Modulation
and
repetition
Symbol sequence
to subcarrier
mapping
Primary fast
feedback
payload
Primary fast
feedback channel
symbol s[k]
Figure 10.23
Mapping of information in the PFBCH
each A-MAP physical channel may vary depending on the system conﬁguration and scheduler operation.
The A-MAP region consists of a number of distributed LRUs.
10.6.2.3
UL Control Channels
The UL control channels carry multiple types of control information in order to support different air
interface procedures. Information contained in the control channels is classiﬁed into:
1. Channel quality feedback
2. MIMO feedback
3. HARQ feedback (ACK/NACK)
4. Uplink synchronization signals
5. Bandwidth request
6. E-MBS feedback
7. Frequency partition information
10.6.2.3.1
Fast Feedback Control Channel
The UL fast feedback channel carries channel quality feedback and MIMO feedback and BW RE-
Qindicators. There are two types of UL fast feedback control channels: primary fast feedback channel
(PFBCH) and secondary fast feedback channels (SFBCH). The UL fast feedback channel starts at a
pre-determined location, with the size deﬁned in a DL broadcast control message.
The UL PFBCH carries 4 to 6 bits of information, providing wideband and narrowband channel
quality feedback and MIMO feedback. It is used to support robust feedback reports. The UL SFBCH
carries narrowband CQI and MIMO feedback information. The number of information bits carried in
the SFBCH ranges from 7 to 24. The process of composing the PFBCH and SFBCH are illustrated in
Figure 10.23 and Figure 10.24.
The DRUs occupied by fast feedback channel are permuted by UL tile permutation to form distributed
LRUs for both data and control resource/channel. A UL feedback mini-tile (FMT) is deﬁned as two
contiguous subcarriers by six OFDM symbols. The UL feedback control channels are formed by applying
the UL mini-tile permutation to the LRUs allocated to the control resource. The fast feedback channels
are comprised of three RFMTs.
The primary fast feedback channel is comprised of three RFMTs.
The secondary fast feedback channel has the same physical control channel structure as the primary
fast feedback channel. The secondary fast feedback channels are comprised of three RFMTs.
Channel
Coding
Symbol sequence
to subcarrier
mapping
Secondary
fast feedback
payload
Secondary fast
feedback channel
symbol
Modulation
(QPSK)
Figure 10.24
Mapping of information in the SFBCH

Standardization in IEEE 802.11, 802.16
413
Figure 10.25
2 × 2 HMT Structure
10.6.2.3.2
HARQ Feedback Control Channel
HARQ feedback (ACK/NACK) is used to acknowledge DL transmissions. Multiple codewords in MIMO
transmission can be acknowledged in a single ACK/NACK transmission.
Each UL HARQ feedback resource consists of three RFMTs. A total resource of three distributed 2×6
RFMTs supports six UL HARQ feedback channels. The 2×6 RFMTs are further divided into UL HARQ
mini-tiles (HMT). A UL HARQ mini-tile has a structure of two subcarriers by two OFDM symbols as
illustrated in Figure 10.25.
10.6.2.3.3
Sounding Channel
Uplink channel sounding provides the means for the BS to determine UL channel response for the
purpose of UL closed-loop MIMO transmission and UL scheduling. In TDD systems, the BS can also
use the estimated UL channel response to perform DL closed-loop transmission to improve system
throughput, coverage and link reliability. In this case BS can translate the measured UL channel response
to an estimated DL channel response when the transmitter and receiver hardware of BS and AMS are
appropriately calibrated.
The sounding channel occupies a single OFDMA symbol in the UL sub-frame, which is located in the
beginning of the UL sub-frame. Each UL sub-frame can only contain one sounding channel. Multiple
sub-frames in a 5-ms radio frame can be used for sounding. The number of subcarriers for the sounding
in a Physical Resource Units (PRU) is 18 adjacent subcarriers.
10.6.2.3.4
UL Ranging Channel
The UL ranging channel (RCH) is used for UL synchronization. The UL ranging channel can be further
classiﬁed into non-synchronized ranging channel (NS-RCH) and synchronized ranging channel (S-RCH)
for non-synchronized and synchronized MS. The ranging channel for synchronized MSs is used for

414
Modulation and Coding Techniques in Wireless Communications
periodic ranging and the ranging channel for non-synchronized MSs is used for initial ranging. An MS
cannot transmit any other uplink burst or uplink control channel signal in the advanced air-interface
(AAI) subframe where it transmits a ranging signal by using the NS-RCH.
10.6.2.3.5
Bandwidth Request Channel
Bandwidth request information is transmitted using contention based random access on this control
channel. The bandwidth request (BR) channel contains resources for the AMS to send a BR preamble
and an optional quick access message.
In the LZone with PUSC, a BW REQ tile is deﬁned as four contiguous subcarriers by six OFDM
symbols. The number of BW REQ tiles per BW REQ channel is three. Each BW REQ tile carries a BW
REQ preamble only. In the Mzone, a BW REQ tile is deﬁned as six contiguous subcarriers by six OFDM
symbols. Each BW REQ channel consists of three distributed BW-REQ tiles. Each BW REQ tile carries
a BW REQ preamble and a quick access message. The AMS may transmit the access sequence only and
leave the resources for the quick access message unused.
Each BR channel shall comprise of three distributed BR tiles for frequency diversity. A BR tile in the
M-Zone is deﬁned as six contiguous subcarriers by six OFDM symbols. The BWREQ tile is made up
of two parts – a preamble portion and a data portion. The preamble portion transmits the BR preamble
on a resource that spans four subcarriers by six OFDM symbols. The data portion of the BWREQ tile
spans two contiguous subcarriers by six OFDM symbols and transmits the quick access message for the
three-step BR. For the three-step BR, 16 bits of BW request information is constructed from 12 bits of
STID and 4 bits of pre-deﬁned BR information.
10.6.2.4
DL PHY Structure
Each downlink subframe consists of Physical Resource Units (PRUs). The size of one PRU is equal to
Psc subcarriers by Nsym OFDMA symbols. Psc is equal to 18 and Nsym is equal to the size of the subframe,
that is, to ﬁve, six or seven OFDMA symbols.
PRUs are mapped to Logical Resource Units (LRUFPs). This mapping is done in several steps (see
Figure 10.26):
1. Mapping of the PRUs to the subband and miniband PRUs (PRUsb and PRUmb);
2. Permutation of the PRUmbs. Permutated PRUmbs are denoted by PPRUmbs;
3. Mapping of the PRUsbs and PPRUmbs to the Frequency Partitions (PRUFPs);
4. Mapping of the PRUFPs to the Contiguous and Distributed Resource Units (CRUFPs and DRUFPs);
5. Mapping of the CRUFPs to the contiguous LRUFPs (CLRUFPs);
Mapping of the DRUFPs to the distributed LRUFPs (DLRUFPs) by subcarrier permutation.
10.6.2.4.1
Mapping of the PRUs to the Subband and Miniband PRUs
One subband comprises N1=4 PRUs; one miniband comprises N2=1 PRU. A number of the allocated
subbands, denoted by Ksb, are deﬁned by Downlink Subband Allocation Count (DSAC) transmitted in
the SFH. The maximum number of subbands depends on the FFT size (see Table 10.8). The minimum
number of subbands is equal to 0.
PRUs, which have not been allocated to subbands, are allocated to minibands. PRUSB denotes PRU
allocated to subband, PRUMB denotes PRU allocated to miniband. There are LSB=N1· Ksb PRUSBs
and LMB=Npru- LSB PRUMBs. PRUs are permuted by the outer permutation. The choice of the outer
permutation scheme depends on the FFT size and the actual number of the allocated subbands. Figure
10.27 shows outer permutation for the case when the FFT size is equal to 512 and the number of subbands
is equal to 4.

Standardization in IEEE 802.11, 802.16
415
PRU
0
NPRU-1
PRUSB
0
LSB-1
PRUMB
0
LMB-1
PPRUMB
0
LMB-1
PRUFP0
0
LFP0-1
PRUFP
0
LFP...-1
CRUFP0
0
0
LCRU,FP0 -1
LDRU,FP0 -1
CRUFP
DRUFP
0
0
0
0
0
0
DRUFP0
CLRUFP0
DLRUFP0
CLRUFP
DLRUFP
LCRU,FP0 -1
LDRU,FP0 -1
LCRU,F... -1
LCRU,F... -1
LDRU,F... -1
LDRU,F... -1
Outer
permutation
Miniband
permutation
Subcarrier
permutation
Subcarrier
permutation
Permutation
Permutation
Figure 10.26
General structure of the PRU to LRU mapping

416
Modulation and Coding Techniques in Wireless Communications
Table 10.8
The maximum number of subbands and the number of PRUs
FFT size
512
1024
2048
The maximum number of subbands
4
10
21
The number of PRUs (Npru)
24
48
96
10.6.2.4.2
Permutation of the PRUmbs
PRUMBs undergo miniband permutation. Figure 10.27 shows miniband permutation for eight minibands.
10.6.2.4.3
Mapping of the PRUsbs and PRUmbs to the Frequency Partitions
PRUSBs and PRUMBs are mapped to the frequency partitions. The Downlink Frequency Partition Con-
ﬁguration (DFPC) is transmitted in SFH. It deﬁnes the number of frequency partitions (FPCT) and
the Frequency Partition Size (FPSi). The frequency partitions are enumerated from 0 to FPCT-1. The
maximum number of the frequency partitions is equal to four. FPSi deﬁnes the size of the frequency
partition i in PRUs. FPS0 is equal to 0 for some DFPCs.
The Downlink Frequency Partition Subband Count (DFPSC), transmitted in SFH, deﬁnes the number
of subbands allocated to FPi for i > 0. The number of subbands allocated to FP0 (KSB,FP0) is calculated
from KSB, FPCT and DFPSC. The number of minibands for each frequency partition is calculated from
FPSi and KSB,FPi. Figure 10.27 shows frequency partitioning for FPCT = 4, FPSi = 6, 0 ≤i ≤3,
DFPSC = 1.
10.6.2.4.4
Mapping of the PRUFPs to the Contiguous and Distributed Resource Units
PRUFPis are mapped to the contiguous and distributed recourse units (CRUs and DRUs). There are sub-
band and miniband-based CRUs. The number of the subband-based CRUs in FP0 (DCASSB,0), measured
in subbands, is signal in SFH. The number of the miniband-based CRUs in FP0 is deﬁned by DCASMB,0,
signaled in SFH, and a look-up table. The number of the subband and miniband-based CRUs in FPi, i
> 0, is calculated from DCASi, signaled in SFH, and KSB,FPi. Those PRUFPs, which are not allocated to
CRUs, are allocated to DRUs.
When PRUFPs are mapped to CRUs and DRUs the mapping to DRUs and to miniband-based CRUs
is done with permutation. This permutation is done by means of the permutation sequence, which is
generated by random sequence generator. The initial state of the random sequence generator is determined
by IDcell.
Figure 10.27 shows mapping of the PRUFPs to CRUs and DRUs for DCASSB,0 = 1 and DCASMB,0 = 0.
10.6.2.4.5
Mapping of the CRUs and DRUs to the Contiguous and Distributed Logical Resource
Units
The subband-based CRUs are directly mapped to the subband contiguous LRUs (SLRUs) and the
miniband-based CRUs are directly mapped to the miniband contiguous LRUs (NLRUs).
The distributed LRUs (DLRUs) are obtained by subcarrier permutation of the DRUs. The permutation
is performed on the pairs of data subcarriers. It spreads the subcarriers of one DRU across the whole
distributed resource allocation.
10.6.2.5
UL PHY Structure
The UL physical structure is generally similar to the DL physical structure. The major differences are:
r There is one additional size of the PRU corresponding to type-4 AAI subframe. Nsym is equal to 9 in
that case.
r The minimum unit for forming the distributed logical resource unit (DLRU) is a tile.

Standardization in IEEE 802.11, 802.16
417
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
18
19
16
17
20
21
22
23
PRUMB
PRUSB
PRU
PPRUMB
0
1
2
3
4
5
CRUFP0
0
1
2
3
CRUFP1
4
5
DRUFP1
0
1
2
3
CRUFP2
4
5
DRUFP2
0
1
2
3
CRUFP3
4
5
DRUFP3
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
0
1
2
3
4
5
6
7
0
1
2
3
4
5
6
7
0
1
2
3
4
5
0
1
2
3
4
5
PRUFP1
0
1
2
3
4
5
0
1
2
3
4
5
PRUFP0
PRUFP2
PRUFP3
Figure 10.27
Frequency partition for BW = 5 MHz, Ksb = 4, FPCT = 4, FPS0 = FPSi = 6, DFPSC = 1

418
Modulation and Coding Techniques in Wireless Communications
Pilot stream 1
-pilot
-data
Pilot stream 2
Figure 10.28
Pilot pattern for 1 DL data stream
UL DLRUs may be further divided into data, bandwidth request, and feedback regions.
The PRU to Logical Resource Unit (LRU) mapping for UL differs from the PRU to LRU mapping
for DL in how Distributed Resource Units (DRUs) are used to form Distributed Logical Resource Units
(DLRUs). In the case of DL the minimum unit for permutation algorithm is a pair of subcarriers, in
the case of UL the minimum unit is a tile. The tile size is 6 x Nsym. Nsym depends on the AAI subframe
type.
10.6.2.6
DL Pilot Structure
16m supports common and dedicated pilot. The common pilot can be used by all MSs, the dedicated
pilot is intended to be used only by MS allocated to the speciﬁc resource allocation. The common and
dedicated pilots use uniﬁed pilot patterns. Pilot patterns are designed for up to eight data streams. Figure
10.28 – 10.30 show pilot structure for 1, 2 and 4 DL data streams. Subcarrier index is increasing from
top to bottom and symbol index is increasing from left to right.
10.6.2.7
UL Pilot Structure
UL pilot is dedicated pilot and it is intended to be used only by MS allocated to the speciﬁc resource
allocation. UL pilot can be precoded or beamformed in the same way as date subcarriers. They are
deﬁned for up to four streams. The pilot patterns for UL CLRUs are the same as for DL. The pilot
patterns for UL DLRU are shown in Figure 10.31 and Figure 10.32.

Standardization in IEEE 802.11, 802.16
419
Stream 1
Stream 2
- pilot
- data
- empty
Figure 10.29
Pilot pattern for 2 DL data streams
Stream 4
Stream 3
Stream 2
Stream 1
- pilot
- data
- empty
Figure 10.30
Pilot pattern for 4 DL data streams

420
Modulation and Coding Techniques in Wireless Communications
- pilot
- data
Figure 10.31
Pilot pattern for 1 UL stream
10.6.2.8
Downlink MIMO
802.16m supports several DL MIMO transmission schemes. Those schemes can be classiﬁed by the
number of users allocated to the same resource unit into two categories:
r Single-user MIMO (SU-MIMO)
r Multi-user MIMO (MU-MIMO).
Depending on the precoding type DL MIMO schemes can be classiﬁed into another two categories:
r DL MIMO with adaptive precoding or Closed-loop MIMO (CL MIMO)
r DL MIMO with non-adaptive precoding or Open-loop MIMO (OL MIMO).
Figure 10.33 shows the architecture of the DL MIMO at a transmission side. The MIMO encoder maps
MIMO layers into MIMO streams. The MIMO precoder maps MIMO streams into Tx antennas.
The input of the MIMO encoder is a vector s of the length Mt, where Mt is a number of MIMO
streams. For SU-MIMO all Mt symbols are scheduled to the same AMS and belong to the same coding
and modulation information path, which is called MIMO layer. For MU-MIMO Mt symbols are scheduled
to Mt different AMSs and belong to the different layers. The output of the MIMO encoder is an MtxNF
matrix, where NF is the number of subcarriers occupied by one MIMO block. This matrix is called
MIMO space-time coding (STC) matrix. 802.16m supports four MIMO encoding formats (MEF):
r Space-frequency block coding (SFBC)
r Vertical encoding (VE)
r Horizontal encoding (HE)
r Conjugate data repetition (CDR).
Stream 1
-pilot
-data
-empty
Stream 2
Figure 10.32
Pilot pattern for 2 UL streams

Standardization in IEEE 802.11, 802.16
421
MIMO 
encoder
MIMO 
precoder
Subcarrier
mapper
Subcarrier
mapper
F
t N
M
x
11
x
11
z
F
t N
N
z
1s
t
M
s
Figure 10.33
DL/UL MIMO architecture at a transmission side
Table 10.9 shows the input of the MIMO encoder s and the output of the MIMO encoder x for different
MEFs.
802.16m supports six DL MIMO modes given in Table 10.10. Mode 0 and 5 are Tx diversity modes,
while Mode 1 – 4 are spatial multiplexing (SM) modes.
One MIMO block occupies two subcarriers in spatial multiplexing modes and one in Tx diversity
modes.
The number of MIMO layers at the input of the MIMO encoder is equal to one for SU-MIMO and it
is equal to the number of streams for MU-MIMO.
The number of streams should not exceed the number of receive antennas at AMS for MIMO Mode
1 and 2.
The number of supported transmit antennas at BS (Nt) can be equal to 2, 4 or 8.The number of streams
(Mt) varies from 1 to 8.
The last column of the Table 10.10 shows which combinations of MIMO modes and DL permutations
are allowed. Note, that MIMO Mode 5 is supported only inside so-called Open-Loop (OL) Region.
(Table 10.10 shows MIMO modes outside OL region.)
MIMO precoding is deﬁned by NtxMt precoding matrix W(k), where k is the index of the physical
subcarrier where W(k) is applied.
With non-adaptive precoding the precoding matrix is selected from the base codebook or a subset of
the base codebook. The base codebooks are deﬁned for 2, 4 and 8 transmit antennas.
Table 10.11 and Table 10.12 illustrate correspondingly the rank-1 and rank-2 base code books for two
transmit antennas. The precoding matrix is changing every N1PSC contiguous physical subcarriers for
SFBC with VE and every N1 PRUs with HE.
Table 10.9
MIMO encoding formats
MIMO encoding
format
Input
Output
Note
SFBC
s =
 s1
s2

x =
 s1 −s∗
2
s2
s∗
1

VE
s =
⎡
⎣
s1
· · ·
sM
⎤
⎦
x =
⎡
⎣
s1
· · ·
sM
⎤
⎦
s1 . . . sM belong to the same layer
HE
s =
⎡
⎣
s1
· · ·
sM
⎤
⎦
x =
⎡
⎣
s1
· · ·
sM
⎤
⎦
s1 . . . sM belong to the different layers
CDR
s = s1
x =
	
s1 s∗
1


422
Modulation and Coding Techniques in Wireless Communications
Table 10.10
DL MIMO modes
Mode index
Description
MEF
Number of
transmit
antennas Nt
Number of
streams Mt
Supported
permutation
0
OL SU-MIMO
SFBC
2
4
8
2
2
2
DLRU;
NLRU
1
OL SU-MIMO
VE
2
4
8
1-2
1-4
1-8
DLRU,
Mt=2;
NLRU,
Mt<=4;
SLRU
2
CL SU-MIMO
VE
2
4
8
1-2
1-4
1-8
NLRU,
Mt=1;
SLRU
3
OL
MU-MIMO
HE
2
4
8
2
2-4
2-4
SLRU
4
CL
MU-MIMO
HE
2
4
8
2
2-4
2-4
NLRU;
SLRU
5
OL SU-MIMO
CDR
2
1
Not supported
outside OL
region
4
1
8
1
With adaptive precoding the precoding matrix is derived from the feedback of the AMS. The feedback
can be:
r codebook – based
r sounding – based.
If the codebook based feedback is used then AMS selects preferred matrix from the base codebook and
sends Preferred Matrix Index (PMI), which represents an entry of the base codebook to the BS. The BS
Table 10.11
MIMO base codebook of
rank-1 for two transmit antennas
	 c1
c2

T
0
	
0.7071
−0.7071

T
1
	
0.7071
−0.5 −0.5i

T
2
	
0.7071
−0.7071i

T
3
	
0.7071
0.5 −0.5i

T
4
	
0.7071
0.7071

T
5
	
0.7071
0.5 + 0.5i

T
6
	
0.7071
0.7071i

T
7
	
0.7071
−0.5 + 0.5i

T

Standardization in IEEE 802.11, 802.16
423
Table 10.12
MIMO base codebook of
rank-2 for two transmit antennas
 c11
c12
c21
c22
T
0
 0.7071
−0.7071
0.7071
0.7071
T
1
 0.7071
−0.5 −0.5i
0.7071
0.5 + 0.5i
T
2
 0.7071
−0.7071i
0.7071
0.7071i
T
3
 0.7071
0.5 −0.5i
0.7071
−0.5 + 0.5i
T
calculates precoder using PMI. There are three modes of the codebook based feedback and depending
on the mode the different type of codebooks is used:
r The base mode: the base codebook.
r The transformation mode: the transformation codebook.
r The differential mode: the differential and the base codebook.
The base codebook is the same codebook as for non-adaptive precoding.
The transformation codebook is obtained from the base codebook according to (10.2):
vi =
Rvi
∥Rvi ∥
(10.2)
where vi is the i-th codeword of the base codebook, vi is the i-th codeword of the transformed codebook
and R is Nt by Nt correlation matrix. The channel correlation matrix is computed periodically at AMS
according to (10.3) and is fed back to the BS:
R = E(H H
i j Hi j)
(10.3)
where Hij is the correlation matrix for the i-th OFDM symbol and j-th subcarrier. The averaging is done
over a number of OFDM symbols and all subcarriers. The correlation matrix is a conjugate-symmetrical.
Because of that only the upper triangular elements are fed back to the BS. They are normalized and
quantized before transmission. The transformation codebook is used only for rank-1 MIMO.
In the differential mode the precoder V(t) is computed from the base or from the differential codebook.
The feedback matrix D(t) is selected from the base codebook at the start/reset of the feedback, where t
is the feedback index. At the start of the feedback this index is set to 0 and it is reset to 0 at t = Tmax+1.
At start/reset of the feedback the precoder can be calculated from the feedback matrix alone: V(0) =
D(0). At t = 1,. . .,Tmax the precoder is computed from the rotation matrix QV(t) and the feedback matrix
D(t): V(t)= QV(t-1)D(t). The dimension of D(t) is NtxMt .The rotation matrix QV(t) is computed from the
precoder V(t). It is a unitary matrix. Its dimension is NtxNt .The feedback matrix D(t) is selected from
the differential codebook. Table 10.13 illustrates the differential codebook for Nt = 2, Mt = 1 and Table
10.14 for Nt = 2, Mt = 2.

424
Modulation and Coding Techniques in Wireless Communications
Table 10.13
Differential codebook for Nt = 2, Mt = 1
1
	
1
0

T
2
	
cos(15◦)
sin(15◦)

T
3
	
cos(15◦)
sin(15◦) exp( j120◦)

T
4
	
cos(15◦)
sin(15◦) exp(−j120◦)

T
10.6.2.9
MIMO Feedback
16m UL fast feedback channel carries channel quality feedback and MIMO feedback. MIMO feedback
information includes: STC rate, subband selection, MIMO stream index, Quantized correlation matrix,
PMI report, CQI and preferred MIMO feedback mode. In order to support both OL and CL MIMO
operations, eight MIMO feedback modes have been deﬁned in 16m speciﬁcation. When allocating a
feedback channel, the MIMO feedback mode shall be indicated to the MS, and the MS will feedback
information accordingly. Depending on the MIMO feedback format, the MIMO feedback information is
mapped to PFBCH or to SFBCH.
10.6.2.10
Uplink MIMO
The architecture of the UL MIMO is illustrated by Figure 10.33. It is similar to the DL MIMO. Single-
user MIMO and multi-user MIMO, which is called collaborative spatial multiplexing, is supported.
Unlike DL MIMO in the case of the UL MU-MIMO all symbols of the vector s at the input of the
MIMO encoder belong to the same layer and horizontal encoding is not supported. 802.16m supports
two MIMO encoding formats (MEF) for UL:
r Space-frequency block coding (SFBC)
r Vertical encoding (VE).
802.16m supports ﬁve UL MIMO modes given in Table 10.15.
One MIMO block occupies two subcarriers in mode 0 and one subcarrier in all other modes.
The number of supported transmit antennas Nt is equal to 1, 2, or 4.The minimum number of receive
antennas Nr is equal to 2. The number of streams Mt varies from 1 to 4.
The last column of the Table 10.15 shows what combinations of MIMO modes and UL permutations
are allowed.
Table 10.14
Differential codebook for Nt = 2, Mt = 2
1
 1
0
0
1
T
2
 cos(15◦)
sin(15◦)
sin(15◦)
−cos(15◦)
T
3

cos(15◦)
sin(15◦) exp( j120◦)
sin(15◦) exp( j120◦)
−cos(15◦)
T
4

cos(15◦)
sin(15◦) exp(−j120◦)
sin(15◦) exp(−j120◦)
−cos(15◦)
T

Standardization in IEEE 802.11, 802.16
425
Table 10.15
UL MIMO modes
Mode index
Description
MEF
Number of
transmit
antennas Nt
Number of
streams Mt
Supported
permutation
0
OL SU-MIMO
SFBC
2
4
2
2
DLRU;
NLRU
1
OL SU-MIMO
VE
1
2
4
1
1-2
1-4
DLRU,
Mt< = 2;
NLRU,
SLRU
2
CL SU-MIMO
VE
2
4
1-2
1-4
DLRU,
Mt< = 2;
NLRU,
SLRU
3
OL
MU-MIMO
VE
1
2
4
1
1-2
1-3
DLRU,
Mt = 1;
NLRU,
SLRU
4
CL
MU-MIMO
VE
1
2
4
1
1-2
1-3
DLRU,
Mt = 1;
NLRU,
SLRU
10.6.2.11
Channel Coding and Modulation
Channel coding procedure (Figure 10.34) starts with CRC (Cyclic Redundancy Code/Check) addition
and partitioning of the data burst into FEC blocks. CRC is appended to the data burst if it is partitioned
into more than one FEC block. Before partitioning data burst is padded if necessary to the nearest
speciﬁed burst size large than the data burst in question. CRC is deﬁned by the polynomial in (10.4):
D16 + D12 + D5 + 1
(10.4)
Randomization is done by Pseudorandom Binary Sequence (PRBS) generator illustrated in Figure
10.35. It is deﬁned by the polynomial in (10.5):
D15 + D14 + 1
(10.5)
Burst CRC 
addition
Burst partition
Randomization
FEC block 
CRC addition
FEC encoding
Bit selection 
and repetition
Collection
Modulation
Figure 10.34
Channel coding

426
Modulation and Coding Techniques in Wireless Communications
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
xor
xor
data in
data out
Figure 10.35
Data randomizer
PRBS is initialized by initial vector 011011100010101, written from LSB to MSB, for each FEC block.
Randomization is followed by addition of the CRC to every FEC block. CRC is deﬁned by the polynomial
in (10.4).
Double binary CRSC (Circular Recursive Systematic Convolutional) code is used. Convolutional turbo
code (CTC) encoder, illustrated on Figure 10.36, is deﬁned by the following polynomials:
r Feedback branch:
1 + D + D3
(10.6)
r Y parity bits:
1 + D2 + D3
(10.7)
r W parity bits:
1 + D3
(10.8)
Figure 10.36
CTC encoder

Standardization in IEEE 802.11, 802.16
427
Figure 10.37
Timing and signaling for DL HARQ
The structure of the CTC encoder includes two switches, which work in a synchronized way. First,
both switches are in position 1. The constituent encoder is fed by 2N bits in a natural order. Then, both
switches change position to 2, and the constituent encoder is fed by 2N interleaved bits. The output of
the CTC encoder is fed into the bit separation block in the following order:
A0 . . . AN−1B0 . . . BN−1Y1,0 . . . Y1,N−1Y2,0 . . . Y2,N−1W1,0 . . . W1,N−1W2,0 . . . W2,N−1
(10.9)
The bit separation block demultiplexes those bits into subblocks A, B, Y1, Y2, W1, W2. A0 . . . AN−1 go to
subblock A, B0 . . . BN−1 go to subblock B, etc. The six subblocks are separately interleaved according
to the procedure described in [2]. Next, interleaved subblocks are multiplexed into four blocks.
Collection block collects selected bits from each FEC block for H-ARQ transmission.
10.6.2.12
H-ARQ
The hybrid ARQ (H-ARQ) is based on the N-channel stop-and-wait (SAW) protocol (see Chapter 6).
For single carrier the maximum number of channels per MS is 16. For multi-carrier this number can be
larger. The maximum number of retransmissions is 4 or 8; 4 is a default value.
Figure 10.37 illustrates timing and signaling for DL HARQ. MS receives DL assignment A-MAP
and data burst in 1st sub-frame of i-th DL frame and tries to decode that data burst. After decoding
failure MS sends negative acknowledgment to BS in UL sub-frame 0 of the same frame. BS retransmits
data in the same DL subframe of the next frame. Transmission format and resource allocation may be
different. This process is repeated until BS receives positive acknowledgment or the maximum number
of retransmissions is reached.
Figure 10.38 illustrates timing and signaling for UL HARQ. MS receives UL assignment A-MAP in 1st
sub-frame of i-th DL frame and transmits UL data burs in subframe 0 of the same frame. BS tries to decode
that burst and after decoding failure it sends a new UL assignment A-MAP and negative acknowledgment
in the same DL subframe of the next frame. This process is repeated until BS successfully decodes
the data and sends positive acknowledgment to MS or the maximum number of retransmissions is
reached.
H-ARQ uses Incremental Redundancy (IR) for soft bits combining. Chase combining is supported as
a special case of IR.

428 
Modulation and Coding Techniques in Wireless Communications
Figure 10.38 
Timing and signaling for UL HARQ
References
[1] IEEE 802.16-2001, IEEE Standard for Local and Metropolitan Area Networks — Part 16: Air Interface for
Fixed Broadband Wireless Access Systems, Apr. 8, 2002.
[2] IEEE P802.16-2004. Air Interface for Fixed Broadband Wireless Access Systems, October 2004.
[3] IEEE P802.16e-2005, Air Interface for Fixed and Mobile Broadband Wireless Access Systems – Amendment
2: Physical and Medium Access Control Layers for Combined Fixed and Mobile Operation in Licensed Bands
and Corrigendum1,” February 2006.
[4] IEEE 802.16m System Requirements Document (SRD), Draft, 2010-01-04, http://wirelessman.org/tgm/.
[5] IEEE 802.16m Evaluation Methodology Document (EMD), Draft, 2009-01-15, http://wirelessman.
org/tgm/.
[6] IEEE 802.16m System Description Document (SDD), Draft, 2009-09-24, http://wirelessman.org/tgm/.
[7] IEEE P802.16m: Air Interface for Fixed and Mobile Broadband Wireless Access Systems. D3, Dec. 2009,
http://wirelessman.org/tgm/.
[8] IEEE 802.11TM-2007, IEEE Standard for Information Technology—Telecommunications and information ex-
change between systems—Local and metropolitan area networks—Speciﬁc requirements, Part 11: Wireless
LAN Medium Access Control (MAC) and Physical Layer (PHY) Speciﬁcations.
[9] IEEE 802.11nTM-2009, IEEE Standard for Information Technology—Telecommunications and information
exchange between systems—Local and metropolitan area networks—Speciﬁc requirements, Part 11: Wireless
LAN Medium Access Control (MAC) and Physical Layer (PHY) speciﬁcations, Amendment 5: Enhancements
for Higher Throughput.
[10] IEEE 802.16-2009, IEEE Standard for Local and metropolitan area networks Part 16: Air Interface for Broadband
Wireless Access Systems, May 2009.

11
Standardization in 3GPP
Asbjørn Grøvlen1, Kari Hooli2, Matti Jokimies3, Kari Pajukoski2,
Sergei Semenov3, and Esa Tiirola2
1Nokia, Denmark
2Nokia Siemens Network, Finland
3Nokia Corporation, Finland
In this chapter we consider the layer 1 (L1) procedures in more recent standards of 3GPP (the 3rd
Generation Partnership Project). Unlike the ﬁrst and second generation cellular systems oriented mostly
to the voice communications, third generation systems are designed ﬁrst of all for data communications.
This fact reﬂects the common trend in communications: the shift from voice to data. This trend clearly
already showed itself in wired communications. Nowadays only a small fraction of landlines trafﬁc
is used for voice transmission, and this fraction is constantly decreasing due to development of VoIP
technique. We can now see the beginning of the same process in cellular wireless systems. This process
needs a signiﬁcant increase in data rates, which poses some challenges, taking into account the hard
conditions of an air interface channel. However, the proper use of known modulation and coding schemes
allows this problem to be solved.
11.1
Standardization Process and Organization
11.1.1
General
The standardization organization specifying the standards of the Universal Mobile Telecommunications
System (UMTS) and the Long Term Evolution (LTE) is Third Generation Partnership Project (3GPP).
As a major difference to most telecommunications standardization bodies, 3GPP is not a legal entity, but
a partnership project of regional standards developing organizations (SDOs). Each company or other
entity participating in the standardization activities of 3GPP has to be a member of one of the regional
SDOs, or Organizational Partners (OPs), as they are called in 3GPP [2].
The coordination of 3GPP activities is carried out by the Program Coordination Group (PCG). The
PCG is responsible for overall time-frame and management of overall work progress. The speciﬁcations
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

430
Modulation and Coding Techniques in Wireless Communications
of 3GPP are created in the Technical Speciﬁcation Groups (TSGs). The actual technical details and the
text for standards are developed in the working groups (WGs) of the TSGs. TSG RAN (Radio Access
Network) is responsible for deﬁning the protocols and procedures of the air interface between the base
station and the user equipment (UE) for UMTS and LTE. The organization of 3GPP and speciﬁcally the
organization of TSG RAN are described in detail in the next section [3].
In 3GPP terminology, the radio access for UMTS is called Universal Telecommunications Radio
Access (UTRA), and for LTE, it is called Enhanced UTRA (E-UTRA) [4]. Typically, the terms UTRAN
(UTRA network) and E-UTRAN (E-UTRA network) are used in the RAN speciﬁcations to denote the
networks, as a contrast to the UE. However, this distinction is not always clear in 3GPP documentation,
and sometimes the terms UTRAN and E-UTRAN refer to the whole radio access level system, including
the UE.
11.1.2
Organization of 3GPP
As mentioned above, 3GPP consists of several TSGs. The current TSGs and their main responsibilities
are as follows:
r TSG CT; Core Network and Terminals
◦protocols of core networks and their counterparts in terminals
◦terminal aspects mainly related to smart cards (for example, to subscriber identity module (SIM))
r TSG GERAN; GSM EDGE Radio Access
◦radio access level aspects of GSM/GPRS/EGPRS networks and terminals
r TSG RAN; Radio Access Network
◦radio access level aspects of UTRA and E-UTRA networks and terminals
r TSG SA; Service and System Aspects
◦services, architecture, security, codecs and telecom management
Even though the air interface between the base station and the UE is under the responsibility of TSG
RAN and its WGs, the other TSGs and their WGs also create standards impacting the radio access level
functionalities in UTRA and E-UTRA. For example: Handovers and cell reselections from GERAN
to UTRAN and to E-UTRAN are speciﬁed by WGs of TSG GERAN. Radio access level encryption
standards are the responsibility of WG3 of TSG SA [3].
11.1.3
Organization of TSG RAN
Because TSG RAN is the 3GPP TSG having the main responsibility for the technologies covered by
this book, the structure of this TSG is addressed in more detail. TSG RAN consists of ﬁve WGs; their
primary responsibility areas are listed below:
r RAN WG 1 (RAN1); Radio layer 1
r RAN WG 2 (RAN2); Radio layer 2 and radio layer 3 RR (Radio Resource)
r RAN WG3 (RAN3); Iu, Iub, Iur, S1, and X2 interfaces, and UTRAN/E-UTRAN architecture
r RAN WG4 (RAN4); Radio performance, radio frequency parameters, and base station conformance
r RAN WG5 (RAN5); Mobile terminal conformance testing
In addition to the ﬁve WGs, TSG RAN has also an ad hoc group (AHG), RAN AHG1, for International
Telecommunications Union (ITU) work. This group coordinates TSG RAN work related to ITU-R.

Standardization in 3GPP
431
The detailed speciﬁcation responsibilities of the WGs are as follows:
r RAN1
◦physical channel structures
◦mapping of the transport channels onto physical channels
◦physical layer multiplexing
◦channel coding
◦error detection
◦spreading and modulation
◦physical layer procedures
◦deﬁnition of measurements and their provision by physical layer to upper layers
r RAN2
◦radio interface layer 2 protocols:
■medium access control (MAC)
■radio link control (RLC)
■packet data convergence protocol (PDCP)
◦radio resource control (RRC) on layer 3
r RAN3
◦interfaces between radio access level network elements: Iub, Iur, X2
◦interfaces between core network and radio access network: Iu, S1
◦overall UTRAN and E-UTRAN architecture
r RAN4
◦minimum requirements for transmission and reception parameters, and for channel demodulation
◦base station test procedures
◦requirements for other RAN level radio devices than UEs and base stations (for example, repeaters)
r RAN5
◦UE conformance test speciﬁcations, based on requirements speciﬁed by other groups (also by other
WGs than RAN WGs)
As can be seen above, the most relevant 3GPP WGs for the air interface layer 1 between the UE and the
base station are RAN4 and RAN1. Also, several of the items speciﬁed by RAN2 are relevant, especially
the MAC and RRC functionalities controlling L1. The conformance test speciﬁcations deal with layer 1
items, but they do not introduce any new requirements in addition to those in the speciﬁcations created
by other WGs [4]. More details on the RAN speciﬁcations are provided in a later sub-section, after the
standardization process and the 3GPP releases are presented.
11.1.4
Standardization Process
The outcomes of the standardization process are the technical speciﬁcations (TSs) and technical reports
(TRs). In general, the functionality is speciﬁed in normative parts of TSs, while TRs and informative sec-
tions of TSs provide further information for background, or they serve as guidelines for implementations,
or they are used as temporary documents for 3GPP internal purposes [5].
Typically, new features are handled ﬁrst in a study item, where various alternatives are evaluated. Also
the feasibility of the feature is assessed, and the results are documented in a TR. If the feature has been
evaluated on the TSG level to be feasible, the actual work item for the feature is started. Finally, the work
results in new TSs, or change requests (CR) to existing TSs.
The above-mentioned workﬂow in 3GPP may consist of three stages, at least in the case of major new
items. In stage 1, the service aspects are addressed. In this stage, the RAN WGs dealing with air interface
layer 1 aspects are usually not involved. In stage 2, the architectural aspects are standardized, and the

432
Modulation and Coding Techniques in Wireless Communications
existing stage 2 TSs are updated, or a new stage 2 TS is created. In this stage, air interface protocol
aspects are also included. Most stage 2 documents serve also as overall descriptions of the features.
In the ﬁnal stage, that is in the stage 3, the TSs specifying the functionalities in the detailed level are
created. The stages were speciﬁed originally by CCITT (Comit´e Consultatif International T´el´ephonique
et T´el´egraphique), which was later transformed to ITU Telecommunications standardization sector (ITU-
T) [5], [6]
It should be noted that the cover pages of the 3GPP TSs carry the following disclaimer: “The present
document has not been subject to any approval process by the 3GPP Organizational Partners and shall not
be implemented”. Thus, in principle the 3GPP TSs are not the formal standards for implementation, but
only the corresponding standards, published by the OPs, should be implemented. For example, the 3GPP
speciﬁcation TS 36.101 is transposed by European Telecommunications Standards Institute (ETSI) to the
ETSI speciﬁcation RTS/TSGR-0436101. This is done by changing the cover page, headers, and similar
information, but without altering the technical content. In practice, however, only the 3GPP standards
are referenced instead of the OP standards. However, in formal regulatory requirements, the reference is
primarily made to the regional documents published by the OPs.
The TRs intended for 3GPP internal use are not transposed by SDOs to their publications. These TRs,
which are often an outcome of a study item, are numbered as .8xx (for example, TR 25.820), in contrast
to the published TRs, which have numbering in form of .9xx (for example, TR 36.913) [5].
11.1.5
3GPP Releases
New features are introduced in new releases of 3GPP speciﬁcations, allowing the older releases to be
maintained and upgraded without impact on the new features.
The ﬁrst release of 3GPP was Release ’99, which speciﬁed the baseline of UMTS. The next major
layer 1 air interface features in RAN speciﬁcations after Release ’99 were HSDPA in Release 5, and
HSUPA in Release 6. These two were further enhanced to HSPA + in Release 7. LTE was introduced in
Release 8, and Release 10 is expected to introduce LTE-Advanced (LTE-A) [6].
The numbering of the ﬁrst release is according to the yearly release numbering of GSM in ETSI.
ETSI speciﬁed the GSM/GPRS/EDGE radio access systems (now under 3GPP TSG GERAN), and the
GSM/GPRS core network. The latter also became the basis of the 3GPP UMTS core network. Hence, it
was natural to adopt initially the release numbering of ETSI in 3GPP, too.
After Release ’99, the pace of yearly releases was not applied, and the intended Release ’00 was split
into two: Release 4 containing minor updates, and Release 5 introducing better support for packet-based
trafﬁc. The numbering of the releases was taken from the most signiﬁcant digit of the TS and TR version
number. The versions of TSs and TRs for approved Release ’99 speciﬁcations had version number in
the form of 3.x.x, while the intended Release ’00 had version numbers in the form of 4.x.x (the lower
version numbers were reserved for drafts). Therefore, the new numbering of the releases was started
from number four.
Even though new items are introduced in new releases, the association between features and releases
is somewhat ambiguous: The ﬁrst release, where a feature is included, depends on whether a speciﬁc
functionality or the whole service is addressed. For example, the LTE MBMS functionalities on layer 1
are speciﬁed to a great extent already in Rel-8, even though the whole MBMS feature is introduced in
Rel-9.
New versions of 3GPP speciﬁcations can be approved in TSG meetings, which are held four times
a year in the case of TSG RAN (in March, June, September, and December). The version levels are
designated by the month of the meeting; for example, 2009-03, 2009-06 and so on. (The actual month of
the TSG meeting is sometimes the preceding month, but the numbering is not altered.) Several releases
are maintained in parallel. For example, in TSG RAN meeting of September 2009, that is, on version

Standardization in 3GPP
433
level 2009-09, updates were approved on one or more RAN speciﬁcations of Releases 4, 5, 6, 7, 8 and 9
[7].
11.1.6
Frequency Bands and 3GPP Releases
The requirements on frequency bands can be release independent. That is, the frequency bands may
not be restricted to the 3GPP release where they are introduced, and the successors of the release. This
means that a UE, implemented according to a speciﬁc release, may support frequency bands that are
introduced in later releases. In such cases, extra requirements, not included in the base release of the UE,
are imposed on the UE. However, these requirements are typically limited to the radio frequency level
speciﬁcations of the new band, and to the signaling of the new band numbers [8].
11.1.7
RAN Speciﬁcations
The UTRA TSs and TRs created in TSG RAN are preﬁxed with “25.”, that is, they belong to the
“series 25” speciﬁcations. The RAN5 UTRA test speciﬁcations have a different preﬁx “34.”, because the
predecessor of RAN5 was under a different TSG (under TSG T for terminals, now closed). The E-UTRA
TSs and TRs are preﬁxed with “36.”. The ﬁrst number after the dot (or the preﬁx in case of UTRA test
speciﬁcations) denotes the WG responsible for the TS as follows:
r RAN1: 25.2xx, 36.2xx
r RAN2: 25.3xx, 36.3xx
r RAN3: 25.4xx, 36.4xx
r RAN4: 25.1xx, 36.1xx
r RAN5: 34.xxx, 36.5xx
There are, however, several exceptions. For example, the speciﬁcation TS 25.317 is under the responsi-
bility of RAN4, even though the numbering refers to RAN2.
The TRs are numbered differently. As mentioned earlier, in the case of TRs the ﬁrst number after the
dot is 8 or 9, depending on the type of the TR. Hence, the RAN TRs on UTRA have numbers 25.8xx,
25.9xx, 34.8xxx, and 34.9xx, and those on E-UTRA 36.8xx and 36.9xx.
To some extent, the numbering of E-UTRA TSs is on a par with the numbering of UTRA TSs. For
example, UTRA multiplexing and channel coding for FDD is speciﬁed in TS 25.212, and the corre-
sponding speciﬁcation for E-UTRA is TS 36.212. However, this numbering is not applied consistently,
for example, the speciﬁcation for UTRA L1 procedures is TS 25.214, while the E-UTRA L1 procedures
are deﬁned in TS 36.213. Additionally, in UTRA, RAN1 and RAN4 TSs are often different for TDD
and FDD, while in E-UTRA both modes are included in the same speciﬁcation, due to small differences
between the modes in E-UTRA. For example, TS 25.101 speciﬁes UTRA UE radio transmission and
reception for FDD, and TS 25.102 for TDD; in E-UTRA TS 36.101 speciﬁes this functionality for both
modes.
The speciﬁcations of the groups most relevant to layer 1, that is, those of RAN1, RAN2, and RAN4,
can be found in [9], [10], and [11] respectively. The complete list of 3GPP speciﬁcation series can be
found in [12].
11.2
3G WCDMA
The Wideband Code Division Multiple Access (WCDMA) is the cellular system transmission protocol
that utilizes direct-sequence code division multiple access (DS-CDMA) on a common wideband (5MHz)

434
Modulation and Coding Techniques in Wireless Communications
f2
f1
f3
f2
f3
f3
f2
f1
f1
f1
f1
f1
f1
f2
f3
f2
f3
f2
f3
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
f1
b)
a)
Figure 11.1
a) Frequency reuse 3; b) Frequency reuse 1
carrier. This system is already widely spread in many countries. Nowadays it is the main representative of
the third generation (3G) cellular systems. One of main drivers of the WCDMA design was the addition
of ﬂexible multimedia capabilities to the voice transmission. WCDMA has two modes characterized by
the duplex method: FDD (frequency division duplex) and TDD (time division duplex), for operating
with paired and unpaired bands, respectively [1]. At least for now the deployment of the TDD mode is
geographically more limited. So, in this chapter we will concentrate on FDD mode features mostly.
11.2.1
WCDMA Concept. Logical, Transport and Physical Channels
WCDMA is a DS-CDMA system, that is, the data information bits are spread over a bandwidth, which
is much greater than the bandwidth corresponding to the original data rate. It is done by multiplying the
original data with quasi-random chip sequence called spreading code (see Chapter 9). On one hand, this
leads to a need to have a greater amount of such a valuable resource as frequency spectrum; but on the
other hand, the DS-CDMA technique has advantages such as increasing the resistance to interference,
jamming and interception. Also, usage of DS-CDMA technique simpliﬁes the network planning, since
DS-CDMA system is frequency reuse 1 system. The frequency reuse parameter shows how many different
frequencies should use the neighbouring cells. If the frequency reuse is greater than 1, the adjacent cells
must use the different frequency carriers that should be taken into account in the network planning. The
example of network with the frequency reuse 3 is depicted in Figure 11.1a. The example of network
planning with frequency reuse 1 is depicted in Figure 11.1b.
In WCDMA systems the adjacent base stations use the same frequency band since the different base
stations and users are separated by codes rather than frequencies. The different base stations use different
scrambling codes (also known as long codes). The transmitted data is divided into uplink and downlink
data. The uplink comprises the data transmitted from mobile station (MS) or user equipment (UE) to the
base station (BS) or Node B. And the downlink comprises the data transmitted in the reverse direction
from Node B to UE. In the FDD mode the uplink and downlink are carried by the frequencies separated
by 5 MHz. In the TDD mode the same 5 MHz bandwidth is time shared between uplink and downlink.
The chip rate of the system is 3.84 Mcps. The chip sequence is transmitted by frames of length 10 ms
(38400 chips/frame) and each frame is divided into 15 slots (2560 chips/slot). The spreading factors
used in uplink vary from 4 to 256 and in the downlink from 4 to 512. Thus, the respective modulation
symbol rates vary from 960 k symbols/s to 15 k symbols/s in the downlink and from 960 k symbols/s to

Standardization in 3GPP
435
7.5 k symbols/s in the uplink. This is done to provide the support to different quality of service (QoS)
requirements. The channels from the same source are separated with the help of orthogonal variable
spreading factor (OVSF) channelization codes. The scrambling codes used in the downlink to separate
different cells are Gold codes with a 10-ms period (38400 chips). The actual length of used Gold codes
is 218-1 chips. In the uplink the scrambling codes are used to separate the different users. The same Gold
codes can be used in the uplink with a 10-ms period, or short codes with a 256-chip period belonging to
the family of extended S(2) codes. The scrambling codes are not spreading codes, that is, they are not
spreading the data over the greater bandwidth. It is done only with the help of channelization codes. The
scrambling code is used on top of OVSF channelization codes.
The data within uplink and downlink is split into different logical channels depending on the aim of
the data. Logical channels deﬁne the type of data that is transferred. A general classiﬁcation of logical
channels is into two groups:
r Control Channels (for the transfer of control information);
r Trafﬁc Channels (for the transfer of user information).
Thus, the logical channels deﬁne the content of the transmitted information, that is, the logical channel
describes what is transferred over the radio interface.
Another concept is used to describe how and with what characteristics data are transferred over
the radio interface. This logical structure is transport channel. The physical layer (L1) is required to
support variable bit rate transport channels to offer bandwidth-on-demand services, and to be able to
multiplex several services to one connection [1]. Any control or trafﬁc channel is transmitted via some
transport channel. In other words, transport channels specify the corresponding required transmission
characteristics by the physical layer (L1).There exists two types of transport channels:
r Common transport channels. These channels are used in case there is a need for inband identiﬁcation
of the UEs when particular UEs are addressed.
r Dedicated transport channels. These channels are used when the UEs are identiﬁed by the physical
channel, that is, code and frequency for FDD and code, time slot and frequency for TDD.
The logical channel can be mapped to one transport channel or to several different transport channels,
that is, the information corresponding to a particular logical channel can be transferred via different
transport channels. In other words the transport channels are used as a resource for logical channels.
Physical channels deﬁne the exact physical characteristics of the radio channel. The logical channels
are mapped onto transport channels, and the transport channels in turn are mapped onto physical
channels. Physical channels are deﬁned by a speciﬁc carrier frequency, scrambling code, channelization
code (optional), time start & stop (giving a duration) and, on the uplink, relative phase (0 or π/2).
11.2.2
Logical and Transport Channels
The conﬁguration of logical channel types is depicted in Figure 11.2 [13]
Broadcast Control Channel (BCCH) is a downlink channel for broadcasting system control infor-
mation. It bears the common for all UEs in the cell information from Node B to UEs.
Paging Control Channel (PCCH) is a downlink channel that transfers paging information. This
channel is used when the network does not know the location cell of the UE, or, the UE is in the cell
connected state (utilizing UE sleep mode procedures).
Common Control Channel (CCCH) is a bi-directional channel for transmitting control information
between network and UEs. This channel is commonly used by the UEs having no RRC connection with

436
Modulation and Coding Techniques in Wireless Communications
Broadcast Control Channel (BCCH)
Paging Control Channel (PCCH)
Dedicated Control Channel (DCCH)
Common Control Channel (CCCH)
Control Channel
Dedicated Traffic Channel (DTCH)
Traffic Channel
Common Traffic Channel (CTCH)
Shared Channel Control Channel (SHCCH)
MBMS point-to-multipoint Control Channel (MCCH)
MBMS point-to-multipoint Traffic Channel (MTCH)
MBMS point-to-multipoint Scheduling Channel (MSCH)
Figure 11.2
Logical channels structure. Reproduced by permission of © 2008 3GPPTM
the network and by the UEs using common transport channels when accessing a new cell after cell
reselection.
Dedicated Control Channel (DCCH) is a point-to-point bi-directional channel that transmits dedi-
cated control information between a UE and the network.
Shared Channel Control Channel (SHCCH) is a bi-directional channel that transmits control
information for uplink and downlink shared channels between network and UEs. This channel is for
TDD only.
MBMS point-to-multipoint Control Channel (MCCH) is a point-to-multipoint downlink channel
used for transmitting control information from the network to the UE. This channel is only used by UEs
that receive Multimedia Broadcast Multicast Service (MBMS). MBMS is a broadcast service that uses
multicast distribution in the core network instead of point-to-point links for each UE.
MBMS point-to-multipoint Scheduling Channel (MSCH) is a point-to-multipoint downlink chan-
nel used for transmitting scheduling control information, from the network to the UE. This channel is
only used by UEs that receive MBMS.
Dedicated Trafﬁc Channel (DTCH) is a point-to-point channel, dedicated to one UE, for the transfer
of user information. A DTCH can exist in both uplink and downlink.
Common Trafﬁc Channel (CTCH) is a point-to-multipoint unidirectional channel for transfer of
dedicated user information for all or for a group of speciﬁed UEs.
MBMS point-to-multipoint Trafﬁc Channel (MTCH) is a point-to-multipoint downlink channel
used for transmitting trafﬁc data from the network to the UE. This channel is only used for MBMS.
The conﬁguration of transport channel types is depicted in Figure 11.3. The channels not belonging
to Release’99 channels are highlighted.
Common transport channel types are:
r Random Access Channel(s) (RACH). It is a contention based uplink channel used for transmission
of relatively small amounts of data, for example, for initial access or nonreal-time dedicated control
or trafﬁc data. The amount of data borne by this channel is rather small, so it has limited data ﬁeld,
and data rate offered by this type of channel is low.

Standardization in 3GPP
437
RACH
Common Transport Channels
FACH
BCH
HS DSCH
USCH
PCH
DSCH
Dedicated Transport Channels
E DCH
DCH
Figure 11.3
Transport channels structure
r Forward Access Channel(s) (FACH). It is a common downlink channel without closed-loop power
control used for transmission of relatively small amount of data. In addition FACH is used to carry
broadcast and multicast data. There can be few FACHs in the cell. At least one of the FACHs must
have the data rate low enough to be received by all UEs in the cell, in this case other FACHs can have
higher data rates. Due to this the data rate in this type of channel can change fast (each 10ms).
r Broadcast Channel (BCH). It is a downlink channel used for broadcast of system- and cell-speciﬁc
information into an entire cell. The typical information transferred via this channel is the available
random access codes and access slots in the cell. The strict requirement of this kind of channel is that
it should be received by any UE in the entire coverage area of the cell. The UE cannot be registered in
the cell if it is not capable of receiving BCH. The data rate provided by this channel is low and ﬁxed
to make it possible for low-end terminals to receive easily the information borne by BCH.
r Paging Channel (PCH). It is a downlink channel used for broadcast of control information into an
entire cell allowing efﬁcient UE sleep mode procedures. Currently identiﬁed information types are
paging and notiﬁcation. It should be broadcast in the entire coverage area of the cell.
r Downlink Shared Channel(s) (DSCH). This type of channel is used in TDD only. It is a downlink
channel shared by several UEs carrying dedicated control or trafﬁc data. It should be possible to use
beamforming and slow power control for this channel.
r Uplink Shared channel (USCH). This type of channel is used in TDD only. It is an uplink chan-
nel shared by several UEs carrying dedicated control or trafﬁc data. It should be possible to use
beamforming and power control for this channel.
r High Speed Downlink Shared Channel (HS-DSCH). This channel exists in downlink only and is
used to carry the packet data. This channel is part of HSDPA concept and is not used in Release’99.
The channel should provide high data rates. To achieve this goal, the link adaptation technique is
applied to the data transferred with the channel. Also it should be possible to use beamforming and
HARQ for this channel.

438
Modulation and Coding Techniques in Wireless Communications
Dedicated transport channel types are:
r Dedicated Channel (DCH). It is a channel dedicated to one UE used in uplink or downlink. The
DCH is transmitted over the entire cell or over only a part of the cell using for example, beamforming
antennas.
r Enhanced Dedicated Channel (E-DCH). It is a channel dedicated to one UE used in uplink only. The
E-DCH is subject to Node-B controlled scheduling and HARQ. E-DCH is a part of HSUPA concept
and is not used in Release’99.
The transport channels are multiplexed at the physical layer (L1). Due to this operation there exists
one more transport channel. It is deﬁned as a single output data stream from the transport channel
multiplexing and is denoted as Coded Composite Transport Channel (CCTrCH).
The transport channels form the interface between physical layer (L1) and data link layer (L2). A UE
can have simultaneously one or several transport channels in the downlink, and one or more transport
channel in the uplink. The basic unit of exchange between layers L1 and L2 is a transport block. The
number of bits in a transport block (TB) is called the transport block size (TBS). The CRC is attached
to each transport block. Actually, the set of transport blocks can be received at the same time instance
using the same transport channel. This set is called the transport block set. The transport block size is
always ﬁxed within a given transport block set, that is, all transport blocks within a transport block set are
equally sized. The transport block set size (TBSS) is deﬁned as a number of bits in a transport block set.
The periodicity at which a transport block set is transferred by the physical layer on the radio interface
is called the transmission time interval (TTI), that is, it is the time between consecutive deliveries of
data between L2 and L1 [14]. For the Release’99 channels the TTI is always a multiple of 10ms, the
length of one radio frame. For the HS-DSCH the TTI is much shorter and comprises 2ms. The example
of delivering transport block sets via different transport channels is represented in Figure 11.4.
Each transport channel is associated with one or several transport formats. A transport format is
deﬁned as a combination of TBS, TBSS, and type of error protection scheme applied to the data. The list
of transport formats associated with a particular transport channel is called a transport format set (TFS).
The physical layer multiplexes one or several transport channels, and for each transport channel, there
exists a TFS. Nevertheless, at a given point in time, not all combinations of transport formats may be
used at L1 but only a subset, which is called the transport format combination (TFC). TFC is deﬁned as
an authorized combination of the combination of currently valid transport formats that can be submitted
simultaneously to the L1 for transmission on a Coded Composite Transport Channel of a UE, that is,
containing one transport format from each transport channel. The TFC is represented by a transport
format combination indicator (TFCI). There is a one-to-one correspondence between a certain value of
the TFCI and a certain Transport Format Combination. The TFCI is used in order to inform the receiving
side of the currently valid TFC, and hence how to decode, de-multiplex and deliver the received data
Transport Block
Transport Block
Transport Block
TTI
TTI
TTI
Transport Block
Transport Block
Transport Block
TTI
TTI
TTI
Transport Block
Transport Block
Transport Block
Figure 11.4
Transport block sets and transmission time interval (TTI)

Standardization in 3GPP
439
Figure 11.5
Mapping of logical channels onto transport channels. Uplink
on the appropriate transport channels. The TFCI is not used for the HS-DSCH and E-DCH. At each
delivery of transport block sets the L1 builds the TFCI from the transport formats of all parallel transport
channels of the UE. Through the detection of the TFCI the receiving side is able to identify the TFC.
And from the assigned transport format combinations, the receiving side has all the information it needs
in order to decode the information.
The mapping of logical channels onto transport channels in uplink is depicted in Figure 11.5, and the
mapping of logical channels onto transport channels in downlink is depicted in Figure 11.6. In these
pictures channels not belonging to the Release’99 are highlighted.
Figure 11.6
Mapping of logical channels onto transport channels. Downlink

440
Modulation and Coding Techniques in Wireless Communications
Dedicated Physical Data Channel (DPDCH)
Dedicated Physical Control Channel (DPCCH)
Fractional Dedicated Physical Channel (F DPCH)
E DCH Dedicated Physical Data Channel (E DPDCH)
E DCH Dedicated Physical Control Channel (E DPCCH)
E DCH Absolute Grant Channel (E AGCH)
E DCH Relative Grant Channel (E RGCH)
E DCH Hybrid ARQ Indicator Channel (E HICH)
Physical Random Access Channel (PRACH)
Common Pilot Channel (CPICH)
Primary Common Control Physical Channel (P CCPCH)
Secondary Common Control Physical Channel (S CCPCH)
Synchronisation Channel (SCH)
Acquisition Indicator Channel (AICH)
Paging Indicator Channel (PICH)
MBMS Notification Indicator Channel (MICH)
High Speed Physical Downlink Shared Channel (HS PDSCH)
HS DSCH related Shared Control Channel (HS SCCH)
Dedicated Physical Control Channel (uplink) for HS DSCH (HS DPCCH)
Transport Channels
DCH
RACH
BCH
FACH
PCH
Physical Channels
HS DSCH
E DCH
Figure 11.7
Mapping of transport channels onto physical channels
11.2.3
Physical Channels
The mapping of transport channels onto physical channels is depicted in Figure 11.7. The channels that
do not belong to Release’99 channels are highlighted.
Before mapping onto physical channels the data from Transport block or Transport block set is
encoded to offer transport services over the radio transmission link. The data from different transport
channels are multiplexed. It is done to provide a continuous data stream, since the continuous data
stream allows the channel capacity to be used in a more efﬁcient way. And only after multiplexing the
transport channels data are mapped onto physical channels. The process of encoding and mapping is
described by the channel coding scheme. Channel coding scheme is a combination of error detection,
error correcting, rate matching, interleaving and transport channels mapping onto physical channels
[16]. The coding/multiplexing steps for uplink and downlink differ only in some details but in any
case include Cyclic Redundancy Check (CRC) attachment, channel coding, interleaving, rate matching,
channel multiplexing, and mapping to physical channels. As was already mentioned in section 11.1.2
the transport channels data after multiplexing forms Coded Composite Transport Channel (CCTrCH).
Thus, in fact in most cases only the CCTrCH is mapped to physical channels directly. All other transport
channels are mapped onto physical channels via CCTrCH.

Standardization in 3GPP
441
11.2.3.1
Uplink Multiplexing
The uplink multiplexing is depicted in Figure 11.8 [16]. This kind of multiplexing is applied to DCH
and RACH.
The ﬁrst operation is CRC attachment to the transport block data. CRC provides the possibility of
error detection for each transport block. The size of the CRC is 24, 16, 12, 8 or 0 bits. The actual CRC
size that should be used for each TrCH is signalled in TFCI. The process of CRC attachment in more
detail is described in section 11.2.4.1.
After the CRC attachment, the next step is the transport blocks concatenation/segmentation. All
transport blocks in a TTI are serially concatenated. It is done to ﬁt the transport blocks data to the size
of the code block. If the number of bits in a TTI is larger than the maximum size of a code block in
question, then code block segmentation is performed after the concatenation of the transport blocks. In
other words, if the transport block size is less than the code block size, then several transport blocks are
concatenated, and if the size of transport block is greater than the size of code block, the transport block
is split into several code blocks. The maximum size of the code blocks depends on whether convolutional
coding or turbo coding is used for the TrCH. The maximum code block size for convolutional coding
is 504 bits, for turbo coding 5114 bits. The outputs of this procedure are the code blocks of the same
length.
After the transport blocks concatenation/segmentation the channel encoding is applied to each code
block. The following channel coding schemes can be applied:
r convolutional coding with coding rate 1/3 or 1/2;
r turbo coding with coding rate 1/3.
The coding schemes will be considered in detail in section 11.2.4.
The function of radio frame equalization is to ensure that data can be divided into equal sized blocks
when transmitting over more than a single 10 ms radio frame [1] This is done by padding the necessary
number of bits until the data can be divided into data segments of the same size.
The ﬁrst interleaving is called inter-frame interleaving. It is used if the TTI size is greater than the size
of radio frame (10 ms). The TTI size can be 10, 20, 40 or 80 ms. If TTI consists of more than one radio
frame, then the ﬁrst interleaving is applied to the data stream. The input bit sequence is written into the
R1 × C1 matrix row by row, where C1 is the number of radio frames in TTI (1, 2, 4 or 8) and R1 is the
number of bits in radio frame for transport channel i:
⎡
⎢⎢⎢⎣
xi,1
xi,2
xi,3
. . .
xi,C1
xi,(C1+1)
xi,(C1+2)
xi,(C1+3)
. . .
xi,(2×C1)
...
...
...
. . .
...
xi,((R1−1)×C1+1)
xi,((R1−1)×C1+2)
xi,((R1−1)×C1+3)
. . .
xi,(R1×C1)
⎤
⎥⎥⎥⎦
(11.1)
Then the columns of this matrix are permutated. After permutation of the columns, the bits are denoted
by yik:
⎡
⎢⎢⎢⎣
yi,1
yi,(R1+1)
yi,(2×R1+1)
. . .
yi,((C1−1)×R1+1)
yi,2
yi,(R1+2)
yi,(2×R1+2)
. . .
yi,((C1−1)×R1+2)
...
...
...
. . .
...
yi,R1
yi,(2×R1)
yi,(3×R1)
. . .
yi,(C1×R1)
⎤
⎥⎥⎥⎦
(11.2)
To obtain the interleaved output bit sequence of the ith transport channel the data is read column by
column from the inter-column permuted R1 × C1 matrix.
The radio frame segmentation is applied when the transmission time interval is longer than 10 ms. In
this case the input bit sequence is segmented and mapped onto several consecutive radio frames. Due to

442
Modulation and Coding Techniques in Wireless Communications
Rate
matching
Physical channel
segmentation
PhCH#1
PhCH#2
i
iT
i
i
i
d
d
d
d
,
,
,
,
3
2
1
…
i
iN
i
i
i
e
e
e
e
,
,
,
,
3
2
1
…
Radio frame segmentation
i
iV
i
i
i
f
f
f
f
,
,
,
,
3
2
1
…
Ss
s
s
s
,
,
,
,
3
2
1
…
pU
p
p
p
u
u
u
u
,
,
,
,
3
2
1
…
pU
p
p
p
v
v
v
v
,
,
,
,
3
2
1
…
2
nd interleaving
Physical channel mapping
i
iE
i
i
i
c
c
c
c
,
,
,
,
3
2
1
…
i
irK
ir
ir
ir
o
o
o
o
,
,
,
,
3
2
1
…
Channel coding
i
imA
im
im
im
a
a
a
a
,
,
,
,
3
2
1
…
Rate matching
i
imB
im
im
im
b
b
b
b
,
,
,
,
3
2
1
…
TrBk concatenation /
Code block segmentation
CRC attachment
i
iT
i
i
i
t
t
t
t
,
,
,
,
3
2
1
…
Radio frame equalisation
1
st interleaving
TrCH Multiplexing
CCTrCH
Figure 11.8
Transport channel multiplexing structure for uplink. Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
443
Radio frame
segmentation
Bit separation
Rate matching
algorithm
Bit
collection
TrCH
Multiplexing
Rate matching
eik
x1ik
y1ik
fik
Figure 11.9
Rate matching for convolutionally encoded TrCHs and for turbo encoded TrCHs with repetition in
uplink. Reproduced by permission of © 2008 3GPPTM
the radio frame size equalization in the UL the input bit sequence length is guaranteed to be an integer
multiple of radio frame size.
Rate matching is used to match the number of bits to be transmitted to the number of bits available
on a single frame. Rate matching means that bits on a transport channel are repeated or punctured.
The number of bits on a transport channel can vary between different TTIs. And in accordance with
this change the bits are repeated or punctured to ensure that the total bit rate after transport channels
multiplexing is identical to the total channel bit rate of the allocated dedicated physical channels.
The rate matching procedure is very complicated and contains a lot of options. Here we consider
only the core algorithm. The rate matching for uplink is illustrated in Figure 11.9 [16] and Figure
11.10 [16]
Before starting the rate matching some rate matching parameters should be calculated. First of all to
match the number of bits in the transport channel to number of bits in allocated physical channels, the
number of bits to be punctured or repeated should be calculated. Also the initial parameters for the rate
matching pattern determination algorithm should be calculated (for details see section 4.2.7.1 in [16]).
As can be seen from Figures 11.9 and 11.10, the ﬁrst block in rate matching is bit separation. Actually
this procedure is active only for puncturing of turbo encoded transport channels. For convolutionally
encoded transport channels and for turbo encoded transport channels with repetition the bit separation
function and bit collection functions are transparent, that is:
x1,i,k = ei,k,
k = 1, 2, . . . , Xi;
Xi = Ni
(11.3)
where Ni is the number of bits in a radio frame before rate matching on TrCH i.
The goal of bit separation is to separate the bit sequence input to the rate matching block into three
sequences: systematic bits, ﬁrst parity bits, and second parity bits. The reason for this is that, as can be
seen from Figure 11.10, the systematic bits of turbo encoded transport channel shall not be punctured.
Only parity bits may be punctured. To be more precise, the three output sequences at the output of bit
separation function contain the following bits.

444
Modulation and Coding Techniques in Wireless Communications
Radio frame
segmentation
Bit separation
Rate matching
algorithm
Bit
collection
TrCH
Multiplexing
Rate matching
eik
x2ik
x1ik
x3ik
y2ik
y3ik
y1ik
fik
Rate matching
algorithm
Figure 11.10
Puncturing of turbo encoded TrCHs in uplink. Reproduced by permission of © 2008 3GPPTM
The ﬁrst sequence contains:
r All of the systematic bits that are from turbo encoded TrCHs.
r From 0 to 2 ﬁrst and/or second parity bits that are from turbo encoded TrCHs. These bits come into the
ﬁrst sequence when the total number of bits in a block after radio frame segmentation is not a multiple
of three.
r Some of the systematic, ﬁrst parity and second parity bits that are for trellis termination.
x1,i,k = ei,3(k−1)+1+(α1+βni ) mod 3,
k = 1, 2, . . . , Xi;
Xi = ⌊Ni/3⌋
(11.4)
where α1 is the offset due to 1st interleaving listed in Table 11.1 [16], ni is the radio frame number for
TrCH i (the bit separation is different for different radio frames in the TTI), βni is the offset for the radio
frame number ni listed in Table 11.2 [16].
The second sequence contains:
r All of the ﬁrst parity bits that are from turbo encoded TrCHs, except those that go into the ﬁrst sequence
when the total number of bits is not a multiple of three.
r Some of the systematic, ﬁrst parity and second parity bits that are for trellis termination.
x2,i,k = ei,3(k−1)+1+(α3+βni ) mod 3,
k = 1, 2, . . . , Xi;
Xi = ⌊Ni/3⌋
(11.5)
Table 11.1
TTI dependent offset needed for bit separation
TTI (ms)
α1
α2
α3
10, 40
0
1
2
20, 80
0
2
1
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
445
Table 11.2
Radio frame dependent offset needed for bit separation
TTI (ms)
β0
β1
β2
β3
β4
β5
β6
β7
10
0
NA
NA
NA
NA
NA
NA
NA
20
0
1
NA
NA
NA
NA
NA
NA
40
0
1
2
0
NA
NA
NA
NA
80
0
1
2
0
1
2
0
1
Reproduced by permission of © 2008 3GPPTM
The third sequence contains:
r All of the second parity bits that are from turbo encoded TrCHs, except those that go into the ﬁrst
sequence when the total number of bits is not a multiple of three.
r Some of the systematic, ﬁrst parity and second parity bits that are for trellis termination.
x3,i,k = ei,3(k−1)+1+(α3+βni ) mod 3,
k = 1, 2, . . . , Xi;
Xi = ⌊Ni/3⌋
(11.6)
The second and third sequences shall be of equal length, whereas the ﬁrst sequence can contain from
0 to 2 more bits. Puncturing is applied only to the second and third sequences.
The core of rate matching procedure is the rate matching pattern determination algorithm. This
algorithm determines the positions of bits that should be punctured or repeated.
The inputs of the algorithm are bit sequence xi1, xi2, . . . , xi Xi , where i is the TrCH number and the
parameters Xi, eini, eplus, and eminus that was calculated before starting the rate matching procedure.
The rate matching rule is as follows:
if puncturing is to be performed
e = eini
– initial error between current and desired puncturing ratio
m = 1
– index of current bit
do while m < = Xi
e = e – eminus
– update error
if e < = 0 then
– check if bit number m should be punctured
set bit xi,m to δ where δ̸∈{0, 1}
e = e + eplus – update error
end if
m = m + 1
– next bit
end do
else
e = eini
– initial error between current and desired puncturing ratio
m = 1
– index of current bit
do while m < = Xi
e = e – eminus
– update error
do while e < = 0
– check if bit number m should be repeated
repeat bit xi,m
e = e + eplus – update error
end do
m = m + 1
– next bit
end do
end if
A repeated bit is placed directly after the original one.

446
Modulation and Coding Techniques in Wireless Communications
This algorithm provides fast rate matching pattern calculation for any TFCI and for all possible
values of number of bits in transport channel and the number of bits in allocated physical channels. The
algorithm is suboptimal in the sense that in some cases better puncturing schemes than provided by the
algorithm exist. On the other hand, storing all possible puncturing or repetition schemes requires too
much memory.
Bit collection is the inverse function of the bit separation. Also, the process of puncturing is performed
in bit collection. As can be seen from the rate matching pattern determination algorithm the bits to
be punctured are substituted by non-binary symbols δ. During bit collection procedure these bits are
removed. The bits after collection are denoted by zi,1, zi,2, . . . , zi,Yi . After bit collection, the bits indicated
as punctured are removed and the bits are then denoted by fi,1, fi,2, . . . , fi,Vi , where i is the TrCH number
and Vi = Ni + Ni, where Ni is the number of bits in a radio frame before rate matching on TrCH i. and
Ni, if it is positive is the number of bits that should be repeated, if negative it is the number of bits that
should be punctured in each radio frame on TrCH i. The relations between yb,i,k, zi,k, and fik are given below.
For turbo encoded TrCHs with puncturing (Yi = Xi):
zi,3(k−1)+1+(α1+βni ) mod 3 = y1,i,k,
k = 1, 2, . . . , Yi
(11.7)
zi,3⌊Ni /3⌋+k = y1,i,⌊Ni /3⌋+k,
k = 1, 2, . . . , Ni mod 3
(11.8)
When (Ni mod 3) = 0 (11.8) is not needed:
zi,3(k−1)+1+(α2+βni ) mod 3 = y2,i,k,
k = 1, 2, . . . , Yi
(11.9)
zi,3(k−1)+1+(α3+βni ) mod 3 = y3,i,k,
k = 1, 2, . . . , Yi
(11.10)
After the bit collection, bits zi,k with value δ, where δ̸∈{0, 1}, are removed from the bit sequence. Bit
fi,1 corresponds to the bit zi,k with smallest index k after puncturing, bit fi,2 corresponds to the bit zi,k with
second smallest index k after puncturing, and so on.
For convolutionally encoded TrCHs and turbo encoded TrCHs with repetition:
zi,k = y1,i,k,
k = 1, 2, . . . , Yi
(11.11)
When repetition is used, fi,k = zi,k and Yi = Vi. When puncturing is used, Yi = Xi.
Every 10 ms, one radio frame from each transport channel is delivered to the transport channel
multiplexing. These radio frames are serially multiplexed into a coded composite transport channel
(CCTrCH).
When more than one physical channel is used, physical channel segmentation divides the bits among
the different physical channels. Each physical channel corresponds to some spreading code. The seg-
mentation is done serially.
The second interleaving is an intra-frame interleaving. It performs the bits permutation inside the 10
ms radio frame. It comprises the bits input to a matrix with padding, the inter-column permutation for
the matrix and bits output from the matrix with pruning. The bits input to the interleaver are denoted
by u p,1, u p,2, u p,3, . . . , u p,U, where p is the physical channel number and U is the number of bits in one
radio frame for one physical channel. The input bit sequence u p,1, u p,2, u p,3, . . . , u p,U is written into the
R2 × C2 matrix row by row. The number of columns of the matrix C2 = 30, R2 is the minimum integer
R2 such that U ≤R2 × C2. The interleaver matrix can be written as follows:
⎡
⎢⎢⎢⎣
yp,1
yp,2
yp,3
. . .
yp,C2
yp,(C2+1)
yp,(C2+2)
yp,(C2+3)
. . .
yp,(2×C2)
...
...
...
...
...
yp,((R2−1)×C2+1)
yp,((R2−1)×C2+2)
yp,((R2−1)×C2+3)
. . .
yp,((R2×C2)
⎤
⎥⎥⎥⎦
(11.12)

Standardization in 3GPP
447
Table 11.3
Inter-column permutation pattern for 2nd interleaving
Inter-column permutation pattern
Number of columns C2
< P2(0), P2(1), . . . , P2(C2-1) >
30
<0, 20, 10, 5, 15, 25, 3, 13, 23, 8, 18, 28, 1, 11, 21,
6, 16, 26, 4, 14, 24, 19, 9, 29, 12, 2, 7, 22, 27, 17>
Reproduced by permission of © 2008 3GPPTM
where yp,k = u p,k for k = 1, 2, . . . , U and if R2 × C2 > U, the dummy bits are padded for k = U +
1, U + 2, . . . , R2 × C2. These dummy bits are pruned away from the output of the matrix after the
inter-column permutation. Then the matrix columns are permutated and the output of the interleaver
is the bit sequence read out column by column from the inter-column permuted R2 × C2 matrix. The
permutation of matrix columns is performed with the help of the pattern ⟨P2( j)⟩j∈{0,1,...,C2−1} that is
shown in Table 11.3 [16], where P2(j) is the original column position of the j-th permuted column.
The output is pruned by deleting dummy bits that were padded to the input of the matrix before the
inter-column permutation.
The bits from the output of the second interleaving are mapped to the physical channels. The physical
channels used during a radio frame are either completely ﬁlled with bits that are transmitted over the
air or not used at all. The number of bits mapped to each physical channel is exactly the number of
chips bearing by this channel divided by the corresponding spreading factor (SF), for example, one radio
frame (10 ms) comprises 38400 chips, if the SF = 256, exactly 150 bits should be mapped to one radio
frame of this particular physical channel.
11.2.3.2
Uplink DPCCH and DPDCH
The uplink Dedicated Physical Data Channel (uplink DPDCH) is used to carry the DCH transport
channel, that is, to transmit the user data. There may be zero, one, or several uplink DPDCHs on each
radio link. The uplink Dedicated Physical Control Channel (uplink DPCCH) is used to carry control
information generated at L1. The L1 control information consists of known pilot bits to support chan-
nel estimation for coherent detection, transmit power-control (TPC) commands, feedback information
(FBI), and an optional transport format combination indicator (TFCI). The transport format combination
indicator informs the receiver about the instantaneous transport format combination of the transport
channels mapped to the simultaneously transmitted uplink DPDCH radio frame. There is one and only
one uplink DPCCH on each radio link. The frame structure of the uplink DPDCH and the uplink DPCCH
is depicted in Figure 11.11 [15]. Each radio frame of length 10 ms is split into ﬁve subframes, each of
three slots, each of length Tslot = 2560 chips, corresponding to one power-control period. The DPDCH
and DPCCH are always frame aligned with each other.
The parameter k in Figure 11.11 determines the number of bits per uplink DPDCH slot. It is related
to the spreading factor (SF) of the DPDCH as SF = 256
2k . The DPDCH spreading factor may range from
4 to 256.
The spreading factor of the uplink DPCCH is always equal to 256, that is, there are 10 bits per uplink
DPCCH slot. The FBI bits are used to support techniques requiring feedback from the UE for operation of
closed loop mode transmit diversity. The use of the FBI bits is described in detail in section 11.2.6. Multi-
code operation is possible for the uplink dedicated physical channels. When multi-code transmission is
used, several parallel DPDCH are transmitted using different channelization codes. However, there is
only one DPCCH per radio link. The maximum user data rate on a single DPDCH is derived from the
maximum channel bit rate, which is 960 Kbits/s without channel coding with spreading factor 4. If the
higher data rates are needed, up to six parallel DPDCH can be transmitted [1]. Due to this the maximum
channel bit rate can be raised up to 5740 Kbits/s (see Table 11.4).

448
Modulation and Coding Techniques in Wireless Communications
Pilot
 Npilot bits
TPC
 NTPC bits
Data
Ndata bits
Slot #0
Slot #1
Slot #i
Slot #14
Tslot = 2560 chips, 10 bits
1 radio frame: Tf = 10 ms
DPDCH
DPCCH
FBI
 NFBI bits
TFCI
 NTFCI bits
Tslot = 2560 chips, N data = 10*2   bits (k=0..6)
k
Slot #2
Slot #3
Subframe #0
Subframe #1
Subframe #2
Subframe #3
Subframe #4
1 subframe = 2 ms 
Figure 11.11
Frame structure of uplink DPDCH/DPCCH. Reproduced by permission of © 2008 3GPPTM
11.2.3.3
Physical Random Access Channel (PRACH)
The Physical Random Access Channel (PRACH) is used to carry the RACH. The random-access trans-
mission is based on a Slotted ALOHA approach [17] with fast acquisition indication. The UE can start
the random-access transmission only at the beginning of a set of pre-deﬁned time intervals, denoted
access slots. There are 15 access slots per two frames and they are spaced 5120 chips apart, see Figure
11.12 [15]. Information on what access slots are available for random-access transmission is given by
higher layers.
Table 11.4
Uplink DPDCH data rates
DPDCH SF
Number of parallel
channels (spreading codes)
DPDCH channel
bit rate (Kbits/s)
Maximum user data rate (with
coding rate 1/2) (Kbits/s)
256
1
15
7.5
128
1
30
15
64
1
60
30
32
1
120
60
16
1
240
120
8
1
480
240
4
1
960
480
4
4
5740
2.3 Mbits/s

Standardization in 3GPP
449
#14
#13
#12
#11
#10
#9
#8
#7
#6
#5
#4
#3
#2
#1
#0
5120 chips
radio frame: 10 ms
radio frame: 10 ms
Access slot
Random Access Transmission
Random Access Transmission
Random Access Transmission
Random Access Transmission
Figure 11.12
RACH access slot numbers and their spacing. Reproduced by permission of © 2008 3GPPTM
The random-access transmission consists of one or several preambles of length 4096 chips and a
message of length 10 ms or 20 ms. Random access is the mechanism through which the UE performs
the initial access to the system. As the UE is not yet connected to the system, no uplink codes have
been allocated, nor is there any control of the uplink power. To choose the correct power UE sends
preambles with randomized signatures with increasing power in a “ramping” procedure. When the power
is sufﬁcient, the BS transmits an acquisition indicator to request transmission of the actual message from
the terminal. This ramping procedure is very fast and together with the signature randomization leads to
an efﬁcient, high-capacity RACH. Each preamble is of length 4096 chips and consists of 256 repetitions
of a signature of length 16 chips. Totally there are 16 available signatures. When the preamble is
detected by BS it sends the acknowledgment with the Acquisition Indicator Channel (AICH). Then UE
transmits the message part of the random-access transmission. Figure 11.13 shows the structure of the
random-access message part radio frame [15].
Pilot
 Npilot bits
Data
Ndata bits
Slot #0
Slot #1
Slot #i
Slot #14
Tslot = 2560 chips, 10*2k bits (k=0..3)
Message part radio frame TRACH = 10 ms
Data
Control
TFCI
 NTFCI bits
Figure 11.13
Structure of the random-access message part radio frame. Reproduced by permission of © 2008
3GPPTM

450
Modulation and Coding Techniques in Wireless Communications
The 10 ms message part radio frame is split into 15 slots, each of length Tslot = 2560 chips. Each slot
consists of two parts, a data part to which the RACH transport channel is mapped and a control part that
carries L1 control information. The data and control parts are transmitted in parallel. A 10 ms message
part consists of one message part radio frame, while a 20 ms message part consists of two consecutive 10
ms message part radio frames. The data part consists of 10 · 2k bits, where k = 0,1,2,3. This corresponds
to a spreading factor of 256, 128, 64, and 32 respectively for the message data part. The control part
consists of eight known pilot bits to support channel estimation for coherent detection and two TFCI bits.
This corresponds to a spreading factor of 256 for the message control part. The total number of TFCI bits
in the random-access message is 15∗2 = 30. The TFCI of a radio frame indicates the transport format
of the RACH transport channel mapped to the simultaneously transmitted message part radio frame. In
case of a 20 ms PRACH message part, the TFCI is repeated in the second radio frame.
11.2.3.4
Downlink Multiplexing
The downlink multiplexing is depicted in Figure 11.14 [16]. This kind of multiplexing is applied to BCH,
FACH and PCH.
The greatest part of downlink multiplexing procedures coincides with the uplink ones. The main
difference is that the rate matching in downlink is done instead of radio frame size equalization in the
uplink. The rate matching procedures in uplink and downlink also differs, but the aim of rate matching in
downlink is the same as in uplink. Rate matching procedure for downlink is illustrated in Figures 11.15
[16] and 11.16 [16].
The rate matching pattern determination algorithm is the same for both uplink and downlink. The
difference is in calculation of the initial parameters for rate matching pattern determination algorithm
(for details see section 4.2.7.2 in [16]) and in bit separation and bit collection procedures. The bits input
to the rate matching are denoted by ci1, ci2, . . . , ci Ei , where i is the TrCH number and Ei is the number
of bits input to the rate matching block. In the same way as in uplink in downlink the bit separation
function is transparent for convolutionally encoded TrCHs and for turbo encoded TrCHs with repetition
as it is shown in Figure 11.15, that is:
x1,i,k = ci,k,
k = 1, 2, . . . , Xi;
Xi = Ei
(11.13)
For turbo encoded TrCHs with puncturing:
x1,i,k = ci,3(k−1)+1,
k = 1, 2, . . . , Xi;
Xi = Ei/3
(11.14)
x2,i,k = ci,3(k−1)+2,
k = 1, 2, . . . , Xi;
Xi = Ei/3
(11.15)
x3,i,k = ci,3(k−1)+3,
k = 1, 2, . . . , Xi;
Xi = Ei/3
(11.16)
Like in uplink the internal variables in bit collection procedure corresponding to bits after collection
are denoted by zi,1, zi,2, . . . , zi,Yi . After bit collection, the bits indicated as punctured are removed and
the bits are then denoted by gi,1, gi,2, . . . , gi,Gi , where i is the TrCH number and Gi = N T T I
i
+ N T T I
i
,
where N T T I
i
is the number of bits in a transmission time interval before rate matching on TrCH i, and
N T T I
i
if positive is the number of bits to be repeated in each TTI on TrCH i, if negative is the number
of bits to be punctured in each TTI on TrCH i. For convolutionally encoded TrCHs and turbo encoded
TrCHs with repetition the bit collection procedure is transparent:
zi,k = y1,i,k,
k = 1, 2, . . . , Yi
(11.17)
For turbo encoded TrCHs with puncturing (Yi = Xi):
zi,3(k−1)+1 = y1,i,k,
k = 1, 2, . . . , Yi
(11.18)
zi,3(k−1)+2 = y2,i,k,
k = 1, 2, . . . , Yi
(11.19)
zi,3(k−1)+3 = y3,i,k,
k = 1, 2, . . . , Yi
(11.20)

Standardization in 3GPP
451
PhCH#1
PhCH#2
TrCH Multiplexing
i
iG
i
i
i
g
g
g
g
,
,
,
,
3
2
1
…
i
iD
i 3
i 2
i1
h
, h
,…
, h
, h
i
iV
i
i
i
f
f
f
f
,
,
,
,
3
2
1
…
Ss
s
s
s
,
,
,
,
3
2
1
…
R
w
w
w
w
,
,
,
,
3
2
1
…
pU
p
p
p
v
v
v
v
,
,
,
,
3
2
1
…
i
iE
i
i
i
c
c
c
c
,
,
,
,
3
2
1
…
i
imB
im
im
im
b
b
b
b
,
,
,
,
3
2
1
…
i
imA
im
im
im
a
a
a
a
,
,
,
,
3
2
1
…
CRC attachment
Rate matching
Rate
matching
1  insertion of DTX
st
indication
i
iQ
i
i
i
q
q
q
q
,
,
,
,
3
2
1
…
1   interleaving
st
Radio frame segmentation
2
nd insertion of DTX
indication
pU
p
p
p
u
u
u
u
,
,
,
,
3
2
1
…
2
nd interleaving
Physical channel
segmentation
Physical channel mapping
i
irK
ir
ir
ir
o
o
o
o
,
,
,
,
3
2
1
…
TrBk concatenation /
Code block segmentation
Channel coding
CCTrCH
Figure 11.14
Transport channel multiplexing structure for downlink. Reproduced by permission of © 2008
3GPPTM

452
Modulation and Coding Techniques in Wireless Communications
Channel
coding
Bit separation
Rate matching
algorithm
Bit
collection
1st insertion of
DTX
indication
Rate matching
x1ik
y1ik
cik
gik
Figure 11.15
Rate matching for convolutionally encoded TrCHs and for turbo encoded TrCHs with repetition in
downlink
After the bit collection, bits zi,k with value δ, where δ̸∈{0, 1}, are removed from the bit sequence. Bit
gi,1 corresponds to the bit zi,k with smallest index k after puncturing, bit gi,2 corresponds to the bit zi,k with
second smallest index k after puncturing, and so on. As can be seen from comparison of (11.3)–(11.6)
with (11.13)–(11.16) and (11.7)–(11.11) with (11.17)–(11.20), the principle of bit separation and bit
collection procedures is quite similar for both uplink and downlink.
Another step that differs between the downlink multiplexing chain and that of the uplink one is
the insertion of discontinuous transmission (DTX) indication bits. In the downlink the transmission is
interrupted if the number of bits is lower than maximum (that is, DTX is used to ﬁll up the radio frame
with bits). The insertion point of DTX indication bits depends on whether ﬁxed or ﬂexible positions of
the transport channels in the radio frame are used. It is up to the network to decide for each CCTrCH
whether ﬁxed or ﬂexible positions are used during the connection. DTX indication bits only indicate
when the transmission should be turned off, they are not transmitted.
In downlink as in uplink it is possible to use more than one physical channel to transmit the data. In
this case the physical channel segmentation is applied. The interleaving procedures in downlink are done
in the same way as in uplink.
Channel
coding
Bit separation
Rate matching
algorithm
Bit
collection
1  insertion of
st
DTX
indication
Rate matching
cik
x2ik
x1ik
x3ik
y2ik
y3ik
y1ik
gik
Rate matching
algorithm
Figure 11.16
Puncturing of turbo encoded TrCHs in downlink. Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
453
The difference of the downlink physical channel mapping from the uplink one is that in downlink,
the physical channels do not need to be completely ﬁlled with bits that are transmitted over the air. For
example, the bits corresponding to DTX indicators are mapped to the DPCCH/DPDCH ﬁelds but are not
transmitted over the air.
11.2.3.5
Downlink DPCH
Within one Downlink Dedicated Physical Channel (downlink DPCH), dedicated data generated at Layer
2 and above, that is, the dedicated transport channel (DCH), is transmitted in time-multiplex with control
information generated at Layer 1 (known pilot bits, TPC commands, and an optional TFCI). The downlink
DPCH can thus be seen as a time multiplex of a downlink DPDCH and a downlink DPCCH, compared
to uplink DPDCH/DPCCH. The frame structure of the downlink DPCH is represented in Figure 11.17
[15]. Each frame of length 10 ms is split into 15 slots, each of length Tslot = 2560 chips, corresponding
to one power-control period.
The parameter k in Figure 11.17 determines the total number of bits per downlink DPCH slot. It is
related to the spreading factor (SF) of the physical channel as SF = 512/2k. The spreading factor may
thus range from 512 down to 4. The possible data rates are listed in Table 11.5.
One radio frame, Tf  = 10 ms
TPC
 NTPC bits
Slot #0
Slot #1
Slot #i
Slot #14
Tslot = 2560 chips, 10*2k bits (k=0..7)
Data2
Ndata2 bits
DPDCH
TFCI
 NTFCI bits
Pilot
 Npilot bits
Data1
Ndata1 bits
DPDCH
DPCCH
DPCCH
Figure 11.17
Frame structure of downlink DPCH. Reproduced by permission of © 2008 3GPPTM
Table 11.5
Downlink DPCH data rates
DPCH SF
Number of parallel
channels (spreading
codes)
DPCH channel
symbol rate
(Ksymbols/s)
DPDCH channel
bit rate (Kbits/s)
Maximum user data
rate (with coding rate
1/2) (Kbits/s)
512
1
7.5
3–6
1–3
256
1
15
12–246
6–12
128
1
30
42–51
20–24
64
1
60
90
45
32
1
120
210
105
16
1
240
432
215
8
1
480
912
456
4
1
960
1872
936
4
3
2880
5616
2.3 Mbits/s

454
Modulation and Coding Techniques in Wireless Communications
There are basically two types of downlink Dedicated Physical Channels; those that include TFCI
(for example, for several simultaneous services) and those that do not include TFCI (for example, for
ﬁxed-rate services). It is the network that determines if a TFCI should be transmitted.
11.2.3.6
Common Pilot Channel (CPICH)
The CPICH is a ﬁxed rate (30 kbps, SF = 256) downlink physical channel that carries a pre-deﬁned
bit sequence. This bit sequence is used in the UE receiver for channel estimation. Also CPICH can be
used for the measurements during the handover and cell selection. Figure 11.18 [15] shows the frame
structure of the CPICH.
In cases where transmit diversity is used the CPICH shall be transmitted from both antennas using
the same channelization and scrambling code. In this case, the pre-deﬁned bit sequence of the CPICH
is different for Antenna 1 and Antenna 2. These sequences are orthogonal and of even length of no less
than 4 bits. There is no transport channel mapped to CPICH.
There are two types of Common pilot channels, the Primary and Secondary CPICH. They differ in
their use and the limitations placed on their physical features.
The Primary Common Pilot Channel (P-CPICH) has the following characteristics:
r The same channelization code is always used for the P-CPICH;
r The P-CPICH is scrambled by the primary scrambling code;
r There is one and only one P-CPICH per cell;
r The P-CPICH is broadcast over the entire cell.
The Secondary Common Pilot Channel (S-CPICH) has the following characteristics:
r An arbitrary channelization code of SF = 256 is used for the S-CPICH;
r The S-CPICH is scrambled by either the primary or a secondary scrambling code;
r There may be zero, one, or several S-CPICH per cell;
r The S-CPICH may be transmitted over the entire cell or only over a part of the cell;
Usually the S-CPICH is used for antenna beamforming in CL1 or MIMO mode.
 Pre defined bit sequence
Slot #0
Slot #1
Slot #i
Slot #14
Tslot = 2560 chips, 20 bits
1 radio frame: T  = 10 ms
f
Figure 11.18
Frame structure of CPICH. Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
455
11.2.3.7
Synchronisation Channel (SCH)
The Synchronisation Channel (SCH) is a downlink signal used for cell search. The SCH consists of two
sub channels, the Primary and Secondary SCH. The UE uses these channels to ﬁnd the cell. The 10 ms
radio frames of the Primary and Secondary SCH are divided into 15 slots, each of length 2560 chips.
Figure 11.19 [15] illustrates the structure of the SCH radio frame.
The Primary SCH consists of a modulated code of length 256 chips called the Primary Synchronization
Code (PSC). PSC is transmitted once every slot, in Figure 11.19 this code is denoted as cp. The PSC is
the same for every cell in the system. The Secondary SCH consists of repeatedly transmitting sequence
of 15 modulated codes of length 256 chips. These codes are called the Secondary Synchronization Codes
(SSC) and are transmitted in parallel with the Primary SCH. The SSC is denoted csi,k in Figure 11.19,
where i = 0, 1, . . . , 63 is the number of the scrambling code group, and k = 0, 1, . . . , 14 is the slot number.
Each SSC is chosen from a set of 16 different codes of length 256. This sequence on the Secondary
SCH indicates which of the code groups the cell’s downlink scrambling code belongs to. The primary
and secondary synchronization codes are modulated by the symbol a shown in Figure 11.19, which
indicates the presence/ absence of STTD encoding on the P-CCPCH. If P-CCPCH is STTD encoded
a = 1, otherwise a = −1. Transmit diversity, in the form of Time Switched Transmit Diversity (TSTD),
can be applied to the SCH. Figure 11.20 [15] illustrates the structure of the SCH transmitted by the TSTD
scheme. In even numbered slots both PSC and SSC are transmitted on antenna 1, and in odd numbered
slots both PSC and SSC are transmitted on antenna 2.
Primary
SCH
Secondary
SCH
256 chips
2560 chips
One 10 ms SCH radio frame
acs
i,0
acp
acs
i,1
acp
acs
i,14
acp
Slot #0
Slot #1
Slot #14
Figure 11.19
Structure of Synchronization Channel (SCH). Reproduced by permission of © 2008 3GPPTM
Antenna 1 
Antenna 2 
acs
i,0
acp
acs
i,1
acp
acs
i,14
acp
Slot #0 
Slot #1 
Slot #14 
acs
i,2
acp
Slot #2 
(Tx OFF)
(Tx OFF) 
(Tx OFF)
(Tx OFF) 
(Tx OFF)
(Tx OFF)
(Tx OFF)
(Tx OFF)
Figure 11.20
Structure of SCH transmitted by TSTD scheme. Reproduced by permission of © 2008 3GPPTM

456
Modulation and Coding Techniques in Wireless Communications
11.2.3.8
Primary Common Control Physical Channel (P-CCPCH)
The Primary CCPCH is a ﬁxed rate (30 kbps, SF = 256) downlink physical channels used to carry
the BCH transport channel. Figure 11.21 [15] shows the frame structure of the Primary CCPCH. The
frame structure differs from the downlink DPCH in that no TPC commands, no TFCI and no pilot bits
are transmitted. The Primary CCPCH is not transmitted during the ﬁrst 256 chips of each slot. Instead,
Primary SCH and Secondary SCH are transmitted during this period.
Data 
Ndata1=18 bits 
Slot #0 
Slot #1 
Slot #i 
Slot #14
Tslot = 2560 chips, 20 bits 
1 radio frame: Tf  = 10 ms 
(Tx OFF) 
256 chips 
Figure 11.21
Frame structure for P-CCPCH. Reproduced by permission of © 2008 3GPPTM
The data rate of P-CCPCH is kept low because any UE in the cell should be able to receive and
decode it. If P-CCPCH decoding fails, the UE cannot access the system, since in this case UE is unable
to obtain the critical system parameters such as random access codes or channelization codes used for
other common channels [1]. It is possible to use the transmit diversity for P-CCPCH transmission. In
this case the P-CCPCH is to be transmitted using open loop transmit diversity and the data bits of the
P-CCPCH are STTD encoded.
11.2.3.9
Secondary Common Control Physical Channel (S-CCPCH)
The Secondary CCPCH is used to carry the FACH and PCH. There are two types of Secondary CCPCH:
those that include TFCI and those that do not include TFCI. It is the network that determines if a TFCI
should be transmitted, hence making it mandatory for all UEs to support the use of TFCI. The set of
Slot #0 
Slot #1 
Slot #i 
Slot #14
Tslot = 2560 chips, 20*2k bits (k=0..6)
Pilot 
 Npilot bits
Data 
Ndata1 bits 
1 radio frame: Tf = 10 ms 
TFCI 
 NTFCI bits 
Figure 11.22
Frame structure of S-CCPCH

Standardization in 3GPP
457
possible rates for the Secondary CCPCH is the same as for the downlink DPCH. The frame structure of
the Secondary CCPCH is shown in Figure 11.22 [15].
The parameter k in Figure 11.22 determines the total number of bits per downlink Secondary CCPCH
slot. It is related to the spreading factor (SF) of the physical channel as SF = 256/2k. The spreading factor
range is from 256 down to 4. The FACH and PCH can be mapped to the same or to separate Secondary
CCPCHs. If FACH and PCH are mapped to the same Secondary CCPCH, they can be mapped to
the same frame. The main difference between a CCPCH and a downlink dedicated physical channel
is that a CCPCH is not inner-loop power controlled. The main difference between the Primary and
Secondary CCPCH is that the transport channel mapped to the Primary CCPCH (BCH) can only have a
ﬁxed predeﬁned transport format combination, while the Secondary CCPCH supports multiple transport
format combinations using TFCI. In cases of using the transmit diversity the S-CCPCH is to be transmitted
using open loop transmit diversity, and the data and TFCI bits of the S-CCPCH are STTD encoded.
11.2.3.10
Acquisition Indicator Channel (AICH)
The Acquisition Indicator Channel (AICH) is a ﬁxed rate (SF = 256) physical channel used to carry
Acquisition Indicators (AI). Acquisition Indicator AIs corresponds to signature s sent on the PRACH.
With Acquisition Indicator AIs the BS conﬁrms that the PRACH preamble corresponding to signature
s was successfully decoded. Figure 11.23 [15] illustrates the structure of the AICH. The AICH consists
of a repeated sequence of 15 consecutive access slots (AS), each of length 5120 chips. Each access slot
consists of two parts, an Acquisition-Indicator (AI) part consisting of 32 real-valued signals a0, . . . , a31
and a part of duration 1024 chips with no transmission that is not formally part of the AICH. The part of
the slot with no transmission is reserved for possible future use by other physical channels.
The real-valued signals a0, a1, . . . , a31 in Figure 11.23 are given by:
aj =
15

s=0
AIsbs,j
(11.21)
where AIs, taking the values + 1, −1, and 0, is the acquisition indicator corresponding to signature s and
the sequence bs,0, . . . , bs,31 is given by Table 11.6. If the signature s is not a member of the set of available
signatures for all the Access Service Class (ASC) for the corresponding PRACH, then AIs shall be set
to 0. If an Acquisition Indicator is set to + 1, it represents a positive acknowledgment. If an Acquisition
Indicator is set to -1, it represents a negative acknowledgment. The real-valued signals, aj, are spread
and modulated in the same fashion as bits when represented in { + 1, −1} form.
1024 chips
Transmission Off
AS #14
AS #0
AS #1
AS #i
AS #14
AS #0
a1 a2
a0
a31
a30
AI part =  4096 chips, 32 real-valued signals
20 ms
Figure 11.23
Frame structure of AICH. Reproduced by permission of © 2008 3GPPTM

458
Modulation and Coding Techniques in Wireless Communications
Table 11.6
AICH signature patterns
s
bs,0, bs,1. . ., bs,31
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
2
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
3
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
4
1
1
1
1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
5
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
6
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
7
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
8
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
9
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
10
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
11
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
12
1
1
1
1
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
1
1
1
1
13
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
1
1
−1
−1
14
1
1
1
1
−1
−1
−1
−1
−1
−1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
1
1
1
1
−1
−1
−1
−1
15
1
1
−1
−1
−1
−1
1
1
−1
−1
1
1
1
1
−1
−1
−1
−1
1
1
1
1
−1
−1
1
1
−1
−1
−1
−1
1
1

Standardization in 3GPP
459
11.2.3.11
Paging Indicator Channel (PICH)
The Paging Indicator Channel (PICH) is a ﬁxed rate (SF = 256) physical channel used to carry the paging
indicators (PI). The PICH is associated either with an S-CCPCH to which a PCH transport channel is
mapped, or with a HS-SCCH associated with the HS-PDSCH(s) to which a HS-DSCH transport channel
carrying paging messages is mapped. A UE, once registered to a network, has been allocated a paging
group. Paging Indicator (PI) shows that there are paging messages for this paging group. Once a PI has
been detected, the UE decodes the next PCH frame transmitted on the S-CCPCH to see whether there was
a paging message intended for it. Figure 11.24 [15] illustrates the frame structure of the PICH. One PICH
radio frame of length 10 ms consists of 300 bits (b0, b1, . . . , b299). Of these, 288 bits (b0, b1, . . . , b287)
are used to carry paging indicators. The remaining 12 bits are not formally part of the PICH and shall
not be transmitted (DTX). The part of the frame with no transmission is reserved for possible future use.
b1
b0
288 bits for paging indication
12 bits (transmission
off)
One radio frame (10 ms)
b287 b288
b299
Figure 11.24
Frame structure of PICH. Reproduced by permission of © 2008 3GPPTM
In each PICH frame, Np paging indicators {P0, . . . , PNp-1} are transmitted, where Np = 18, 36, 72,
or 144. If a paging indicator in a certain frame is set to “1” it is an indication that UEs associated with
this paging indicator and PI should read either the corresponding frame of the associated S-CCPCH, or
the corresponding subframes of the associated HS-SCCH. When transmit diversity is employed for the
PICH, STTD encoding is used on the PICH data.
Figure 11.25 [15] illustrates the timing between a PICH frame and its associated single S-CCPCH
frame, that is, the S-CCPCH frame that carries the paging information related to the paging indicators in
the PICH frame. A paging indicator set in a PICH frame means that the paging message is transmitted
on the PCH in the S-CCPCH frame starting τP IC H chips after the transmitted PICH frame.
The physical channels not belonging to Release’99 will be described in Section 11.3.
τPICH
Associated S-CCPCH frame
PICH frame containing paging indicator
Figure 11.25
Timing relation between PICH frame and associated S-CCPCH frame
11.2.4
Coding, Spreading and Modulation
11.2.4.1
CRC Attachment
Error detection is provided on transport blocks through a Cyclic Redundancy Check (CRC). The size of
the CRC is 24, 16, 12, 8 or 0 bits and it is signalled from higher layers what CRC size that should be used

460
Modulation and Coding Techniques in Wireless Communications
for each transport channel. The entire transport block is used to calculate the CRC parity bits for each
transport block. The parity bits are generated by one of the following cyclic generator polynomials:
gCRC24(D) = D24 + D23 + D6 + D5 + D + 1
(11.22)
gCRC16(D) = D16 + D12 + D5 + 1
(11.23)
gCRC12(D) = D12 + D11 + D3 + D2 + D + 1
(11.24)
gCRC8(D) = D8 + D7 + D4 + D3 + D + 1
(11.25)
Denote the bits in a transport block delivered to layer 1 by aim1, aim2, . . . , aim Ai , and the parity bits by
pim1, pim2, . . . , pimLi . Ai is the size of a transport block of TrCH i, m is the transport block number, and
Li is the number of parity bits. Li can take the values 24, 16, 12, 8, or 0 depending on what is signalled
from higher layers.
The encoding is performed in a systematic form, which means that in GF(2), the polynomial:
aim1D Ai +23 + aim2D Ai +22 + . . . + aim Ai D24 + pim1D23 + pim2D22 + . . . + pim23D1 + pim24
yields a remainder equal to 0 when divided by gCRC24(D), polynomial:
aim1D Ai +15 + aim2D Ai +14 + . . . + aim Ai D16 + pim1D15 + pim2D14 + . . . + pim15D1 + pim16
yields a remainder equal to 0 when divided by gCRC16(D), polynomial:
aim1D Ai +11 + aim2D Ai +10 + . . . + aim Ai D12 + pim1D11 + pim2D10 + . . . + pim11D1 + pim12
yields a remainder equal to 0 when divided by gCRC12(D) and polynomial:
aim1D Ai +7 + aim2D Ai +6 + . . . + aim Ai D8 + pim1D7 + pim2D6 + . . . + pim7D1 + pim8
yields a remainder equal to 0 when divided by gCRC8(D).
If no transport blocks are input to the CRC calculation (Mi = 0), no CRC attachment shall be done.
If transport blocks are input to the CRC calculation (Mi ̸= 0) and the size of a transport block is zero
(Ai = 0), CRC shall be attached, that is, all parity bits equal to zero.
11.2.4.2
Channel Coding
There are two types of coding scheme, which are used in WCDMA: convolutional coding and turbo
coding. It is possible to use convolutional codes with rate 1/2 and 1/3 and the turbo code with rate 1/3.
The constrained length of the used convolutional codes is 9. The coders of convolutional codes with rate
1/2 and 1/3 are depicted in Figure 11.26 [16].
Output from the rate 1/3 convolutional coder shall be done in the order output 0, output 1, output 2,
output 0, output 1, output 2, output 0, . . . , output 2. Output from the rate 1/2 convolutional coder shall
be done in the order output 0, output 1, output 0, output 1, output 0, . . . , output 1. 8 tail bits with binary
value 0 are added to the end of the code block before encoding. The initial value of the shift register of
the coder shall be “all 0” when starting to encode the input bits. The number of encoded bits Y at the
output of convolutional coder for code rate 1/2 is:
Y = 2 · K + 16
(11.26)
and for code rate 1/3 is:
Y = 3 · K + 24
(11.27)
where K is the number of bits in the input code block.
The scheme of Turbo coder is a Parallel Concatenated Convolutional Code (PCCC) with two 8-state
constituent encoders and one Turbo code internal interleaver. The coding rate of Turbo coder is 1/3. The
structure of Turbo coder is illustrated in Figure 11.27 [16].

Standardization in 3GPP
461
Output 0
G  = 557 (octal)
0
Input
D
D
D
D
D
D
D
D
Output 1
G  = 663 (octal)
1
Output 2
G  = 711 (octal)
2
Output 0
G  = 561 (octal)
0
Input
D
D
D
D
D
D
D
D
Output 1
G  = 753 (octal)
1
a)  Rate 1/2 convolutional coder
b)  Rate 1/3 convolutional coder
Figure 11.26
Rate 1/2 and rate 1/3 convolutional coders. Reproduced by permission of © 2008 3GPPTM
The transfer function of the 8-state constituent code for PCCC is:
G(D) =

1, g1(D)
g0(D)
	
(11.28)
where
g0(D) = 1 + D2 + D3
g1(D) = 1 + D + D3
(11.29)
xk
xk
zk
Turbo code
internal interleaver
x’k
z’k
D
D
D
D
D
D
Input
Output
Input
Output
x’k
1st constituent encoder
2nd constituent encoder
Figure 11.27
Structure of rate 1/3 Turbo coder (dotted lines apply for trellis termination only). Reproduced by
permission of © 2008 3GPPTM

462
Modulation and Coding Techniques in Wireless Communications
(32,10) sub-code of
second order
Reed-Muller code
TFCI code
word
b ...b
0
31
TFCI
(10 bits)
a9...a0
Figure 11.28
TFCI information coding. Reproduced by permission of © 2008 3GPPTM
The initial value of the shift registers of the 8-state constituent encoders shall be all zeros when starting
to encode the input bits. Output from the Turbo coder is x1, z1, z′1, x2, z2, z′2, . . . , xK, zK, z′K, where x1,
x2, . . . , xK are the bits input to the Turbo coder, that is, both ﬁrst 8-state constituent encoder and Turbo
code internal interleaver, and K is the number of bits, and z1, z2, . . . , zK and z′1, z′2, . . . , z′K are the bits
output from ﬁrst and second 8-state constituent encoders, respectively. The information bits xk are called
systematic bits, the bits at the output of the ﬁrst constituent encoder zk are called parity 1 bits, and the
bits at the output of the second constituent encoder z′k are called parity 2 bits.
Table 11.7
Basis code words for (32,10) TFCI code
i
Mi,0
Mi,1
Mi,2
Mi,3
Mi,4
Mi,5
Mi,6
Mi,7
Mi,8
Mi,9
0
1
0
0
0
0
1
0
0
0
0
1
0
1
0
0
0
1
1
0
0
0
2
1
1
0
0
0
1
0
0
0
1
3
0
0
1
0
0
1
1
0
1
1
4
1
0
1
0
0
1
0
0
0
1
5
0
1
1
0
0
1
0
0
1
0
6
1
1
1
0
0
1
0
1
0
0
7
0
0
0
1
0
1
0
1
1
0
8
1
0
0
1
0
1
1
1
1
0
9
0
1
0
1
0
1
1
0
1
1
10
1
1
0
1
0
1
0
0
1
1
11
0
0
1
1
0
1
0
1
1
0
12
1
0
1
1
0
1
0
1
0
1
13
0
1
1
1
0
1
1
0
0
1
14
1
1
1
1
0
1
1
1
1
1
15
1
0
0
0
1
1
1
1
0
0
16
0
1
0
0
1
1
1
1
0
1
17
1
1
0
0
1
1
1
0
1
0
18
0
0
1
0
1
1
0
1
1
1
19
1
0
1
0
1
1
0
1
0
1
20
0
1
1
0
1
1
0
0
1
1
21
1
1
1
0
1
1
0
1
1
1
22
0
0
0
1
1
1
0
1
0
0
23
1
0
0
1
1
1
1
1
0
1
24
0
1
0
1
1
1
1
0
1
0
25
1
1
0
1
1
1
1
0
0
1
26
0
0
1
1
1
1
0
0
1
0
27
1
0
1
1
1
1
1
1
0
0
28
0
1
1
1
1
1
1
1
1
0
29
1
1
1
1
1
1
1
1
1
1
30
0
0
0
0
0
1
0
0
0
0
31
0
0
0
0
1
1
1
0
0
0
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
463
After all information bits are encoded the trellis termination is performed by taking the tail bits from the
shift register feedback. Tail bits are padded after the encoding of information bits. The ﬁrst three tail bits
shall be used to terminate the ﬁrst constituent encoder (upper switch of Figure 11.27 in lower position)
while the second constituent encoder is disabled. The last three tail bits shall be used to terminate the
second constituent encoder (lower switch of Figure 11.27 in lower position) while the ﬁrst constituent
encoder is disabled. The transmitted bits for trellis termination shall then be: xK + 1, zK + 1, xK + 2, zK + 2,
xK + 3, zK + 3, x′K + 1, z′K + 1, x′K + 2, z′K + 2, x′K + 3, z′K + 3.
The special type of coding is used for the TFCI information. The TFCI is encoded using a (32, 10)
sub-code of the second order Reed-Muller code. The coding procedure is as shown in Figure 11.28 [16].
The code words of the (32, 10) sub-code of second order Reed-Muller code are linear combination of
10 basis code words. The basis code words are represented in Table 11.7 [16].
If the TFCI consist of less than 10 bits, it is padded with zeros to 10 bits, by setting the most signiﬁcant
bits to zero. The length of the TFCI code word is 32 bits. The output code word bits bi are given by:
bi =
9

n=0

an × Mi,n

mod 2,
i = 0, 1, . . . , 31
(11.30)
11.2.4.3
Spreading and Modulation
Spreading is applied to the physical channels. It consists of two operations. The ﬁrst is the channelization
operation, which transforms every data symbol into a number of chips, thus increasing the bandwidth
of the signal. The number of chips per data symbol is called the Spreading Factor (SF). Orthogonality
between the different spreading factors is achieved by the tree-structured orthogonal codes. The second
operation is the scrambling operation, where a scrambling code is applied to the spread signal. Scrambling
is used for cell separation in the downlink and user separation in the uplink. For the Release’99 channels
the QPSK modulation is used. The QPSK symbols are represented in I and Q format. The data bits
are mapped onto so-called I- and Q-branches. In uplink the I-Q/code multiplexing is used and in the
downlink the conventional QPSK modulation is in use.
11.2.4.3.1
Uplink Spreading and Modulation
In the uplink the Orthogonal Variable Spreading Factor (OVSF) codes are used as a channelization codes.
These codes provide the spreading, that is, increase the signal bandwidth and preserve the orthogonality
between a user’s different physical channels. The OVSF codes allow preserving the orthogonality across
the different symbol rates. The OVSF codes tree is represented in Figure 11.29 [17].
In Figure 11.29 the channelization codes are uniquely described as Cch,SF,k, where SF is the spreading
factor of the code and k is the code number, 0 ≤k ≤SF-1. The generation method for the channelization
code is deﬁned as follows:
Cch,1,0 = 1,
 Cch,2,0
Cch,2,1
	
=
 Cch,1,0
Cch,1,0
Cch,1,0
−Cch,1,0
	
=
 1
1
1
−1
	
,
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
Cch,2(n+1),0
Cch,2(n+1),1
Cch,2(n+1),2
Cch,2(n+1),3
:
Cch,2(n+1),2(n+1)−2
Cch,2(n+1),2(n+1)−1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
=
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
Cch,2n,0
Cch,2n,0
Cch,2n,0
−Cch,2n,0
Cch,2n,1
Cch,2n,1
Cch,2n,1
−Cch,2n,1
:
:
Cch,2n,2n−1
Cch,2n,2n−1
Cch,2n,2n−1
−Cch,2n,2n−1
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
(11.31)

464
Modulation and Coding Techniques in Wireless Communications
SF = 4
SF = 2
SF = 1
C ch,1,0 = (1)
C ch,2,0 = (1,1)
C ch,2,1 = (1,-1)
C ch,4,0 = (1,1,1,1)
C ch,4,1 = (1,1,-1,-1)
C ch,4,2 = (1,-1,1,-1)
C ch,4,3 = (1,-1,-1,1)
Figure 11.29
Code-tree for generation of Orthogonal Variable Spreading Factor (OVSF) codes. Reproduced by
permission of © 2008 3GPPTM
The scrambling is used on top of spreading. The scrambling operation does not increase the bandwidth.
It is used to separate the data of different UEs. The relation between the spreading and scrambling codes
is depicted in Figure 11.30. In the uplink, either short or long scrambling codes are used. The short
codes are used to ease the implementation of advanced multiuser receiver techniques; otherwise, long
spreading codes can be used. Short codes are S(2) codes of length 256 and long codes are Gold sequences
of length 241, but the latter are truncated to form a cycle of a 10-ms frame. There are 224 long and 224
short uplink scrambling codes.
The long scrambling code is built from two constituent long sequences. The long scrambling sequences
clong,1,n and clong,2,n are constructed from position wise modulo 2 sum of 38400 chip segments of two
binary m-sequences generated by means of two generator polynomials of degree 25. Let x, and y be the
two m-sequences respectively. The x sequence is constructed using the primitive (over GF(2)) polynomial
X25 + X3 + 1. The y sequence is constructed using the polynomial X25 + X3 + X2 + X + 1. The resulting
sequences thus constitute segments of a set of Gold sequences.
The sequence clong,2,n is a 16777232 chip shifted version of the sequence clong,1,n. Let n23 . . . n0 be the
24 bit binary representation of the scrambling sequence number n with n0 being the least signiﬁcant bit.
Figure 11.30
Spreading and Scrambling code

Standardization in 3GPP
465
The x sequence depends on the chosen scrambling sequence number n and is denoted xn. Furthermore,
let xn(i) and y(i) denote the ith symbol of the sequence xn and y, respectively.
The m-sequences xn and y are constructed as follows.
Initial conditions are:
xn(0) = n0,
xn(1) = n1, . . . , xn(22) = n22,
xn(23) = n23,
xn(24) = 1
y(0) = y(1) = . . . = y(23) = y(24) = 1
(11.32)
Recursive deﬁnition of subsequent symbols is:
xn(i + 25) = xn(i + 3) + xn(i) mod 2,
i = 0, . . . , 225 −27
y(i + 25) = y(i + 3) + y(i + 2) + y(i + 1) + y(i) mod 2,
i = 0, . . . , 225 −27
(11.33)
Then the binary Gold sequence zn is deﬁned as:
zn(i) = xn(i) + y(i) mod 2,
i = 0, . . . , 225 −2
(11.34)
The real valued Gold sequence Zn is deﬁned by:
Zn(i) =
 +1
i f zn(i) = 0
−1
i f zn(i) = 1
for i = 0, 1, . . . , 225 −2
(11.35)
Now, the real-valued long scrambling sequences clong,1,n and clong,2,n are deﬁned as follows:
clong,1,n(i) = Zn(i),
i = 0, . . . , 225 −2
clong,2,n(i) = Zn((i + 16777232) mod (225 −1)),
i = 0, . . . , 225 −2
(11.36)
The generator of the long scrambling sequences clong,1,n and clong,2,n is depicted in Figure 11.31 [17].
Finally, the complex-valued long scrambling sequence Clong, n, is deﬁned as:
Clong,n(i) = clong,1,n(i)

1 + j(−1)iclong,2,n(2 ⌊i/2⌋)

(11.37)
where i = 0, 1, . . . , 225 – 2 and ⌊⌋denotes rounding to nearest lower integer.
The short scrambling sequences cshort,1,n(i) and cshort,2,n(i) are deﬁned from a sequence from the family
of periodically extended S(2) codes.
Let n23n22. . .n0 be the 24 bit binary representation of the code number n.
The nth quaternary S(2) sequence zn(i), 0 ≤n ≤16777215, is obtained by modulo 4 addition of three
sequences, a quaternary sequence a(i) and two binary sequences b(i) and d(i), where the initial loading of
the three sequences is determined from the code number n. The sequence zn(i) of length 255 is generated
clong,1,n
clong,2,n
MSB
LSB
Figure 11.31
Uplink long scrambling sequence generator. Reproduced by permission of © 2008 3GPPTM

466
Modulation and Coding Techniques in Wireless Communications
Table 11.8
Mapping from zn(i) to cshort,1,n(i) and cshort,2,n(i)
zn(i)
cshort,1,n(i)
cshort,2,n(i)
0
+1
+1
1
−1
+1
2
−1
−1
3
+ 1
−1
according to the following relation:
zn(i) = a(i) + 2b(i) + 2d(i) mod 4,
i = 0, 1, . . . , 254
(11.38)
where the quaternary sequence a(i) is generated recursively by the polynomial g0(x) = x8 + 3x5 + x3 +
3x2 + 2x + 3 as:
a(0) = 2n0 + 1 mod 4
a(i) = 2ni mod 4,
i = 1, 2, . . . , 7
a(i) = 3a(i −3) + a(i −5) + 3a(i −6) + 2a(i −7) + 3a(i −8) mod 4,
i = 8, 9, . . . , 254
(11.39)
and the binary sequence b(i) is generated recursively by the polynomial g1(x) = x8 + x7 + x5 + x + 1 as:
b(i) = n8+i mod 2,
i = 0, 1, . . . , 7
b(i) = b(i −1) + b(i −3) + b(i −7) + b(i −8) mod 2,
i = 8, 9, . . . , 254
(11.40)
and the binary sequence d(i) is generated recursively by the polynomial g2(x) = x8 + x7 + x5 + x4 + 1
as:
d(i) = n16+i mod 2,
i = 0, 1, . . . , 7
d(i) = d(i −1) + d(i −3) + d(i −4) + d(i −8) mod 2,
i = 8, 9, . . . , 254
(11.41)
The sequence zn(i) is extended to length 256 chips by setting zn(255) = zn(0).
The mapping from zn(i) to the real-valued binary sequences cshort,1,n(i) and cshort,2,n(i), i = 0, 1, . . . , 255
is deﬁned in Table 11.8.
Finally, the complex-valued short scrambling sequence Cshort, n, is deﬁned as:
Cshort,n(i) = cshort,1,n(i mod 256)

1 + j(−1)icshort,2,n(2 ⌊i mod 256/2⌋)

(11.42)
where i = 0, 1, 2, . . . and ⌊⌋denotes rounding to nearest lower integer. The short scrambling sequence
generator is depicted in Figure 11.32 [17].
In the uplink the QPSK modulation is used, but it is used in the form of the I-Q/code multiplexing.
That means the physical channels are multiplexed in such a way that data bits of one physical channel
after spreading are treated as I branch of the QPSK modulated symbol and the bits of other physical
channel after spreading are treated as Q branch. It is done to avoid the discontinuous transmission in
uplink. If the time multiplexing of physical channels (for example, DPDCH and DPCCH) would be used
it will lead to the shutting down of the transmitter during the discontinuous transmission (DTX) period
when no information bits are transmitted as shown in Figure 11.33a, which in turn causes the power
pulsation in audio frequency. This power pulsation would cause the audible interference in the middle
of the telephony voice frequency band [1]. To avoid this effect the I-Q/code multiplexing is used. In this
case two physical channels are transmitted in parallel, one on I branch and another on Q branch and due
to this fact the transmission became continuous as can be seen in Figure 11.33b.
With the I-Q/code multiplexing the power levels of the DPDCH and DPCCH are typically different,
especially as data rates increase [1]. Due to this fact the constellation of the I-Q/code multiplexing is
pumped in one of the dimensions as shown in Figure 11.34a.

Standardization in 3GPP
467
0
7
4
+
mod n addition
d(i)
1
2
3
5
6
2
mod 2
0
7
4
b(i)
1
2
3
5
6
2
mod 2
+
mod 4
multiplication
z (i)
n
0
7
1
4
2
3
5
6
+
mod 4
Mapper
c short,1,n (i)
a(i)
+
+
+
+
+
+
+
+
+
3
3
3
2
cshort,2,n(i)
Figure 11.32
Uplink short scrambling sequence generator for 255 chip sequence. Reproduced by permission of ©
2008 3GPPTM
This constellation distortion can be overcome with the help of complex scrambling. As can be seen
from (11.37) and (11.42) Clong,n(i) or Cshort,n(i) can take one of four possible values: 1 + j, 1 −j, −1 +
j, −1 −j. That means after multiplication the I-Q/code modulated signal by the scrambling code the
resulting constellation is the constellation of the I-Q/code modulated signal rotated by ±45◦as it is
depicted in Figure 11.34b. Moreover, the complex scrambling codes are formed in such a way that the
rotations between consecutive chips within one symbol period are limited to ±90◦. The full ±180◦
rotation can happen only between consecutive symbols. Thus, the possible constellation points during
Data (DPDCH)
DTX
Control inf. (DPCCH)
Data (DPDCH)
Data (DPDCH)
DTX
Data (DPDCH)
Control inf.
(DPCCH)
Data (DPDCH)
DTX
Control inf.
(DPCCH)
Control inf.
(DPCCH)
Data (DPDCH)
Transmitter is shut down
a)
b)
Figure 11.33
a) Time channel multiplexing; b) I-Q/code channel multiplexing

468
Modulation and Coding Techniques in Wireless Communications
(I)
(Q)
(I)
(Q)
a)
b)
Figure 11.34
Constellation of the I-Q/code multiplexing a) before complex scrambling; b) after complex scrambling
one symbol period are only circles connected with solid lines or circles connected with dashed lines
depicted in Figure 11.35.
Then the resulting constellation shown in Figure 11.35 represents the rotated QPSK modulation.
Moreover, it is quite close to π/4-QPSK modulation. This complex scrambling helps to decrease the
peak-to-average power ratio (PAPR) in comparison with the original I-Q/code multiplexing, which makes
the I-Q/code multiplexing with complex scrambling much more efﬁcient. And the efﬁciency remains
constant irrespective of the power difference between DPDCH and DPCCH [1]. Figure 11.36 [17] shows
the uplink spreading of DPCCH and DPDCHs, which are spread by different channelization codes. One
DPCCH and up to six parallel DPDCHs can be transmitted simultaneously. After channelization, the
real-valued spread signals are weighted by gain factors, which are different for DPCCH and DPDCHs
but are the same for all DPDCHs. The gain factors βc and βd may be signalled by higher layers or may
be computed for certain TFCs, based on the signalled settings for a reference TFC. The calculation is
performed as follows.
Let βc,ref and βd,ref denote the signalled gain factors for the reference TFC. Further, let βc,j and βd,j
denote the gain factors used for the j:th TFC. Also let Lref denote the number of DPDCHs used for the
reference TFC and L,j denote the number of DPDCHs used for the j:th TFC. Then deﬁne the variable:
Kref =

i
RMi · Ni
(11.43)
where RMi is the semi-static rate matching attribute for transport channel i (signalled by higher layers),
Ni is the number of bits output from the radio frame segmentation block for transport channel i, and the
(I)
(Q)
Figure 11.35
Constellation of the I-Q/code multiplexing after complex scrambling

Standardization in 3GPP
469
I
Σ
j
cd,1 
βd
I+jQ 
DPDCH1
Q
cd,3 
βd
DPDCH3
cd,5 
βd
DPDCH5
cd,2 
βd
DPDCH2
cd,4 
βd
cc
βc
DPCCH
Σ
Sdpch
DPDCH4
cd,6 
βd
DPDCH6
Figure 11.36
Spreading for uplink DPCCH/DPDCHs. Reproduced by permission of © 2008 3GPPTM
sum is taken over all the transport channels i in the reference TFC. Similarly, deﬁne the variable:
K j =

i
RMi · Ni
(11.44)
where the sum is taken over all the transport channels i in the j:th TFC. The variable Aj, called the
nominal power relation is then computed as:
A j = βd,ref
βc,ref
·

Lref
L j

K j
Kref
(11.45)
The gain factors for the j:th TFC are then computed as follows:
r If Aj > 1, then βd, j = 1.0 and βc, j is the largest quantized β-value, for which the condition βc, j≤1 /
Aj holds. Since βc, j may not be set to zero, if the above rounding results in a zero value, βc, j shall be
set to the lowest quantized amplitude ratio of 1/15.
r If Aj ≤1, then βd, j is the smallest quantized β-value, for which the condition βd, j≥Aj holds and
βc, j = 1.0.

470
Modulation and Coding Techniques in Wireless Communications
The gain factors used during a compressed frame for a certain TFC are calculated from the nominal
power relation used in normal (non-compressed) frames for that TFC. Let Aj denote the nominal power
relation for the j:th TFC in a normal frame. Further, let βc,C,j and β d,C,j denote the gain factors used for
the j:th TFC when the frame is compressed. The variable AC,j is computed as:
AC, j = A j ·

15 · Npilot,C
Nslots,C · Npilot,N
(11.46)
where Npilot,C is the number of pilot bits per slot when in compressed mode, and Npilot,N is the number
of pilot bits per slot in normal mode. Nslots,C is the number of slots in the compressed frame used for
transmitting the data.
The gain factors for the j:th TFC in a compressed frame are computed as follows:
r If AC,j > 1, then βd,C, j = 1.0 and βc,C, j is the largest quantizedβ-value, for which the condition βc,C, j≤
1 / AC,j holds. Since βc,C, j may not be set to zero, if the above rounding results in a zero value, βc,C, j
shall be set to the lowest quantized amplitude ratio of 1/15.
r If AC,j ≤1, then βd,C, j is the smallest quantizedβ-value, for which the condition βd,C, j≥AC,j holds
and βc,C, j = 1.0.
The quantized β-values are deﬁned in Table 11.9 [17].
In the case that no DPDCH is conﬁgured, the gain factor βc is equal to 1. During a compressed frame,
the gain factor βc,C, j is also equal to 1.
After transforming the signal from real to complex, it is then scrambled by the complex-valued
scrambling code, which can be long or short.
As mentioned in section 11.2.3.3 the PRACH comprises preamble part and message part. The PRACH
preamble part consists of a complex-valued code Cpre,n,. It is built from a preamble scrambling code Sr-pre,n
and a preamble signature Csig,s as follows:
Cpre,n,s(k) = Sr−pre,n(k) · Csig,s(k) · exp

j
π
4 + π
2 k

,
k = 0, 1, . . . , 4095
(11.47)
Table 11.9
The quantization of the gain parameters
Signalled values for βc and βd
Quantized amplitude ratios βc and βd
15
1.0
14
14/15
13
13/15
12
12/15
11
11/15
10
10/15
9
9/15
8
8/15
7
7/15
6
6/15
5
5/15
4
4/15
3
3/15
2
2/15
1
1/15
0
Switch off
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
471
where k = 0 corresponds to the chip transmitted ﬁrst in time and Sr-pre,n and Csig,s are deﬁned below. The
scrambling code for the PRACH preamble part Sr-pre,n is constructed from the long scrambling sequences.
There are 8192 PRACH preamble scrambling codes in total.
The n:th preamble scrambling code, n = 0, 1, . . . , 8191, is deﬁned as:
Sr−pre,n(i) = ·clong,1,n(i),
i = 0, 1, . . . , 4095
(11.48)
where the sequence clong,1,n is deﬁned in (11.36). The 8192 PRACH preamble scrambling codes are
divided into 512 groups with 16 codes in each group. There is a one-to-one correspondence between
the group of PRACH preamble scrambling codes in a cell and the primary scrambling code used in the
downlink of the cell. The kth PRACH preamble scrambling code within the cell with downlink primary
scrambling code m, k = 0, 1, 2, . . . , 15 and m = 0, 1, 2, . . . , 511, is Sr-pre,n(i) as deﬁned in (11.48) with
n = 16 × m + k.
The preamble signature corresponding to a signature s consists of 256 repetitions of a length 16
signature Ps(n), n = 0, . . . , 15. This is deﬁned as follows:
Csig,s(i) = ·Ps(i mod 16),
i = 0, 1, . . . , 4095
(11.49)
The signature Ps(n) is from the set of 16 Hadamard codes of length 16.
Figure 11.37 [17] illustrates the principle of the spreading and scrambling of the PRACH message
part, consisting of data and control parts. The binary control and data parts to be spread are represented
by real-valued sequences, that is, the binary value “0” is mapped to the real value + 1, while the binary
value “1” is mapped to the real value –1. The control part is spread to the chip rate by the channelization
code cc, while the data part is spread to the chip rate by the channelization code cd.
After channelization, the real-valued spread signals are weighted by gain factors βc for the control part
and βd for the data part. At every instant in time, at least one of the values βc and βd has the amplitude
1.0. After the weighting, the stream of real-valued chips on the I- and Q-branches are treated as a
complex-valued stream of chips. This complex-valued signal is then scrambled by the complex-valued
scrambling code Sr-msg,n. The 10 ms scrambling code is aligned with the 10 ms message part radio frames,
that is, the ﬁrst scrambling chip corresponds to the beginning of a message part radio frame.
As can be seen from Figures 11.36 and 11.37 the output of the spreading and scrambling processes is
the chip sequence S. The modulation of the complex-valued chip sequence generated by the spreading
process is shown in Figure 11.38 [17].
The output of the modulation process is the sequence of QPSK symbols. The modulating chip rate is
3.84 Mcps. The transmit pulse shaping ﬁlter is a root-raised cosine (RRC) with roll-off α = 0.22 in the
j
βc
cc
cd
βd
Sr-msg,n
I+jQ
PRACH message
control part
PRACH message
data part
Q
I
S
Figure 11.37
Spreading of PRACH message part. Reproduced by permission of © 2008 3GPPTM

472
Modulation and Coding Techniques in Wireless Communications
S
Im{S}
Re{S}
cos(ωt)
Complex-valued
chip sequence
from spreading
operations
-sin(ωt)
Split
real &
imag.
parts
Pulse-
shaping
Pulse-
shaping
Figure 11.38
Uplink modulation. Reproduced by permission of © 2008 3GPPTM
frequency domain. The impulse response of the chip impulse ﬁlter RC0(t) is:
RC0(t) =
sin

π t
T c (1 −α)

+ 4α t
T c cos

π t
T c (1 + α)

π t
T c

1 −

4α t
T c
2
(11.50)
where the roll-off factor the chip duration TC is:
TC =
1
3.84 · 106 ≈0.26042µs
(11.51)
11.2.4.3.2
Downlink Spreading and Modulation
Figure 11.39 illustrates the spreading operation for all downlink physical channels except SCH. The
spreading operation includes a modulation mapper stage successively followed by a channelization
stage, an IQ combining stage and a scrambling stage. All the downlink physical channels are then
combined as shown in Figure 11.39 [17].
In the downlink for all Release’99 channels except SCH the normal QPSK modulation with time
multiplexing is used. The high order modulation (16QAM and 64QAM) is used only for HSDPA. The
audible interference generated with DTX is not a relevant issue in the downlink since the common
channels have continuous transmission in any case [1]. The I and Q branches have the equal power and
thus the scrambling operation does not provide the same effect as in uplink. For all downlink channels
except AICH, E-HICH and E RGCH the input digits are mapped to real-valued symbols as follows: the
I
downlink physical 
channel
S
→
P
Cch,SF,m 
j
Sdl,n 
Q
I+jQ
S
Modulation 
Mapper 
Figure 11.39
Spreading for all downlink physical channels except SCH. Reproduced by permission of © 2008
3GPPTM

Standardization in 3GPP
473
Different downlink
Physical channels
(point S in Figure 11.34)
G1
G2
GP
GS
S-SCH
∑
∑
P-SCH
(point T in 
Figure 11.37)
Figure 11.40
Combining downlink physical channels. Reproduced by permission of © 2008 3GPPTM
binary value “0” is mapped to the real value + 1, the binary value “1” is mapped to the real value –1 and
“DTX” is mapped to the real value 0. Each pair of two consecutive real-valued symbols is ﬁrst converted
from serial to parallel and mapped to an I and Q branch. The even and odd symbols are mapped in the
modulation mapper to the I and Q branch respectively.
For all physical channels (except SCH) the I and Q branches are spread to the chip rate by the same
real-valued channelization code Cch,SF,m, that is, the output for each input symbol on the I and the Q
branches is a sequence of SF chips corresponding to the channelization code chip sequence multiplied
by the real-valued symbol. The channelization code sequence shall be aligned in time with the symbol
boundary.
The channelization codes are the same codes as used in the uplink, namely Orthogonal Variable
Spreading Factor (OVSF) codes that preserve the orthogonality between downlink channels of different
rates and spreading factors.
Figure 11.40 [17] illustrates how different downlink channels are combined. Each complex-valued
spread channel, corresponding to point S in Figure 11.39, may be separately weighted by a weight factor
Gi. The complex-valued P-SCH and S-SCH may be separately weighted by weight factors Gp and Gs.
All downlink physical channels shall then be combined using complex additions.
A total of 218 −1 = 262,143 scrambling codes, numbered 0. . .262,142 can be generated. However,
not all the scrambling codes are used. The scrambling codes are divided into 512 sets each of a primary
scrambling code and 15 secondary scrambling codes.
The primary scrambling codes consist of scrambling codes n = 16 · i, where i = 0, . . . , 511. The ith
set of secondary scrambling codes consists of scrambling codes 16 · i + k, where k = 1, . . . , 15. There
is a one-to-one mapping between each primary scrambling code and 15 secondary scrambling codes
in a set such that ith primary scrambling code corresponds to ith set of secondary scrambling codes.
The set of primary scrambling codes is further divided into 64 scrambling code groups, each consisting
of 8 primary scrambling codes. The jth scrambling code group consists of primary scrambling codes
16 · 8 · j + 16 · k, where j = 0, . . . , 63 and k = 0, . . . , 7.
Each cell is allocated one and only one primary scrambling code. The primary CCPCH, primary
CPICH, PICH, MICH, AICH and S-CCPCH carrying PCH shall always be transmitted using the primary

474
Modulation and Coding Techniques in Wireless Communications
I
Q
1
0
1
0
2
2
3
3
4
4
5
5
6
6
7
7
8
8
9
9
17
17
16
16
15
15
14
14
13
13
12
12
11
11
10
10
Figure 11.41
Downlink scrambling code generator. Reproduced by permission of © 2008 3GPPTM
scrambling code. The other downlink physical channels may be transmitted with either the primary
scrambling code or a secondary scrambling code from the set associated with the primary scrambling
code of the cell.
The scrambling code sequences are constructed by combining two real sequences into a complex
sequence. Each of the two real sequences are constructed as the position wise modulo 2 sum of 38400
chip segments of two binary m-sequences generated by means of two generator polynomials of degree
18. The resulting sequences thus constitute segments of a set of Gold sequences. The scrambling codes
are repeated for every 10 ms radio frame. Let x and y be the two sequences respectively. The x sequence
is constructed using the primitive (over GF(2)) polynomial 1 + X7 + X18. The y sequence is constructed
using the polynomial 1 + X5 + X7 + X10 + X18. The sequence depending on the chosen scrambling
code number n is denoted zn, in the sequel. Furthermore, let x(i), y(i) and zn(i) denote the ith symbol of
the sequence x, y, and zn, respectively.
The m-sequences x and y are constructed as follows:
The x sequence is initialized with x(0) = 1, x(1) = x(2) = . . . = x(16) = x(17) = 0, and y sequence is
initialized with y(0) = y(1) = . . . = y(16) = y(17) = 1. The recursive deﬁnition of subsequent symbols
is:
x(i + 18) = x(i + 7) + x(i) mod 2,
i = 0, . . . , 218 −20
y(i + 18) = y(i + 10) + y(i + 7) + y(i + 5) + y(i) mod 2,
i = 0, . . . , 218 −20
(11.52)
The nth Gold code sequence zn, n = 0,1,2, . . . ,218 −2, is then deﬁned as:
zn(i) = x

(i + n) mod (218 −1)

+ y(i) mod 2,
i = 0, . . . , 218 −2
(11.53)
These binary sequences are converted to real valued sequences Zn by the following transformation:
Zn(i) =
 +1
i f zn(i) = 0
−1
i f zn(i) = 1 f ori = 0, 1, . . . , 218 −2
(11.54)
Finally, the nth complex scrambling code sequence Sdl,n is deﬁned as follows:
Sdl,n(i) = Zn(i) + j · Zn

(i + 131072) mod (218 −1)

,
i = 0, . . . , 38399
(11.55)
The downlink scrambling code generator is depicted in Figure 11.41 [17].

Standardization in 3GPP
475
The synchronization channel (SCH) is not under the cell scrambling code. The UE should be able to
synchronize to the cell with the help of SCH before knowing the downlink scrambling code. This is done
with the help of special synchronization codes as described in section 11.2.3.7. Since the scrambling
codes are not used for SCH, the synchronization codes must have the same properties as scrambling
codes or at least close to them, taking into account the small length of synchronization codes. The
primary synchronization code (PSC), Cpsc is constructed as a so-called generalized hierarchical Golay
sequence. The PSC is furthermore chosen to have good aperiodic auto correlation properties. The PSC
is generated by repeating the sequence a:
a =< x1, x2, x3, . . . , x16 >=< 1, 1, 1, 1, 1, 1, −1, −1, 1, −1, 1, −1, 1, −1, −1, 1 >
(11.56)
modulated by a Golay complementary sequence, and creating a complex-valued sequence with identical
real and imaginary components. The PSC Cpsc is deﬁned as:
Cpsc = (1 + j) · < a, a, a, −a, −a, a, −a, −a, a, a, a, −a, a, −a, a, a >
(11.57)
The 16 secondary synchronization codes (SSCs),

Cssc,1, . . . , Cssc,16

, are complex-valued with identi-
cal real and imaginary components, and are constructed from position wise multiplication of a Hadamard
sequence and a sequence z, deﬁned as:
z =< b, b, b, −b, b, b, −b, −b, b, −b, b, −b, −b, −b, −b, −b >
(11.58)
where
b =< x1, x2, x3, x4, x5, x6, x7, x8, −x9, −x10, −x11, −x12, −x13, −x14, −x15, −x16 >
(11.59)
and xi, i = 1, . . . , 16, are same as in (11.56). The Hadamard sequences are obtained as the rows of a
matrix H8 constructed recursively by:
H0 = (1)
Hk =
 Hk−1
Hk−1
Hk−1
−Hk−1

,
k ≥1
(11.60)
The rows are numbered from the top starting with row 0 (the all ones sequence).
Denote the nth Hadamard sequence hn as a row of H8 numbered from the top, n = 0, 1, 2, . . . , 255,
in the sequel. Furthermore, let hn(i) and z(i) denote the ith symbol of the sequence hn and z, respectively
where i = 0, 1, 2, . . . , 255 and i = 0 corresponds to the leftmost symbol.
The kth SSC, Cssc,k, k = 1, 2, 3, . . . , 16 is then deﬁned as:
CSSC,k = (1 + j)· < hm(0) · z(0),
hm(1) · z(1),
hm(2) · z(2), . . . , hm(255) · z(255) >
(11.61)
where m = 16 × (k – 1) and the leftmost chip in the sequence corresponds to the chip transmitted ﬁrst
in time.
The 64 secondary SCH sequences are constructed such that their cyclic shifts are unique, that is, a
non-zero cyclic shift less than 15 of any of the 64 sequences is not equivalent to some cyclic shift of
any other of the 64 sequences. Also, a nonzero cyclic shift less than 15 of any of the sequences is not
equivalent to itself with any other cyclic shift less than 15. The SCH code words are modulated with
symbol a = ±1 showing presence or absence of STTD encoding on the BCH as described in section
11.2.3.7.
The modulating chip rate for downlink is the same as in uplink: 3.84 Mcps. And the modulation of
the complex-valued chip sequence generated by the spreading process is exactly the same as shown for
uplink in Figure 11.38. The pulse shaping ﬁlter used in downlink is the same as in uplink.

476
Modulation and Coding Techniques in Wireless Communications
11.2.5
Cell Search
Before starting any kind of communication with the network, a UE must ﬁrst synchronize to the signals
sent from BS. The initial search procedure in WCDMA is used to identify the scrambling code used by
the BS that has the lowest path loss coefﬁcient of the received signal, among all the other base stations.
During the cell search, the UE searches for a cell and determines the downlink scrambling code and
common channel frame synchronization of that cell. If the UE will search for all possible base station
codes at all possible times it can take a lot of time and thus can seriously increase the time from power
on the phone till making the call. The WCDMA is the asynchronous system and thus cannot use the
GPS support in the search procedure as in synchronous systems like the IS-95/Cdma2000. The
grouping of the codes helps to minimize the search time and keep the complexity of the search at low
level. The cell search is typically carried out in three steps [18]:
Step 1: Slot synchronization
During the ﬁrst step of the cell search procedure the UE uses the SCH’s primary synchronization
code to acquire slot synchronization to a cell. This is typically done with a single matched ﬁlter
(or any similar device) matched to the primary synchronization code which is common to all
cells. The slot timing of the cell can be obtained by detecting peaks in the matched ﬁlter output.
Step 2: Frame synchronization and code-group identiﬁcation
During the second step of the cell search procedure, the UE uses the SCH’s secondary
synchronization code to ﬁnd frame synchronization and identify the code group of the cell found
in the ﬁrst step. This is done by correlating the received signal with all possible secondary
synchronization code sequences, and identifying the maximum correlation value. Since the
cyclic shifts of the sequences are unique the code group as well as the frame synchronization is
determined.
Step 3: Scrambling-code identiﬁcation
During the third step of the cell search procedure, the UE determines the exact primary
scrambling code used by the found cell. The primary scrambling code is typically identiﬁed
through symbol-by-symbol correlation over the CPICH with all codes within the code group
identiﬁed in the second step. After the primary scrambling code has been identiﬁed, the Primary
CCPCH can be detected. And the system- and cell speciﬁc BCH information can be read.
In case the UE has received information about which scrambling codes to search for, steps 2 and 3 above
can be simpliﬁed.
11.2.6
Power Control Procedures
In WCDMA, power control is employed in both the uplink and the downlink. In uplink the power control
is used for each UE and in downlink for each physical channel.
The main target of the uplink power control is to cope with the near-far problem. The near-far problem
arises in cases where no power control is used and all UEs in the cell are transmitting with equal power
levels as shown in Figure 11.42a.
If the UEs transmit using equal ﬁxed power levels (Tx1 Power = Tx2 Power = Tx3 Power), the cell
would be dominated by users closest to BS and the faraway users signals would not be heard by the BS
due to the path-loss variation of users with different distances from the BS (Rx1 Power < Rx2 Power
< Rx3 Power). This phenomenon is called near-far problem. Actually the fading variation can lead to
the fact that the path-loss of the UEs with the same distance from the BS varies differently. From the BS
point of view the best situation is that the received power levels of all UEs in the cell are equal regardless

Standardization in 3GPP
477
a)
b)
Figure 11.42
a) No power control, near-far problem; b) Uplink power control
of their distance from the BS (Rx1 Power ≈Rx2 Power ≈Rx3 Power) as it is shown in Figure 11.42b.
The UEs, which are far away from the BS should transmit with considerably higher power than the UEs
close to the BS. In this case the BS receiver is able to decode the UE’s transmissions in an optimal way
that leads to optimization of cell capacity. It can be reached with the help of uplink power control. In
real life not only the distance from the BS but also fading conditions of the each UE should be taken into
account to provide the efﬁcient power control. Thus, the main measure of the signal quality is the signal
to interference ratio (SIR) rather than the signal power. Another reason for using uplink power control
is the mitigation of the intra-cell interference, that is, the interference from other UEs in the cell. Also
the uplink power control helps to save the UE’s transmit energy in case the UE is close to BS and thus
optimize the battery energy consumption.
The near-far problem is also visible in downlink. Due to the signal attenuation the UEs at the cell border
experience higher interference than that near to the BS. They have a high level of interfering signals
from other BS. In downlink the main goal of power control is to keep the signal at a minimal required
level in order to decrease the interference to users in other cells (intra-cell interference). One of the main
drivers of the development of the power control algorithms is the difﬁcult propagation conditions of the
multipath fading channel causing the interference. In uplink the different users are separated with the
different orthogonal scrambling codes and in downlink the different base stations also use the different

478
Modulation and Coding Techniques in Wireless Communications
orthogonal scrambling codes. Thus, in an ideal case no intra-cell or inter-cell interference should occur.
However, in real life the multipath channel propagation conditions destroy the orthogonality of the codes
both in uplink and downlink, and the problem of inter-cell and intra-cell arise. In this case the efﬁcient
power control is vital for system functionality.
There are two basic types of power control:
r Open Loop Power Control
r Closed Loop Power Control
In the Open Loop power control the UE estimates the transmission signal strength by measuring the
received power level of the pilot signal from the BS in the downlink, and adjusts its transmission power
level in a way that is inversely proportional to the pilot signal power level. The stronger the received pilot
signal, the lower the UE transmitted power. This is a simple and efﬁcient method, but the problem is that
the interference estimation is done on the received signal, and the transmitted signal probably uses the
different frequency (in the case of FDD), which differs from the received frequency by the system’s duplex
offset. As uplink and downlink fast fading (on different frequency carriers) do not correlate, this method
gives the power values only as an average. This method is more applicable to TDD mode, where both
the uplink and downlink use the same frequency and thus their fading processes are strongly correlated.
However, Open Loop power control is used in FDD mode also, but only to provide initial power setting
of the UE at the beginning of the connection. In this case the UE estimates the received power level of
the pilot signal in downlink, and adjusts the transmission power as inversely proportional to the received
pilot power level. The information about the allowed power parameters UE receives from the BCCH.
In the Closed Loop power control technique the measurements are done on the other end of the
connection (in the BS for the uplink power control and in the UE for the downlink power control) and
the results are then sent back to UE or BS transmitter correspondingly so that it can adjust its transmitted
power. This method gives much better results that the Open Loop power control, but it can hardly react
to quick changes in the channel conditions. The Closed Loop power control is used when the radio
connection has already been established.
In WCDMA the Closed Loop power control is used in the form of two techniques:
r Inner Closed Loop power control;
r Outer Closed Loop power control.
The inner (also called fast) closed loop power control adjusts the transmitted power in order to keep
the received SIR equal to a given target. The inner closed loop power control algorithm measures the
received SIR and sends commands to the transmitter (that is, the UE in case of uplink) for the transmitted
power update. The obtained SIR estimate, noted SIRest, is then used by the receiver to generate power
control (PC) commands [18]. The transmitted power is updated at each time slot resulting in 1500 Hz
command rate. It is increased or decreased by a ﬁxed value:
r if SIRest > SIRtarget then the transmit power control (TPC) command to transmit is “0”, requesting a
transmit power decrease;
r if SIRest < SIRtarget then the TPC command to transmit is “1”, requesting a transmit power increase.
The basic step size in the case of uplink is equal to 1 or 2 dB. In downlink the basic step size is 1 dB
(mandatory) and 0.5 dB (optional). There exists another inner closed loop algorithm in accordance to
which the transmitted power updates each ﬁve time slots which simulates smaller power update steps.
The power control range in uplink is 30 dB and in downlink is 80 dB.
The outer closed loop PC is used for long term quality control. The setting of the SIRtarget for the inner
closed loop PC is done by the outer loop PC in order to match the required BLER as shown in Figure
11.43. Outer loop PC update frequency is 10-100 Hz [1]. The BLER target is a function of the service

Standardization in 3GPP
479
Amplifier
P = P + ∆P
∆TPC
∆P
Data
Detector
Decoder
SIR
estimation
SIR
comparison
SIRest
BLER 
estimation
Update 
SIRtarget
SIRtarget
TPC
TPC
Data
Tx
Rx
Inner Closed Loop PC 
(1500 Hz)
Outer Closed Loop PC 
(10 – 100 Hz)
Figure 11.43
Inner and Outer Closed Loop Power Control
that is carried. Ensuring that the lowest possible SIR target is used results in greater network capacity.
For the uplink the SIRtarget is set by the Radio Network Controller (RNC) and the control is located in
the BS. For the downlink the outer loop PC is located in UE, and the initial control parameters are set by
network.
By adjusting the SIRtarget for the inner closed loop PC the receiver is able to achieve the maximum
target BLER providing the necessary quality of service.
11.2.7
Handover Procedures
Handover is the process in which a UE closes the existing connection in the current cell and establishes
a new connection in the new cell or new cell sector. With the help of handover it is possible to provide
a continuity of mobile services to a user travelling over cell boundaries. For a user having an ongoing
communication and crossing the cell edge, it is preferable to use the radio resources in the new cell
because the signal strength perceived in the “old” cell weakens as the user crosses the boundary between
the old and the new cells. There are different types of handover:
r Hard handover;
r Soft handover;
r Softer handover;
r Inter- Radio Access Technology (RAT) handover.

480
Modulation and Coding Techniques in Wireless Communications
SF  SF0
SF  SF0
SF  SF0 / 2
10 ms Frame
Idle time
Figure 11.44
Compressed Mode
Hard handover means that all the old radio links in the UE are removed before the new radio links are
established. Hard handover is used to change the radio frequency band of the connection between the
UE and the network. In practice, each UMTS operator can use several bands of approximately 5MHz.
Moreover, in principle Node B is capable of supporting multiple carrier frequencies. Due to this the
situation occurs when the UE must switch to another carrier frequency. Usually this happens when the
current cell is congested or when the UE is penetrating the cell with different carrier frequency. Hard
handover procedure can be initiated by the network or by the UE. Generally it would be initiated by the
network using one of the Radio Bearer Control messages. In the case of UE being initiated, it would
happen if the UE performs a Cell Update procedure and that Cell Update reaches the RNC on a different
frequency [19]. In order to complete inter-frequency handovers, an efﬁcient method is needed for making
measurements on other frequencies while still having the connection running on the current frequency.
One method is providing the measurements with the help of dual receiver. That means the UE should
contain two receiver branches, each of which is capable of receiving the signal independently of another
branch. Then, one receiver branch is receiving the current frequency and simultaneously another receiver
branch is switched to another frequency for measurements. The advantage of the dual receiver approach
is that there is no break in the current frequency connection. Of course, not all UEs are dual mode
terminals. So, another option is to use the compressed mode for measurements. The compressed mode
is depicted in Figure 11.44.

Standardization in 3GPP
481
Figure 11.45
Soft handover
The information normally transmitted during a 10-ms frame is compressed either by code puncturing
or by decreasing the spreading factor, leaving idle time for measurements on other frequencies.
A soft handover occurs when the mobile station is in the overlapping coverage area of two adjacent
cells. Then the UE can add and remove radio links in such a manner that the UE always keeps at least one
radio link to network. This can be performed on the same carrier frequency only. In this case the UE may
simultaneously communicate via a number of radio links towards different cells. With reference to Soft
handover, the Active Set is deﬁned as the set of radio links simultaneously involved in the communication
between the UE and UTRAN (that is, the UTRA cells currently assigning a downlink DPCH to the UE
constitute the active set) [20]. In soft handover the UE combines more than one radio link to improve
the reception quality. On the other hand, the uplink signals from different base stations are combined
to obtain good quality data from the UE. The soft handover is represented in Figure 11.45. In the UE
the downlink signals received from the two different base stations are combined using maximum ratio
combining (MRC) processing. In the uplink direction the received signals can no longer be combined in
the base station but are routed to the RNC. In the RNC the uplink signals from different base stations are
combined by means of selective combining, that is, the two signals are compared on a frame-by-frame
basis and the best candidate is selected after each interleaving period; that is, every 10, 20, 40 or 80ms.
The outer loop power control algorithm measures the SNR of received uplink signals, and based on this
information the frame with the best quality is selected. The transmitting power of the UE is controlled
by that Node B, to which the lowest propagation loss exists.
The soft handover procedure is composed of a number of single functions:
r Measurements;
r Filtering of Measurements;
r Reporting of Measurement results;
r The Soft Handover Algorithm;
r Execution of Handover.

482
Modulation and Coding Techniques in Wireless Communications
The main measurement for making handover decisions is the pilot SNR (CPICH Ec/No). It is deﬁned
as the received energy per chip divided by the power density in the band [21]. It can be calculated as
follows:
Ec/N0 =
CPICH RSCP
UTRACarrier RSSI
(11.62)
where CPICH RSCP (Received Signal Code Power) is the received power on one code measured on the
Primary CPICH, and UTRA Carrier RSSI is the received wide band power, including thermal noise and
noise generated in the receiver, within the bandwidth deﬁned by the receiver pulse shaping ﬁlter [21].
Before sending the measurements to the network they are ﬁltered in the UE. It is done to average out the
effect of fast fading causing measurement errors. Measurement errors can lead to unnecessary handovers.
And the ﬁltering helps to avoid these errors. On the other hand, the long ﬁltering period can cause delays in
the handover. In case the handover is signiﬁcantly delayed, the UE can penetrate deeply into the adjacent
cell still obeying the power control from the old BS, thus bringing the harmful interference into the new
cell. Due to this fact the length of the ﬁlter is chosen as a trade-off between the measurement accuracy and
the handover delay. Usually the ﬁltering time of 200ms is chosen. UE is constantly measuring the CPICH
Ec/No for several neighbouring cells. If the value of CPICH Ec/No of particular cell is high enough, this
cell is included in Active Set, that is, in the list of cells having a connection with the UE. If the value of
CPICH Ec/No is not high enough the corresponding cell is included in another list: Monitoring Set. Both
sets are constantly updating. Based on the cell measurements, the Soft Handover function evaluates if
any cell should be added to (Radio Link Addition), removed from (Radio Link Removal), or replaced
in (Combined Radio Link Addition and Removal) the Active Set; performing what is known as “Active
Set Update” procedure [20]. Only the cells from the Active Set can be involved in soft handover. Other
important information needed for handover is timing information. Since the UTRAN is the asynchronous
network, the timing of different BS is not synchronized. To allow UE the combining of data obtained
from different base stations the transmissions have to be adjusted in time. To do this UE measures the
relative timing difference between cell j and cell i, deﬁned as TCPICHRxj - TCPICHRxi, where TCPICHRxj is
the time when the UE receives one Primary CPICH slot from cell j, TCPICHRxi is the time when the UE
receives the Primary CPICH slot from cell i that is closest in time to the Primary CPICH slot received
from cell j [21]. The measurements are reported to network. This report constitutes the basic input to
the Soft Handover Algorithm. The example of Soft Handover Algorithm is represented in Figure 11.46.
At the beginning the UE is connected to the BS1. The UE is measuring the pilot SNR of BS1, BS2 and
BS3 and all three corresponding cells are included in Monitoring Set. As the CPICH Ec/No of BS2 and
BS3 is not high enough they are not included in ActiveSet constituting at ﬁrst only cell 1. As the UE
penetrates the cell 2 the CPICH Ec/No of BS2 is increasing and when this measurement becomes greater
than (Best Ss - As Th + As Th Hyst) during the time-to-trigger T , the cell 2 is added to Active Set and
the corresponding report is sent to network. Here As Th is the threshold for macro diversity, Best Ss is the
best measured cell present in the Active Set, and As Th Hyst is the hysteresis. The hysteresis parameter
is used to limit the amount of event-triggered reports. The hysteresis ensures that the event is not reported
until the difference is equal to the hysteresis value. The result of usage of the time-to-trigger is that the
report is triggered only after the conditions for the event have existed for this speciﬁed time-to-trigger.
Thus, the time-to-trigger T allows avoiding the “ping-pong” effect. As UE leaves cell 1, the CPICH
Ec/No of BS1 decreases correspondingly, and cell 1 becomes the worst measured cell present in the
Active Set (with the CPICH Ec/No of BS1 denoted as Worst Old Ss). When the measured CPICH Ec/No
of BS3 is greater than (Worst Old Ss + As Rep Hyst) for a period of T and if Active Set is full, cell 3
replaces cell 1 in Active Set. Here, As Rep Hyst is the replacement hysteresis. Then, as UE is moving
towards BS2, the measured CPICH Ec/No of BS3 decreases, and when it is below (Best Ss - As Th -
As Th Hyst) for a period of T , the worst cell (in this case cell 3) is removed from the Active Set.
To execute the soft handover the UE must obtain from the new cell involved in soft handover what
channelization code(s) are used for the new radio link. The channelization codes from different cells are

Standardization in 3GPP
483
AS_Th – AS_Th_Hyst 
As_Rep_Hyst 
As_Th + As_Th_Hyst 
Cell 1 Connected    
Event 1A 
⇒ Add Cell 2 
Event 1C ⇒
Replace Cell 1 with Cell 3 
Event 1B ⇒
Remove Cell 3
CPICH 1 
CPICH 2 
CPICH 3 
Time 
Measurement 
Quantity 
∆T
∆T
∆T
Figure 11.46
Example of soft handover algorithm
not required to be the same as they are under different scrambling codes. Also the UE should calculate
the difference between timing of old and new cells involved in soft handover. Before connecting to a
new base station, the UE must measure a time difference related to the new base station and the already
connected base stations. This measurement is reported to the network, which adjusts the transmission
timing of the new base station accordingly. The relative timing information of the new cell, in respect
to the timing UE is experiencing from the existing connections (as measured by the UE at its location).
The timing difference is reported by UE to network via old cell and the network makes this information
available to the new cell as shown in Figure 11.47 [20]. Based on this, the new Node-B can determine
what should be the timing of the transmission initiated in respect to the timing of the common channels
(CPICH) of the new cell [20].

484
Modulation and Coding Techniques in Wireless Communications
PCCCH
frame
PDCH/PCCH
frame
Measure Toffset
Handover
command
and Toffset
UTRAN
Transmision channel
and Toffset
BS B
channel
information
BS A
BS B
Toffset
Figure 11.47
Information needed for Soft Handover Execution. Reproduced by permission of © 2007 3GPPTM
At the start of soft handover, the uplink dedicated physical channel transmitted by the UE, and the
downlink dedicated physical channel transmitted by the Node-B will have their radio frame number and
scrambling code phase counted up continuously, and they will not be affected by the soft handover. User
data carried on both uplink and downlink will continue without any interruption [20].
A softer handover occurs when the UE is in the overlapping coverage area of two adjacent sectors
of the same cell as shown in Figure 11.48. Actually, it is not necessary for UE to be in the overlapping
coverage area of two sectors. Quite often the additional radio link with the adjacent sector of the same
Node B can be established due to the fact that the signal sent from the UE reaches the Node B from the
adjacent sector because of reﬂections on buildings or natural barriers as shown in Figure 11.48. In this
case the UE is capable of supporting two simultaneous connections to the network using different air
interface channels in the same manner as in soft handover. The difference is that in the case of softer
handover these connections are provided via the same Node B. Due to this fact it is possible to use the
MRC not only in downlink like in soft handover but in uplink also.
In the downlink combining it should be taken into account that the Node B uses different scrambling
codes to separate the different sectors it serves. That means the signals received from different cell sectors
must be despread differently before combining them together. Thus the downlink combining is exactly
the same as in the case of soft handover.
During the soft or softer handover, transmission is performed through few Node Bs or few sectors
of the same Node B. Due to this fact the probability of data correct reception increases, and thus the
transmitting power can be decreased keeping the same BER as with one link transmission. Assume a
desired BER level is 10−6. This level can be achieved with the help of just one radio link that fulﬁls the
given BER. On the other hand, the same BER can be achieved with the help of two radio links, each
of them providing BER of only 10−3. It follows from the fact that the receiver has two copies of data
received from two different radio links and sources of noise in these two links are independent of each
other. Then the overall error event is a result of two independent error events in each of links. Thus,
the overall BER is obtained as a product of BER in link 1 and BER in link 2 (10−3 × 10−3 = 10−6).
Increasing the acceptable link BER allows decreasing the transmission power, which in turn leads to
decreasing the interference in the system. This phenomenon is called soft handover gain. On the other
hand, there is an increase in interference in the system when UEs and base stations are transmitting

Standardization in 3GPP
485
Figure 11.48
Softer handover
additional signals over the air interface compared to a situation when every radio network connection
consists of one link. Thus, it is necessary to limit the amount of soft handovers in the system to the level
at which the soft handover gain prevails over the additional interference due to multiple link connections.
Inter-RAT handover usually occurs when UE reaches the end of coverage area for UMTS services.
In this case UE can handover to some other radio access technology, for example, GSM (in case
UE is capable of receiving GSM or other RAT signal). To perform the inter-RAT handover UE must
provide measurements on downlink physical channels belonging to another radio access technology than
WCDMA, for example, GSM. In order for the UE to perform handover from UTRA FDD mode to GSM
without simultaneous use of two receiver chains, a UE can perform measurements by using idle periods
in the downlink transmission, where such idle periods are created by using the downlink compressed
mode as deﬁned in [16]. The compressed mode is under the control of the UTRAN and the UTRAN
signals appropriate conﬁgurations of compressed mode pattern to the UE. For some measurements uplink
compressed mode is also needed, depending on UE capabilities and measurement objects. Alternatively,
independent measurements not relying on the compressed mode, but using a dual receiver approach can be
performed, where the GSM receiver branch can operate independently of the UTRA FDD receiver branch
[20]. The UE is able to obtain the information from the synchronization bursts in the synchronization

486
Modulation and Coding Techniques in Wireless Communications
GSM
WCDMA
GSM FCCH
GSM SCH
GSM Idle
period
WCDMA Idle
period
Figure 11.49
WCDMA and GSM timing
frame on GSM carrier with the aid of a frequency correction (FCCH) burst. The timing relation between
WCDMA channels and GSM channels is shown in Figure 11.49.
In order to reduce the size of certain size critical messages in UMTS, a network may download/
pre-deﬁne one or more radio conﬁgurations in a mobile via system information. A predeﬁned radio
conﬁguration mainly consists of radio bearer- and transport channel parameters. A network knowing that
the UE has suitable predeﬁned conﬁgurations stored can then refer to the stored conﬁguration requiring
only additional parameters to be transferred [20]. A default conﬁguration is a set of radio bearer and
transport channel parameters. Inter-RAT handover is always performed as hard handover. Node B must
inform dual mode UE of existing GSM frequencies in the area. In turn, GSM network is required to
indicate WCDMA spreading codes for easy cell identiﬁcation.
11.2.8
Transmit Diversity
To increase the reliability of the downlink received data it is possible to use the transmit diversity. There
are two types of transmit diversity, which can be used in WCDMA: open loop and closed loop transmit
diversity. Open loop transmit diversity includes space-time block coding based transmit diversity (STTD)
and time switched transmit diversity (TSTD). STTD can be applied to all downlink physical channels
except SCH. TSTD can be applied to SCH only. Closed loop transmit diversity in principle constitutes
two modes: closed loop mode 1 (CL1) and closed loop mode 2 (CL2). However, it was decided to use
only CL1. CL1 can be applied to DPCH or HS-PDSCH (if HS-PDSCH is not used in MIMO mode).
The STTD encoder is depicted in Figure 11.50.
Actually, STTD is slightly modiﬁed Alamouti scheme having the same properties as the original one.
The STTD is optional for network, that is, for Node B but the support of STTD is mandatory for each
UE. The usage of TSTD for SCH is depicted in Figure 11.20. In case of using TSTD the signal is never
transmitted via both antennas simultaneously. The main difference between open loop and closed loop
techniques is that the open loop transmit diversity methods do not take in account the current channel
STTD Encoder
S , S
1
2
S , S
1
2
-S2
*, S1
*
Tx Antenna 1
Tx Antenna 2
Figure 11.50
STTD Encoder

Standardization in 3GPP
487
Spread/scramble
w1
w2
DPCH
DPCCH
DPDCH
∑
CPICH1
∑
CPICH2
Ant1
Ant2
Weight Generation
w1
w2
Determine FBI message
from Uplink DPCCH
Figure 11.51
CL1 transmit diversity for DPCH
state. Due to this fact the open loop methods do not use the feedback from the receiver to transmitter
employed by closed loop techniques.
The general transmitter structure to support closed loop mode transmit diversity for DPCH transmission
is shown in Figure 11.51 [15]. Channel coding, interleaving and spreading are done as in non-diversity
mode. The spread complex valued signal is fed to both TX antenna branches, and weighted with antenna
speciﬁc weight factors w1 and w2. The weight factor w1 is a constant scalar and the weight factor w2 is
complex valued signal. The weight factor w2 (actually the corresponding phase adjustment) is determined
by the UE, and signalled to the UTRAN using the FBI ﬁeld of uplink DPCCH. The weight factors w1
and w2 control the Node B beam-forming [15].
The computation of feedback information w1, w2 can be accomplished by for example, solving for
weight vector w that maximizes:
P = wH · HH · H · w
(11.63)
where w = [w1, w2]T and H = [h1, h2] represent the estimated channel impulse responses for the trans-
mit antennas 1 and 2, of length equal to the length of the channel impulse response. Without loss of
generality it is possible to assume w1 is a constant. Then the problem simpliﬁes to search value of w2
maximizing (11.63). To simplify this task even more, it is possible to limit the choice of w2 by some set
of precalculated values.
During soft handover, the UE computes the phase adjustment to maximize the total UE received power
from the cells in the active set. It can be done by maximizing the following function:
P = wH · (HH
1 · H1 + HH
2 · H2 + . . .) · w
(11.64)
where Hi is the channel impulse response matrix for cell i.

488
Modulation and Coding Techniques in Wireless Communications
Table 11.10
Phase adjustments, φi, corresponding to feedback commands for the slots i of the UL radio frame
Slot #
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
FSM
0
0
π/2
0
π/2
0
π/2
0
π/2
0
π/2
0
π/2
0
π/2
0
1
π
−π/2
π
−π/2
π
−π/2
π
−π/2
π
−π/2
π
−π/2
π
−π/2
π
Reproduced by permission of © 2008 3GPPTM
The UE uses the CPICH transmitted both from transmit antenna 1 and antenna 2 to calculate the phase
adjustment to be applied at UTRAN access point to maximize the UE received power. In each slot, UE
calculates the optimum phase adjustment, φ, for antenna 2, which is then quantized into φQ having two
possible values as follows:
φQ =
 π,
if π/2 < φ −φr(i) ≤3π/2
0,
otherwise
(11.65)
where
φr(i) =
 0,
i = 0, 2, 4, 6, 8, 10, 12, 14
π/2,
i = 1, 3, 5, 7, 9, 11, 13
(11.66)
If φQ = 0, a command ‘0’ is send to Node B using the Feedback Signalling Message (FSM) bits
transmitted in the FBI ﬁeld of uplink DPCCH slot(s) as it is shown in Figure 11.11. Correspondingly, if
φQ = π, command ‘1’ is sent to Node B. Thus, the feedback bit corresponds to either the real or imaginary
part of the current weight factor w2 in consecutive slots. As can be seen, the CL1 feedback information
load is quite small: 1 bit per slot or 15 bits per 10 ms frame (this does not take into account the encoding
of FSM bits). Due to rotation of the constellation at UE the Node B interprets the received commands
according to Table 11.10 which shows the mapping between phase adjustment, φi, and received feedback
command for each uplink slot [18].
The weight w1 for Tx antenna 1 is constant w1 = 1/
√
2. The weight w2 is then calculated by averaging
the received phases with the help of sliding window over two consecutive slots as follows:
w2 =
n
i=n−1
cos(φi)
2
+ j
n
i=n−1
sin(φi)
2
(11.67)
Due to the ﬁltering it is possible to obtain four different values of possible phase rotation using only one
feedback bit. Thus, there are four possible values of the weight w2 and at each slot the weight w2 remains
the same as in previous slot or jumps to the neighbouring value, as shown in Figure 11.52.
At frame borders the averaging operation is slightly modiﬁed. Upon reception of the FB command
for slot 0 of a frame, the average is calculated based on the command for slot 13 of the previous frame
and the command for slot 0 of the current frame, that is, φi from slot 14 is not used. It is done to keep
the same sequence of phase adjustments as inside the frame. Otherwise, at frame border there will be
possible jumps of phase adjustment by π.
Due to uplink FBI bit errors, the situation could arise when the Node B uses the beamforming weights
different from the requested by UE. This causes degradation to the performance ﬁrstly because the
antenna weights used at Node B are not optimal and secondly because wrong antenna weights may
be used in combining process at UE. The latter problem may lead to error ﬂoor in performance. To
mitigate this problem, antenna veriﬁcation can be applied, which can make use of antenna speciﬁc pilot
patterns of the dedicated physical channel. For the CL1 different orthogonal dedicated pilot symbols in
the DPCCH are sent on the two different antennas. Using the DPCH the UE can estimate the channel
coefﬁcients for the Tx antenna 2. Then, the weight w2 used by Node B can be recovered in UE by
comparing the common and dedicated channel estimates. The phase adjustment φ0 is assumed to be

Standardization in 3GPP
489
(I)
(Q)
Figure 11.52
Possible transitions of CL1 weight w2 for Tx antenna 2
φ0 = 0 if the following inequality holds on:
2
Npath

i=1
1
σ 2
i
√
2 Re(γ h(d)
2,i h(p)∗
2,i )

> ln
Pr(φ0 = π)
Pr(φ0 = 0)

(11.68)
otherwise φ0 = π. The phase adjustment φ1 is assumed to be φ1 = −π/2 if:
−2
Npath

i=1
1
σ 2
i
√
2 Im(γ h(d)
2,i h(p)∗
2,i )

> ln

Pr(φ1 = π

2)
Pr(φ1 = −π

2)

(11.69)
and φ1 = π/2 otherwise. For even slots the value of φ0 is calculated and for odd slots value of φ1. Here,
h(p)
2,i is the ith estimated channel tap of antenna 2 using the CPICH, h(d)
2,iis the ith estimated channel tap of
(I)
(Q)
Figure 11.53
Possible states of CL2 weight w2 for Tx antenna 2

490
Modulation and Coding Techniques in Wireless Communications
antenna 2 using the DPCCH, γ 2 is the ratio of DPCH Pilot SNIR to CPICH SNIR, σ 2
i is the noise plus
interference power on the ith path. Then, the weight w2 used by Node B can be calculated in accordance
with (11.67).
In closed loop mode 2 (CL2) transmit diversity not only the phase rotation but also the amplitude is
adjusted. The possible states of the weight w2 are represented in Figure 11.53.
With accurate channel estimates CL2 outperforms CL1 due to better resolution of weight coefﬁcient.
However, CL2 was removed from 3GPP speciﬁcations.
11.3
3.5G HSDPA/HSUPA
The voice service and SMS were the driving force of cellular networks development until recently.
However, nowadays this trend is changing. There is a huge demand among subscribers for high-speed
data services. Operators are also trying to offer data services to improve ARPU (Average Revenue Per
User) and hence proﬁtability. With the help of the high-speed data services operators can offer consumers
video on demand, television, streaming music, as well as the ability to record and send short movies.
For business users, the most interesting feature is the high speed Internet access from a laptop or mobile
phone anywhere, which very often is not possible to do via WiFi connection, since a WiFi coverage is
very fragmentary. As can be seen from Tables 11.4 and 11.5, Release’99 channels are able in principle
to provide the data rates both in uplink and downlink up to 2 Mbits/s. However, in real life the data
rate for Release’99 WCDMA usually is about 384 Kbits/s for downlink and 128 Kbits/s for uplink
and the typical round trip delay for packet data is about 120 – 200 ms. The high-speed data service is
characterized by the fact that typically data arrives in bursts, which poses the problem of fast changing
need in radio resources. Moreover, the low delays are required for many services (for example, for
video). The Release’99 WCDMA is not capable of meeting all these requirements. The real answer
for the high-speed data services demand was the Release 5 of 3GPP speciﬁcations (ﬁnalized in early
2002) introducing high-speed downlink packet access (HSDPA) technology. Almost at the same time,
similar works on a method to increase the uplink transmission speed have been started, and Release 6
introducing the enhanced uplink technology: high-speed uplink packet access (HSUPA) was ﬁnalized
in early 2005. Both of these technologies, similar to GPRS and EDGE in GSM, allow the packet data
transmission speed to be increased. This increase in transmission speed in comparison with Release’99
WCDMA can be up to several times. Quite often both technologies are referred to as high-speed packet
access (HSPA).
11.3.1
HSDPA
The HSDPA technology used in WCDMA signiﬁcantly improves the quality of data transmission on
downlink. The improvement in the transmission quality is possible due to the increase in the speed of
the transmission and the decrease in delays. Theoretically, the transmission speed can achieve up to 21
Mbps in non-MIMO mode and up to 28 Mbps in MIMO mode. HSDPA operates on the basis of the
concept of shared transmission channel. HSDPA introduces one new transport channel:
r HS-DSCH – High Speed Downlink Shared Channel – a transport channel shared by all of the users
of a cell;
and three new physical channels to the WCDMA system:
r HS-PDSCH – High Speed Physical Downlink Shared Channel – a physical channel used to carry the
HS-DSCH,

Standardization in 3GPP
491
r HS-SCCH – High Speed Shared Control Channel – a downlink physical channel used to carry
downlink signalling related to HS-DSCH transmission,
r HS-DPCCH – High Speed Dedicated Physical Control Channel – an uplink physical channel that
carries uplink feedback signalling related to downlink HS-DSCH transmission.
The HS-DSCH employs 2 ms TTI, which helps to decrease the delays and to share the radio resources
much faster than in Release’99. Another difference from Release’99 transport channels is using the high
order modulations: 16-QAM and 64-QAM except QPSK. The high order modulations deﬁnitely allow
the transmission data rate to be increased, but more important for this goal is the usage of adaptive
modulation and coding (AMC) or fast link adaptation. AMC allows choosing the modulation and coding
scheme based on information about channel conditions provided by the UE to the Node B. Due to short 2
ms TTI the modulation and coding can be changed quite quickly that enables the maximum possible effect
to be achieved from using the high order modulation. One more very important technology provided by
HSDPA is Hybrid Automatic Repeat-reQuest (HARQ). The HARQ procedure in HSDPA is done at L1
not involving higher layers, which also helps to decrease the delays. And, of course, one of the main
HSDPA features is fast scheduling. Typically the high-speed data has a bursty nature, that is, the amount
of required radio resources varies rapidly. In Release’99 WCDMA the radio resources (transmission
power and channelization codes) are allocated in static manner and the reallocation process is quite slow
and involves higher layers. This contradicts the bursty nature of high-speed data. Unlike Release’99, in
HSDPA the shared HS-DSCH resources (time slots and channelization codes) can be allocated to the
different users on a rapid basis due to the short TTI (2 ms) and the fact that a fast scheduling algorithm is
implemented as part of Node B functionality and there is no need to involve higher layers (for example,
RNC) in the process of scheduling. Of course, the usage of AMC and fast scheduling leads to some
ﬂuctuation in data rate for the user, but packet-switched data services can tolerate some jitter in data rate.
11.3.1.1
Link Adaptation
Usually the fading causes signiﬁcant variation of the signal to interference and noise ratio (SINR) of the
signal received by a UE. In one particular cell the SINR of the received signal may vary over time by as
much as 30-40dB. In order to improve system characteristics (such as capacity and coverage reliability)
on one hand and optimize the user performance on the other hand, the downlink signal transmitted from
Node B to a particular UE should be modiﬁed in such a way to take into account the signal quality
variation. This process of adaptation of the transmitted signal to the channel conditions is called link
adaptation. In Release’99 WCDMA channels the fast power control is used for link adaptation as shown
in Figure 11.54a. In HSDPA the transmit power is kept constant. Instead the AMC is used for link
adaptation. That means, in HSDPA the data rate is adjusted to channel conditions instead of changing the
signal power as depicted in Figure 11.54b. This solution is more beneﬁcial for the reduction of inter-cell
interference. For example, if the UE is in deep fading, even signiﬁcant increase of signal power will not
help, but rather introduce the signiﬁcant amount of interference into the system.
The spreading factor for HS-DSCH is ﬁxed (SF = 16). Thus, the data rate can be adjusted to the
channel conditions by changing modulation, coding rate or number of channelization codes allocated to
particular UE. It is possible to use three modulation schemes in HSDPA: QPSK, 16-QAM and 64-QAM.
In good channel conditions high order modulation (16-QAM or 64-QAM) can be used that immediately
increases the data rate in comparison with QPSK two or three times correspondingly. For channel coding
the turbo-encoder with constant rate 1/3 represented in Figure 11.27 is used. However, with the help
of rate matching (that is, with the help of repetition or puncturing) the coding rate can be changed in
the range from 0.14 to 1. From 1 to 15 channelization codes with SF = 16 can be used for HSDPA.
These channelization codes are considered as a common resource, which can be shared between UEs.
The allocation of channelization codes is done every TTI (2 ms) as shown in Figure 11.55.

492
Modulation and Coding Techniques in Wireless Communications
a)
b)
Figure 11.54
Link Adaptation: a) Power Control; b) Adaptive Modulation and Coding (AMC)
The choice of modulation and coding scheme is also done every 2 ms. Thus, the data rate can be
adjusted to channel conditions quite rapidly. The basement for data rate selection is the channel quality
indicator (CQI) report received from UE every TTI. The CQI report calculated in UE in fact is the
quantized estimate of the received signal SINR. Taking into account the CQI report from the UE, Node
B can adapt the data rate for this particular UE. Usually, the link adaptation is a two-step algorithm
containing inner and outer loops, for example, as a power control algorithm does. The link adaptation
algorithm based on AMC also consists of inner and outer loop algorithms. The inner loop link adaptation

Standardization in 3GPP
493
Figure 11.55
Channelization codes allocation for HSDPA users
is based on CQI reports. The main part of this algorithm (calculation of CQI report) as mentioned above
is operating in UE. The inner loop algorithm allows Node B to react very rapidly to the change of radio
channel quality. However, the UEs in the cell can have totally different receiver architecture, and due
to this fact there are some offsets in relative UE performance. For example, some quantization errors
may lead to reporting the biased CQI value. Thus, the inner loop algorithm may introduce some bias
in CQI reports. And it is the task of outer loop link adaptation algorithm to compensate for any bias
introduced by the inner loop algorithm. The outer loop algorithm is based on acknowledgment/not-
acknowledgment feedback signals (Ack/Nack) sent by UE. The algorithm is operating at Node B. The
outer loop algorithm controls the residual BLER after the ﬁrst retransmission. It is done to take into
account the gain from HARQ. The idea is to keep the BLER at the level of 10% (this level of BLER,
intended for system operations, usually is called the operating point). If during some time the BLER is
lower than 10%, Node B can provide higher data rate than that of UE requested by CQI report. And if
BLER is higher than operating point, Node B can provide lower data rate than requested by UE. Also the
link adaptation algorithm should take into account the UE capability to process the data, which depends
on UE receiver implementation (amount of available memory and efﬁciency of detection and decoding
algorithms). This capability is reﬂected in UE category, which is reported by UE to Node B. The UE
categories are listed in Table 11.11 [22].
Inter-TTI interval > 1 means that terminal cannot receive data in consecutive TTIs. It must wait for 2
ms (TTI interval = 2) or 4 ms (TTI interval = 3) after each received TTI as shown in Figure 11.56.
Thus, the UE category deﬁnes the maximum possible data rate that the UE is capable of processing.
For example, the UE of category 11 can provide a maximum data rate about 0.9 Mbps: the maximum
transport block size (TBS) is 3630 bits and the TTI interval is 2, that is, it can receive 3630 bits per 4
ms

 3630
0.004 = 0.9075Mbps

. Actually, that means the UE of category 11 can use quite simple detection
algorithm, since the used modulation is QPSK and the maximum coding rate is 3/4. The maximum
coding rate can be calculated as follows. The HSDPA spreading factor is 16, and the number of chips per
2 ms TTI is 3.84 · 106 × 0.002 = 7680, that is, the amount of transmitted symbols per channelization

494
Modulation and Coding Techniques in Wireless Communications
Table 11.11
FDD HS-DSCH physical layer categories
HS-DSCH
category
Maximum
number of
HS-DSCH
codes
received
Minimum
inter-TTI
interval
Maximum number
of bits of an
HS-DSCH
transport block
received within an
HS-DSCH TTI
Total number
of soft
channel bits
Supported
modulations
without MIMO
operation
Supported
modulations
simultaneous
with MIMO
operation
Category 1
5
3
7298
19200
Category 2
5
3
7298
28800
Category 3
5
2
7298
28800
Category 4
5
2
7298
38400
Category 5
5
1
7298
57600
QPSK, 16QAM
Category 6
5
1
7298
67200
Not applicable
Category 7
10
1
14411
115200
(MIMO not
Category 8
10
1
14411
134400
supported)
Category 9
15
1
20251
172800
Category 10
15
1
27952
172800
Category 11
5
2
3630
14400
QPSK
Category 12
5
1
3630
28800
Category 13
15
1
35280
259200
QPSK, 16QAM,
Category 14
15
1
42192
259200
64QAM
Category 15
15
1
23370
345600
QPSK, 16QAM
Category 16
15
1
27952
345600
Category 17
15
1
35280
259200
QPSK, 16QAM,
64QAM
–
23370
345600
–
QPSK,
16QAM
Category 18
15
1
42192
259200
QPSK, 16QAM,
64QAM
–
27952
345600
–
QPSK,
16QAM
Category 19
For future use; supports the capabilities of category 17 in this version of the protocol
Category 20
For future use; supports the capabilities of category 18 in this version of the protocol
Reproduced by permission of © 2009 3GPPTM
Figure 11.56
Channelization codes allocation for HSDPA users with different TTI interval values

Standardization in 3GPP
495
code per TTI is 7680
16 = 480. Taking into account that QPSK bears 2 bits per symbol, obtain 960 bits
per channelization code per TTI. Since the maximum number of channelization codes for category 11
is 5, obtain 960 × 5 = 4800 transmitted bits per TTI. That gives us the coding rate 3630
4800 ≈0.756. For
UE of category 1 the TTI interval = 3 and the maximum TBS = 7298, that is, the UE of this category
can provide maximum data rate 1.2 Mbps using 16-QAM and coding rate 3/4. The UE of category
16 using 16-QAM modulation and coding rate 0.97 with allocation of 15 channelization codes and
with TTI = 1 can provide maximum data rate 14 Mbps. And the maximum theoretical data rate in
non-MIMO mode can be provided by the UE of category 18: 21 Mbps with 64-QAM, coding rate 0.98
and 15 channelization codes. Of course, in the latter case the UE receiver must have more memory
and exploit more comprehensive detection algorithms, and therefore this type of UE should be more
expensive. On the other hand, the higher data rates provided by these UEs should stimulate end users
to buy more expensive phones with advanced receivers. And this is a clear beneﬁt for the network
operators.
11.3.1.2
Fast Scheduling
HS-DSCH is the shared channel, that is, its resources are shared between all UEs in the cell, and the
scheduling of these resources to users plays a critical role in HSDPA performance. In each TTI, the
scheduler must decide what share of HSDPA resources (channelization codes) should be allocated for
each UE. It is possible to use different strategies of scheduling. However, all of them have the inherited
contradiction between fairness and total cell throughput. The Round Robin scheduling allocates an even
number of channelization codes and time slots for each UE independently of UE channel conditions. This
leads to a lower user throughput at the cell border compared to that close to the Node B. Another option
is the Fair Throughput scheduling. This type of scheduling means that the resources are allocated for
UEs in such a way to provide the same throughput for all UEs, regardless of their radio channel quality.
This implies that UEs with poorer radio channel quality must be assigned a larger amount of resources
to balance for their throughput. This scheduling strategy gives a fair user throughput distribution at the
cost of a lower cell throughput. On the other hand, the UE channel quality measurements, which enable
the fast fading process of UEs to be tracked, gives the possibility of serving UEs on the top of their
most favourable conditions, thus introducing the gain commonly known as multi-user diversity. This
type of scheduling called Maximum C/I (carrier to interference ratio), obviously maximizes the cell
throughput, but it is done at the cost of fairness because UEs under worse radio conditions are allocated
lower amount of resources. The Maximum C/I scheduling is depicted in Figure 11.57. The multi-user
diversity increases with increase of channel variations and with the increase of number of UEs in the
cell. Thus, in the sense of cell capacity or cell throughput, fading is desirable and can be exploited. The
beneﬁt of the strategy exploiting the multi-user diversity depends on the ability of the Node B to obtain
recent and accurate channel quality measurements of the fast fading process. So, the low latency of CQI
reports is a key factor for this strategy. Due to the short TTI and the fact that scheduling is performed
directly in Node B not involving higher layers in the decision process, this requirement is met in
HSDPA.
Actually, as can be seen from Figure 11.56, it is not necessary to allocate all resources in current TTI
to one UE under the best channel conditions. Some share of channelization codes may be allocated to
other UEs. This may prevent the starvation of UEs under poor radio propagation conditions (usually the
users at the cell edge). This type of scheduling called Proportional Fair scheduling is the compromise
between the cell capacity provided by the Maximum C/I scheduling and the fairness [23], [24]. It takes
into account the channel quality as well as previously achieved UE throughput. Since the Proportional
Fair scheduling provides competitive cell capacity as well as fairness it is also used in HSDPA together
with Maximum C/I scheduling. The exact scheduling strategy is not speciﬁed in 3GPP and depends on
base station manufacturer.

496
Modulation and Coding Techniques in Wireless Communications
Figure 11.57
Fast scheduling, exploiting the multi-user diversity
11.3.1.3
H-ARQ
In fast fading conditions the AMC alone cannot guarantee the reliability of data transmission. The reasons
for this are the data rate selection granularity and the fact that CQI values were chosen and corresponding
thresholds were tabulated under some particular channel conditions and for the current channel conditions
these CQI tables may show some bias as mentioned in section 11.3.1.1. The hybrid ARQ allows the UE
not only to rapidly request the retransmission of the erroneous packet but also to add the redundancy
in retransmission only when needed. Thus, the H-ARQ mechanism helps the outer loop link adaptation
algorithm to compensate for the errors of inner loop link adaptation. H-ARQ autonomously adapts to the
instantaneous channel conditions and is insensitive to the measurement error and delay. Combining AMC
with H-ARQ leads to the best of both worlds: AMC provides the coarse data rate selection, while H-ARQ
provides for ﬁne data rate adjustment based on channel conditions. The conventional ARQ mechanism
implies that the erroneously received packet is just discarded and substituted by its retransmitted copy.
Hybrid ARQ uses soft combining mechanism. That means the retransmitted packets are combined with
the original packet to improve the decoding probability. Diversity time gain is thus obtained. It is possible
to use different types of soft combining in HSDPA. The simplest one is Chase combining [15]. In this
case the retransmission is identical, that is, exactly the same bits are retransmitted in each retransmission
attempt for the packet. Then the soft bits obtained from the two or more identical transmissions are
summed up, and the result is fed into the decoder. The idea is that each copy of the packet is weighted
by the SINR and therefore the simple summation of the soft bits gives the optimal combination [25].
In more complicated schemes, so-called incremental redundancy (IR) is used: the retransmissions are
not necessarily identical with the original one but can contain a different number of redundancy bits
for error correction. In H-ARQ of type II, the retransmissions need not be decodable alone, that is,
they can, for example, contain only parity bits of the channel turbo-encoder. If all transmissions can in
principle be decoded separately (self-decodable retransmission), that is, if each retransmission contains
all the systematic bits of the data, the scheme is called H-ARQ of type III. So, in principle the original
transmission can consist of the systematic bits only, and if the original transmission fails, then some of
parity 1 or parity 2 bits can be added to the systematic bits in the retransmissions (type III H-ARQ) or

Standardization in 3GPP
497
HSPDSCH
UE  Packet 1UE  packet 2
Node B
UE  Packet 3UE  Packet 4UE  Packet 1UE  Packet 5UE  packet 2UE  Packet 6UE  Packet 4
UL DPCCH UE
UL DPCCH UE
A
N
A
N
A
A
A
A
A
A
UE  Packet 7UE  Packet 2
UE1 HARQ channel 1
UE1 HARQ channel 2
UE1 HARQ channel 3
UE1 HARQ channel 4
UE2 HARQ channel 1
Figure 11.58
Principle of N-channel stop-and-wait HARQ (N = 4). Reproduced by permission of © 2001 3GPPTM
retransmission can consist of some part of systematic bits and parity bits or even only parity bits can
constitute the retransmission (type II H-ARQ), that is, the redundancy can be added incrementally.
The ARQ protocol used for HSDPA H-ARQ is N-channel stop-and-wait (SAW) protocol. As mentioned
in Chapter 6, stop-and-wait (SAW) is one of the simplest forms of ARQ requiring very little overhead.
However, it has one severe drawback: acknowledgments are not instantaneous and therefore after every
transmission, the transmitter must wait to receive the acknowledgment prior to transmitting the next
block. This is a well-known problem with SAW ARQ. In the interim, the channel remains idle and
system capacity goes wasted. In a slotted system, the feedback delay will waste at least half the system
capacity while the transmitter is waiting for acknowledgments. As a result, at least every other timeslot
must go idle even on an error free channel. The N-channel SAW ARQ differs from the simple SAW in
such a way that the transmitted data is split in N independent time-multiplexed channels and the simple
SAW ARQ mechanism is applied to each of these channels. Thus, while the transmitter is waiting an
acknowledgment for one channel the data is transmitted over other channels as shown in Figure 11.58
[26].
The example depicted in Figure 11.58 shows a sequence of events when packets 1-7 are being
transmitted to UE1 and packet 1 to UE2 using N-channel SAW HARQ with N = 4. Packets are
transmitted using four parallel ARQ processes for UE1 and one ARQ process for UE2, each using
stop-and-wait principle. Each packet is acknowledged during the transmission of other packets so that
the downlink channel can be kept occupied all the time if there are packets to transmit. N-channel SAW
HARQ supports asynchronous transmission: different users can be scheduled freely without waiting
completion of a given transmission. Receiver needs to know which HARQ process the packet belongs to,
and this information is explicitly signalled on HS-SCCH. Also, the information about the content of the
current packet (is it initial transmission or retransmission) and the redundancy version (RV) is signalled
on HS-SCCH. This helps the receiver to perform the combining and decoding of the transport block(s)
properly in case of signalling errors in uplink. Transmission for a given user is assumed to continue when
the channel is again allocated. The N-channel SAW HARQ used in HSDPA is asynchronous. It can be
seen from Figure 11.58: after four packets to UE1, a packet is transmitted to UE2 and the transmission to
UE1 is delayed by one TTI. Also, there are ﬁve packets to UE1 between packets to UE2. The processing
times should be deﬁned such that continuous transmission to a UE is possible. The maximum number of
HARQ processes (channels) is N = 8. Due to UE and Node B processing delay requirements minimum
value of N is set to 6.

498
Modulation and Coding Techniques in Wireless Communications
Figure 11.59
HSDPA physical channels timing
11.3.1.4
HSDPA Channels
The timing of HSDPA channels is depicted in Figure 11.59.
First the data carried by HS-SCCH is received. The HS-SCCH TTI (2 ms) consists of two parts. Part
1 occupying the ﬁrst slot of TTI carries the most critical information needed for HS-DCSH decoding:
the set of channelization codes and modulation scheme used for the current HS-DSCH TTI. This
information must be decoded before receiving the HS-DSCH TTI. Part 2 of HS-SCCH TTI contains the
information that is not so critical and can be decoded later. HS-DSCH, consisting of up to 15 physical
channels, (HS-PDSCHs) is delayed relative to HS-SCCH by two slots. That means the UE receiver
must decode the HS-SCCH Part 1 information during 1 slot (666 µs). After HS-DSCH decoding the
feedback information is sent by UE over HS-DPCCH. The ﬁrst slot of HS-DPCCH subframe (2 ms) is
occupied by acknowledgment information (Ack/Nack) and two other slots comprise CQI and Precoding
Control Indication (PCI). PCI is used only in MIMO mode. However, Ack/Nack and CQI/PCI sent in
one subframe does not necessarily refer to the same HS-DSCH TTI. The transmit timing of the start of
the HS-DPCCH subframe is delayed by about 7.5 slots relative to the end of HS-DSCH TTI. Due to this
fact Ack/Nack cannot be sent earlier than 7.5 slots after the end of HS-DSCH TTI. On the other hand,
this fact does not prevent UE to send the CQI/PCI report earlier as shown in Figure 11.60.
Node B should have the most recent information about channel state, and thus the CQI/PCI report
corresponding to the old channel state can be substituted by the most recent one. In this case the delay
between HS-DSCH TTI and CQI report is only about 2.5 slots. Of course, it depends on the ability of
the UE receiver to generate the CQI/PCI report during 2.5 slots.
Now consider the HSDPA channels in more detail.
Figure 11.60
CQI/PCI report delay

Standardization in 3GPP
499
Slot #0
Slot#1
Slot #2
Tslot = 2560 chips, 40 bits 
Data
Ndata1 bits
1 subframe: Tf  = 2 ms
Figure 11.61
Subframe structure for the HS-SCCH. Reproduced by permission of © 2008 3GPPTM
The HS-SCCH is a ﬁxed rate (60 kbps, SF = 128) downlink physical channel used to carry downlink
signalling related to HS-DSCH transmission. Figure 11.61 [15] illustrates the sub-frame structure of the
HS-SCCH.
QPSK is always used for HS-SCCH transmission.
The High Speed Physical Downlink Shared Channel (HS- PDSCH) is used to carry the High Speed
Downlink Shared Channel (HS-DSCH).
An HS-PDSCH corresponds to one channelization code of ﬁxed spreading factor SF = 16 from the
set of channelization codes reserved for HS-DSCH transmission. Multi-code transmission is allowed,
which translates to UE being assigned multiple channelization codes in the same HS-PDSCH subframe,
depending on its UE capability.
The subframe and slot structure of HS-PDSCH are shown in Figure 11.62 [15].
Slot #0
Slot#1
Slot #2
Tslot = 2560 chips, M*10*2 k bits (k=4)
Data
Ndata1 bits
1 subframe: Tf = 2 ms
Figure 11.62
Subframe structure for the HS-PDSCH. Reproduced by permission of © 2008 3GPPTM
Table 11.12
HS-DSCH ﬁelds
Slot format #i
Channel Bit
Rate (kbps)
Channel Symbol
Rate (ksps)
SF
Bits/ HS-DSCH
subframe
Bits/ Slot
Ndata
0(QPSK)
480
240
16
960
320
320
1(16QAM)
960
240
16
1920
640
640
2(64QAM)
1440
240
16
2880
960
960
Reproduced by permission of © 2008 3GPPTM

500
Modulation and Coding Techniques in Wireless Communications
Subframe #0 
Subframe # i
Subframe #4
HARQ-ACK 
CQI/PCI
One radio frame  Tf = 10 ms 
One HS-DPCCH  subframe (2 ms) 
2×Tslot = 5120 chips
Tslot = 2560 chips 
Figure 11.63
Sub-frame structure for the HS-DPCCH
An HS-PDSCH may use QPSK, 16QAM or 64QAM modulation symbols. In Figure 11.62, M is the
number of bits per modulation symbols, that is, M = 2 for QPSK, M = 4 for 16QAM and M = 6
for 64QAM. All relevant Layer 1 information is transmitted in the associated HS-SCCH, that is, the
HS-PDSCH does not carry any Layer 1 information. The HS-PDSCH slot formats are shown in Table
11.12 [15].
Figure 11.63 [15] illustrates the frame structure of the HS-DPCCH. The HS-DPCCH carries uplink
feedback signalling related to downlink HS-DSCH transmission. The HS-DSCH-related feedback sig-
nalling consists of Hybrid-ARQ Acknowledgment (HARQ-ACK) and Channel-Quality Indication (CQI)
and in this-case the UE is conﬁgured in MIMO mode of Precoding Control Indication (PCI) as well
[16]. Each sub frame of length 2 ms (3·2560 chips) consists of three slots, each of length 2560 chips.
The HARQ-ACK is carried in the ﬁrst slot of the HS-DPCCH sub-frame. The CQI, and in case the UE
is conﬁgured in MIMO mode the PCI as well, are carried in the second and third slot of a HS-DPCCH
sub-frame. There is at most one HS-DPCCH on each radio link. The HS-DPCCH can only exist together
with an uplink DPCCH.
The spreading factor of the HS-DPCCH is 256, that is, there are 10 bits per uplink HS-DPCCH slot.
QPSK is always used for HS-DPCCH transmission.
One more channel related to HSDPA is fractional dedicated physical channel (F-DPCH). This channel
partially substitutes DPCH in cases where only packet services are active in the downlink. In such a case,
(Tx OFF) 
NOFF2 bits 
Slot #0 Slot #1 
Slot #i 
Slot #14
Tslot = 2560 chips 
1 radio frame: Tf = 10 ms
TPC 
NTPC bits 
(Tx OFF) 
NOFF1 bits 
Figure 11.64
Frame structure of F-DPCH. Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
501
Table 11.13
F-DPCH ﬁelds
Slot
Format #i
Channel
Bit Rate
(kbps)
Channel
Symbol Rate
(ksps)
SF
Bits/ Slot
NOFF1 Bits/Slot
NTPC
Bits/Slot
NOFF2
Bits/Slot
0
3
1.5
256
20
2
2
16
1
3
1.5
256
20
4
2
14
2
3
1.5
256
20
6
2
12
3
3
1.5
256
20
8
2
10
4
3
1.5
256
20
10
2
8
5
3
1.5
256
20
12
2
6
6
3
1.5
256
20
14
2
4
7
3
1.5
256
20
16
2
2
8
3
1.5
256
20
18
2
0
9
3
1.5
256
20
0
2
18
Reproduced by permission of © 2008 3GPPTM
especially with lower data rates, the downlink DCH introduces too much overhead and can also consume
too much code space if looking for a large number of users using a low data rate service – like VoIP [27].
F-DPCH carries transmission power control information (TPC commands) only. It is a special case of
downlink DPCCH. Figure 11.64 [15] shows the frame structure of the F-DPCH. Each frame of length 10
ms is split into 15 slots, each of length Tslot = 2560 chips, corresponding to one power-control period.
The exact number of bits of the OFF periods and of the F-DPCH ﬁelds (NTPC) is described in Table
11.13 [15]. Each slot format corresponds to a different set of OFF periods within the F-DPCH slot.
In compressed frames, F-DPCH is not transmitted in downlink transmission gaps given by transmission
gap pattern sequences signalled by higher layers. In the case of STTD for F-DPCH, the TPC bits are not
STTD encoded and the same bits are transmitted with equal power from the two antennas.
11.3.1.4.1
HS-SCCH Multiplexing and Coding
There are three types of HS-SCCH: type 1 HS-SCCH is used when UE is not conﬁgured in MIMO mode
and not in HS-SCCH-less mode; type 2 HS-SCCH is used for so called HS-SCCH-less mode, which will
be discussed later; and type 3 HS-SCCH is used only when UE is conﬁgured in MIMO mode.
The following information is transmitted by means of the HS-SCCH type 1 physical channel.
r Channelization-code-set information (7 bits):
xccs,1, xccs,2, . . . , xccs,7
r Modulation scheme information (1 bit):
xms,1
r Transport-block size information (6 bits):
xtbs,1, xtbs,2, . . . , xtbs,6
r Hybrid-ARQ process information (3 bits):
xhap,1, xhap,2, xhap,3
r Redundancy and constellation version (3 bits):
xrv,1, xrv,2, xrv,3
r New data indicator (1 bit):
xnd,1
r UE identity (16 bits):
xue,1, xue,2, . . . , xue,16
Channelization-code-set information over HS-SCCH is mapped in the following manner: the OVSF
codes shall be allocated in such a way that they are positioned in sequence in the code tree. That is, for
P channelization codes at offset O the following codes are allocated:
Cch,16,O, . . . , Cch,16,O+P−1
(11.70)
Transmitting just two numbers P and O requires 8 bits, since P can take values from 1 to 15 and O
can take values from 0 to 15. However, taking into account that values of P and O are not independent, it

502
Modulation and Coding Techniques in Wireless Communications
is possible to transmit values of P and O with the help of only 7 bits (actually 6.5 bits). Bits xccs,1, xccs,2,
xccs,3 indicate the code group number:
xccs,1, xccs,2, xccs,3 = min(P −1, 15 −P)
(11.71)
and bits xccs,4, xccs,5, xccs,6, xccs,7, indicate code offset. If 64QAM is not conﬁgured for the UE, or if 64QAM
is conﬁgured but QPSK is used for the HS-DSCH transmission, then:
xccs,4, xccs,5,xccs,6, xccs,7 = |O −1 −[P/8] · 15|
(11.72)
Otherwise (that is, if 64QAM is conﬁgured for the UE and 16QAM or 64QAM is used for HS-DSCH
transmission):
xccs,4, xccs,5,xccs,6, xccs,dummy = |O −1 −[P/8] · 15|
(11.73)
where xccs,dummy is a dummy bit that is not transmitted on HS-SCCH. Furthermore:
xccs,7 =
 0 if
16QAM
1 if
64QAM
(11.74)
The value of xms,1 is derived from the modulation and given by the following:
xms,1 =
 0 if
QPSK
1 otherwise
(11.75)
Thus, bits xccs,7 and xms,1 deﬁne the modulation scheme.
Transport-block size information (6 bits) xtbs,1, xtbs,2, . . . , xtbs,6 is the unsigned binary representation of
the transport block size.
Hybrid-ARQ process information (3 bits) xhap,1, xhap,2, xhap,3 is the unsigned binary representation of
the HARQ process identiﬁer.
The redundancy version (RV) parameters r, s and constellation version parameter b are coded jointly
to produce the value Xrv. Xrv is alternatively represented as the sequence xrv,1, xrv,2, xrv,3 where xrv,1 is the
MSB. This is done according to Tables 11.14 [16] and 11.15 [16] according to the modulation mode
used:
New data indicator xnd,1 is set to “1” for the ﬁrst transmission and “0” for the retransmission.
The UE identity is the HS-DSCH Radio Network Identiﬁer (H-RNTI) comprising 16 bits. The H-RNTI
is allocated by controlling RNC to each UE establishing a HS-DSCH channel. H-RNTI shall be unique
within the cell carrying the HS-DSCH. The H-RNTI shows to which UE the current HS-DSCH TTI is
intended.
Figure 11.65 [16] illustrates the overall coding chain for HS-SCCH type 1.
Table 11.14
RV coding for 16QAM and 64QAM
Xrv (value)
s
r
b
0
1
0
0
1
0
0
0
2
1
1
1
3
0
1
1
4
1
0
1
5
1
0
2
6
1
0
3
7
1
1
0
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
503
Channel
Coding 1
HS-SCCH
Physical
channel
mapping
Rate
matching 1
mux
mux
Xccs
Xms
Xue
X1
X2
Xtbs
Xhap
Xrv
Xnd
Y
Channel
Coding 2
Rate
matching 2
UE
specific
masking
Z1
Z2
S1
R1
R2
Xue
RV
coding
r
s
b
UE specific
CRC
attachment
Figure 11.65
Coding chain for HS-SCCH type 1. Reproduced by permission of © 2008 3GPPTM

504
Modulation and Coding Techniques in Wireless Communications
Table 11.15
RV coding for QPSK
Xrv (value)
s
r
0
1
0
1
0
0
2
1
1
3
0
1
4
1
2
5
0
2
6
1
3
7
0
3
Reproduced by permission of © 2008 3GPPTM
The channelization code-set information xccs,1, xccs,2, . . . , xccs,7 and modulation-scheme information
xms,1 are multiplexed together. This gives a sequence of bits x1,1, x1,2, . . . , x1,8 where:
x1,i = xccs,i
i = 1,2, . . . ,7
x1,i = xms,i-7
i = 8
This bit sequence comprises the data transmitted in Part 1 of the HS-SCCH sub-frame. This data is
most important for HS-DSCH reception and should be decoded ﬁrst.
The transport-block-size information xtbs,1, xtbs,2, . . . , xtbs,6, Hybrid-ARQ-process information xhap,1,
xhap,2, xhap,3, redundancy-version information xrv,1, xrv,2, xrv,3 and new-data indicator xnd,1 are multiplexed
together. This gives a sequence of bits x2,1, x2,2, . . . , x2,13 where:
x2,i = xtbs,i
i = 1,2, . . . ,6
x2,i = xhap,i-6
i = 7,8,9
x2,i = xrv,i-9
i = 10,11,12
x2,i = xnd,i-12
i = 13
This data comprises Part 2 of the HS-SCCH sub-frame.
From the sequence of bits x1,1, x1,2, . . . , x1,8, x2,1, x2,2, . . . , x2,13 a 16 bits CRC is calculated. This gives a
sequence of bits c1, c2, . . . , c16. This sequence of bits is then masked with the UE Identity xue,1, xue,2, . . . ,
xue,16 and then appended to the sequence of bits x2,1, x2,2, . . . , x2,13 to form the sequence of bits y1, y2, . . . ,
y29, where:
yi = x2,i
i = 1, 2, . . . , 13
yi = (ci−13 + xue,i−13) mod 2
i = 14, 15, . . . , 29
(11.76)
After multiplexing Part 1 and Part 2 bits are encoded separately. Rate 1/3 convolutional coding, as
described in section 11.2.4.2, is applied to the sequence of bits x1,1,x1,2, . . . ,x1,8. This gives a sequence
of bits z1,1, z1,2, . . . , z1,48. The same encoding is applied to the sequence of bits y1, y2, . . . , y29. This gives
a sequence of bits z2,1, z2,2, . . . , z2,111.
From the input sequence z1,1, z1,2, . . . , z1,48 the bits z1,1, z1,2, z1,4, z1,8, z1,42, z1,45, z1,47, z1,48 are punctured
to obtain the output sequence r1,1,r1,2. . .r1,40.
From the input sequence z2,1, z2,2, . . . , z2,111 the bits z2,1, z2,2, z2,3, z2,4, z2,5, z2,6, z2,7, z2,8, z2,12, z2,14, z2,15,
z2,24, z2,42, z2,48, z2,54, z2,57, z2,60, z2,66, z2,69, z2,96, z2,99, z2,101, z2,102, z2,104, z2,105, z2,106, z2,107, z2,108, z2,109,
z2,110, z2,111 are punctured to obtain the output sequence r2,1,r2,2. . .r2,80.
The rate matched bits r1,1,r1,2. . .r1,40 shall be masked in an UE speciﬁc way using the UE identity xue,1,
xue,2, . . . , xue,16, to produce the bits s1,1,s1,2. . .s1,40.

Standardization in 3GPP
505
Intermediate codeword bits bi, i = 1,2. . .,48, are deﬁned by encoding the UE identity bits using the
rate 1
2 convolutional coding described in section 11.1.4.2. Eight bits b1, b2, b4, b8, b42, b45, b47, b48 out of
the resulting 48 convolutionally encoded bits are punctured to obtain the 40 bit UE speciﬁc scrambling
sequence c1, c2, . . . , c40. The mask output bits s1,1,s1,2. . .s1,40 are calculated as follows:
s1,k = (r1,k + ck) mod 2
for k = 1, 2, . . . , 40
(11.77)
The sequence of bits s1,1, s1,2, . . . , s1,40 comprising Part 1 is mapped to the ﬁrst slot of the HS-SCCH sub
frame. The sequence of bits r2,1, r2,2, . . . , r2,80 comprising Part 2 is mapped to the second and third slot
of the HS-SCCH sub-frame.
There are some speciﬁc cases when so-called HS-SCCH-less operation is used. For example, such
services as VoIP and gaming require relatively little bandwidth per user and thus the number of simul-
taneous users can be high. That means the amount of signalling is increasing, since there must exist
the HS-SCCH for each user, but the amount of data transmitting over HS-DSCH to each user is rather
small. Thus, more users mean more signalling overhead which decreases overall available bandwidth for
user data. HS-SCCH-less operation aims at reducing this overhead. In HS-SCCH-less mode operation,
HS-SCCH is not transmitted for the initial transmission of data on HS-PDSCH. And UE is trying to
blindly decode the data on HS-PDSCH with predeﬁned control information (in this case the HS-DSCH
data can only have one of four transport block sizes and is always modulated using QPSK and the
redundancy and constellation version is always pre-deﬁned to 0). If the UE is unable to blindly decode
the initial transmission successfully then the data shall be retransmitted for a maximum of two times.
HS-SCCH is transmitted only during the retransmissions. The HS-SCCH that is used for 1st and 2nd
retransmission is called HS-SCCH type 2.
When HS-SCCH-less operation is used, the ﬁrst transmission of an HS-DSCH transport block with
24 bit CRC shall be sent without an associated HS-SCCH. In this case, the UE shall use the following
signalling values in order to attempt to decode the transport block:
r Channelization-code-set information:
Conﬁgured by higher layers
r Modulation scheme information:
QPSK
r Transport-block size information:
Each of four possible sizes conﬁgured by higher layers
r Redundancy and constellation version:
Xrv = 0
r UE identity:
Conﬁgured by higher layers
In case of HS-SCCH-less operation for the initial HS-DSCH transmission UE will not send NACK on
HS-DPCCH if it is unable to decode the data. If the Node B does not detect an ACK for a HS-DSCH
transmission in HS-SCCH-less mode then the Node B decides that it was a NACK and it will retransmit
the data using HS-SCCH Type 2. During second and third transmission, the following information is
transmitted by means of the HS-SCCH type 2 physical channel.
r Channelization-code-set information (7 bits):
xccs,1, xccs,2, . . . , xccs,7
r Modulation scheme information (1 bit):
xms,1
r Special Information type (6 bits):
xtype,1, xtype,2, . . . , xtype,6
r Special Information (7 bits):
xinfo,1, xinfo,2, xinfo,3, xinfo,4, xinfo,5, xinfo,6, xinfo,7
r UE identity (16 bits):
xue,1, xue,2, . . . , xue,16
The channelization code-set bits xccs,1, xccs,2, . . . , xccs,7 are coded in accordance with (11.71), where the
value of P shall be set to either 1 or 2.
The value of xms,1 shall be set to ‘0’ (QPSK).
The Special Information type xtype,1, xtype,2, . . . , xtype,6 shall be set to “111110” to indicate HS-SCCH
less operation.

506
Modulation and Coding Techniques in Wireless Communications
The Special Information bits xinfo,1, xinfo,2, . . . , xinfo,7 comprise:
r Transport-block size information (2 bits):
xinfo,1, xinfo,2 = xtbs,1, xtbs,2
r Pointer to the previous transmission (3 bits):
xinfo,3, xinfo,4, xinfo,5 = xptr,1, xptr,2, xptr,3
r Second or third transmission (1 bit):
xinfo,6 = xsec,3
r Reserved (1 bit):
xinfo,7 = xres,1
The Transport-block size information (2 bits) xtbs,1, xtbs,2 is the unsigned binary representation of a
reference to one of the four Transport-block sizes and the associated number of HS-PDSCH codes for
the ﬁrst transmission conﬁgured by higher layers.
Pointer to the previous transmission (3 bits) xptr,1, xptr,2, xptr,3 is the unsigned binary representation of
s, such that the previous transmission of the same transport block started (6 + s) sub-frames before the
start of this transmission.
Second or Third transmission (1 bit) indicates whether this is the second or third transmission. If
xsec,1 = ‘0’, this is a second transmission. If xsec,1 = ‘1’, this is a third transmission.
The redundancy version Xrv for the second and third transmissions shall be equal to 3 and 4 respectively.
The UE identity is the same as for HS-SCCH type 1.
Figure 11.66 [16] illustrates the overall coding chain for HS-SCCH type 2.
The channelization code-set information xccs,1, xccs,2, . . . , xccs,7 and modulation-scheme information
xms,1 are multiplexed together. This gives a sequence of bits x1,1, x1,2, . . . , x1,8 where:
x1,i = xccs,i
i = 1,2, . . . ,7
x1,i = xms,i-7
i = 8
The Special Information type xtype,1, xtype,2, . . . , xtype,6, and Special Information xinfo,1, xinfo,2, xinfo,3,
xinfo,4, xinfo,5, xinfo,6, xinfo,7 are multiplexed together. This gives a sequence of bits x2,1, x2,2, . . . , x2,13 where:
x2,i = xtype,i
i = 1,2, . . . ,6
x2,i = xinfo,i-6
i = 7,8, . . . ,13
The sequence of bits y1, y2, . . . , y29, is calculated according to (11.76).
Channel coding, rate matching, UE speciﬁc masking and physical channel mapping are performed in
the same way as for HS-SCCH type 1.
HS-SCCH type 3 is used when the UE is conﬁgured in MIMO mode. The coding chain of HS-SCCH
type 3 will be considered later together with MIMO mode.
In some cases HS-SCCH is used for transmitting orders from Node B to UE. The typical orders are to
activate or deactivate the discontinuous downlink reception operation (DRX) and discontinuous uplink
DPCCH transmission operation (DTX).
No HS-PDSCH is associated with HS-SCCH orders.
The following information is transmitted by means of the HS-SCCH order physical channel.
r Order type (3 bits):
xodt,1, xodt,2, xodt,3
r Order (3 bits):
xord,1, xord,2, xord,3
r UE identity (16 bits):
xue,1, xue,2, . . . , xue,16
For an HS-SCCH order, in case of HS-SCCH type 1
r xccs,1, xccs,2, . . . , xccs,7, xms,1 shall be set to ‘11100000’
r xtbs,1, xtbs,2, . . . , xtbs,6 shall be set to ‘111101’
r xhap,1, xhap,2, xhap,3, xrv,1, xrv,2, xrv,3 shall be set to xodt,1, xodt,2, xodt,3, xord,1, xord,2, xord,3
r xnd,1 is reserved
where xodt,1, xodt,2, xodt,3, xord,1, xord,2, xord,3.

Standardization in 3GPP
507
Channel
Coding 1
HS-SCCH
Physical
channel
mapping
Rate
matching 1
mux
mux
Xccs
Xms
Xue
X1
X2
Xtype
Xinfo
Y
Channel
Coding 2
Rate
matching 2
UE
specific
masking
Z1
Z2
S1
R1
R2
Xue
UE specific
CRC
attachment
Figure 11.66
Coding chain for HS-SCCH type 2. Reproduced by permission of © 2008 3GPPTM
If Order type xodt,1, xodt,2, xodt,3 = ‘000’, then the orders for activation and deactivation of DTX and
DRX are transmitted. For this Order type, xord,1, xord,2, xord,3 comprise:
r DRX order activation (1 bit):
xord,1 = xdrx,1
r DTX order activation (1 bit):
xord,2 = xdtx,1
r Reserved (1 bit):
xord,3 = xres,1

508
Modulation and Coding Techniques in Wireless Communications
If xdrx,1 = ‘0’, then the HS-SCCH order is a DRX De-activation order.
If xdrx,1 = ‘1’, then the HS-SCCH order is a DRX Activation order.
If xdtx,1 = ‘0’, then the HS-SCCH order is a DTX De-activation order.
If xdtx,1 = ‘1’, then the HS-SCCH order is a DTX Activation order.
The multiplexing and coding of HS-SCCH orders is done in the same way as for HS-SCCH type 1.
11.3.1.4.2
HS-DSCH Multiplexing and Coding
One transport block of HS-DSCH data is transmitting every transmission time interval (TTI). The TTI
is 2 ms which is mapped to a radio sub-frame of three slots. Each sub-frame has 16 channel codes
accessible, 15 out of which can be used for the users’ data. Thus, each sub-frame includes up to 15
accessible parallel physical channels (HS-PDSCHs) for sending data. The physical channels may be
either allocated to just one UE or divided between several UEs.The coding steps for HS-DSCH are
shown in Figure 11.67 [16].
First of all the CRC is attached to the transport block. The CRC length is 24 bits. There are two methods
of CRC attachment for HS-DSCH. According to the ﬁrst method simply 24 bit CRC is calculated and
attached to transport block. In accordance with method 2 from the sequence of bits a1, a2, a3, . . . , aA,
where A is the size of the HS-DSCH transport block, a CRC of length the 24 bit ck, k = 1, . . . , 24 is
calculated ﬁrst. This sequence of bits is then masked with the UE Identity xue,1, xue,2, . . . , xue,16 and then
appended to the sequence of bits a1, a2, a3, . . . , aA to form the sequence of bits b1, b2, b3, . . . , bB, where
B = A + 24, and:
bk = ak
k = 1, 2, . . . , A
bk = ck−A
k = A + 1, . . . , A + 8
bk = (ck−A + xue,k−A−8) mod 2
k = A + 9, . . . , A + 24
(11.78)
The bits output from the HS-DSCH CRC attachment are scrambled in the bit scrambler. The bits input
to the bit scrambler are denoted by bim,1, bim,2, bim,3, . . . , bim,B, where B is the number of bits input to
the HS-DSCH bit scrambler The bits after bit scrambling are denoted dim,1, dim,2, dim,3, . . . , dim,B.
Bit scrambling is deﬁned by the following relation:
dim,k =

bim,k + yk

mod 2,
k = 1, 2, . . . , B
(11.79)
and yk results from the following operation:
y′
γ = 0,
−15 < γ < 1
y′
γ = 1,
γ = 1
y′
γ =
 16

x=1
gx · y′
γ −x

mod 2
1 < γ ≤B
(11.80)
where g = {g1, g2, . . . , g16} = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1}, yk = y′k, k = 1,2, . . . ,B.
The code block segmentation for HS-DSCH is trivial since there is a maximum of one transport block.
The output bits from the code block segmentation function are oir1, oir2, oir3,. . .oirK. Channel coding for
the HS-DSCH transport channel shall be done with the general method described in section 11.2.4.2
with the following speciﬁc parameters. There will be a maximum of one transport block, i = 1. The rate
1/3 turbo coding shall be used. The value of Z = 5114 for turbo coding shall be used.
The hybrid ARQ functionality matches the number of bits at the output of the channel coder to the total
number of bits of the HS-PDSCH set to which the HS-DSCH is mapped. The hybrid ARQ functionality
is controlled by the redundancy version (RV) parameters. The exact set of bits at the output of the
hybrid ARQ functionality depends on the number of input bits, the number of output bits, and the RV
parameters.

Standardization in 3GPP
509
CRC attachment
aim1,aim2,aim3,...aimA
Code block segmentation
Channel Coding
Physical  channel
segmentation
PhCH#1
PhCH#P
Physical Layer Hybrid-ARQ
functionality
dim1,dim2,dim3,...dimB
oir1,oir2,oir3,...oirK
ci1,ci2,ci3,...ciE
vp,1,vp,2,vp,3,...vp,U
up,1,up,2,up,3,...up,U
w1,w2,w3,...wR
HS-DSCH
Interleaving
Physical channel mapping
Constellation
re-arrangement
for 16QAM and 64QAM
rp,1,rp,2,rp,3,...rp,U
Bit Scrambling
bim1,bim2,bim3,...bimB
Figure 11.67
Coding chain for HS-DSCH. Reproduced by permission of © 2008 3GPPTM

510
Modulation and Coding Techniques in Wireless Communications
Systematic
bits
Parity 1
bits
Parity2
bits
RM_P1_1
RM_P2_1
RM_P1_2
RM_P2_2
RM_S
First Rate Matching
Second Rate Matching
Virtual IR Buffer
Nsys
Np1
Np2
Nt,sys
Nt,p1
Nt,p2
bit
separation
NTTI
bit
collection
Ndata
C
W
Figure 11.68
HS-DSCH H-ARQ functionality. Reproduced by permission of © 2008 3GPPTM
The hybrid ARQ functionality consists of two rate-matching stages and a virtual buffer as shown in
Figure 11.68 [16].
The ﬁrst rate matching stage matches the number of input bits to the virtual IR buffer, information
about which is provided by higher layers. Note that, if the number of input bits does not exceed the
virtual IR buffering capability, the ﬁrst rate-matching stage is transparent.
The second rate matching stage matches the number of bits after ﬁrst rate matching stage to the number
of physical channel bits available in the HS-PDSCH set in the TTI.
The parameters of the second rate matching stage depend on the value of the RV parameters s and r.
The parameter s can take the value 0 or 1 to distinguish between transmissions that prioritize systematic
bits (s = 1) and non systematic bits (s = 0). The parameter r (range 0 to rmax −1) changes the initial
error variable eini which deﬁnes the work of rate matching algorithm in the case of puncturing. In case
of repetition both parameters r and s change the initial error variable eini. For details of calculation
parameters for rate matching pattern determination algorithm see sections 4.5.4.2 and 4.5.4.3 in [16].
The rate matching pattern determination algorithm used in both ﬁrst rate matching and second rate
matching is the same as that used for Rel’99 channels described in section 11.2.3.1.
The HARQ bit collection is achieved using a rectangular interleaver of size Nrow × Ncol.
The number of rows and columns are determined from:
Nrow = 6
for 64 QAM,
Nrow = 4
for 16QAM
and
Nrow = 2
for QPSK
Ncol = Ndata/Nrow
where Ndata is used as deﬁned in Table 11.12.
Data is written into the interleaver column by column, and read out of the interleaver row by row
starting from the ﬁrst column.
Nt,sys is the number of transmitted systematic bits. Intermediate values Nr and Nc are calculated using:
Nr =
 Nt,sys
Ncol

and
Nc = Nt,sys −Nr · Ncol
If Nc = 0 and Nr > 0, the systematic bits are written into rows 1. . .Nr.
Otherwise systematic bits are written into rows 1. . .Nr + 1 in the ﬁrst Nc columns and, if Nr > 0, also
into rows 1. . .Nr in the remaining Ncol-Nc columns.

Standardization in 3GPP
511
The remaining space is ﬁlled with parity bits. The parity bits are written column wise into the remaining
rows of the respective columns. Parity 1 and 2 bits are written in alternating order, starting with a parity
2 bit in the ﬁrst available column with the lowest index number.
In the case of 64QAM for each column the bits are read out of the interleaver in the order row 1, row 2,
row 3, row 4, row 5, row 6. In the case of 16QAM for each column the bits are read out of the interleaver
in the order row 1, row 2, row 3, row 4. In the case of QPSK for each column the bits are read out of the
interleaver in the order row 1, row 2.
When more than one HS-PDSCH is used, physical channel segmentation divides the bits among the
different physical channels. The bits input to the physical channel segmentation are denoted by w1, w2,
w3,. . .wR, where R is the number of bits input to the physical channel segmentation block. The number
of PhCHs is denoted by P.
The bits after physical channel segmentation are denoted u p1, u p2, u p3, . . . , u pU, where p is PhCH
number and U is the number of bits in one radio sub-frame for each HS-PDSCH, that is, U = R
P . The
relation between wk and up,k is given below.
For all modes, some bits of the input ﬂow are mapped to each code until the number of bits on the
code is U.
Bits on ﬁrst PhCH after physical channel segmentation:
u1,k = wk
k = 1, 2, . . . , U
Bits on second PhCH after physical channel segmentation:
u2,k = wk+U
k = 1, 2, . . . , U
. . .
Bits on the Pth PhCH after physical channel segmentation:
u P,k = wk+(P−1)×U
k = 1, 2, . . . , U
The interleaving for FDD is done as shown in Figure 11.69, separately for each physical channel. The
bits input to the block interleaver are denoted by u p,1, u p,2, u p,3, . . . , u p,U, where p is PhCH number and
U is the number of bits in one TTI for one PhCH. For QPSK U = 960, for 16QAM U = 1920 and for
Interleaver
(32x30)
Interleaver
(32x30)
up,k  (QPSK)
up,k  up,k+1 (16QAM)
up,k+2 up,k+3 (16QAM)
vp,k  (QPSK)
vp,k vp,k+1 (16QAM)
vp,k+2  vp,k+3 (16QAM)
up,k  up,k+1 (64QAM)
vp,k vp,k+1 (64QAM)
up,k+2 up,k+3 (64QAM)
vp,k+2  vp,k+3 (64QAM)
Interleaver
(32x30)
vp,k+4  vp,k+5 (64QAM)
up,k+4 up,k+5 (64QAM)
Figure 11.69
Interleaver structure for HS-DSCH

512
Modulation and Coding Techniques in Wireless Communications
Table 11.16
Constellation re-arrangement for 16QAM
constellation version
parameter b
Output bit sequence
Operation
0
v p,kvp,k+1v p,k+2vp,k+3
None
1
v p,k+2vp,k+3v p,kvp,k+1
Swapping MSBs with LSBs
2
v p,kvp,k+1v p,k+2vp,k+3
Inversion of the logical values of LSBs
3
v p,k+2vp,k+3v p,kvp,k+1
Swapping MSBs with LSBs and inversion of
logical values of LSBs
Reproduced by permission of © 2008 3GPPTM
64QAM U = 2880. The basic interleaver is as the 2nd interleaver described by (11.12). The interleaver
is of ﬁxed size: R2 = 32 rows and C2 = 30 columns.
For 16QAM, there are two identical interleavers of the same ﬁxed size R2 × C2 = 32 × 30. The
output bits from the physical channel segmentation are divided two by two between the interleavers: bits
up,k and up,k + 1 go to the ﬁrst interleaver and bits up,k + 2 and up,k + 3 go to the second interleaver. Bits are
collected two by two from the interleavers: bits vp,k and vp,k + 1are obtained from the ﬁrst interleaver and
bits vp,k + 2 and vp,k + 3 are obtained from the second interleaver, where k mod 4 = 1.
For 64QAM, there are three identical interleavers of the same ﬁxed size R2 × C2 = 32 × 30. The
output bits from the physical channel segmentation are divided two by two between the interleavers:
bits up,k and up,k + 1 go to the ﬁrst interleaver, bits up,k + 2 and up,k + 3 go to the second interleaver and bits
up,k + 4 and up,k + 5 go to the third interleaver. Bits are collected two by two from the interleavers: bits
vp,k and vp,k + 1are obtained from the ﬁrst interleaver, bits vp,k + 2 and vp,k + 3 are obtained from the second
interleaver and bits vp,k + 4 and vp,k + 5 are obtained from the third interleaver, where k mod 6 = 1.
Quite often the bit-mapping onto the signal constellation causes the variations in bit reliabilities, that
is, some bits suffer more than others from the symbol error in cases where high order modulation is used.
This in turn causes the packetizing of bit errors. To avoid this problem the constellation rearrangement is
used. That means the different mapping rules are used for different (re)transmissions of the same packet.
This signiﬁcantly improves the receiver error rate performance. The mapping rule used for the current
transmission is deﬁned by constellation version parameter b. The constellation rearrangement function
only applies to 16QAM and 64QAM modulated bits. In the case of QPSK it is transparent. Table 11.16
[16] describes the operations that produce the different rearrangements for 16QAM. The bits of the
input sequence are mapped in groups of four so that vp,k, vp,k + 1, vp,k + 2, vp,k + 3 are used, where k mod
4 = 1. The output bit sequences map to the output bits in groups of four, that is, rp,k, rp,k + 1, rp,k + 2,
rp,k + 3, where k mod 4 = 1.
Table 11.17 [16] describes the operations that produce the different rearrangements for 64QAM. The
bits of the input sequence are mapped in groups of six so that vp,k, vp,k + 1, vp,k + 2, vp,k + 3, vp,k + 4, vp,k + 5
Table 11.17
Constellation re-arrangement for 64QAM
constellation version
parameter b
Output bit sequence
Operation
0
v p,kvp,k+1v p,k+2vp,k+3v p,k+4vp,k+5
None
1
v p,k+4vp,k+5v p,k+2vp,k+3v p,kvp,k+1
Swapping MSBs and LSBs. Inversion of
Middle SBs
2
v p,k+2vp,k+3v p,k+4vp,k+5v p,kvp,k+1
Left circular shift of pair of SBs. Inversion
of Middle SBs
3
v p,kvp,k+1v p,k+2vp,k+3v p,k+4vp,k+5
Inversion of Middle SBs

Standardization in 3GPP
513
are used, where k mod 6 = 1. The output bit sequences map to the output bits in groups of six, that is,
rp,k, rp,k + 1, rp,k + 2, rp,k + 3, rp,k + 4, rp,k + 5, where k mod 6 = 1.
After the constellation rearrangement the obtained bit sequence is mapped to physical channels HS-
PDSCHs. The bits input to the physical channel mapping are denoted by rp,1, rp,2, . . . ,rp,U, where p is the
physical channel number and U is the number of bits in one radio sub-frame for one HS-PDSCH. The
bits rp,k are mapped to the PhCHs so that the bits for each PhCH are transmitted over the air in ascending
order with respect to k.
11.3.1.4.3
HS-DPCCH Multiplexing and Coding
The data transmitted over HS-DPCCH is HARQ acknowledgment and Channel Quality Indicator (CQI).
In cases where the UE is conﬁgured in MIMO mode the Precoding Control Indicator (PCI) is also
transmitted over HS-DPCCH. The coding/multiplexing for HS-DPCCH is deﬁned separately for cases
when the UE is or is not conﬁgured in MIMO mode.
The general coding ﬂow when the UE is not conﬁgured in MIMO mode is shown in Figure 11.70
[16]. This is done in parallel for the HARQ-ACK and CQI as the ﬂows are not directly multiplexed but
are transmitted at different times.
The case of HS-DPCCH coding/multiplexing when UE is conﬁgured in MIMO mode will be consid-
ered later together with MIMO scheme.
Two forms of channel coding are used, one for the channel quality indication (CQI) and another for
HARQ acknowledgment (HARQ-ACK).
The Ack/Nack information is not necessarily sent in each subframe, for example, in cases of discontin-
uous transmission. In this case Node B should detect not only ACK or NACK but also “no transmission”
(DTX), which adds complexity to the detection algorithm. Especially undesirable is the case when DTX
is detected by Node B as ACK, since it will be followed by sending the new user data to UE, while
UE does not expect this. Of course it is possible to cope with this problem by increasing the transmit
power on the HS-DPCCH for ACK/NACK ﬁelds but obviously it would cause the increase of UE energy
consumption. To avoid requiring that the UE transmit at a power level that for most time intervals would
Physical channel mapping
Channel Coding
Channel coding
PhCH
b0,b1...b19
Physical channel mapping
HARQ-ACK
CQI
a0,a1...a4
PhCH
w0,w1,w ,...w
2
9
Figure 11.70
Coding for HS-DPCCH when the UE is not conﬁgured in MIMO mode. Reproduced by permission
of © 2008 3GPPTM

514
Modulation and Coding Techniques in Wireless Communications
Table 11.18
Channel coding of HARQ-ACK when the UE is not conﬁgured in MIMO mode
HARQ-ACK message
to be transmitted
w0
w1
w2
w3
w4
w5
w6
w7
w8
w9
ACK
1
1
1
1
1
1
1
1
1
1
NACK
0
0
0
0
0
0
0
0
0
0
PRE
0
0
1
0
0
1
0
0
1
0
POST
0
1
0
0
1
0
0
1
0
0
Reproduced by permission of © 2008 3GPPTM
be unnecessarily high, it is possible to send the special messages HARQ Preamble and HARQ Postamble
instead of Ack/Nack information in place of HARQ acknowledgment messages. These messages mark
the start and the end of discontinuous transmission (DTX). When a UE receives signalling information
intended for this UE on HS-SCCH, the UE would transmit a HARQ Preamble in the subframe preceding
the subframe allocated to the HARQ ACK/NACK, unless an ACK or NACK corresponding to the previ-
ous HS-PDSCH packet is to be transmitted in this particular subframe. In addition, the UE would transmit
a HARQ Postamble in the subframe following the HARQ ACK/NACK, unless another HS-DSCH packet
follows immediately and is successfully decoded. Thus, after transition of UE from DTX mode to active
mode the ﬁrst message received by Node B from the UE would be the HARQ Preamble, and then Node
B can expect only ACK or NACK in the consequent subframes. Correspondingly when UE is entering
the DTX mode the HARQ Postamble would be the last HARQ message sent to Node B. After this the
Node B is expecting only HARQ Preamble message. Such a procedure would keep the Node B from
detecting DTX as ACK in the HARQ ACK/NACK subframe, allowing a substantial reduction in the
Table 11.19
Basis code words of (20,5) code
i
Mi,0
Mi,1
Mi,2
Mi,3
Mi,4
0
1
0
0
0
1
1
0
1
0
0
1
2
1
1
0
0
1
3
0
0
1
0
1
4
1
0
1
0
1
5
0
1
1
0
1
6
1
1
1
0
1
7
0
0
0
1
1
8
1
0
0
1
1
9
0
1
0
1
1
10
1
1
0
1
1
11
0
0
1
1
1
12
1
0
1
1
1
13
0
1
1
1
1
14
1
1
1
1
1
15
0
0
0
0
1
16
0
0
0
0
1
17
0
0
0
0
1
18
0
0
0
0
1
19
0
0
0
0
1
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
515
required power. The HARQ acknowledgment message to be transmitted shall be coded to 10 bits as
shown in Table 11.18 [16]. The output is denoted w0, w1,. . .w9.
The channel quality indication is coded using a (20,5) code. The code words of the (20,5) code are a
linear combination of the 5 basis code words (generation matrix) denoted Mi,n deﬁned in the Table 11.19
[16].
The CQI values 1 . . . 30 (CQI value of 0 is forbidden) are converted from decimal to binary to map
them to the channel quality indication bits (1 0 0 0 0) to (1 1 1 1 1) respectively. The channel quality
indication bits are a0, a1, a2, a3, a4 (where a0 is LSB and a4 is MSB). The output codeword bits bi are
given by:
bi =
4

n=0
(an × Mi,n) mod 2
(11.81)
where i = 0, . . . , 19.
The HS-DPCCH physical channel mapping function shall map the input bits bk directly to physical
channel so that bits are transmitted over the air in ascending order with respect to k.
11.3.1.4.4
HSDPA Spreading and Modulation
The HS-SCCH and HS-PDSCHs are spread in the same way as all downlink channels as described in
section 11.2.4.2.2. The HS-SCCH is modulated with QPSK and the HS-PDSCH can be modulated with
QPSK, 16-QAM or 64-QAM.
In the case of 16-QAM, a set of four consecutive binary symbols nk, nk + 1, nk + 2, nk + 3 (with k mod
4 = 0) is serial-to-parallel converted to two consecutive binary symbols (i1 = nk, i2 = nk + 2) on the I
branch and two consecutive binary symbols (q1 = nk + 1, q2 = nk + 3) on the Q branch and then mapped
to 16-QAM by the modulation mapper as deﬁned in Table 11.20.
In the case of 64-QAM, a set of six consecutive binary symbols nk, nk + 1, nk + 2, nk + 3, nk + 4, nk + 5
(with k mod 6 = 0) is serial-to-parallel converted to three consecutive binary symbols (i1 = nk, i2 = nk + 2,
i3 = nk + 4) on the I branch and three consecutive binary symbols (q1 = nk + 1, q2 = nk + 3, q3 = nk + 5) on
the Q branch and then mapped to 64-QAM by the modulation mapper as deﬁned in Table 11.21.
Table 11.20
16-QAM modulation mapping
i1q1i2q2
I branch
Q branch
0000
0.4472
0.4472
0001
0.4472
1.3416
0010
1.3416
0.4472
0011
1.3416
1.3416
0100
0.4472
−0.4472
0101
0.4472
−1.3416
0110
1.3416
−0.4472
0111
1.3416
−1.3416
1000
−0.4472
0.4472
1001
−0.4472
1.3416
1010
−1.3416
0.4472
1011
−1.3416
1.3416
1100
−0.4472
−0.4472
1101
−0.4472
−1.3416
1110
−1.3416
−0.4472
1111
−1.3416
−1.3416

516
Modulation and Coding Techniques in Wireless Communications
Table 11.21
64-QAM modulation mapping
i1q1i2q2 i3q3
I branch
Q branch
i1q1i2q2 i3q3
I branch
Q branch
000000
0.6547
0.6547
100000
−0.6547
0.6547
000001
0.6547
0.2182
100001
−0.6547
0.2182
000010
0.2182
0.6547
100010
−0.2182
0.6547
000011
0.2182
0.2182
100011
−0.2182
0.2182
000100
0.6547
1.0911
100100
−0.6547
1.0911
000101
0.6547
1.5275
100101
−0.6547
1.5275
000110
0.2182
1.0911
100110
−0.2182
1.0911
000111
0.2182
1.5275
100111
−0.2182
1.5275
001000
1.0911
0.6547
101000
−1.0911
0.6547
001001
1.0911
0.2182
101001
−1.0911
0.2182
001010
1.5275
0.6547
101010
−1.5275
0.6547
001011
1.5275
0.2182
101011
−1.5275
0.2182
001100
1.0911
1.0911
101100
−1.0911
1.0911
001101
1.0911
1.5275
101101
−1.0911
1.5275
001110
1.5275
1.0911
101110
−1.5275
1.0911
001111
1.5275
1.5275
101111
−1.5275
1.5275
010000
0.6547
−0.6547
110000
−0.6547
−0.6547
010001
0.6547
−0.2182
110001
−0.6547
−0.2182
010010
0.2182
−0.6547
110010
−0.2182
−0.6547
010011
0.2182
−0.2182
110011
−0.2182
−0.2182
010100
0.6547
−1.0911
110100
−0.6547
−1.0911
010101
0.6547
−1.5275
110101
−0.6547
−1.5275
010110
0.2182
−1.0911
110110
−0.2182
−1.0911
010111
0.2182
−1.5275
110111
−0.2182
−1.5275
011000
1.0911
−0.6547
111000
−1.0911
−0.6547
011001
1.0911
−0.2182
111001
−1.0911
−0.2182
011010
1.5275
−0.6547
111010
−1.5275
−0.6547
011011
1.5275
−0.2182
111011
−1.5275
−0.2182
011100
1.0911
−1.0911
111100
−1.0911
−1.0911
011101
1.0911
−1.5275
111101
−1.0911
−1.5275
011110
1.5275
−1.0911
111110
−1.5275
−1.0911
011111
1.5275
−1.5275
111111
−1.5275
−1.5275
The I and Q branches are then both spread to the chip rate by the same real-valued channelization
code Cch,16,m. The channelization code sequence shall be aligned in time with the symbol boundary.
The sequences of real-valued chips on the I and Q branch are then treated as a single complex-valued
sequence of chips. This sequence of chips from all multi-codes is summed and then scrambled (complex
chip-wise multiplication) by a complex-valued scrambling code Sdl,n. The scrambling code is applied
aligned with the scrambling code applied to the P-CCPCH.
The scrambling and the channel combining for HS-SCCH and HS-PDSCH is the same as for all
downlink channels described in section 11.2.4.2.2.
Figure 11.71 [17] illustrates the spreading operation for the HS-DPCCH.
The HS-DPCCH shall be spread to the chip rate by the channelization code chs. After channelization,
the real-valued spread signals are weighted by gain factor βhs
The βhs values are derived from the quantized amplitude ratios Ahs which are translated from ACK,
NACK and CQI signalled by higher layers.
The translation of ACK, NACK and CQI into quantized amplitude ratios Ahs = βhs/βc is shown in
Table 11.22 [17].

Standardization in 3GPP
517
I
j
I+jQ 
Q
Shs-dpcch
chs 
HS-DPCCH 
 = 0, 1, 3, 5)
chs
HS-DPCCH 
(If Nmax dpdch
(If Nmax dpdch
 = 2, 4 or 6)
βhs 
βhs 
Figure 11.71
Spreading for uplink HS-DPCCH. Reproduced by permission of © 2008 3GPPTM
HS-DPCCH shall be mapped to the I branch in case Nmax-dpdch is 2, 4 or 6, and to the Q branch
otherwise (Nmax-dpdch = 0, 1, 3 or 5).
The HS-DPCCH shall be spread with code chs as speciﬁed in Table 11.23 [17].
HS-DPCCH is modulated with QPSK. The modulation of uplink channels is described in section
11.2.4.2.1.
Table 11.22
The quantization of the power offset
Signalled values for  ACK,
NACK and CQI
Quantized amplitude ratios
Ahs = βhs/βc
9
38/15
8
30/15
7
24/15
6
19/15
5
15/15
4
12/15
3
9/15
2
8/15
1
6/15
0
5/15
Reproduced by permission of © 2008 3GPPTM
Table 11.23
Channelization code of HS-DPCCH
Nmax-dpdch (as deﬁned in
subclause 4.2.1)
Channelization code chs
0
Cch,256,33
1
Cch,256,64
2,4,6
Cch,256,1
3,5
Cch,256,32
Reproduced by permission of © 2008 3GPPTM

518
Modulation and Coding Techniques in Wireless Communications
11.3.1.4.5
HSDPA Channels Interaction
Scheduler in Node B evaluates every 2 ms for each UE the following factors:
r Channel conditions (with the help of UE CQI reports);
r HARQ buffer status;
r Time from last transmission;
r Retransmissions pending (with the help of ACK/NACK reports);
Based on this information scheduler decides which UE (or UEs) should be served in the current TTI.
For each serving UE Node B identiﬁes channelization codes, modulation scheme, transport block size,
UE capability limitations, and so on. Then Node B starts to transmit the HS-SCCH information (see
section 11.3.1.4.1) 2 slots before corresponding HS-DSCH TTI. There is a set of active control channels
(HS-SCCHs). The maximum size of this set is 4. If there were data for the particular UE in the previous
TTI the same HS-SCCH as in previous TTI should be used, otherwise any of the four HS-SCCH could
be chosen for the transmission. In cases where the UEs are only time multiplexed (only one UE can be
served in each TTI) only one HS-SCCH is needed. UE monitors the active set of HS-SCCHs given by
network (maximum 4 HS-SCCHs). The word “monitor” here means that UE is trying to decode the Part
1 of HS-SCCH information. Recall that Part 1 information is masked with UE identity. Due to this fact
only the UE to which the HS-SCCH information is intended is capable of decoding Part 1 information.
If the decoded “channelization-code-set information” and decoded “modulation scheme information”
correspond to an indication of an HS-SCCH order, the UE decodes the HS-SCCH order and processes it
discarding the HS-DSCH data sent in the current TTI.. Otherwise the UE starts receiving the HS-PDSCHs
indicated by this consistent Part 1 control information and decoding Part 2 HS-SCCH information. After
decoding H-ARQ parameters from Part 2 UE can determine to which H-ARQ process data belong and
whether it should be combined with the data in H-ARQ buffer. If the H-ARQ information is not included
in the set conﬁgured by upper layers, or if the HS-SCCH CRC is not OK, the UE shall discard the
information received on this HS-SCCH and on the HS-PDSCHs. If the information received on HS-
SCCH is not discarded, the UE shall transmit a HARQ Preamble in the slot allocated to HARQ-ACK in
HS-DPCCH subframe preceding the HS-DPCCH subframe, in which the ACK/NACK corresponding to
the current HS-DSCH TTI should be transmitted, unless an ACK or NACK is to be transmitted in this
preceding sub-frame as a result of previous HS-DSCH transmission. And accordingly if there will not
be ACK/NACK information in the next HS-DPCCH subframe after the subframe corresponding to the
current TTI, a HARQ Postamble should be transmitted in this subframe. After decoding the HS-PDSCHs
information the HS-DSCH CRC is checked and depending on the CRC result ACK or NACK is sent in
the corresponding HS-DPCCH subframe. As mentioned earlier, there is a ﬁxed 7.5 slot delay from the
end of HS-DSCH TTI to the start of ACK/NACK transmission in HS-DPCCH. Due to this fact the Node
B knows for which packet the ACK/NACK information is related to. If Node B continues to transmit
data for the same UE in next TTI the same HS-SCCH that was used in previous TTI should be used for
signalling.
There is no soft handover for HSDPA. When a change of serving HS-DSCH cell happens, the UE will
ﬂush all the buffers at the handover time and move to listen to the new base station as instructed in the
downlink RRC signalling. Respectively, at the moment the handover takes place the Node B also ﬂushes
packets still in its buffers, including possibly unﬁnished HARQ processes [27].
11.3.1.5
HSDPA MIMO
HSDPA MIMO was approved in standardization as a work item in RAN#12 (June 2001). For several years
no HSDPA MIMO schemes were standardized. The reason for this was that system performance beneﬁts
of HSDPA MIMO appeared to be moderate in a typical WCDMA deployment scenario (macrocell, small

Standardization in 3GPP
519
penetration of MIMO UE’s) while WCDMA MIMO implementation added considerable complexity to
the receiver.
However some system performance beneﬁt of HSDPA MIMO was observed in scenarios where high
signal-to-noise ratios are achievable. Besides, from operator’s point of view, HSDPA MIMO provided
a solution to increase HSDPA peak bit rate beyond 14 Mbps in 5MHz bandwidth. Due to this fact in
RAN#30 (Dec 2005), it was decided to continue HSDPA MIMO work. Several proposals were presented
from different companies. In RAN1#45 (May 2006), an agreement was reached and the MIMO technique
for FDD was selected.
The method selected in standardization for HSDPA MIMO (FDD mode) is the so-called 2 × 2 Dual-
stream Transmit Antenna Adaptive Array (D-TxAA) technique. 2 × 2 D-TXAA uses two antennas for
transmission and two antennas for reception. The system is dual stream, meaning that two data streams
are transmitted in parallel. Actually, D-TxAA scheme is an extension of closed loop TX diversity
to dual stream transmission. In dual stream transmission, two data streams (or payload packets) are
encoded and modulated separately, but transmitted on the same orthogonal spreading code(s). Each of
the data streams is transmitted over both antennas applying different antenna weights in an attempt to
orthogonalize the streams. The idea is that by applying the correct weight vectors at the transmitter
(and receiver) both streams could be separated. This is done using for the primary stream a precoding
weight vector orthogonal to the one applied to the secondary stream. Besides, it is rather obvious
that the ability to separate the two streams of data is also related to the spatial diversity provided by
the propagation channel. The more uncorrelated the antennas are, the better the two streams can be
recovered.
D-TxAA is a closed loop system: the phase adjustments applied to the TX antennas are based
on the feedback commands sent by the terminal. The antenna weights are chosen by the UE and
transmitted to the Node B in the HS-DPCCH. Since the antenna weights for each stream are orthogonal
the knowledge of one pair is enough for deriving the other. The antenna weights are signalled on
the HS-SCCH in the downlink in order to avoid antenna veriﬁcation in the terminal. In MIMO mode
dynamic scheduling of single and dual stream transmission is possible. Single operation mode is turned
on when it is more advantageous (for example, from cell or link throughput maximization point of
view) to transmit with full power on one beam. In single stream mode one data stream is encoded
and transmitted similarly as with Release 99 CL1 transmit diversity but by using the D-TxAA speciﬁc
feedback mechanism, being the main difference the rate of feedback updates (1 slot in CL1 vs. 1 TTI in
MIMO).
Four HSDPA MIMO categories (15, 16, 17 and 18) have been deﬁned and added to 3GPP spec-
iﬁcations (see Table 11.11). Actually, the only difference between category 15 and 17 and between
category 16 and 18 is that categories 17 and 18 support 64-QAM modulation scheme but only in cases
where the UE is not conﬁgured in MIMO mode. Thus, in MIMO mode category 17 coincides with
category 15 and category 18 with category 16. All MIMO categories support 15 codes channeliza-
tion codes. It should be noted that in MIMO mode always exactly 15 channelization codes are used.
A MIMO UE shall support up to 15 codes also in non-MIMO HSDPA operation. Peak data rate for
categories 15 and 17 is 23.3 Mbps and the maximum code rate is limited to 0.82. Peak data rate
for categories 16 and 17 is 27.95 Mbps with code rate of 0.97. A MIMO capable UE can be sig-
nalled to operate in “MIMO mode” by RRC. When not in MIMO mode it would operate as a regular
non-MIMO UE.
Figure 11.72 [18] depicts the 2 × 2 D-TxAA scheme
Channel coding, interleaving and spreading are done as in non-MIMO mode. The Node B scheduler
decides whether to transmit one or two transport blocks to a UE in one TTI. The same number of codes
(15) is used for both streams. The spread complex valued signals are fed to both TX antenna branches, and
weighted with precoding weights w1, w2, w3 and w4. The precoding weights w1 and w3 are constant real
valued scalars and the precoding weights w2 and w4 are variable complex valued scalars. The precoding

520
Modulation and Coding Techniques in Wireless Communications
Weight Generation
w1
w4
Determine weight info 
message from the uplink
w2 w3
TrCH 
processing 
HS-DSCH 
TrCH 
processing 
HS-DSCH 
Spread/scramble 
∑
Ant1
Ant2
∑
CPICH1
CPICH2
w1
w2
w3
w4
∑
∑
Primary 
transport block 
Primary: Always present for scheduled UE 
Secondary: Optionally present for scheduled UE 
Secondary 
transport block 
Figure 11.72
D-TxAA HSDPA MIMO scheme. Reproduced by permission of © 2008 3GPPTM
weights are deﬁned as follows:
w3 = w1 = 1/
√
2
w4 = −w2
w2 ∈
1 + j
2
, 1 −j
2
, −1 + j
2
, −1 −j
2

(11.82)
The system can be used in two modes: single stream mode and dual stream mode. In MIMO mode
dynamic scheduling of single and dual stream transmission is possible. The precoding vector (w1, w2)
is called the primary precoding vector and is used for transmitting the primary transport block. The
precoding vector (w3, w4) is called secondary precoding vector and is used for transmitting the secondary
transport block. In cases where the system is in single stream mode only the primary transport block is
transmitted and correspondingly only the primary precoding vector (w1, w2) is used. Taking into account
that the precoding weight w1 is a constant the single stream mode just repeats the concept of CL1 mode.
The difference is that in the MIMO single stream mode the feedback comprises 2 bits, thus there is no
need to calculate the feedback information from two consecutive slots like in CL1 (see section 11.2.8).
If the UTRAN schedules two transport blocks to a UE in one TTI (dual stream mode), it uses two
orthogonal precoding vectors to transmit the two transport blocks. It is easy to verify that the precoding
vectors (w1, w2) and (w3, w4) are orthogonal:
w1 · w∗
3 + w2 · w∗
4 = w2
1 −w2
2 = 0
(11.83)
The UE uses the CPICH to separately estimate the channels seen from each antenna. One of the antennas
will transmit the Antenna 1 modulation pattern of the P-CPICH as deﬁned in section 5.3.3.1 of [15]. The
other antenna will transmit either the Antenna 2 modulation pattern of the P-CPICH or the Antenna 1
modulation pattern of a S-CPICH. The Pilot conﬁguration in support of MIMO operation of HS-DSCH
in the cell is signalled by higher layers. Unfortunately, both methods which use P-CPICH or S-CPICH
as a phase reference for Antenna 2 have some drawbacks. In cases using P-CPICH with the Antenna

Standardization in 3GPP
521
2 modulation pattern the legacy (non-MIMO) UEs must switch to STTD mode, which leads to some
loss in performance. In cases using S-CPICH as Antenna 2 phase reference, S-CPICH becomes one
additional source of interference for other channels. To decrease the impact of S-CPICH interference to
other channels it is possible to decrease the power of S-CPICH in comparison with the P-CPICH power.
This power offset can be up to -6 dB. The power offset is signalled to UE. The usage of S-CPICH as a
phase reference for Antenna 2 is regarded as a main case.
The UE determines a preferred primary precoding vector

wpref
1
, wpref
2

and signals it to the Node
B. The signalled information about the preferred primary precoding vector is termed precoding control
indication (PCI). The precoding weights are calculated in the receiver and reported to NodeB once per
TTI. The aim of the PCI calculation algorithm is to choose one of four possible combinations of precoding
weights (actually value of w2 deﬁnes both primary and secondary precoding vectors) maximizing the
throughput for the next TTI. The PCI is signalled to the Node B together with channel quality indication
(CQI) as a composite PCI/CQI report. The UE transmits the composite PCI/CQI report to the Node B
using the CQI ﬁeld on the HS-DPCCH. Based on the composite PCI/CQI reports, the Node B scheduler
decides whether to schedule one or two transport blocks to a UE in one TTI and what tranport block
size(s) and modulation scheme(s) to use for each of them.
The Node B signals to the UE the precoding weight w2 applied on the HS-PDSCH sub-frame using
the precoding weight indication bits of part 1 of the corresponding HS-SCCH sub-frame. The precoding
weight adjustment of each HS-PDSCH is done at the HS-PDSCH sub-frame border [18].
There are two types of PCI/CQI reports: type A and type B. These types are deﬁned as follows [18]:
Type A: CQI reports that indicate the supported transport format(s) for the number of
simultaneously transmitted transport blocks that the UE prefers according to the current channel
conditions assuming that the preferred primary precoding vector as indicated by the PCI value
signalled in the same HS-DPCCH sub-frame would be applied at the Node-B for the primary
transport block and in cases where two transport blocks are preferred the precoding vector
orthogonal to the preferred primary precoding vector would be applied for the secondary
transport block. This type of CQI report contains information on either one transport format or a
combination of two transport formats depending on what is currently the preferred number of
transport blocks (either 1 or 2).
Type B: CQI reports that indicate the supported transport format for a single transmitted
transport block according to the current channel conditions assuming that the preferred primary
precoding vector as indicated by the PCI value signalled in the same HS-DPCCH sub-frame
would be applied at the Node-B for the primary transport block and that no secondary transport
block is transmitted.
Usually UE sends a few Type A PCI/CQI reports and then a few Type B reports. The number of Type A
and Type B reports to be sent is deﬁned by three constants obtained from the higher layers [18]:
CQI feedback cycle k
The number N of dynamic single/dual CQI reports out of a sequence of M CQI reports in cases where
the UE is conﬁgured in MIMO mode: N cqi typeA, M cqi, respectively.
The CQI feedback cycle k can take values 16, 32 or 64 ms [19].
The ratio of the params N cqi typeA/M cqi can take values 1/2, 2/3, 3/4, 4/5, 5/6, 6/7, 7/8, 8/9, 9/10,
1/1 [19], that is, no less than 50% of all reports should be Type A reports.
Each TTI the UE decides which type of PCI/CQI report should be sent in accordance with the following
rule [18].
For k = 0, the UE shall not transmit a composite PCI/CQI value.

522
Modulation and Coding Techniques in Wireless Communications
Uplink DPCH
HS-PDSCH at UE
Uplink HS-DPCCH
3×T
 7680 chips
m×256 chips
τ
≈ 19200 chips
 T
 2 560 chips
3×T
 7680 chips
Slot #0    Slot #1    Slot #2    Slot #3    Slot #4    Slot #5    Slot #6    Slot #7    Slot #8    Slot #9    Slot #10    Slot #11    Slot #12    
Figure 11.73
Timing structure at the UE for HS-DPCCH control signaling
For k > 0 when the UE is not in DTX or DRX mode, the UE shall transmit a composite PCI/CQI
value in each subframe that starts m × 256 chips after the start of the associated uplink DPCCH frame
with m fulﬁlling:
(5 × CFN + ⌈m × 256chip/7680chip⌉) mod k′ = 0
(11.84)
where k′ = k

(2ms), k is the multiple of 2ms time, CFN denotes the connection frame number for the
associated DPCH and the set of ﬁve possible values of m is calculated as described in section 7.7 in [15],
m ∈{101, . . . , 250}. The corresponding timing diagram is represented in Figure 11.73 [15].
Actually it means that the PCI/CQI composite report should be sent in every HS-DPCCH TTI but since
the observation time for PCI and CQI calculation is not restricted it does not prevent us from calculation
of PCI on the basis of CPICH signals immediately preceding the mentioned above HS-DPCCH TTI, as
depicted in Figure 11.74.
When the relation:
5 × CFN + ⌈m × 256chip/7680chip⌉
k′

mod M cqi < N cqi typeA
(11.85)
holds, the UE shall report a type A CQI value. Otherwise the UE shall report a type B CQI value.
Figure 11.74
PCI reporting timing diagram

Standardization in 3GPP
523
The UE shall repeat the transmission of the composite PCI/CQI value derived above over the next
(N cqi transmit – 1) consecutive HS-DPCCH sub frames in the slots respectively allocated to CQI as
deﬁned in [15]. The UE does not support the case of k′ < N cqi transmit, where N cqi transmit is the
repetition factor of CQI, signalled to the UE and the Node B from higher layers.
That means even being in dual mode and sending Type A report UE should take into account that the
reported PCI value can be used for single stream transmission.
The CQI encoding for Type B reports follows the existing Rel-5 mapping. CQI can take values in the
range 1-30 (5 bits). The CQI encoding for Type A reports follows a new mapping. In this case CQI can
take values in the range 0-255 (8 bits) and are constructed as follows:
CQI =
 15 × CQI1 + CQI2 + 31
when 2 transport blocks are preferred by the UE
CQIS
when 1 transport block is preferred by the UE
(11.86)
where CQI1 corresponds to the transport block that would be transmitted with the preferred primary
precoding vector and CQI2 corresponds to the transport block that would be transmitted with the
precoding vector orthogonal to the preferred primary precoding vector. CQIS corresponds to the transport
block that would be transmitted with the preferred primary precoding vector in cases where a single
stream transmission is preferred by the UE. CQIS takes values in the range 1 – 30, and CQI1, CQI2 take
values in the range 0 – 14.
For the purpose of CQI reporting, the UE shall assume a total received HS-PDSCH power of:
PHSPDSCH = PCPICH + 
(dB)
(11.87)
where the total received power is assumed to be evenly distributed among 15 HS-PDSCH codes, and
the measurement power offset 
 is signalled by higher layers, PC P IC H denotes the sum of the powers
received from the set of CPICH(s). The measurement power offset 
 that is signalled by higher layers
should be adjusted by the Node B such that it reﬂects the power that would be available for HS-PDSCH
transmission relative to the combined transmit power of the set of CPICH(s) that shall be used for
HS-PDSCH demodulation in case the Node B would have 15 OVSF codes available for HS-PDSCH
transmission such that it results in the same power per OVSF code as the current power and code resources
actually available for HS-PDSCH transmission at the Node B would allow.
When deriving the CQI value, the UE assumes that the Node B would be using a uniform power
allocation across 15 channelization codes. In cases where the UE reports a CQI for two transport blocks,
it is assumed by the UE that the Node B uses an equal power per channelization code for both of the
two transport blocks. If the Node B does not transmit equal power per channelization code, it should not
assume that the reported transport block sizes can be received with the speciﬁed block error probabilities.
The CQI tables can be found in [18] subclause 6A.2.3.
The UE calculates the preferred precoding vectors to be applied at Node B to maximize the aggregate
transport block size that could be supported under current channel conditions. The information on
whether one or two transport blocks are preferred is part of the CQI reporting. The precoding weight w2
is mapped to PCI values as shown in Table 11.24 [18] (recall that the precoding weight w2 deﬁnes both
primary and secondary precoding vectors).
11.3.1.5.1
HS-SCCH type 3 Multiplexing and Coding
HS-SCCH type 3 is used when the UE is conﬁgured in MIMO mode. If one transport block is transmitted
on the associated HS-PDSCH(s) or an HS-SCCH order is transmitted, the following information is
transmitted by means of the HS-SCCH type 3 physical channel:
r Channelization-code-set information (7 bits):
xccs,1, xccs,2, . . . , xccs,7
r Modulation scheme and number of transport blocks information (3 bits):
xms,1, xms,2, xms,3
r Precoding weight information (2 bits):
xpwipb,1, xpwipb,2
r Transport-block size information (6 bits):
xtbspb,1, xtbspb,2, . . . , xtbspb,6

524
Modulation and Coding Techniques in Wireless Communications
Table 11.24
Mapping of preferred precoding weight
wpref
2
to PCI values
wpref
2
PCI value
1 + j
2
0
1 −j
2
1
−1 + j
2
2
−1 −j
2
3
r Hybrid-ARQ process information (4 bits):
xhap,1, xhap,2, . . . , xhap,4
r Redundancy and constellation version (2 bits):
xrvpb,1, xrvpb,2
r UE identity (16 bits):
xue,1, xue,2, . . . , xue,16
For an HS-SCCH order,
r xccs,1, xccs,2, . . . , xccs,7, xms,1, xms,2, xms,3, xpwipb,1, xpwipb,2 shall be set to ‘111000000000’
r xtbspb,1, xtbspb,2, . . . , xtbspb,6 shall be set to ‘111101’
r xhap,1, xhap,2, xhap,3, xhap,4, xrvpb,1, xrvpb,2 shall be set to xodt,1, xodt,2, xodt,3, xord,1, xord,2, xord,3
where xodt,1, xodt,2, xodt,3, xord,1, xord,2, xord,3 are deﬁned in Section 11.3.1.4.1.
If two transport blocks are transmitted on the associated HS-PDSCHs, the following information is
transmitted by means of the HS-SCCH type 3 physical channel:
r Channelization-code-set information (7 bits):
xccs,1, xccs,2, . . . , xccs,7
r Modulation scheme and number of transport blocks information (3 bits):
xms,1, xms,2, xms,3
r Precoding weight information for the primary transport block (2 bits):
xpwipb,1, xpwipb,2
r Transport-block size information for the primary transport block (6 bits):
xtbspb,1, xtbspb,2, . . . , xtbspb,6
r Transport-block size information for the secondary transport block (6 bits): xtbssb,1, xtbssb,2, . . . , xtbssb,6
r Hybrid-ARQ process information (4 bits):
xhap,1, xhap,2, . . . , xhap,4
r Redundancy and constellation version for the primary transport block (2 bits):
xrvpb,1, xrvpb,2
r Redundancy and constellation version for the secondary transport block (2 bits): xrvsb,1, xrvsb,2
r UE identity (16 bits):
xue,1, xue,2, . . . , xue,16
Figure 11.75 [16] illustrates the overall coding chain for HS-SCCH type 3. Note that some information
shown is not present if only one transport block is transmitted on the associated HS-PDSCH(s).
The channelization code-set bits xccs,1, xccs,2, . . . , xccs,7 are coded in the same way as described in
section 11.2.1.4.1. If two transport blocks are transmitted on the associated HS-PDSCH(s), the same set
of channelization codes shall be used for both transport blocks.
In accordance with Release-7 3GPP speciﬁcations only QPSK and 16-QAM modulation schemes
can be used for HS-DSCH transmitting in MIMO mode. The usage of 64-QAM in MIMO mode is
expected in Release-8. The number of transport blocks transmitted on the associated HS-PDSCH(s) and
the modulation scheme information are jointly coded as shown in Table 11.25 [16]:

Standardization in 3GPP
525
Channel
Coding 1
HS-SCCH
Physical
channel
mapping
Rate
matching 1
mux
mux
Xccs
Xms
Xue
X1
X2
Xtbspb
Xhap
Xrvpb
Y
Channel
Coding 2
Rate
matching 2
UE
specific
masking
Z1
Z2
S1
R1
R2
Xue
RV
coding
r
s
b
UE specific
CRC
attachment
Xpwipb
Xtbssb
Xrvsb
RV
coding
r
s
b
Figure 11.75
Coding chain for HS-SCCH type 3. Reproduced by permission of © 2008 3GPPTM

526
Modulation and Coding Techniques in Wireless Communications
Table 11.25
Mapping of xms
xms-stb,1, xms-stb,2,
xms-stb,3
Modulation for
primary
transport block
Modulation for
secondary
transport block
Number of
transport
blocks
111
16QAM
16QAM
2
110
16QAM
QPSK
2
100
16QAM
n/a
1
011
QPSK
QPSK
2
000
QPSK
n/a
1
Reproduced by permission of © 2008 3GPPTM
The precoding weight information for the primary transport block xpwipb,1, xpwipb,2 is derived from the
precoding weight factor w2 as deﬁned in Table 11.24, according to Table 11.26 [16].
The transport-block size information xtbspb,1, xtbspb,2, . . . , xtbspb,6 is the unsigned binary representation
of the transport block size index for the primary transport block. If two transport blocks are transmitted
on the associated HS-PDSCH(s), the transport-block size information xtbssb,1, xtbssb,2, . . . , xtbssb,6 is the
unsigned binary representation of the transport block size index for the secondary transport block.
If two transport blocks are transmitted on the associated HS-PDSCH(s), the mapping relationship
between the H-ARQ processes and the transport blocks is such that when the H-ARQ-process with iden-
tiﬁer HAPpb is mapped to the primary transport block, the HARQ-process with the identiﬁer given by

H APpb + Nproc

2

mod

Nproc

shall be mapped to the secondary transport block, where Nproc is the
number of HARQ processes conﬁgured by higher layers. The combination of H-ARQ-processes is indi-
cated by the H-ARQ process information (4 bits) xhap,1, xhap,2, xhap,3, xhap,4 which are the unsigned binary
representation of HAPpb. If only one transport block is transmitted on the associated HS-PDSCH(s), the
above mapping is ignored and the H-ARQ process information xhap,1, xhap,2, xhap,3, xhap,4 is the unsigned
binary representation of the H-ARQ process identiﬁer.
For each of the primary transport block and a secondary transport block if two transport blocks
are transmitted on the associated HS-PDSCH(s), the redundancy version (RV) parameters r, s and
constellation version parameter b are coded jointly to produce the values Xrvpb and Xrvsb respectively.
The transmitted sequences xrvpb,1, xrvpb,2 and xrvsb,1, xrvsb,2 are the binary representations of Xrvpb and Xrvsb,
respectively. For the primary transport block if only one transport block is transmitted on the associated
HS-PDSCH(s), the redundancy version (RV) parameters r, s and constellation version parameter b
are coded jointly to produce the value Xrvpb. The transmitted sequence xrvpb,1, xrvpb,2 is the binary
Table 11.26
Mapping of precoding weight information for
primary transport block
w2
xpwipb,1, xpwipb,2
1 + j
2
00
1 −j
2
01
−1 + j
2
10
−1 −j
2
11
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
527
Table 11.27
RV coding for 16QAM for HS-SCCH type 3
Nsys/Ndata < 1/2
Nsys/Ndata ≥1/2
Xrvpb or Xrvsb (value)
s
r
b
s
r
b
0
1
0
0
1
0
0
1
1
1
1
0
1
1
2
1
0
2
0
0
0
3
1
0
3
1
0
2
Reproduced by permission of © 2008 3GPPTM
representation of Xrvpb. Joint coding of parameters r, s and constellation version parameter b is done
according to Tables 11.27 [16] and 11.28 [16] according to the modulation mode used. If Xrvpb = 0
or Xrvsb = 0, the UE shall treat the corresponding transport block as an initial transmission.
The channelization-code-set information xccs,1, xccs,2, . . . , xccs,7, modulation-scheme and number of
transport blocks information xms,1, xms,2, xms,3 and precoding weight information xpwipb,1, xpwipb,2 are
multiplexed together. This gives a sequence of bits x1,1, x1,2, . . . , x1,12, where:
x1,i = xccs,i
i = 1, 2, . . . , 7
x1,i = xms,i−7
i = 8, 9, 10
x1,i = xpwipb,i−10
i = 11, 12
If one transport block is transmitted on the associated HS-PDSCH(s), the transport-block-size information
xtbspb,1, xtbspb,2, . . . , xtbspb,6, H-ARQ-process information xhap,1,xhap,2, . . . , xhap,4 and redundancy-version
information xrvpb,1, xrvpb,2 are multiplexed together. This gives a sequence of bits x2,1, x2,2, . . . , x2,12 where:
x2,i = xtbs,i
i = 1, 2, . . . , 6
x2,i = xhap,i−6
i = 7, 8, . . . , 10
x2,i = xrv,i−10
i = 11, 12
If two transport blocks are transmitted on the associated HS-PDSCHs, the transport-block-size informa-
tion for the primary transport block xtbspb,1, xtbspb,2, . . . , xtbspb,6, transport-block-size information for the
secondary transport block xtbssb,1, xtbssb,2, . . . , xtbssb,6, Hybrid-ARQ-process information xhap,1,xhap,2, . . . ,
xhap,4, redundancy-version information for the primary transport block xrvpb,1, xrvpb,2, and redundancy-
version information for the secondary transport block xrvsb,1, xrvsb,2 are multiplexed together. This gives
Table 11.28
RV coding for QPSK for HS-SCCH type 3
Nsys/Ndata < 1/2
Nsys/Ndata ≥1/2
Xrvpb or Xrvsb (value)
s
r
s
r
0
1
0
1
0
1
1
1
0
1
2
1
2
0
3
3
1
3
1
2
Reproduced by permission of © 2008 3GPPTM

528
Modulation and Coding Techniques in Wireless Communications
a sequence of bits x2,1, x2,2, . . . , x2,20 where:
x2,i = xtbspb,i
i = 1, 2, . . . , 6
x2,i = xtbssb,i−6
i = 7, 8, . . . , 12
x2,i = xhap,i−12
i = 13, 14, . . . , 16
x2,i = xrvpb,i−16
i = 17, 18
x2,i = xrvsb,i−18
i = 19, 20
If one transport block is transmitted on the associated HS-PDSCH(s), from the sequence of bits x1,1,
x1,2, . . . , x1,12, x2,1, x2,2, . . . , x2,12 a 16-bit CRC is calculated. This gives a sequence of bits c1, c2, . . . , c16.
This sequence of bits is then masked with the UE Identity xue,1, xue,2, . . . , xue,16 and then appended to
the sequence of bits x2,1, x2,2, . . . , x2,12 to form the sequence of bits y1, y2, . . . , y28, where:
yi = x2,i
i = 1, 2, . . . , 12
yi = (ci−12 + xue,i−12) mod 2
i = 13, 14, . . . , 28
If two transport blocks are transmitted on the associated HS-PDSCHs, from the sequence of bits x1,1,
x1,2, . . . , x1,12, x2,1, x2,2, . . . , x2,20 a 16-bit CRC is calculated. This gives a sequence of bits c1, c2, . . . ,
c16. here
This sequence of bits is then masked with the UE Identity xue,1, xue,2, . . . , xue,16 and then appended to
the sequence of bits x2,1, x2,2, . . . , x2,20 to form the sequence of bits y1, y2, . . . , y36, where:
yi = x2,i
i = 1, 2, . . . , 20
yi = (ci−20 + xue,i−20) mod 2
i = 21, 22, . . . , 36
Rate 1/3 convolutional coding, as described in section 11.2.4.2, is applied to the sequence of bits x1,1,
x1,2, . . . ,x1,12. This gives a sequence of bits z1,1, z1,2, . . . , z1,60 for HS-SCCH Part 1.
The same rate 1/3 convolutional coding is applied to the sequence of bits y1, y2, . . . , y28 if one transport
block is transmitted on the associated HS-PDSCH(s), or to the sequence of bits y1, y2, . . . , y36 if two
transport blocks are transmitted on the associated HS-PDSCHs. This gives a sequence of bits for HS-
SCCH Part2 z2,1, z2,2, . . . , z2,108 if one transport block is transmitted or z2,1, z2,2, . . . , z2,132 if two transport
blocks are transmitted.
From the input sequence z1,1, z1,2, . . . , z1, 60 the bits z1,1, z1,2, z1,4, z1,6, z1,8, z1,12, z1,15, z1,18, z1,21,
z1,24, z1,37, z1,40, z1,43, z1,46, z1,49, z1,53, z1,55, z1,57, z1,59, z1,60 are punctured to obtain the output sequence
r1,1,r1,2. . .r1,40.
If one transport block is transmitted on the associated HS-PDSCH(s), from the input sequence z2,1,
z2,2, . . . , z2,108 the bits z2,1, z2,2, z2,3, z2,4, z2,5, z2,6, z2,7, z2,8, z2,12, z2,14, z2,15, z2,24, z2,42, z2,48, z2,63, z2,66,
z2,93, z2,96, z2,98, z2,99, z2,101, z2,102, z2,103, z2,104, z2,105, z2,106, z2,107, z2,108 are punctured to obtain the output
sequence r2,1,r2,2. . .r2,80.
If two transport blocks are transmitted on the associated HS-PDSCHs, from the input sequence z2,1,
z2,2, . . . , z2,132 the bits z2,1, z2,2, z2,3, z2,4, z2,5, z2,6, z2,7, z2,8, z2,10, z2,11, z2,13, z2,14, z2,16, z2,19, z2,22, z2,25, z2,28,
z2,31, z2,34, z2,37, z2,40, z2,43, z2,46, z2,49, z2,55, z2,61, z2,72, z2,78, z2,84, z2,87, z2,90, z2,93, z2,96, z2,99, z2,102, z2,105,
z2,108, z2,111, z2,114, z2,117, z2,119, z2,120, z2,122, z2,123, z2,125, z2,126, z2,127, z2,128, z2,129, z2,130, z2,131, z2,132 are
punctured to obtain the output sequence r2,1,r2,2. . .r2,80.
The UE speciﬁc masking is done in the same way as described in section 11.3.1.4.1, (11.77). The
UE speciﬁc masking gives the output bits s1,1,s1,2. . .s1,40 comprising HS-SCCH Part 1. The bit sequence
r2,1,r2,2. . .r2,80 comprises HS-SCCH Part 2.
The HS-SCCH orders in MIMO mode are coded in the same way as in non-MIMO mode.
11.3.1.5.2
HS-DSCH in MIMO Mode
As can be seen from Figure 11.72 the multiplexing, coding, spreading and modulation of data streams
in MIMO mode is done independently as described in section 11.3.1.4.2. Also, the streams can be
processed independently in the receiver. In case the receiver uses successive interference cancellation

Standardization in 3GPP
529
Figure 11.76
HSDPA MIMO System model
(SIC) or turbo-equalization the result of detection or decoding of one stream can be used for the detection
of another stream but the decoding of each stream is done independently. Thus, the decoding chain of
the UE receiver in MIMO mode simply can be doubled. However, the main difference of the UE receiver
in MIMO mode from the receiver in non-MIMO mode is that the receiver should be able to separate
the received streams. It could be done in different ways. In Figure 11.76 the MIMO system model is
depicted.
Here precoding consists in multiplication of data streams by matrix W =
 w1 w3
w2 w4
	
, and vector
hi j =

hi j(0), hi j(1), . . . , hi j(L −1)

comprises channel coefﬁcients of channel from the transmitter
antenna Txi to the receiver antenna Rx j. The most straightforward method of stream separation is ﬁrst to
equalize the channel and despread the data, then the data from the despreader output should be multiplied
by the inverse matrix W−1. Taking into account (11.83) it is easy to verify that W−1 =
 w∗
1 w∗
2
w∗
3 w∗
4
	
. This
method usually is called antenna equalization, since the equalizer in this case does not use any information
about streams’ precoding. The schematic of the UE receiver using antenna equalization is depicted in
Figure 11.77.
Another method consists in separating the streams with the help of equalizer. Actually it is possible
to consider the HS-DSCH precoding as part of channel. That means, the channel matrix:
H =
 h11
h21
h12
h22
	
(11.88)
Channel 
Estimation
h11, h12
Demodulation 
Deinterleaving
Decoding
Data 
Stream 1
Rx1
Rx2
Equalizer 
Despreader
Postpro
cessing 
W-1
Stream 1
Stream 2
Demodulation 
Deinterleaving
Decoding
Data 
Stream 2
h21, h22
Figure 11.77
Antenna equalization

530
Modulation and Coding Techniques in Wireless Communications
Channel
Estimation
h11, h12
Demodulation
Deinterleaving
Decoding
Data
Stream 1
Rx1
Rx2
Equalizer
Despreader
Stream 1
Stream 2
Demodulation
Deinterleaving
Decoding
Data
Stream 2
h21, h22
W
12
11
~
,
~
h
h
22
21
~
,
~
h
h
Figure 11.78
Stream equalization
can be substituted by the matrix of “superchannel” including both precoding and channel itself:
˜H =
 ˜h11
˜h21
˜h12
˜h22
	
=
 h11w1 + h21w2
h11w3 + h21w4
h12w1 + h22w2
h12w3 + h22w4
	
(11.89)
To make it possible for equalizer to equalize the “superchannel” the channel estimates should be modiﬁed
in accordance with (11.89). Then the streams are already separated at the equalizer output (to be more
precise, at the output of the despreader, since the equalizer output comprises the mix of all downlink
channels). This kind of HS-DSCH processing is denoted as stream equalization. The schematic of the
receiver implementing stream equalization is depicted in Figure 11.78.
In the ideal case when the channel estimates exactly coincide with the channel coefﬁcients both
methods should provide the same performance. However, the complexity of the receiver implementing
stream equalization is higher due to the fact that other downlink channels except the HS-DSCH in this
case should be equalized with different equalizer, since they are not precoded.
11.3.1.5.3
HS-DPCCH Multiplexing and Coding in MIMO Mode
Multiplexing and coding for HS-DPCCH when UE is conﬁgured in MIMO mode differs from the case
when UE is not in MIMO mode. The precoding control indication (PCI) and channel quality indication
(CQI) are coded jointly comprising the composite PCI/CQI report. The H-ARQ acknowledgment is
coded separately from PCI/CQI report.
The H-ARQ message in MIMO mode occupies the same 10 bits as in non-MIMO mode but in
MIMO mode the H-ARQ message should represent the increased number of events in comparison with
non-MIMO mode. In non-MIMO mode there are only four possible events that should be mapped to H-
ARQ message: acknowledgment (ACK), non-acknowledgment (NACK), preamble (PRE) and postamble
(POST). In MIMO dual stream mode instead of ACK and NACK there are four possible combinations of
ACKs and NACKs for two streams. The HARQ acknowledgment message to be transmitted is encoded
to 10 bits in accordance with Table 11.29 [16]. The encoded bits are denoted w0, w1, . . . , w9.
When the UE is conﬁgured in MIMO mode, two types of CQI reports shall be supported by the UE.
Type A CQI reports use values 0, . . . , 255 and type B CQI reports use values 1, . . . , 30, respectively. In
cases where a type A CQI shall be reported, the CQI values 0 .. 255 are converted from decimal to binary
to map them to the channel quality indication bits (0 0 0 0 0 0 0 0) to (1 1 1 1 1 1 1 1), respectively. The
channel quality indication bits are cqi0, cqi1, cqi2, cqi3, cqi4, cqi5, cqi6, cqi7 (where cqi0 is LSB and cqi7
is MSB). In cases where a type B CQI shall be reported, the CQI values 1, . . . , 30 are converted from
decimal to binary to map them to the channel quality indication bits (1 0 0 0 0) to (1 1 1 1 1), respectively.
The channel quality indication bits are cqi0, cqi1, cqi2, cqi3, cqi4 (where cqi0 is LSB and cqi4 is MSB).

Standardization in 3GPP
531
Table 11.29
Channel coding of HARQ-ACK when the UE is conﬁgured in MIMO mode
HARQ-ACKmessage to be
transmitted
w0
w1
w2
w3
w4
w5
w6
w7
w8
w9
HARQ-ACK in response to a single scheduled transport block
ACK
1
1
1
1
1
1
1
1
1
1
NACK
0
0
0
0
0
0
0
0
0
0
HARQ-ACK in response to two scheduled transport blocks
Response to
primary
transport block
Response to
secondary
transport block
ACK
ACK
1
0
1
0
1
1
1
1
0
1
ACK
NACK
1
1
0
1
0
1
0
1
1
1
NACK
ACK
0
1
1
1
1
0
1
0
1
1
NACK
NACK
1
0
0
1
0
0
1
0
0
0
PRE/POST indication
PRE
0
0
1
0
0
1
0
0
1
0
POST
0
1
0
0
1
0
0
1
0
0
Reproduced by permission of © 2008 3GPPTM
According to the PCI deﬁnition, the range of possible PCI values is 0, . . . , 3. The PCI values 0, . . . , 3
are converted from decimal to binary to map them to the precoding control indication bits (0 0) to (1 1)
respectively. The precoding control indication bits are pci0, pci1 (where pci0 is LSB and pci1 is MSB).
Two formats for composite PCI/CQI information words are possible depending on the type of the
reported CQI value. The two formats shall be constructed according to the scheme depicted in Figure
11.79 [16].
concatenation
Binary mapping
Binary mapping
PCI
a0,a1...a9
a0,a1...a6
OR
Type B 
CQI 
Type A 
CQI
pci 0,pci 1
cqi 0,cqi 1 , …cqi   7
cqi 0,cqi 1 , …cqi  4
OR
Figure 11.79
Composite (PCI/CQI) report multiplexing

532
Modulation and Coding Techniques in Wireless Communications
Table 11.30
Basis sequences for channel encoding of composite PCI/CQI reports
i
Mi,0
Mi,1
Mi,2
Mi,3
Mi,4
Mi,5
Mi,6
Mi,7
Mi,8
Mi,9
Mi,10
0
1
0
0
0
0
0
0
0
0
0
0
1
0
1
0
0
0
0
0
0
0
0
0
2
0
0
0
1
0
0
0
0
0
0
0
3
0
0
0
0
1
0
0
0
0
0
0
4
0
0
0
0
0
1
0
0
0
0
0
5
0
0
0
0
0
0
0
1
0
0
0
6
0
0
0
0
0
0
0
0
1
0
1
7
0
0
0
0
0
0
0
0
0
1
1
8
1
0
1
0
0
0
1
1
1
0
1
9
1
1
0
1
0
0
0
1
1
1
1
10
0
1
1
0
1
0
0
0
1
1
1
11
1
0
1
1
0
1
0
0
0
1
0
12
1
1
0
1
1
0
1
0
0
0
0
13
1
1
1
0
1
1
0
1
0
0
0
14
0
1
1
1
0
1
1
0
1
0
1
15
0
0
1
1
1
0
1
1
0
1
0
16
0
0
0
1
1
1
0
1
1
0
1
17
1
0
0
0
1
1
1
0
1
1
1
18
0
1
0
0
0
1
1
1
0
1
0
19
1
1
1
1
1
1
1
1
1
1
1
Reproduced by permission of © 2008 3GPPTM
In cases where a type A CQI shall be reported, the precoding control indication bits pci0, pci1, and the
channel quality indication bits cqi0, cqi1, cqi2, cqi3, cqi4, cqi5, cqi6, cqi7 are concatenated to the composite
precoding control indication and channel quality indication bits according to the relation:
(a0 a1 a2 a3 a4 a5 a6 a7 a8 a9) = (pci0 pci1 cqi0 cqi1 cqi2 cqi3 cqi4 cqi5 cqi6 cqi7)
(11.90)
In case a type B CQI shall be reported, the precoding control indication bits pci0, pci1, and the channel
quality indication bits cqi0, cqi1, cqi2, cqi3, cqi4 are concatenated to the composite precoding control
indication and channel quality indication bits according to the relation:
(a0 a1 a2 a3 a4 a5 a6) =

pci0 pci1cqi0 cqi1 cqi2 cqi3 cqi4

(11.91)
In cases where a type A CQI needs to be reported, the composite precoding control indication and
channel quality indication is coded using a (20,10) code. The code words of the (20,10) code are a linear
combination of the 10 basis code words denoted Mi,n deﬁned in Table 11.30 [16].
The output codeword bits bi are given by:
bi =
9

n=0
(an × Mi,n) mod 2
(11.92)
where i = 0, . . . , 19.
In case a type B CQI needs to be reported, the composite precoding control indication and channel
quality indication is coded using a (20,7) code deﬁned in Table 11.30. The code words of the (20,7)
code are a linear combination of the basis sequences denoted Mi,n deﬁned in Table 11.30 for n ∈
{0, 1, 3, 4, 5, 7, 10}. The output codeword bits bi in this case are given by:
bi =

1

n=0
(an × Mi,n) +
4

n=2
(an × Mi,n+1) + a5 × Mi,7 + a6 × Mi,10

mod 2
(11.93)
where i = 0, . . . , 19.

Standardization in 3GPP
533
The bits wk (k = 0, . . . , 9) are mapped directly to the slot 1 of HS-DPCCH physical channel and bits
bk (k = 0, . . . , 19) are mapped directly to the slots 2 and 3 of HS-DPCCH physical channel.
In general, the main drawback of MIMO is the inter-stream interference. In the ideal case the streams
are perfectly orthogonal and there is no inter-stream interference, but the impact of the multi-path
fading channel destroys the orthogonality of two streams, which cannot be totally compensated by the
equalization. Due to this fact for MIMO the inter-stream interference dominates all other interference
sources in real life. That is why the dual stream mode does not provide the doubling of performance in
comparison with the single stream mode in most cases.
11.3.1.6
Dual Cell HSDPA
Dual Cell HSDPA (DC-HSDPA) is an optional feature of the Release 8 in 3GPP. DC-HSDPA has been
introduced to 3GPP Release 8 speciﬁcations in order to increase the peak bit rate. DC-HSDPA makes
the increase at the cost of doubling the bandwidth as shown in Figure 11.80. That means, at Node B
similarly with MIMO the data intended for a particular UE is multiplexed into two streams, one of which
is transmitted on carrier frequency 1 and the second stream is transmitted on carrier frequency 2. This
solution is supported by the fact that UMTS licenses are often issued as 10 or 15 MHz paired spectrum
allocations.
A UE in DC-HSDPA operation is able to simultaneously receive HSDPA trafﬁc over two downlink
carrier frequencies transmitted in the same frequency band from a single serving sector and to transmit
on one uplink carrier frequency. The Release-8 considers only one uplink carrier for DC-HSDPA. The
uplink carrier for a DC-HSDPA UE is not strictly tied to one of the two downlink carriers. The DC-
HSDPA can be especially efﬁcient at the cell edges where the channel conditions are not favourable
and existing techniques such as MIMO cannot be used. As it was mentioned in section 11.3.1.5 the
main problem of MIMO transmission scheme in most cases is the inter-stream interference. Unlike
MIMO the interference between the carriers in DC-HSDPA is not signiﬁcant. Due to this, in recent times
the operators are much more interested in the implementation of DC-HSDPA rather than MIMO. The
additional beneﬁt of DC-HSDPA in comparison with MIMO is that the implementation of DC-HSDPA
requires less additional hardware. At least there is no need in additional antennas.
One of the carriers called anchor carrier has all the downlink physical channels. There are no
restrictions of channel operation on the anchor carrier. The other supplementary carrier is reserved only
for HSDPA channels (HS-SCCH and HS-PDSCH). The only additional channel on the secondary carrier
which the UE needs to demodulate is the common pilot channel (CPICH). On the supplementary carrier,
the UE can only monitor DL HSDPA related channels [28]. In Release-8 the carriers are assumed to
be adjacent to each other. The two data streams do not have any common L1 signalled parameters.
5 MHz
5 MHz
Carrier 1
(Anchor)
Carrier 2
(Supplementary)
Downlink
f
5 MHz
Uplink
f
Figure 11.80
DC-HSDPA frequency allocation

534
Modulation and Coding Techniques in Wireless Communications
Table 11.31
DC-HSDPA FDD HS-DSCH physical layer categories
HS-DSCH
category
Maximum
number of
HS-DSCH
codes
received
Minimum
inter-TTI
interval
Maximum
number of
bits of an
HS-DSCH
transport
block
received
within an
HS-DSCH
TTI
NOTE 1
Total
number of
soft
channel
bits
Supported
modula-
tions
without
MIMO
operation
or dual cell
operation
Supported
modula-
tions
simultane-
ous with
MIMO
operation
and
without
dual cell
operation
Supported
modula-
tions with
dual cell
operation
Category 21
15
1
23370
345600
–
–
QPSK,
Category 22
15
1
27952
345600
16QAM
Category 23
15
1
35280
518400
QPSK,
Category 24
15
1
42192
518400
16QAM,
64QAM
The number of channelization codes and modulation are deﬁned individually for both carriers without
extra limitations. All the Release-8 modulations (QPSK, 16QAM and 64QAM) are supported also
in DC-HSDPA mode of operation. Parallel transmission with 64-QAM modulation each carrier can
theoretically provide a downlink peak data rate of 43.2 Mbps in 10MHz without the support of MIMO.
The simultaneous use of MIMO and DC-HSDPA operation is not considered in Release-8. The two
streams have separate HARQ processes so that the retransmissions need to use the same carrier as the
initial transmission.
There are four new UE capability classes for DC-HSDPA added to 3GPP speciﬁcations (21, 22, 23
and 24) shown in Table 11.31.
Both the anchor and supplementary carriers can have disjointed HS-SCCH channels. In this case the
coding of HS-SCCH does not need to be changed. In order to not restrict the scheduler, the UE should
preferably monitor up to four HS-SCCH codes on each carrier, as in the single carrier case, assuming
HS-SCCH is transmitted in both carriers [28]. The UE shall be able to receive 1 HS-SCCH on anchor
carrier and 1 HS-SCCH on supplementary carrier simultaneously. This approach provides ﬂexibility to
scheduling. A new HS-SCCH-order is introduced to switch on and off the DC-HSDPA mode [29]. All
the orders can be signalled on both carriers.
In the uplink DC-HSDPA uses only a single carrier. The CQI and ACK/NACK information from both
carriers are multiplexed into one common HS-PDCCH. Due to independent CQIs measurements on both
carriers an efﬁcient joint scheduling in the Node B based on the link quality can be applied. Channel
coding of HARQ-ACK info is deﬁned in Table 11.32 [29]
The composite CQI report is constructed from two individual CQI reports that are represented by
CQI1 and CQI2. CQI1 corresponds to the serving HS-DSCH cell and CQI2 corresponds to the secondary
serving HS-DSCH cell.
Each constituent CQI report uses values 1, . . . , 30. The individual CQI values are converted from
decimal to binary to map them to the channel quality indication bits (1 0 0 0 0) to (1 1 1 1 1) respectively.
The channel quality indication bits corresponding to CQI1 are cqi10, cqi11, cqi12, cqi13, cqi14 (where
cqi10 is LSB and cqi14 is MSB) and those corresponding to CQI2 are cqi20, cqi21, cqi22, cqi23, cqi24
(where cqi20 is LSB and cqi24 is MSB).

Standardization in 3GPP
535
Table 11.32
Channel coding of HARQ-ACK in case Secondary Cell Active as no 0
HARQ-ACK message to be
transmitted
w0
w1
w2
w3
w4
w5
w6
w7
w8
w9
HARQ-ACK when UE detects a single scheduled transport block on the secondary HS-DSCh cell
ACK
1
1
1
1
1
1
1
1
1
1
NACK
0
0
0
0
0
0
0
0
0
0
HARQ-ACK when UE detects a single scheduled transport blocks on the secondary serving HS-DSCh cell
ACK
1
1
1
1
1
0
0
0
0
0
NACK
0
0
0
0
0
1
1
1
1
1
HARQ-ACK when UE detects a single scheduled transport blocks on the secondary serving HS-DSCh cell
Response to
transport block
from serving
HS-DSCH cell
Response to
transport block
from secondary
serving
HS-DSCH cell
ACK
ACK
1
0
1
0
1
0
1
0
1
0
ACK
NACK
1
1
0
0
1
1
0
0
1
1
NACK
ACK
0
0
1
1
0
0
1
1
0
0
NACK
NACK
0
1
0
1
0
1
0
1
0
1
PRE/POST indication
PRE
0
0
1
0
0
1
0
0
1
0
POST
0
1
0
0
1
0
0
1
0
0
Reproduced by permission of © 2008 3GPPTM
The two individual CQI reports are concatenated to form the composite channel quality indication
according to the relation:
(a0 a1 a2 a3 a4 a5 a6 a7 a8 a9) = (cqi10 cqi12 cqi12 cqi13 cqi14 cqi20 cqi21 cqi22 cqi23 cqi24)
(11.94)
The coding for CQI uses the same (20, 10) code which was deﬁned for MIMO type A CQI encoding in
Table 11.30.
DC-HSDPA provides the performance gain not only in comparison with a single carrier case, but also
in comparison with independent use of two single carriers. The reasons for cell capacity gain are the
dynamic multiplexing of users rather than static and the possibility of using joint scheduling. And of
course DC-HSDPA allows double the instantaneous data rates in comparison with single carrier case
by assigning all the code and power resources to a single user in a TTI, which is not possible for
two independent single carriers. Taking into account that the interference between two carriers is not
signiﬁcant it is much easier to provide doubling of data rates with DC-HSDPA than with MIMO HSDPA.
Figure 11.81 [28] shows the capacity gain as a function of the number of users per sector. As can be seen
from Figure 11.81, DC-HSDPA gain is more pronounced at low loads. At two users per sector, the gain
in sector throughput is 25%. At 32 users per sector, it is 7%.
The obvious way of future development of DC-HSDPA is using more than two carriers. This kind of
technology is usually referred to as multi-cell HSDPA (MC-HSDPA). Since the data rate increases with
the bandwidth, this could signiﬁcantly improve peak data rates as well as the system capacity. Of course,

536
Modulation and Coding Techniques in Wireless Communications
Sector Throughput Vs Users per Sector  (PA3)
0
5
10
15
20
35
30
25
20
15
10
5
0
Users per sector
Sector Throughput (Mbps)
2x SC RxD
DC RxD
Figure 11.81
Capacity gain from DC-HSDPA over 2xSC-HSDPA. Reproduced by permission of © 2008 3GPPTM
this gain is not for free, the used bandwidth should be increased correspondingly. Another possibility to
improve the HSDPA performance is to allow the simultaneous use of DC-HSDPA (or even MC-HSDPA)
and MIMO. Of course, the latter solution requires signiﬁcant increase of implementation complexity but
the implementation of both DC-HSDPA and MIMO is quite common and consists mostly in scaling the
number of parallel decoding chains in UE.
11.3.2
HSUPA
The HSUPA technology, like HSDPA in downlink, allows signiﬁcantly improve the quality of data
transmission on uplink. When the work on the Rlease-5 3GPP speciﬁcations introducing the HSDPA was
started it became clear that the data rates provided by uplink DCH are not sufﬁcient. The new technology
aiming to improve the uplink data rates HSUPA was introduced in the Release-6. The basic principles
of HSUPA, allowing the data rates to be increased and the delays decreased, are very similar to those of
HSDPA. HSUPA like HSDPA uses fast scheduling, which is implemented in Node B and fast H-ARQ.
Also it is possible to use 2 ms TTI in HSUPA. However, AMC and high order modulation are not used
in HSUPA in Release-6 and Release-7. The reason for this is that high order modulations require more
energy per bit to be transmitted and in UE such resource as energy is quite limited because of the battery
life period. Nevertheless, most probably the use of 16-QAM in HSUPA will be included in Release-8
speciﬁcations. Theoretically, the data rate provided by HSUPA can achieve up to 5.76 Mbps in non-
MIMO mode. The use of MIMO mode for HSUPA is not considered in Release-7 but it may be included in
speciﬁcations later (most probably in Release-9). HSUPA introduces one new uplink transport channel:
r E-DCH – Enhanced Dedicated Channel – a transport channel bearing the uplink packet data;
and ﬁve new physical channels:
r E-DPDCH – E-DCH Dedicated Physical Data Channel – a physical channel carrying the E-DCH
data,
r E-DPCCH – E-DCH Dedicated Physical Control Channel – a physical channel carrying the control
data for E-DCH,
r E-AGCH – E–DCH Absolute Grant Channel – a downlink physical channel carrying the uplink
E-DCH absolute grant used for scheduling control,

Standardization in 3GPP
537
r E-RGCH – E-DCH Relative Grant Channel – a dedicated downlink physical channel carrying the
uplink E-DCH relative grants used for scheduling control,
r E-HICH – E-DCH Hybrid ARQ Indicator Channel – a dedicated downlink physical channel carrying
the uplink E-DCH hybrid ARQ acknowledgment indicator.
The main difference between HSUPA and HSDPA is that HSDPA is based on shared transport channel
(HS-DSCH) and HSUPA of course as an uplink technology is based on dedicated transport channel
(E-DCH). In spite of many common features with HS-DSCH, E-DCH is still the development of uplink
DCH. Each UE has its own E-DCH and naturally the data transmitted over this channel cannot be shared
as in HS-DSCH. Like all uplink channels E-DCH is under the power control. In the same way as uplink
DCH the E-DPDCH and E-DPCCH are code-multiplexed and transmitted simultaneously in time. Due
to this, the greater part of the UE’s power is assigned to E-DPDCH, the higher the pay-load bit rate
achievable on that channel but the less power is left for E-DPCCH and the less reliable is the signalling
in the link. In uplink DCH the ratio between the power of DPDCH and DPCCH is set to a constant. In
HSUPA the ratio between the power of E-DPDCH and E-DPCCH is controlled by the Node B. Thus,
by adjusting this ratio the scheduler can control the E-DCH data rate. If for HSDPA the shared resource
comprises the transmitter power (in one particular TTI the whole transmitted power of Node B can be
allocated just to one UE) and the number of channel codes (all codes can be allocated to one UE or
shared between several UEs in one TTI), for HSUPA the shared resource is the interference from UEs
or that is the same, the total received power at Node B receiver.
Like HS-DSCH, the E-DCH also can employ 2 ms TTI, which helps to decrease the delays. Actually,
E-DCH can use both 10 ms and 2 ms TTIs. The reason for keeping 10 ms TTIs is that the transmission
with 2 ms TTIs when UE is in poor channel conditions (that is, close to the cell edge) requires much
more energy than the transmission with 10 ms TTIs. Unlike HSDPA, HSUPA supports soft handover.
The support of soft handover is quite important for E-DCH. First of all, when the UE is in soft handover
mode the E-DCH is under the simultaneous power control from neighbouring cells that helps to de-
crease the interference. Moreover, the soft handover introduces a macro-diversity in transmitted uplink
information.
In the same way as for HSDPA the different UE categories are deﬁned for HSUPA. The HSUPA UE
categories are listed in Table 11.33 [22].
Table 11.33
FDD E-DCH physical layer categories
E-DCH
category
Maximum
number of
E-DCH codes
transmitted
Minimum
spreading factor
Support for 10 and 2
ms TTI EDCH
Maximum
number of bits
of an E-DCH
transport block
transmitted
within a 10 ms
E-DCH TTI
Maximum
number of bits
of an E-DCH
transport block
transmitted
within a 2 ms
E-DCH TTI
Category 1
1
SF4
10 ms TTI only
7110
−
Category 2
2
SF4
10 ms and 2 ms TTI
14484
2798
Category 3
2
SF4
10 ms TTI only
14484
−
Category 4
2
SF2
10 ms and 2 ms TTI
20000
5772
Category 5
2
SF2
10 ms TTI only
20000
−
Category 6
4
SF2
10 ms and 2 ms TTI
20000
11484
Category 7
4
SF2
10ms and 2 ms TTI
20000
22996
NOTE: When four codes are transmitted in parallel, two codes shall be transmitted with SF2 and two with SF4
Reproduced by permission of © 2009 3GPPTM

538
Modulation and Coding Techniques in Wireless Communications
UEs of categories 1 to 6 support QPSK only. Category 7 is not used in Release-7 and is reserved for
later releases. UEs of category 7 must support both QPSK and 16-QAM. As can be seen from Table
11.33 the maximum data rate supported by UE of category 6 is 5.7 Mbps. In future UE of category 7
should double this data rate.
11.3.2.1
H-ARQ
The hybrid ARQ scheme used in HSUPA is similar to one used in HSDPA. In the same way as in HSDPA
the soft combining of retransmissions with the original transmission is used also in HSUPA. Of course,
in the case of HSUPA the (re)transmitted data is buffered and combined in Node B. Like in HSDPA both
methods of combining Chase combining and incremental redundancy can be used. And like in HSDPA
the N-channel SAW ARQ is implemented in HSUPA. However, there are some differences in H-ARQ
implementation for HS-DSCH and E-DCH. Mainly these differences centre around timing. First of all,
as mentioned above, two different TTI types (10 ms and 2 ms) can be used in HSUPA. In case of 10
ms TTI, four HARQ processes are conﬁgured, and in case of 2 ms TTI, eight HARQ processes are
conﬁgured. Unlike HSDPA, the retransmissions and ACKs/NACKs in HSUPA are synchronous. That
means in HSUPA there is no need to signal the number of (re)transmitted H-ARQ process implicitly like
in HSDPA. And the round trip time is 40 ms for 10 ms TTI and 16 ms for 2 ms TTI. The ACK/NACK is
sent in downlink over E-HICH. Depending on the length of E-DCH TTI the length of the ACK/NACK
varies from 2 to 8 ms. The timing diagram for the case when E-DCH TTI is 10 ms is depicted in Figure
11.82a and for the case E-DCH TTI = 2 ms is depicted in Figure 11.82b.
For each data packet, the UE sends a retransmission sequence number (RSN) on E-DPCCH. For the
original transmission the RSN value is 0, for the ﬁrst retransmission it is 1 and is incremented with each
consecutive retransmission. RSN together with frame number (or with sub-frame number in case of 2
ms TTI) deﬁnes the redundancy version (RV). The RV is used in a similar way as in HSDPA for data
combining. In order to simplify the H-ARQ procedure and to limit the size of the RSN ﬁeld in E-DPCCH
a)
b)
Figure 11.82
HSUPA H-ARQ: a) E-DCH TTI 10 ms, b) E-DCH TTI 2 ms

Standardization in 3GPP
539
Table 11.34
Relation between RSN value and E-DCH RV Index
Code rate <1/2
1/2 ≤Code rate
RSN Value
E-DCH RV Index
E-DCH RV Index
0
0
0
1
2
3
2
0
2
3
[⌊TTIN/NARQ⌋mod 2] x 2
⌊TTIN/NARQ⌋mod 4
Reproduced by permission of © 2008 3GPPTM
the RSN value is restricted to the maximum of 3. That means, after the 3rd retransmission, the RSN is
not incremented anymore and for all retransmissions after 3rd one the RSN = 3. The applied E-DCH
RV index specifying the used RV depends on the RSN, on code rate, and if RSN = 3 also on the TTIN
(TTI number). For 10 ms TTI the TTI number is equal to the connection frame number (CFN):
TTIN = CFN
(11.95)
for 2 ms TTI:
TTIN = 5 · CFN + subframe number
(11.96)
where the subframe number counts the ﬁve TTIs which are within a given CFN, starting from 0 for the
ﬁrst TTI to 4 for the last TTI. The relation between RSN and RV index is described in Table 11.34 [16]
NARQ is the number of Hybrid ARQ processes.
However, if it is signalled by higher layers the UE can use only E-DCH RV index 0 independently of
the RSN, that is, use Chase combining only.
11.3.2.2
Fast Scheduling
In general the fast scheduling is the feature that was brought to HSUPA from HSDPA. The task of both
downlink and uplink scheduler is to control the shared resources in the served cell. The difference is
that in HSDPA the shared resources controlled by the downlink scheduler are time slots and the number
of channelization codes, while in HSUPA the shared resource controlled by the uplink scheduler is the
uplink interference. If some UE needs a higher data rate, it should be allowed to transmit the E-DCH
with higher power. On the other hand, that means this UE will contribute more interference to the cell.
Thus, the uplink scheduler grants maximum allowed transmit power ratios to each UE. This effectively
limits the uplink interference.
Like in HSDPA the scheduler is placed directly in Node B rather than in RNC, which decreases the
delays. Moreover, moving the scheduling algorithm from the RNC to the Node B provides tighter control
of the uplink interference which in turn may result in increased capacity and improved coverage. The
main difference between the scheduling mechanisms in HSDPA and HSUPA is that the scheduling in
HSUPA operates on a request-grant principle where the UE requests permission to send packets and
the scheduler decides when and how many UEs will be allowed to do so. A request for transmission
contains data about the state of the transmission buffer, the queue at the UE and its available power
margin. The available uplink power determines the possible data rate. A serving grant represents the
maximum E-DPDCH to DPCCH power ratio the UE may use in the next transmission. The serving
grant is updated every TTI. The selection of TFC for E-DCH is done based on the serving grant. The
scheduling mechanism is based on absolute and relative grants. The absolute grants are used to initialize
the scheduling process and provide absolute transmit power ratios to the UE. The relative grants are
used to increase or decrease the resource limitation compared to the previously used value.

540
Modulation and Coding Techniques in Wireless Communications
Each absolute grant and relative grant is associated with a speciﬁc uplink E-DCH TTI, that is, HARQ
process. This association is implicitly based on the timing of the E-AGCH and E-RGCH. The timing is
tight enough that this relationship is un-ambiguous. When UE receives an absolute grant on the E-AGCH
of the serving E-DCH cell it sets the serving grant value to the received value of the absolute grant. The
absolute grant can be applied to all H-ARQ processes or per H-ARQ process. This is deﬁned by 1 bit
indicator included in absolute grant information sent on E-AGCH. However, if the E-DCH is conﬁgured
with 10ms TTI, the absolute grant value can be applied only to all H-ARQ processes [30] If the UE has
received an absolute grant, it will ignore any serving cell E-RGCH commands for one H-ARQ cycle
(40ms in the case of 10 ms TTI, 16ms in the case of 2 ms TTI). Relative grants can be sent from the
serving cell and from non-serving neighbouring cells. A serving relative grant is transmitted on the
E-RGCH from the serving cell. The serving relative grant allows the Node B scheduler to incrementally
adjust the serving grant of UEs under its control. By deﬁnition, there can only be one serving relative
grant command received at any one time. This indication can take three different values: “UP”, “DOWN”
or “HOLD”. Non-serving relative grant transmits the E-RGCH from a non-serving E-DCH radio link.
The non-serving relative grant allows neighbouring Node Bs to adjust the transmitted rate of UEs that
are not under their control in order to avoid overload situations. By deﬁnition, there could be multiple
nonserving relative grant commands received by MAC at any time. This indication can take two different
values, “DOWN” or “HOLD” [30]. A relative grant is interpreted relative to the UE power ratio in the
previous TTI for the same hybrid ARQ process as the transmission which the relative grant will affect
as shown in Figure 11.83 [31].
If no data was transmitted at the same hybrid ARQ process in the previous TTI, the UE shall ignore
the relative grant.
The handling of the relative grant signalling is based on the scheduling grant (SG) table conﬁgured
by higher layers and shown in Tables 11.35 [20] and 11.36 [30].
The serving grant is updated based on the scheduling grant Table 11.35 or 11.36 as should be
conﬁgured by higher layers. When UE receive the relative grant it ﬁrst must determine the index in
the conﬁgured SG-table close to the EDPDCH/DPCCH power ratio used for the previous TTI on this
H-ARQ process. This index is called SGLUPR (LUPR = Last Used Power Ratio). For interpretation of
the “UP” serving relative grant, the network can conﬁgure the terminal with so-called “3-index-step
threshold” and “2-index-step threshold” values. Then the serving grant is calculated as follows:
If SGLUPR < “3-index-step threshold”: Serving Grant = SG[MIN(SGLUPR + 3, 37)].
1
2
3
4
1
2
3
E-RGCH
E-DCH 
HARQ process 
number 
Scheduling 
decision 
Load 
estimation, etc 
RG interpreted relative 
to the previous TTI in
this HARQ process.
Figure 11.83
Timing relation for Relative Grant. Reproduced by permission of © 2006 3GPPTM

Standardization in 3GPP
541
Table 11.35
Scheduling Grant Table 1 (SG-table)
Index
Scheduled Grant
37
(168/15)2∗6
36
(150/15)2∗6
35
(168/15)2∗4
34
(150/15)2∗4
33
(134/15)2∗4
32
(119/15)2∗4
31
(150/15)2∗2
30
(95/15)2∗4
29
(168/15)2
28
(150/15)2
27
(134/15)2
26
(119/15)2
25
(106/15)2
24
(95/15)2
23
(84/15)2
22
(75/15)2
21
(67/15)2
20
(60/15)2
19
(53/15)2
18
(47/15)2
17
(42/15)2
16
(38/15)2
15
(34/15)2
14
(30/15)2
13
(27/15)2
12
(24/15)2
11
(21/15)2
10
(19/15)2
9
(17/15)2
8
(15/15)2
7
(13/15)2
6
(12/15)2
5
(11/15)2
4
(9/15)2
3
(8/15)2
2
(7/15)2
1
(6/15)2
0
(5/15)2
Reproduced by permission of © 2009 3GPPTM
If “3-index-step threshold” < = SGLUPR
< “2-index-step threshold”: Serving Grant =
SG[MIN(SGLUPR + 2, 37)].
If “2-index-step threshold” < = SGLUPR: Serving Grant = SG[MIN(SGLUPR + 1, 37)].
If the UE received a serving relative grant or non-serving relative grant “DOWN”, in both cases the
serving grant is calculated as follows:
Serving Grant = SG[MAX(SGLUPR −1, 0)].
This algorithm allows, with the help of E-RGCH commands, the UE to be directed to lower power
ratio levels than can be obtained by using E-AGCH commands only. Actually, the absolute grants that
are signalled on E-AGCH are a subset of the SG table.

542
Modulation and Coding Techniques in Wireless Communications
Table 11.36
Scheduling Grant Table 2 (SG-table)
Index
Scheduled Grant
37
(377/15)2 × 4
36
(336/15)2 × 4
35
(237/15)2 × 6
34
(212/15)2 × 6
33
(237/15)2 × 4
32
(168/15)2∗6
31
(150/15)2∗6
30
(168/15)2∗4
29
(150/15)2 × 4
28
(134/15)2 × 4
27
(119/15)2 × 4
26
(150/15)2 × 2
25
(95/15)2 × 4
24
(168/15)2
23
(150/15)2
22
(134/15)2
21
(119/15)2
20
(106/15)2
19
(95/15)2
18
(84/15)2
17
(75/15)2
16
(67/15)2
15
(60/15)2
14
(53/15)2
13
(47/15)2
12
(42/15)2
11
(38/15)2
10
(34/15)2
9
(30/15)2
8
(27/15)2
7
(24/15)2
6
(21/15)2
5
(19/15)2
4
(17/15)2
3
(15/15)2
2
(13/15)2
1
(12/15)2
0
(11/15)2
Reproduced by permission of © 2009 3GPPTM
Network can conﬁgure each UE with a primary E-RNTI and a secondary E-RNTI. This can be used
in cases when there are a group of UEs which only occasionally send large amounts of uplink data. Then
the network can assign to this group of UEs a secondary E-RNTI in order to control this group together.
Only if a speciﬁc UE needs to send more uplink data, the network would assign an individual primary
grant to this UE with the primary E-RNTI. The CRC for primary and secondary E-RNTI differs and due
to this fact the absolute grant sent on E-AGCH on serving cell to the group of UEs or to some speciﬁc
UE can be unambiguously identiﬁed by the UE.
In order to schedule the resources correctly the scheduling algorithm needs the information about
the amount of system resources needed by the UE and the amount of resources it can actually make

Standardization in 3GPP
543
use of. The UE sends the scheduling information as part of the MAC-e Protocol Data Unit (PDU) over
the E-DPDCH. The scheduling information is transmitted periodically when there is a free space in
E-DPDCH due to the quantization of the transport block sizes that can be supported or the transmission
of this information can be triggered by some events (for example, when SG becomes too small to allow
the reliable data transmission but the E-DCH buffers are not empty). The scheduling information includes
the following ﬁelds:
r Highest priority Logical channel ID (HLID). The HLID ﬁeld identiﬁes unambiguously the highest
priority logical channel with available data. If multiple logical channels exist with the highest priority,
the one corresponding to the highest buffer occupancy will be reported. The length of the HLID is 4
bits.
r Total E-DCH Buffer Status (TEBS). The TEBS ﬁeld identiﬁes the total amount of data available across
all logical channels for which reporting has been requested by the RRC and indicates the amount of
data in number of bytes that is available for transmission and retransmission in RLC layer. The length
of this ﬁeld is 5 bits. The values taken by TEBS are shown in Table 11.37 [31].
Table 11.37
TEBS Values
Index
TEBS Value (bytes)
0
TEBS = 0
1
0 < TEBS ≤10
2
10 < TEBS ≤14
3
14 < TEBS ≤18
4
18 < TEBS ≤24
5
24 < TEBS ≤32
6
32 < TEBS ≤42
7
42 < TEBS ≤55
8
55 < TEBS ≤73
9
73 < TEBS ≤97
10
97 < TEBS ≤129
11
129 < TEBS ≤171
12
171 < TEBS ≤228
13
228 < TEBS ≤302
14
302 < TEBS ≤401
15
401 < TEBS ≤533
16
533 < TEBS ≤708
17
708 < TEBS ≤940
18
940 < TEBS ≤1248
19
1248 < TEBS ≤1658
20
1658 < TEBS ≤2202
21
2202 < TEBS ≤2925
22
2925 < TEBS ≤3884
23
3884 < TEBS ≤5160
24
5160 < TEBS ≤6853
25
6853 < TEBS ≤9103
26
9103 < TEBS ≤12092
27
12092 < TEBS ≤16062
28
16062 < TEBS ≤21335
29
21335 < TEBS ≤28339
30
28339 < TEBS ≤37642
31
37642 < TEBS

544
Modulation and Coding Techniques in Wireless Communications
Table 11.38
HLBS Values
Index
HLBS values (%)
0
0 < HLBS ≤4
1
4 < HLBS ≤6
2
6 < HLBS ≤8
3
8 < HLBS ≤10
4
10 < HLBS ≤12
5
12 < HLBS ≤14
6
14 < HLBS ≤17
7
17 < HLBS ≤21
8
21 < HLBS ≤25
9
25 < HLBS ≤31
10
31 < HLBS ≤37
11
37 < HLBS ≤45
12
45 < HLBS ≤55
13
55 < HLBS ≤68
14
68 < HLBS ≤82
15
82 < HLBS
r Highest priority Logical channel Buffer Status (HLBS). The HLBS ﬁeld indicates the amount of data
available from the logical channel identiﬁed by HLID, relative to the highest value of the buffer size
range reported by TEBS when the reported TEBS index is not 31, and relative to 50000 bytes when
the reported TEBS index is 31. The length of HLBS is 4 bits. The values taken by HLBS are shown
in Table 11.38 [31]. In cases where the TEBS ﬁeld is indicating index 0 (0 byte), the HLBS ﬁeld shall
indicate index 0.
r UE Power Headroom (UPH). The UPH ﬁeld indicates the ratio of the maximum UE transmission
power and the corresponding DPCCH code power. The length of UPH is 5 bits.
One more parameter reported by UE to scheduler is the so called “happy bit”. Happy bit indicates that UE
requests additional uplink resources. The happy bit is a single bit ﬁeld taking two values: “Not Happy”
and “Happy” indicating respectively whether the UE could use more resources or not. Unlike scheduling
information happy bit is included in the control data transmitted on E-DPCCH.
11.3.2.3
HSUPA Channels
The example of timing of HSUPA channels for E-DCH TTI = 10 ms is depicted in Figure 11.84, and
for E-DCH TTI = 2 ms in Figure 11.85.
E-DPDCH carrying E-DCH data and E-DPCCH carrying E-DCH control information are always
transmitted simultaneously, except the case of DTX when E-DPCCH is transmitted without E-DPDCH.
After E-DPDCH decoding the feedback information (ACK/NACK) is sent by Node B to UE over E-
HICH. The transmit timing of the start of the E-HICH frame (in case of 10 ms TTI) or sub-frame (in
case of 2 ms TTI) depends on E-DCH TTI length and downlink DPCH delay.
When the E-DCH TTI is 10 ms the E-HICH frame offset relative to P-CCPCH shall be τ E-HICH,n chips
with:
τE-HICH,n = 5120 + 7680 ×

τDPCH,n

256

−70
30
 
(11.97)

Figure 11.84
Timing of HSUPA channels. TTI = 10 ms (15 slots)

546
Modulation and Coding Techniques in Wireless Communications
where τDPCH,n is the downlink DPCH offset relative to P-CCPCH, τDPCH,n is a multiple of 256 chips,
that is, τDPCH,n = Tn × 256 chips, Tn ∈{0, 1, . . . , 149}.
The P-CCPCH, on which the cell system frame number (SFN) is transmitted, is used as timing reference
for all the physical channels. For each cell in the E-DCH active set, the UE shall associate the control
data received in the E-HICH frame associated with SFN i to the data transmitted in the E-DPDCH
frame associated with SFN i-3. This can be seen in the example depicted in Figure 11.84: the E-HICH
frame associated with SFN i +3 carries the ACK/NACK information about the E-DCH frame associated
with SFN i. In the example depicted in Figure 11.84 τDPC H,n = 129 × 256 chips and correspondingly
τE-HICH,n = 5slots. Then the delay between the end of the E-DCH frame (TTI) and the beginning of
the corresponding E-HICH frame comprises about 14 ms. Actually, this value can vary between 14 and
16 ms.
When the E-DCH TTI is 2 ms the E-HICH frame offset relative to P-CCPCH can be calculated in
accordance with the following formula:
τE-HICH,n = 5120 + 7680 ×

τDPCH,n

256

+ 50
30
 
(11.98)
In this case, the UE shall associate the E-DCH control data received in sub-frame j of the E-HICH frame
associated with SFN i to sub-frame t of the E-DPDCH frame associated with SFN i-s where:
s = 1 −⌊j/3⌋
t = ( j + 2) mod 5
(11.99)
The example for this case is depicted in Figure 11.85. For this example τDPC H,n = 9 × 256 chips and
τE-HICH,n = 5 slots. That means, for this example E-HICH sub-frame 3 associated with SFN i carries the
feedback information referring to E-DCH sub-frame 0 of frame associated with SFN i (s = 0, t = 0). It
is easy to verify that in case E-DCH TTI = 2 ms the delay between the end of the E-DCH sub-frame
(TTI) and the beginning of the corresponding E-HICH sub-frame can vary from 6 to 8 ms. That means
in case of 2 ms E-DCH TTI the processing time of E-DCH data is much more limited than in case of
10 ms E-DCH TTI. This is the price of decreasing the H-ARQ round trip time with 2 ms E-DCH TTI.
P-CCPCH    SFN i - 1
DL DPCH
subFr 0
subFr 1
subFr 2
subFr 3
subFr 4
subFr 0
subFr 1
subFr 2
subFr 3
subFr 4
P-CCPCH    SFN i
P-CCPCH    SFN i + 1
subFr 0
subFr 3
subFr 4
subFr 0
subFr 1
subFr 2
subFr 1
subFr 2
subFr 3
subFr 4
subFr 0
subFr 1
subFr 2
subFr 3
subFr 4
subFr 0
subFr 1
subFr 2
subFr 3
subFr 4
subFr 0
subFr 0
subFr 3
subFr 4
subFr 1
subFr 2
subFr 1
subFr 2
subFr 3
subFr 4
E-DPCCH
E-DPDCH
E-HICH
E-AGCH
E-RGCH
Downlink
Uplink
τDPCH,n
τE HICH,n
τE RGCH,n
2 slots
3 slots
3 slots
3 slots
3 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
Frame 15 slots
2 slots
15 slots
E-RGCH
non-serving
radio link
subFr 0
subFr 1
subFr 2
subFr 3
subFr 4
Figure 11.85
Timing of HSUPA channels. TTI = 2 ms (3 slots)

Standardization in 3GPP
547
In order to initialize the serving grant the absolute grant is sent over E-AGCH. The E-AGCH frame
offset relative to P-CCPCH is always equal to two slots. The timing of the E-AGCH depends on whether
2 ms TTI or 10 ms TTI is used.
If E-DCH TTI = 10 ms, the absolute grant received in the E-AGCH frame associated with SFN i must
be used for the E-DCH transmission in the E-DPDCH frame associated with SFN i +1 + s where:
s =
!
100 −

τDPCH,n

256

150
"
(11.100)
For the example depicted in Figure 11.84 s = 0 and as can be seen from this timing diagram the
absolute grant received in SFN i is used for the transmission of the E-DCH frame associated with
SFN i +1.
If E-DCH TTI = 2 ms, the absolute grant received in sub-frame j of the E-AGCH frame associated
with SFN i corresponds to E-DCH transmission in sub-frame t of the E-DPDCH frame associated with
SFN i + s where:
s =
⎢⎢⎢⎢⎢⎣
#
30 j+100−

τDPCH,n
$
256

30
%
5
⎥⎥⎥⎥⎥⎦
(11.101)
and
t =
!
30 j + 100 −

τDPCH,n

256

−150s
30
"
(11.102)
In the example depicted in Figure 11.85, sub-frame 0 of the E-AGCH frame associated with SFN i is
used for the E-DCH transmission in sub-frame 4 of the E-DPDCH frame associated with SFN i (s = 0,
t = 4) as it is shown in timing diagram. The delay between reception of the absolute grant and start of
the corresponding E-DCH (sub)frame varies from 5.6 ms to 15.5 ms in case of 10 ms E-DCH TTI and
from 3.6 ms to 5.5 ms in case of 2 ms E-DCH TTI.
Every TTI the serving grant is updated with the help of relative grant sent over E-RGCH. The relative
grant usually is sent from serving radio link, but in cases when it is necessary to decrease the interference
in the neighbouring cell it is possible the relative grant can be sent from non-serving radio link either.
The E-RGCH frame offset relative to P-CCPCH coincides with the frame offset of E-HICH if E-RGCH
is transmitted from serving radio link set or with E-AGCH frame offset if E-RGCH is transmitted from
non-serving radio link set. The timing of the E-AGCH depends on whether 2 ms TTI or 10 ms TTI is
used, on downlink DPCH frame offset and on whether E-RGCH is transmitted from serving radio link
set or from nonserving radio link.
If the E-DCH TTI is 10 ms and E-RGCH is transmitted from serving radio link set the E-RGCH frame
offset relative to P-CCPCH is:
τE−RGC H,n = 5120 + 7680 ×

τDPCH,n

256

−70
30
 
(11.103)
For each cell which belongs to the serving E-DCH radio link set, the relative grant received in the E-
RGCH frame associated with SFN i is used in the E-DCH transmission in the E-DPDCH frame associated
with SFN i +1. The delay between reception of an absolute grant and start of the corresponding E-DCH
frame varies in this case from 5.6 ms to 7.5 ms. The example for this case is presented in Figure 11.84.

548
Modulation and Coding Techniques in Wireless Communications
If 2 ms E-DCH TTI is used and E-RGCH is transmitted from serving radio link set the E-RGCH frame
offset relative to P-CCPCH is:
τE−RGC H,n = 5120 + 7680 ×

τDPCH,n

256

+ 50
30
 
(11.104)
In this case the relative grant received in sub-frame j of the E-RGCH frame associated with SFN i is used
for E-DCH transmission in sub-frame j of the E-DPDCH frame associated with SFN i +1. The delay
between reception of a relative grant and start of the corresponding E-DCH sub-frame in this case varies
from 3.6 ms to 15.5 ms. The example for this case is presented in Figure 11.85.
If E-RGCH is transmitted from nonserving radio link set the E-RGCH frame offset relative to P-
CCPCH is always 2 slots and 15 slots transmission is used for E-RGCH.
If 10 ms E-DCH TTI is used and E-RGCH is transmitted from non-serving radio link the relative
grant received in the E-RGCH frame associated with SFN i shall be used for E-DCH transmission in the
E-DPDCH frame associated with SFN i +1 + s where:
s =
!
160 −

τDPCH,n

256

150
"
(11.105)
The delay between reception of a relative grant and start of the corresponding E-DCH frame in this case
varies from 8.7 ms to 19.5 ms. The example for this case is presented in Figure 11.84. In this example
the relative grant received from nonserving radio link in SFN i is used for E-DCH transmission in SFN i
+ 2.
If 2 ms E-DCH TTI is used and E-RGCH is transmitted from nonserving radio link the relative grant
received in the E-RGCH frame associated with SFN i shall be used for E-DCH transmission in sub-frame
t of the E-DPDCH frame associated with SFN i +1 + s where:
s =
⎢⎢⎢⎢⎢⎣
#
160−

τDPCH,n
$
256

30
%
5
⎥⎥⎥⎥⎥⎦
(11.106)
and
t =
!
160 −

τDPCH,n

256

−150s
30
"
(11.107)
The delay between reception of a relative grant and start of the corresponding E-DCH sub-frame in
this case varies from 3.8 ms to 10.8 ms. The example for this case is presented in Figure 11.85. In this
example the relative grant received from nonserving radio link in SFN i is used for E-DCH transmission
in sub-frame 1 of frame corresponding to SFN i + 2.
When a downlink F-DPCH is conﬁgured, in all mentioned above cases τDPC H,n = τF−DPC H,n.
Now consider the HSUPA channels in more detail.
The E-DPDCH is used to carry the E-DCH transport channel. There may be zero, one, or several
E-DPDCH on each radio link.
The E-DPCCH is a physical channel used to transmit control information associated with the E-DCH.
There is at most one E-DPCCH on each radio link.
E-DPDCH and E-DPCCH are always transmitted simultaneously, except for the following cases when
E-DPCCH is transmitted without E-DPDCH:
r when E-DPDCH but not E-DPCCH is DTXed due to power scaling, or
r during the ndtx E-DPDCH idle slots if nmax>ntx1.

Standardization in 3GPP
549
Data, Ndata bits 
4
1
#
 t
ol
S
 
1
#
 t
ol
S
i#
 t
ol
S
 
2
#
 t
ol
S
Slot #0 
Tslot = 2560 chips, Ndata = M*10*2k bits (k=0…7) 
Tslot = 2560 chips 
1 subframe = 2 ms 
1 radio frame, Tf = 10 ms 
E DPDCH 
E DPCCH 
10 bits 
Subframe #0 
Subframe #1 
Subframe #2 
Subframe #3 
Subframe #4 
Slot #3
Figure 11.86
E-DPDCH frame structure
E-DPCCH shall not be transmitted in a slot unless DPCCH is also transmitted in the same slot.
Figure 11.86 [15] shows the E-DPDCH and E-DPCCH (sub)frame structure. Each radio frame is
divided in ﬁve sub-frames, each of length 2 ms; the ﬁrst sub-frame starts at the start of each radio frame
and the ﬁfth subframe ends at the end of each radio frame.
An E-DPDCH may use BPSK or 4PAM modulation symbols. In Figure 11.86, M is the number of
bits per modulation symbol, that is, M = 1 for BPSK and M = 2 for 4PAM.
The E-DPDCH slot formats, corresponding rates and number of bits are speciﬁed in Table 11.39 [15].
The E-DPCCH slot format is listed in Table 11.40 [15].
The E-DCH Absolute Grant Channel (E-AGCH) is a ﬁxed rate (30 kbps, SF = 256) downlink physical
channel carrying the uplink E-DCH absolute grant. Figure 11.87 [15] illustrates the frame and sub-frame
structure of the E-AGCH.
Table 11.39
E-DPDCH slot formats
Slot Format #i
Channel Bit
Rate (kbps)
Bits/Symbol M
SF
Bits/ Frame
Bits/ Subframe
Bits/Slot Ndata
0
15
1
256
150
30
10
1
30
1
128
300
60
20
2
60
1
64
600
120
40
3
120
1
32
1200
240
80
4
240
1
16
2400
480
160
5
480
1
8
4800
960
320
6
960
1
4
9600
1920
640
7
1920
1
2
19200
3840
1280
8
1920
2
4
19200
3840
1280
9
3840
2
2
38400
7680
2560

550
Modulation and Coding Techniques in Wireless Communications
Table 11.40
E-DPCCH slot formats
Slot Format #i
Channel Bit
Rate (kbps)
SF
Bits/ Frame
Bits/ Subframe
Bits/Slot Ndata
0
15
256
150
30
10
An E-DCH absolute grant shall be transmitted over one E-AGCH sub-frame or one E-AGCH frame.
The transmission over one E-AGCH sub-frame and over one E-AGCH frame shall be used for UEs for
which E-DCH TTI is set to 2 ms and 10 ms respectively. The scope of the absolute grant tells the UE
whether the absolute grant is valid for a speciﬁc H-ARQ process or for all H-ARQ processes.
The E-DCH Relative Grant Channel (E-RGCH) is a ﬁxed rate (SF = 128) dedicated downlink physical
channel carrying the uplink E-DCH relative grants. Figure 11.88 illustrates the structure of the E-RGCH.
A relative grant is transmitted using 3, 12 or 15 consecutive slots and in each slot a sequence of 40
ternary values is transmitted. The 3 and 12 slot duration shall be used on an E-RGCH transmitted to UEs
for which the cell transmitting the E-RGCH is in the E-DCH serving radio link set and for which the
E-DCH TTI is respectively 2 and 10 ms. The 15 slot duration shall be used on an E-RGCH transmitted
to UEs for which the cell transmitting the E-RGCH is not in the E-DCH serving radio link set.
The sequence bi,0, bi,1, . . . , bi,39 transmitted in slot i in Figure 11.88 is given by:
bi, j = a · Css,40,m(i), j
(11.108)
where a is the relative grant and Css,40,m(i),j is the orthogonal signature sequence. In a serving E-DCH
radio link set, the relative grant a is set to + 1 (UP), 0 (HOLD), or −1 (DOWN) and in a radio link not
belonging to the serving E-DCH radio link set, the relative grant a is set to 0 (HOLD) or −1 (DOWN).
This differentiation has been made to allow only the serving radio link set to increase the uplink power.
Non-serving radio links can only decrease the uplink power in case too high interference. The orthogonal
signature sequences Css,40,m(i) are given by Table 11.41 [15] and the index m(i) in slot i is given by Table
11.42 [15]. The E-RGCH signature sequence index l in Table 11.42 is given by higher layers.
In cases where STTD-based open loop transmit diversity is applied for E-RGCH, STTD encoding is
applied to the sequence bi,j. as described in section 11.1.8.
The E-DCH Hybrid ARQ Indicator Channel (E-HICH) is a ﬁxed rate (SF = 128) dedicated downlink
physical channel carrying the uplink E-DCH hybrid ARQ acknowledgment indicator. The structure of
the E-HICH coincides with structure of the E-RGCH and is represented in Figure 11.88. A hybrid ARQ
acknowledgment indicator is transmitted using 3 or 12 consecutive slots and in each slot a sequence of
4
1
#
 t
ol
S
 
1
#
 t
ol
S
Slot #2 
Slot #i
Slot #0 
Tslot = 2560 chips 
1 subframe = 2 ms 
1 radio frame, Tf = 10 ms 
E-AGCH 
20 bits 
Figure 11.87
E-AGCH (sub)frame structure

Standardization in 3GPP
551
Slot #14 
Tslot = 2560 chip
bi,39
bi,1
bi,0
Slot #0 
Slot #1 
Slot #2 
Slot #i 
1 radio frame, Tf = 10 ms
1 subframe = 2 ms 
Figure 11.88
E-RGCH and E-HICH structure
40 binary values is transmitted. The 3 and 12 slot duration shall be used for UEs which E-DCH TTI is
set to 2 ms and 10 ms respectively.
The sequence bi,0, bi,1, . . . , bi,39 transmitted in slot i in Figure 11.88 is given by (11.108), where a is
the hybrid ARQ acknowledgment indicator. In a radio link set containing the serving E-DCH radio link
set, the hybrid ARQ acknowledgment indicator a is set to + 1 or –1, and in a radio link set not containing
the serving E-DCH radio link set the hybrid ARQ indicator a is set to + 1 or 0. The orthogonal signature
sequences Css,40,m(i) are given by Table 11.41 [15] and the index m(i) in slot i is given by Table 11.42
[15]. The E-HICH signature sequence index l is given by higher layers.
In cases where STTD-based open loop transmit diversity is applied for E-HICH, STTD encoding
according to section 11.1.8 is applied to the sequence bi,j.
11.3.2.3.1
E-DPCCH Multiplexing and Coding
The following information is transmitted by means of the E-DPCCH:
r Retransmission sequence number (RSN):
xrsn,1, xrsn,2
r E-TFCI:
xtfci,1, xtfci,2, . . . , xtfci,7
r “Happy” bit:
xh,1
Figure 11.89 [16] illustrates the overall coding chain for E-DPCCH.
To indicate the redundancy version (RV) of each HARQ transmission and to assist the Node B soft
buffer management a two bit retransmission sequence number (RSN) is signalled from the UE to the
Node B. The Node B can avoid soft buffer corruption by ﬂushing the soft buffer associated to one HARQ
process in case more than three consecutive E-DPCCH transmissions on that HARQ process can not be
decoded or the last received RSN is incompatible with the current one.
The relation between RSN and applied E-DCH RV index are speciﬁed in Table 11.34.
The UE shall set xh,1 to ‘1’ if value of happy bit is “Happy” and to ‘0’ if value of happy bit is “Not
Happy”.
The E-TFCI xtfci,1, xtfci,2, . . . , xtfci,7, the retransmission sequence number xrsn,1, xrsn,2 and the “happy”
bit xh,1 are multiplexed together. This gives a sequence of bits x1, x2, . . . , x10 where:
xk = xh,1
k = 1
xk = xrsn,4−k
k = 2, 3
xk = xt f ci,11−k
k = 4, 5, . . . , 10

Table 11.41
E-RGCH and E-HICH signature sequences
Css,40,0 −1 −1 −1
1 −1
1 −1 −1
1
1 −1 −1
1 −1
1
1 −1
1
1 −1 −1 −1 −1 −1 −1 −1 −1
1 −1
1 −1 −1
1
1
1
1
1 −1 −1 −1
Css,40,1 −1
1
1 −1 −1
1
1
1 −1 −1
1 −1
1
1 −1 −1 −1 −1
1
1
1 −1 −1 −1 −1
1 −1 −1 −1 −1 −1 −1 −1
1
1 −1
1
1 −1 −1
Css,40,2 −1 −1 −1
1 −1
1
1
1 −1 −1 −1 −1
1 −1 −1
1
1 −1 −1
1
1 −1
1
1
1 −1 −1
1
1
1 −1
1 −1 −1 −1 −1 −1 −1 −1 −1
Css,40,3
1 −1 −1 −1 −1 −1 −1
1
1
1 −1
1 −1
1 −1
1 −1 −1
1
1 −1
1 −1 −1
1
1 −1
1 −1 −1
1
1 −1 −1
1 −1 −1 −1 −1 −1
Css,40,4
1
1
1 −1 −1
1 −1
1 −1 −1
1
1
1 −1
1
1
1
1
1
1 −1
1
1
1 −1 −1 −1
1
1 −1
1 −1
1 −1
1
1 −1
1 −1 −1
Css,40,5 −1
1 −1 −1
1
1
1 −1
1
1 −1
1
1
1 −1
1
1
1 −1 −1
1 −1 −1
1 −1
1 −1
1 −1 −1
1 −1
1 −1 −1 −1 −1
1
1 −1
Css,40,6
1
1 −1 −1 −1
1
1 −1
1
1 −1 −1
1 −1 −1 −1 −1
1
1 −1
1
1
1 −1
1 −1
1 −1
1 −1 −1
1
1 −1
1 −1 −1
1 −1
1
Css,40,7 −1
1 −1
1
1
1 −1 −1 −1 −1 −1
1
1
1
1 −1 −1 −1
1 −1 −1 −1
1 −1
1
1 −1 −1
1
1
1
1 −1 −1
1
1 −1
1
1 −1
Css,40,8
1
1 −1
1
1 −1
1
1
1
1 −1 −1 −1 −1
1 −1
1 −1
1
1
1
1 −1
1 −1 −1 −1 −1 −1
1 −1 −1 −1 −1
1
1 −1
1
1 −1
Css,40,9 −1
1 −1 −1 −1 −1
1 −1 −1 −1 −1
1 −1 −1
1
1
1 −1
1 −1
1 −1 −1
1
1 −1
1
1 −1 −1
1
1 −1
1
1
1
1
1 −1
1
Css,40,10 −1
1
1 −1
1
1 −1
1
1
1
1 −1
1 −1
1
1 −1 −1 −1
1 −1 −1 −1 −1
1 −1
1
1 −1 −1 −1
1 −1 −1 −1
1 −1
1
1
1
Css,40,11 −1
1 −1 −1 −1 −1 −1
1
1
1 −1 −1 −1
1
1 −1
1
1 −1
1 −1 −1
1
1
1
1 −1 −1
1 −1 −1
1
1
1 −1
1
1
1 −1 −1
Css,40,12 −1 −1 −1 −1
1 −1
1
1 −1 −1 −1 −1 −1
1
1
1 −1
1
1
1
1 −1
1 −1 −1
1
1
1
1 −1 −1 −1
1 −1
1
1 −1 −1
1
1
Css,40,13
1
1
1
1 −1 −1
1 −1 −1 −1
1 −1 −1
1
1
1 −1
1 −1 −1
1
1 −1 −1
1
1 −1
1 −1
1 −1
1
1 −1 −1
1 −1
1 −1 −1
Css,40,14 −1
1
1
1 −1 −1 −1 −1
1
1
1 −1 −1
1 −1
1
1 −1
1 −1 −1 −1
1
1 −1
1
1
1
1
1 −1 −1 −1 −1
1 −1 −1
1 −1
1
Css,40,15 −1 −1
1
1 −1
1
1
1
1
1
1
1
1
1
1 −1
1
1
1
1
1 −1 −1
1
1
1
1 −1 −1
1
1
1
1 −1
1
1 −1 −1 −1
1
Css,40,16
1 −1 −1 −1 −1
1 −1 −1 −1 −1 −1 −1
1
1
1 −1
1 −1 −1 −1 −1
1 −1
1 −1
1
1 −1 −1 −1 −1 −1 −1 −1 −1
1 −1 −1 −1
1
Css,40,17
1 −1
1 −1
1
1
1 −1
1
1
1 −1
1
1
1
1
1 −1
1 −1
1
1
1
1
1
1 −1
1
1 −1 −1
1 −1
1
1
1
1 −1
1 −1
Css,40,18
1
1 −1
1 −1
1
1
1
1
1 −1
1
1
1
1
1 −1 −1 −1
1
1
1
1 −1 −1
1
1
1
1
1
1 −1 −1
1 −1
1
1
1 −1
1
Css,40,19
1
1 −1
1
1
1 −1
1 −1 −1 −1 −1
1
1 −1
1
1
1
1
1 −1
1 −1
1
1
1
1
1 −1
1 −1
1
1
1
1 −1
1
1
1
1
Css,40,20
1
1
1 −1
1
1 −1
1 −1
1 −1
1 −1 −1 −1
1 −1 −1
1 −1
1 −1 −1
1
1
1
1 −1
1
1 −1 −1
1
1 −1
1 −1 −1 −1 −1
Css,40,21 −1
1
1 −1 −1 −1 −1
1 −1
1 −1 −1
1 −1 −1
1
1 −1 −1 −1
1
1
1 −1 −1
1 −1 −1 −1
1
1
1
1 −1
1
1
1 −1
1
1
Css,40,22 −1 −1 −1
1 −1 −1 −1
1 −1
1
1 −1
1
1 −1 −1 −1 −1
1 −1
1
1 −1
1
1 −1 −1
1
1 −1
1 −1
1
1 −1
1 −1
1
1
1
Css,40,23
1 −1 −1 −1 −1
1
1
1
1 −1
1
1 −1 −1 −1 −1
1 −1 −1 −1 −1 −1
1 −1
1
1 −1
1 −1
1 −1 −1
1
1
1
1 −1
1
1
1
Css,40,24 −1 −1 −1
1
1
1 −1 −1
1 −1
1 −1 −1 −1 −1
1
1 −1
1
1
1
1
1 −1
1
1
1 −1 −1 −1
1 −1
1 −1 −1
1
1
1 −1 −1
Css,40,25 −1
1 −1 −1
1 −1 −1 −1
1 −1
1
1
1 −1 −1 −1 −1
1
1
1
1
1
1
1 −1
1 −1
1 −1
1 −1
1 −1
1 −1
1 −1 −1 −1
1
Css,40,26 −1 −1
1
1
1
1
1
1 −1
1 −1
1 −1 −1
1 −1 −1 −1
1 −1 −1
1
1
1 −1
1 −1
1 −1 −1 −1
1
1 −1 −1 −1
1
1 −1
1
Css,40,27
1 −1
1 −1 −1
1 −1
1
1 −1 −1 −1 −1
1 −1 −1 −1
1
1 −1
1 −1
1
1 −1 −1
1
1 −1
1
1
1 −1 −1 −1
1
1
1
1 −1
Css,40,28
1
1 −1
1
1
1 −1
1
1 −1
1 −1 −1
1
1
1 −1 −1 −1 −1
1 −1
1
1 −1 −1 −1 −1 −1 −1
1
1
1
1
1 −1 −1 −1 −1
1
Css,40,29 −1
1 −1 −1 −1
1 −1 −1 −1
1
1
1 −1
1
1 −1 −1 −1 −1
1
1
1
1
1
1 −1
1
1 −1
1 −1 −1
1 −1
1 −1
1 −1
1 −1
Css,40,30 −1
1
1 −1
1 −1
1
1
1 −1 −1 −1
1
1
1 −1
1 −1
1 −1 −1
1
1 −1
1 −1
1
1 −1
1
1 −1
1
1 −1 −1 −1 −1 −1 −1
Css,40,31 −1
1 −1 −1 −1
1
1
1
1 −1
1 −1 −1 −1
1
1 −1
1
1 −1 −1
1 −1
1
1
1 −1 −1
1
1
1 −1 −1 −1 −1 −1
1 −1
1
1
Css,40,32
1
1
1
1 −1 −1
1 −1
1 −1 −1
1
1
1 −1
1 −1 −1
1
1 −1 −1
1
1
1 −1 −1 −1 −1 −1 −1 −1
1 −1 −1
1
1 −1
1
1
Css,40,33 −1 −1 −1 −1
1 −1
1
1
1 −1
1
1
1
1 −1
1 −1 −1 −1 −1 −1
1 −1
1 −1 −1
1 −1
1
1 −1
1
1 −1
1
1
1
1 −1 −1
Css,40,34
1 −1 −1 −1
1 −1 −1
1 −1
1
1
1
1
1
1
1
1
1
1 −1
1 −1
1 −1
1 −1 −1 −1 −1
1 −1 −1 −1 −1 −1 −1
1
1 −1
1
Css,40,35 −1 −1
1
1 −1 −1 −1
1
1 −1 −1
1
1 −1
1
1 −1
1 −1 −1
1
1
1
1
1
1
1 −1 −1 −1 −1 −1 −1
1
1 −1 −1
1
1 −1
Css,40,36 −1
1
1
1
1
1 −1
1
1 −1 −1
1 −1
1 −1 −1
1
1 −1 −1
1
1 −1 −1
1 −1 −1
1
1 −1 −1 −1 −1 −1
1
1
1 −1 −1
1
Css,40,37
1 −1
1 −1
1 −1 −1 −1
1 −1 −1 −1
1 −1
1 −1 −1 −1 −1
1
1 −1 −1
1
1
1 −1
1
1
1
1 −1
1 −1
1 −1
1
1 −1
1
Css,40,38 −1 −1
1 −1
1
1
1 −1 −1
1 −1 −1 −1
1 −1
1 −1
1 −1
1 −1
1
1
1
1 −1 −1 −1 −1
1
1 −1 −1
1
1
1 −1
1 −1
1
Css,40,39 −1 −1
1 −1 −1
1 −1 −1
1 −1 −1
1 −1
1
1
1
1 −1
1
1
1
1 −1 −1 −1 −1 −1 −1
1
1 −1
1
1
1 −1 −1 −1
1
1
1

Standardization in 3GPP
553
Table 11.42
E-HICH and E-RGCH signature hopping pattern
Row index m(i) for slot i
Sequence index l
i mod 3 = 0
i mod 3 = 1
i mod 3 = 2
0
0
2
13
1
1
18
18
2
2
8
33
3
3
16
32
4
4
13
10
5
5
3
25
6
6
12
16
7
7
6
1
8
8
19
39
9
9
34
14
10
10
4
5
11
11
17
34
12
12
29
30
13
13
11
23
14
14
24
22
15
15
28
21
16
16
35
19
17
17
21
36
18
18
37
2
19
19
23
11
20
20
39
9
21
21
22
3
22
22
9
15
23
23
36
20
24
24
0
26
25
25
5
24
26
26
7
8
27
27
27
17
28
28
32
29
29
29
15
38
30
30
30
12
31
31
26
7
32
32
20
37
33
33
1
35
34
34
14
0
35
35
33
31
36
36
25
28
37
37
10
27
38
38
31
4
39
39
38
6
Channel coding of the E-DPCCH is done using a sub-code of the second order Reed-Muller code. Coding
is applied to the output x1, x2, . . . , x10 from the E-DPCCH multiplexing, resulting in:
zi =
9

n=0
(xn+1 × Mi,n) mod 2
i = 0, 1, . . . , 29
(11.109)
where Mi,n is the ith bit of nth codeword from the generator matrix of Reed-Muller code. The generator
matrix of (32, 10) Reed-Muller code is listed in Table 11.7.

554
Modulation and Coding Techniques in Wireless Communications
E-DPCCH 
Physical
channel
mapping
Multiplexing
xh,1
xrsn,2, xrsn,1
Channel
Coding
xtfci,7, ..., xtfci,2, xtfci,1
x1, x2,..., x10
z0, z1,..., z29
Figure 11.89
Coding chain for E-DPCCH. Reproduced by permission of © 2008 3GPPTM
The sequence of bits z0, z1, . . . , z29 output from the E-DPCCH channel coding is mapped to the
corresponding E-DPCCH sub frame. The bits are mapped so that they are transmitted over the air in
ascending order with respect to i. If the E-DCH TTI is equal to 10 ms the sequence of bits is transmitted
in all the E-DPCCH sub frames of the E-DPCCH radio frame.
For compressed frames in the uplink and the case when E-DCH TTI length is 10 ms, the bits mapped
to the E-DPCCH idle slots shall not be transmitted.
11.3.2.3.2
E-DCH Multiplexing and Coding
Figure 11.90 [16] shows the processing structure for the E-DCH transport channel mapped onto a
separate CCTrCH. Data arrives to the coding unit in form of a maximum of one transport block once
every transmission time interval (TTI), that is, the number of transport blocks per TTI and the number
of transport channels is always one.
CRC attached to the E-DCH transport channel always has the length of 24 bits and is calculated as
described in section 11.1.4.1.
Code block segmentation for the E-DCH transport channel is done in the same way as described in
section 11.1.3.1 with some speciﬁc restrictions: there is a maximum of one transport block, and only
turbo coding with block size 5114 shall be used.
The channel coding for E-DCH is performed with the help of turbo coder of rate 1/3 depicted in Figure
11.27.
The hybrid ARQ functionality matches the number of bits at the output of the channel coder to the
total number of bits of the E-DPDCH set to which the E-DCH transport channel is mapped. The hybrid
ARQ functionality is controlled by the redundancy version (RV) parameters. The H-ARQ functionality
is depicted in Figure 11.91 [16].
First of all the parameters for the rate matching pattern determination algorithm are calculated (for
details see section 4.8.4.1 and section 4.5.4.3 in [16]).
The parameters of the rate matching stage depend on the value of the RV parameters s and r. The s
and r combinations corresponding to each RV allowed for the E-DCH are listed in the Table 11.43.

Standardization in 3GPP
555
CRC attachment
aim1,aim2,aim3,...,aimA
Code block segmentation
Channel Coding
Physical Channel
Segmentation
Physical channel(s)
Physical Layer Hybrid ARQ
functionality/Rate matching
oir1,oir2,oir3,...,oirK
ci1,ci2,ci3,...,ciE
up,1,up,2,up,3,...,up,U(p)
s 1,s 2,s 3,...,s R
bim1,bim2,bim3,...,bimB
Interleaving &
Physical channel mapping 
Figure 11.90
Coding chain for E-DCH. Reproduced by permission of © 2008 3GPPTM
Systematic
bits
Parity 1
bits
Parity 2
bits
RM P1 2
RM P2 2
RM S
Rate Matching
Nsys
Np1
Np2
Nt,sys
Nt,p1
Nt,p2
bit
separation
Ne,j
bit
collection
Ne,data,j
Figure 11.91
E-DCH hybrid ARQ functionality. Reproduced by permission of © 2008 3GPPTM

556
Modulation and Coding Techniques in Wireless Communications
Table 11.43
RV for E-DCH
E-DCH RV Index
s
r
0
1
0
1
0
0
2
1
1
3
0
1
Reproduced by permission of © 2008 3GPPTM
Parameter s deﬁnes if systematic bits are prioritized in rate matching algorithm. If s = 1 then the
redundancy version is “self-decodable”, that is, it contains all systematic bits, if s = 0 the corresponding
redundancy version may contain only part of systematic bits or parity bits only. Parameter r deﬁnes
the rate matching pattern. The HARQ bit separation function is performed in the same way as bit
separation for turbo encoded TrCHs with puncturing described in section 11.2.3.1. The rate matching
pattern determination algorithm described in section 11.2.3.1 is used for rate matching. The HARQ
bit collection function is performed in the same way as bit collection for turbo encoded TrCHs with
puncturing described in section 11.2.3.1.
After rate matching the physical channel segmentation is done. When more than one E-DPDCH is
used, physical channel segmentation distributes the bits among the different physical channels. The bits
input to the physical channel segmentation are denoted by s1, s2, s3, . . . ,sR, where R is the number of bits
input to the physical channel segmentation block. The number of PhCHs is denoted by P.
The bits after physical channel segmentation are denoted up,k where p is the PhCH number. U(p) is
the number of physical channel bits in one E-DCH TTI for the pth E-DPDCH. The relation between sk
and up,k is given below.
Bits on ﬁrst PhCH after physical channel segmentation:
u1,k = sk
k = 1, 2, . . . , U(1)
(11.110)
Bits on pth PhCH after physical channel segmentation are given by:
u p,k = s
k+
p−1

q=1
U(q),
k = 1, 2, . . . , U(p)
(11.111)
The interleaving for E-DCH is done as shown in Figure 11.92 [16], separately for each physical channel.
The bits input to the block interleaver are denoted by u p,1, u p,2, u p,3, . . . , u p,U, where p is PhCH number
and U = U(p) is the number of bits in one TTI for one PhCH.
The basic interleaver is as the second interleaver described in section 11.2.3.1. However, for 4PAM,
there are two identical interleavers of the same size R2 × 30, where R2 is the minimum integer fulﬁlling
⌈U/2⌉≤R2 × 30. The output bits from the physical channel segmentation are divided one by one
between the interleavers: bit up,k goes to the ﬁrst interleaver and bit up,k + 1 goes to the second interleaver.
Interleaver
(R2 x 30)
Interleaver
(R2 x 30)
up,k (BPSK)
up,k (4PAM)
 up,k+1 (4PAM)
vp,k (BPSK)
vp,k (4PAM)
  vp,k+1 (4PAM)
Figure 11.92
Interleaver structure for E-DCH. Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
557
Channel coding
xag,1, xag,2,..., xag,6
Rate matching
    ID specific 
CRC attachment
Physical channel 
mapping
y1, y2,..., y22
z1, z2,..., z90
E-AGCH 
r1, r2,..., r60
    Multiplexing
xagv,1, xagv,2,..., xagv,5 
xags,1
Figure 11.93
Coding chain for E-AGCH. Reproduced by permission of © 2008 3GPPTM
Bits are collected one by one from the interleavers: bit vp,k is obtained from the ﬁrst interleaver and bit
vp,k + 1 is obtained from the second interleaver, where k mod 2 = 1.
The bits input to the physical channel mapping are denoted νp,1, νp,2, . . . , νp,U(p). The bits νp,k are
mapped to the physical channels such that the bits for each physical channel are transmitted over the air
in ascending order with respect to k.
11.3.2.3.3
E-AGCH Multiplexing and Coding
The absolute grant channel (E-AGCH) is bearing the following information:
r Absolute Grant Value:
xagv,1, xagv,2, . . . , xagv,5
r Absolute Grant Scope:
xags,1
Figure 11.93 [16] illustrates the overall coding chain for the E-AGCH.

558
Modulation and Coding Techniques in Wireless Communications
Table 11.44
Mapping of Absolute Grant Value
Absolute Grant Value
Index
(168/15)2 × 6
31
(150/15)2 × 6
30
(168/15)2 × 4
29
(150/15)2 × 4
28
(134/15)2 × 4
27
(119/15)2 × 4
26
(150/15)2 × 2
25
(95/15)2 × 4
24
(168/15)2
23
(150/15)2
22
(134/15)2
21
(119/15)2
20
(106/15)2
19
(95/15)2
18
(84/15)2
17
(75/15)2
16
(67/15)2
15
(60/15)2
14
(53/15)2
13
(47/15)2
12
(42/15)2
11
(38/15)2
10
(34/15)2
9
(30/15)2
8
(27/15)2
7
(24/15)2
6
(19/15)2
5
(15/15)2
4
(11/15)2
3
(7/15)2
2
ZERO GRANT∗
1
INACTIVE∗
0
Reproduced by permission of © 2008 3GPPTM
The Absolute Grant Value information is speciﬁed in Table 11.44 [16] and Table 11.45 [16]. Based
on higher layer signalling, either Table 11.44 or Table 11.45 is selected. Obviously the Tables 11.44 and
11.45 are the subsets of Tables 11.35 and 11.36.
The value of xags,1 is set to ‘1’ if the scope of the absolute grant is “Per HARQ process” and to ‘0’ if
the scope is “All HARQ processes”.
The Absolute Grant Value information xagv,1, xagv,2, . . . , xagv,5 and the Absolute Grant Scope information
xags,1 are multiplexed together. This gives a sequence of bits xag,1, xag,2, . . . , xag, 6 where:
xag,k = xagv,k
k = 1, 2, . . . , 5
xag,k = xags,7−k
k = 6
From the sequence of bits xag,1, xag,2, . . . , xag,6 a 16 bit CRC is calculated. That gives the sequence of
CRC bits c1, c2, . . . , c16. This sequence of bits is then masked with E-DCH Radio Network Identiﬁer
(E-RNTI) xid,1, xid,2, . . . , xid,16. The E-RNTI plays the same role in HSUPA as H-RNTI in HSDPA: it is
the unique identiﬁer of the UE. Then the masked CRC is appended to the sequence of bits xag,1, xag,2, . . . ,

Standardization in 3GPP
559
Table 11.45
Alternative Mapping of Absolute Grant Value
Absolute Grant Value
Index
(377/15)2 × 4
31
(237/15)2 × 6
30
(168/15)2∗6
29
(150/15)2∗6
28
(168/15)2∗4
27
(150/15)2 × 4
26
(134/15)2 × 4
25
(119/15)2 × 4
24
(150/15)2 × 2
23
(95/15)2 × 4
22
(168/15)2
21
(150/15)2
20
(134/15)2
19
(119/15)2
18
(106/15)2
17
(95/15)2
16
(84/15)2
15
(75/15)2
14
(67/15)2
13
(60/15)2
12
(53/15)2
11
(47/15)2
10
(42/15)2
9
(38/15)2
8
(34/15)2
7
(30/15)2
6
(27/15)2
5
(24/15)2
4
(19/15)2
3
(15/15)2
2
ZERO GRANT∗
1
INACTIVE∗
0
Reproduced by permission of © 2008 3GPPTM
xag,6 to form the sequence of bits y1, y2, . . . , y22 where:
yi = xag,i
i = 1, 2, . . . , 6
yi = (ci−6 + xag,i−6) mod 2
i = 7, 8, . . . , 22
(11.112)
In the next step rate 1/3 convolutional coding, as described in section 11.2.4.2 is applied to the sequence
of bits y1, y2, . . . , y22, resulting in the sequence of bits z1, z2, . . . , z90.
Then from the input sequence z1, z2, . . . , z90 the bits z1, z2, z5, z6, z7, z11, z12, z14, z15, z17, z23, z24,
z31, z37, z44, z47, z61, z63, z64, z71, z72, z75, z77, z80, z83, z84, z85, z87, z88, z90 are punctured to obtain the
output sequence r1, r2, . . . , r60.
After that the sequence of bits r1, r2, . . . , r60 is mapped to the corresponding E-AGCH sub frame. The
bits rk are mapped so that they are transmitted over the air in ascending order with respect to k. If the
E-DCH TTI is equal to 10 ms the same sequence of bits is transmitted in all the E-AGCH sub frames of
the E-AGCH radio frame.

560
Modulation and Coding Techniques in Wireless Communications
Table 11.46
Mapping of RG value
Command
RG Value (serving E-DCH RLS)
RG Value (other radio links)
UP
+1
not allowed
HOLD
0
0
DOWN
−1
−1
11.3.2.3.4
E-RGCH and E-HICH Multiplexing
The relative grant channel (E-RGCH) is bearing the relative grant commands. The relative grant command
is mapped to the relative grant value as described in Table 11.46 [16].
The coding of the relative grant value is performed in accordance with (11.108).
The E-DCH H-ARQ acknowledgment indicator channel (E-HICH) is bearing the ACK/NACK com-
mand. The ACK/NACK command is mapped to the H-ARQ acknowledgment indicator as described in
Table 11.47 [16].
The coding of the H-ARQ acknowledgment indicator is performed in accordance with (11.108).
11.3.2.3.5
HSUPA Spreading and Modulation
Figure 11.94 illustrates the spreading operation for the E-DPDCHs and the E-DPCCH.
The E-DPCCH shall be spread to the chip rate by the channelization code cec. The kth E-DPDCH,
denominated E-DPDCHk, shall be spread to the chip rate using channelization code ced,k.
After channelization, the real-valued spread E-DPCCH and E-DPDCHk signals shall respectively be
weighted by gain factor βec and βed,k. The power of the E-DPCCH and the E-DPDCH(s) is set in relation
to the DPCCH. For this purpose, gain factors are used for scaling the uplink channels relative to each
other. The E-DPCCH gain factor computation depends on the transmitted E-TFC at a given TTI.
In non compressed frames, if E-TFCIi is smaller than or equal to E-TFCIec,boost, where E-TFCIi denotes
the E-TFCI of the i:th E-TFC, the E-DPCCH gain factor, βec is calculated according to:
βec = βc · Aec
(11.113)
where βc value is signalled by higher-layers or calculated as described in section 11.1.4.3.1, Aec is the
quantized amplitude ratio which is translated from E-DPCCH signalled by higher layers. The translation of
E-DPCCH into quantized amplitude ratios Aec = βec/βc is speciﬁed in Table 11.48 [17]. The E-TFCIec,boost
value is signalled by higher layers.
When E-TFCI > E-TFCIec,boost , in order to provide an enhanced phase reference, the value of βec
shall be derived as follows. Firstly, the unquantized E-DPCCH gain factor for the i:th E-TFC, βec,i,uq, is
Table 11.47
Mapping of HARQ Acknowledgement
Command
HARQ acknowledgement
indicator
ACK
+1
NACK (RLSs not containing the serving E-DCH cell)
0
NACK (RLS containing the serving E-DCH cell)
−1
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
561
Σ
I+jQ 
Se-dpch
ced,1
βed,1 
E-DPDCH1
iqed,1 
ced,k
βed,k 
E-DPDCHk
iqed,k 
ced,K
βed,K 
E-DPDCHK
iqed,K 
cec
βec
E-DPCCH
iqec 
.
.
.
.
.
.
.
.
Figure 11.94
Spreading for E-DPDCH/E-DPCCH
calculated according to:
βec,i,uq = βc ·
&
'
'
'
'
'
'
(
max
⎛
⎜⎜⎜⎝A2ec,
kmax,i

k=1

βed,i,k
βc
2
10
T 2T P
10
−1
⎞
⎟⎟⎟⎠
(11.114)
where T2TP is the trafﬁc to total pilot power offset, conﬁgured by higher layers as speciﬁed in Table
11.49 [17], βed,i,k is the E-DPDCH beta gain factor for the i:th E-TFC on the kth physical channel and
kmax,i is the number of physical channels used for the i:th E-TFC.
Table 11.48
Quantization for E-DPCCH for E-TFCI ≤E-TFCIec,boost
Signalled values for
 E-DPCCH
Quantized amplitude
ratios Aec = βec/βc
8
30/15
7
24/15
6
19/15
5
15/15
4
12/15
3
9/15
2
8/15
1
6/15
0
5/15
Reproduced by permission of © 2008 3GPPTM

562
Modulation and Coding Techniques in Wireless Communications
Table 11.49
T2TP
Signalled values
for  T2TP
Power offset
values  T2TP
[dB]
6
16
5
15
4
14
3
13
2
12
1
11
0
10
Reproduced by permission of © 2008 3GPPTM
If βec,i,uq is less than the smallest quantized value of Table 11.50 [17], then the E-DPCCH gain factor
βec is set such that βec/βc is the smallest quantized value of Table 11.50. Otherwise, βec is selected from
Table 11.50, such that 20∗log10(βec/βc) is the nearest quantized value to 20∗log10(βec,i,uq/βc).
During compressed frames, the E-DPCCH gain factor βec should be scaled. This is done in order to
avoid the E-DPCCH power being increased by the offset that is applied to the DPCCH during compressed
frames. The reason for applying this offset is that the uplink DPCCH slot formats that have TFCI bits
contain fewer pilot bits than the formats for normal (non-compressed) mode. This is due to the fact
that the number of TFCI bits shall always be the same during a frame to ensure robust transport format
detection. Therefore, in order to keep the same channel quality the energy of the pilot must be kept equal,
and the power of the DPCCH must therefore be increased by the factor Npilot,C

Npilot,N, where Npilot,C is
the number of pilot bits per slot on the DPCCH in compressed frames, and Npilot,N is the number of pilot
bits per slot in non-compressed frames.
Table 11.50
Quantization for βec/βc for E-TFCI > E-TFCIec,boost
Quantized amplitude
ratios βec/βc
E-DPDCH modulation schemes
which may be used in the same
subframe
239/15
4PAM
190/15
4PAM
151/15
4PAM
120/15
BPSK, 4PAM
95/15
BPSK, 4PAM
76/15
BPSK, 4PAM
60/15
BPSK, 4PAM
48/15
BPSK, 4PAM
38/15
BPSK, 4PAM
30/15
BPSK, 4PAM
24/15
BPSK, 4PAM
19/15
BPSK, 4PAM
15/15
BPSK, 4PAM
12/15
BPSK, 4PAM
9/15
BPSK
8/15
BPSK, 4PAM
6/15
BPSK, 4PAM
5/15
BPSK
Reproduced by permission of © 2008 3GPPTM

Standardization in 3GPP
563
During compressed frames where the E-DCH TTI is 2msec and if E-TFCIi is smaller than or equal to
E-TFCIec,boost., the E-DPCCH gain factor, βec is calculated according to:
βec = βc,C, j · Aec ·

Npilot,C
Npilot,N
(11.115)
and if E-TFCIi is greater than E-TFCIec,boost according to:
βec,i,uq = βc,C, j ·
&
'
'
'
'
'
'
(max
⎛
⎜⎜⎜⎝A2ec,
kmax,i

k=1

βed,i,k
βc
2
10
T2T P
10
−1
⎞
⎟⎟⎟⎠·

Npilot,C
Npilot,N
(11.116)
where βc,C, j is calculated as described in section 11.2.4.3.1.
If a 10 ms TTI is used in a compressed mode, the E-DPCCH gain factor βec must be additionally
scaled by
/
15
Nslots,C , where Nslots,C is the number of non DTX slots in the compressed frame. This is done
to take into account that there are fewer slots available for transmission during the compressed mode.
Then during compressed frames where the E-DCH TTI is 10msec and if E-TFCIi is smaller than or
equal to E-TFCIec,boost, the E-DPCCH gain factor, βec is calculated according to:
βec = βc,C, j · Aec ·

15 · Npilot,C
Nslots,C · Npilot,N
(11.117)
and if E-TFCIi is greater than E-TFCIec,boost according to:
βec,i,uq = βc,C, j ·
&
'
'
'
'
'
'
(
max
⎛
⎜⎜⎜⎝A2ec,
kmax,i

k=1

βed,i,k
βc
2
10
T2T P
10
−1
⎞
⎟⎟⎟⎠·

15 · Npilot,C
Nslots,C · Npilot,N
(11.118)
The E-DPDCH gain factor βed may take a different value for each E-TFC and H-ARQ offset. There can
be one or several E-DPDCH(s) conﬁgured. The gain factor for each E-DPDCH is deﬁned by the E-TFC
and H-ARQ power offset. The H-ARQ offsets are used for support of different H-ARQ proﬁles created
by higher layers for different data ﬂows. The E-DPDCH gain factor βed for each E-DPDCH is computed
based on reference gain factor(s) βed,ref of E-TFC(s) signalled as reference E-TFC(s). At least one E-TFC
of the set of E-TFCs conﬁgured by the network shall be signalled as a reference E-TFC. The gain factors
may vary on radio frame basis or sub-frame basis depending on the E-DCH TTI used. Furthermore, the
setting of gain factors is independent of the inner loop power control.
For each reference E-TFC, a reference gain factor βed,ref is calculated according to:
βed,ref = βc · Aed
(11.119)
The quantized amplitude ratio Aed = βed,ref/βc is translated from E-DPDCH signalled by higher layers.
The translation of E-DPDCH into quantized amplitude ratios Aed is speciﬁed in Table 11.51 [17] for the
case when E-TFCI ≤E-TFCIec,boost and Table 11.52 [17] for the case when E-TFCI > E-TFCIec,boost.
The gain factor βed of an E-TFC is compute based on the signalled settings for its corresponding
reference E-TFC. It is possible to use two methods of calculation the gain factor βed: E-DPDCH power
extrapolation formula or E-DPDCH power interpolation formula. In cases where E-DPDCH power
extrapolation formula is used only one reference E-TFC is chosen from the list of signalled as reference
E-TFC(s). And corresponding to the chosen reference E-TFC value of reference gain factor βed,ref is
used for calculation of βed. In cases where E-DPDCH power interpolation formula is used two reference

564
Modulation and Coding Techniques in Wireless Communications
Table 11.51
Quantization for E-DPDCH for E-TFCI ≤E-TFCIec,boost
Signalled values
for  E-DPDCH
Quantized amplitude
ratios Aed = βed/βc
E-DPDCH modulation schemes
which may be used in the same
subframe
29
168/15
BPSK
28
150/15
BPSK
27
134/15
BPSK
26
119/15
BPSK
25
106/15
BPSK
24
95/15
BPSK
23
84/15
BPSK
22
75/15
BPSK
21
67/15
BPSK
20
60/15
BPSK
19
53/15
BPSK, 4PAM
18
47/15
BPSK, 4PAM
17
42/15
BPSK, 4PAM
16
38/15
BPSK, 4PAM
15
34/15
BPSK, 4PAM
14
30/15
BPSK, 4PAM
13
27/15
BPSK, 4PAM
12
24/15
BPSK, 4PAM
11
21/15
BPSK, 4PAM
10
19/15
BPSK, 4PAM
9
17/15
BPSK
8
15/15
BPSK
7
13/15
BPSK
6
12/15
BPSK
5
11/15
BPSK
4
9/15
BPSK
3
8/15
BPSK
2
7/15
BPSK
1
6/15
BPSK
0
5/15
BPSK
Reproduced by permission of © 2008 3GPPTM
E-TFCs is chosen from the list and two corresponding values of reference gain factors βed,ref: primary
and secondary is needed for calculation of βed. Whether E-DPDCH power extrapolation formula or
E-DPDCH power interpolation formula is used to compute the gain factor βed is signalled by higher
layers.
Let E-TFCIref,m denote the E-TFCI of the m:th reference E-TFC, where m = 1,2, . . . ,M and M is the
number of signalled reference E-TFCs and E-TFCIref,1 < E-TFCIref,2 < . . . < E-TFCIref,M. Let E-TFCIi
denote the E-TFCI of the i:th E-TFC.
For the i:th E-TFC:
If E-DPDCH power extrapolation formula is conﬁgured
if E-TFCIi ≥E-TFCIref,M, the reference E-TFC is the M:th reference E-TFC.
if E-TFCIi < E-TFCIref,1, the reference E-TFC is the 1st reference E-TFC.
if E-TFCIref,1 ≤E-TFCIi < E-TFCIref,M,
the reference E-TFC is the m:th reference E-TFC such that
E-TFCIref,m ≤E-TFCIi < E-TFCIref,m + 1.

Standardization in 3GPP
565
Table 11.52
Quantization for E-DPDCH for E-TFCI > E-TFCIec,boost
Signalled values
for  E-DPDCH
Quantized amplitude
ratios Aed = βed/βc
E-DPDCH modulation schemes which may be used in
the same subframe
31
377/15
4PAM (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration)
30
336/15
4PAM (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration)
29
299/15
4PAM
28
267/15
BPSK (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration), 4PAM
27
237/15
BPSK (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration), 4PAM
26
212/15
BPSK, 4PAM
25
189/15
BPSK, 4PAM
24
168/15
BPSK, 4PAM
23
150/15
BPSK, 4PAM
22
134/15
BPSK, 4PAM
21
119/15
BPSK, 4PAM
20
106/15
BPSK, 4PAM
19
95/15
BPSK, 4PAM
18
84/15
BPSK, 4PAM
17
75/15
BPSK, 4PAM
16
67/15
BPSK, 4PAM
15
60/15
BPSK, 4PAM
14
53/15
BPSK, 4PAM
13
47/15
BPSK, 4PAM
12
42/15
BPSK, 4PAM
11
38/15
BPSK
10
34/15
BPSK
9
30/15
BPSK
8
27/15
BPSK
7
24/15
BPSK
6
21/15
BPSK
5
19/15
BPSK
4
17/15
BPSK
3
15/15
BPSK
2
13/15
BPSK
1
11/15
BPSK
0
8/15
BPSK
Else If E-DPDCH power interpolation formula is conﬁgured
if E-TFCIi ≥E-TFCIref,M,
the primary and secondary reference E-TFCs are the (M-1):th and M:th
reference E-TFCs respectively.
if E-TFCIi < E-TFCIref,1,
the primary and secondary reference E-TFCs are the 1st and 2nd reference
E-TFCs respectively.
if E-TFCIref,1 ≤E-TFCIi < E-TFCIref,M,
the primary and secondary reference E-TFCs are the m:th and (m + 1):th
reference E-TFCs respectively, such that
E-TFCIref,m ≤E-TFCIi < E-TFCIref,m + 1.
End If

566
Modulation and Coding Techniques in Wireless Communications
Table 11.53
HARQ offset harq
Signalled values
for harq
Power offset
values harq [dB]
6
6
5
5
4
4
3
3
2
2
1
1
0
0
Reproduced by permission of © 2008 3GPPTM
The reference gain factor cannot be directly used for scaling the E-DPDCHs, since except for the
number of data bits contained in reference E-TFC, the number of E-DPDCHs used for transmission and
the H-ARQ proﬁle should be also taken in account. Due to this, for the ith E-TFC, the temporary variable
βed,i,harq is computed.
When E-DPDCH power interpolation formula is conﬁgured, the temporary variable βed,i,harq is calcu-
lated in accordance with:
βed,i,harq = βed,ref

Le,ref
Le,i

Ke,i
Ke,ref
· 10
 harq
20

(11.120)
where Le,ref is the number of E-DPDCHs used for the reference E-TFC and Le,i is the number of E-
DPDCHs used for the ith E-TFC, Ke,ref is the transport block size of the reference E-TFC and Ke,i is the
transport block size of the ith E-TFC and the H-ARQ offset harq used for support of different H-ARQ
proﬁles are conﬁgured by higher layers as speciﬁed in Table 11.53 [17].
If SF2 is used, Le,ref and Le,i are the equivalent number of physical channels assuming SF4. That means,
in 2 x SF2 case Le,ref and Le,i, should be 4 instead of 2, and in 2 x SF2 + 2 x SF4 case Le,ref and Le,i should
be 6 instead of 4. Due to this, the calculated βed,i,harq must be scaled by
√
2 in case SF = 2.
When E-DPDCH power interpolation formula is conﬁgured, the temporary variable βed,i,harq is com-
puted as:
βed,i,harq =

Le,ref,1
Le,i
·
&
'
'
'
'
(
⎛
⎜⎝
⎛
⎜⎝
Le,ref,2
Le,ref,1 β2
ed,ref,2 −β2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1
⎞
⎟⎠· 10
⎛
⎝harq
20
⎞
⎠
(11.121)
where βed,ref,1 and βed,ref,2 denote the reference gain factors of the primary and secondary reference
E-TFCs respectively, Le,ref,1 and Le,ref,2 are the number of E-DPDCHs used for the primary and secondary
reference E-TFCs respectively, Le,i is the number of E-DPDCHs used for the ith E-TFC, Ke,ref,1 and
Ke,ref,2 are the transport block sizes of the primary and secondary reference E-TFCs respectively, Ke,i is
the transport block size of the ith E-TFC. If SF2 is used, Le,ref,1, Le,ref,2 and Le,i are the equivalent number
of physical channels assuming SF4. There is one exception in calculation of (11.121): if the following
inequality holds:
⎛
⎜⎝
Le,ref,2
Le,ref,1 β2
ed,ref,2 −β2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1 ≤0
(11.122)
the temporary variable βed,i,harq should be set to 0.

Standardization in 3GPP
567
Table 11.54
Quantization for βed,k/βc for E-TFCI ≤E-TFCIec,boost
Quantized amplitude
ratios βed,k/βc
E-DPDCH modulation schemes
which may be used in the same
subframe
168/15
BPSK
150/15
BPSK
134/15
BPSK
119/15
BPSK
106/15
BPSK
95/15
BPSK
84/15
BPSK
75/15
BPSK
67/15
BPSK
60/15
BPSK
53/15
BPSK, 4PAM
47/15
BPSK, 4PAM
42/15
BPSK, 4PAM
38/15
BPSK, 4PAM
34/15
BPSK, 4PAM
30/15
BPSK, 4PAM
27/15
BPSK, 4PAM
24/15
BPSK, 4PAM
21/15
BPSK, 4PAM
19/15
BPSK, 4PAM
17/15
BPSK
15/15
BPSK
13/15
BPSK
12/15
BPSK
11/15
BPSK
9/15
BPSK
8/15
BPSK
7/15
BPSK
6/15
BPSK
5/15
BPSK
For the ith E-TFC, the unquantized gain factor βed,k,i,uq for the kth E-DPDCH shall be set to
√
2 ×
βed,i,harq if the spreading factor for E-DPDCHk is 2 and to βed,i,harq otherwise. Then, value of βed,k
shall be computed by quantizing the unquantized gain factor βed,k,i,uq in accordance with Table 11.54
[17] for the case when E-TFCI ≤E-TFCIec,boost and Table 11.55 [17], for the case when E-TFCI >
E-TFCIec,boost.
The gain factor applied to E-DPDCH is adjusted as a result of compressed mode operation in the
following cases:
r E-DCH transmissions that overlap a compressed frame
r For 10 ms E-DCH TTI case, retransmissions that do not themselves overlap a compressed frame, but
for which the corresponding initial transmission overlapped a compressed frame.
The gain factors used during a compressed frame for a certain E-TFC are calculated from the nominal
power relation used in normal (non-compressed) frames for that E-TFC. When the frame is compressed,
the gain factor used for the i:th E-TFC is derived from βed,C,i as described below.

568
Modulation and Coding Techniques in Wireless Communications
Table 11.55
Quantization for βed,k/βc for E-TFCI > E-TFCIec,boost
Quantized amplitude
ratios βed,k/βc
E-DPDCH modulation schemes which may be used in
the same subframe
377/15
4PAM (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration)
336/15
4PAM (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration)
299/15
4PAM
267/15
BPSK (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration), 4PAM
237/15
BPSK (applicable only for SF2 code in a 2xSF2 + 2xSF4
conﬁguration), 4PAM
212/15
BPSK, 4PAM
189/15
BPSK, 4PAM
168/15
BPSK, 4PAM
150/15
BPSK, 4PAM
134/15
BPSK, 4PAM
119/15
BPSK, 4PAM
106/15
BPSK, 4PAM
95/15
BPSK, 4PAM
84/15
BPSK, 4PAM
75/15
BPSK, 4PAM
67/15
BPSK, 4PAM
60/15
BPSK, 4PAM
53/15
BPSK, 4PAM
47/15
BPSK, 4PAM
42/15
BPSK, 4PAM
38/15
BPSK
34/15
BPSK
30/15
BPSK
27/15
BPSK
24/15
BPSK
21/15
BPSK
19/15
BPSK
17/15
BPSK
15/15
BPSK
13/15
BPSK
11/15
BPSK
8/15
BPSK
When the E-DCH TTI is 2 ms, βed,C,i shall be calculated as follows:
If E-DPDCH power extrapolation formula is conﬁgured:
βed,C,i = βc,C, j · Aed ·

Le,ref
Le,i
·

Ke,i
Ke,ref
·10
 harq
20

·

Npilot,C
Npilot,N
(11.123)
where βc,C, j is calculated for the j:th TFC as described in section 11.2.4.3.1, where Npilot,C is the number
of pilot bits per slot on the DPCCH in compressed frames, and, Npilot,C is the number of pilot bits per slot
on the DPCCH in compressed frames, and Npilot,N is the number of pilot bits per slot in non-compressed
frames.

Standardization in 3GPP
569
If E-DPDCH power interpolation formula is conﬁgured:
βed,C,i = βc,C, j ·

Le,ref,1
Le,i
·
&
'
'
'
'
'
(
⎛
⎜⎜⎝
⎛
⎜⎜⎝
Le,ref,2
Le,ref,1
A2
ed,ref,2 −A2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1
⎞
⎟⎟⎠
·10
 harq
20

·

Npilot,C
Npilot,N
(11.124)
with the exception that βed,C,i is set to 0 if inequality:
⎛
⎜⎜⎝
Le,ref,2
Le,ref,1
A2
ed,ref,2 −A2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1 ≤0
(11.125)
holds.
When the E-DCH TTI is 10 ms and the current frame is compressed, βed,C,i shall be calculated as
follows:
If E-DPDCH power extrapolation formula is conﬁgured:
βed,C,i = βc,C, j · Aed ·

Le,ref
Le,I,i
·

Ke,i
Ke,ref
·10
 harq
20

·

15 · Npilot,C
Nslots,I · Npilot,N
(11.126)
If E-DPDCH power interpolation formula is conﬁgured:
βed,C,i = βc,C, j ·
0
Le,ref,1
Le,i
·
&
'
'
'
(
⎛
⎝
⎛
⎝
Le,ref,2
Le,ref,1
A2
ed,ref,2−A2
ed,ref,1
Ke,ref,2−Ke,ref,1
⎞
⎠
Ke,i −Ke,ref,1

+ β2
ed,ref,1
⎞
⎠
.10
 harq
20

·
0
15·Npilot,C
Nslots,I·Npilot,N
(11.127)
with the exception that βed,C,i is set to 0 if inequality:
⎛
⎜⎜⎝
Le,ref,2
Le,ref,1
A2
ed,ref,2 −A2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1 ≤0
(11.128)
holds.
When the E-DCH TTI is 10 ms and the current frame is not compressed, but is a retransmission for
which the corresponding ﬁrst transmission was compressed, the gain factor used for the kth E-DPDCH
for the ith E-TFC is derived from βed,R,i as follows:
If E-DPDCH power extrapolation formula is conﬁgured:
βed,R,i = βed,ref

Le,ref
Le,I,i

Ke,i
Ke,ref

15
Nslots,I
· 10
 harq
20

(11.129)

570
Modulation and Coding Techniques in Wireless Communications
Table 11.56
IQ branch mapping for E-DPDCH
Nmax-dpdch
HS-DSCH conﬁgured
E-DPDCHk
iqed,k
0
No/Yes
E-DPDCH1
1
E-DPDCH2
j
E-DPDCH3
1
E-DPDCH4
j
1
No
E-DPDCH1
j
E-DPDCH2
1
1
Yes
E-DPDCH1
1
E-DPDCH2
j
Reproduced by permission of © 2008 3GPPTM
If E-DPDCH power interpolation formula is conﬁgured:
βed,R,i = ·

Le,ref,1
Le,i
·
&
'
'
'
'
(
⎛
⎜⎝
⎛
⎜⎝
Le,ref,2
Le,ref,1 β2
ed,ref,2 −β2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1
⎞
⎟⎠

15
Nslots,I
· 10
 harq
20

(11.130)
with the exception that βed,R,i is set to 0 if:
⎛
⎜⎜⎝
Le,ref,2
Le,ref,1
β2
ed,ref,2 −β2
ed,ref,1
Ke,ref,2 −Ke,ref,1
⎞
⎟⎟⎠

Ke,i −Ke,ref,1

+ β2
ed,ref,1 ≤0
(11.131)
holds.
The quantization is applied in the same way as described above.
After weighting, the real-valued spread signals shall be mapped to the I branch or the Q branch
according to the iqec value for the E-DPCCH and to iqed,k for E-DPDCHk and summed together.
The E-DPCCH shall always be mapped to the I branch, that is, iqec = 1.
The IQ branch mapping for the E-DPDCHs depends on the actual number of conﬁgured DPDCHs,
denoted Nmax-dpdch (it is equal to the largest number of DPDCHs from all the TFCs in the TFC set) and
on whether an HS-DSCH is conﬁgured for the UE; the IQ branch mapping shall be as speciﬁed in Table
11.56 [17].
The modulation of the obtained complex-valued chip sequence is done as shown in Figure 11.38.
The downlink HSUPA channels are spread and modulated as it is described in section 11.1.4.3.2.
11.3.2.4
Operation During Compressed Mode
When E-DCH TTI length is 2 ms, the UE shall not transmit E-DCH data in a TTI which fully or
partly overlaps with an uplink transmission gap. For sub-frames within compressed frames that are
not overlapping with uplink transmission gaps, an adaptation of the gain factors for E-DPCCH and
E-DPDCH is done as described in section 11.3.2.3.5.
However, it is not possible to apply the same solution for the case of 10 ms E-DCH TTI, since it can
ruin the H-ARQ processing in the case of frequent compressed frames. When E-DCH TTI length is 10
ms, the UE is allowed to transmit E-DCH data in frames overlapping with uplink transmission gaps, but
not in all slots of the frame. Some slots in the frame in this case are idle. The gain factor of E-DPCCH
and E-DPDCH is increased according to the amount of non-idle slots as described in section 11.3.2.3.5.

Standardization in 3GPP
571
If an initial transmission overlaps with a compressed frame the starting slot of the consecutive E-
DPDCH idle slots within the E-DCH TTI is nﬁrst, and nlast is the ﬁnal idle slot within the 10 ms E-DCH
TTI. The number of transmitted slots ntx1 is given by ntx1 = 14 + nﬁrst-nlast.
If the initial transmission occurs in a non-compressed uplink frame, ntx1 = 15.
In case the retransmission occurs in a compressed frame the maximum number of slots available for
the retransmission is given by nmax = 14 + nﬁrst-nlast. Otherwise the maximum number of slots available
for the retransmission nmax is 15.
If the initial transmission was compressed and in the retransmission more than ntx1 slots are available
for transmission (nmax>ntx1), the last ndtx = nmax-ntx1 available slots of the E-DPDCH retransmission
frame should be E-DPDCH idle slots.
This is illustrated in examples in Figure 11.95. In the example depicted in Figure 11.95a the
compressed frame overlaps with the initial transmission, and slots from 2 to 6 are idle in the initial
transmission.
There is no compressed mode during retransmission but since there were ﬁve idle slots in the initial
transmission, the same amount of slots should be idle at the end of retransmission. In the example
depicted in Figure 11.95b the compressed mode occurs both during the initial transmission and the
retransmission. However, the number of slots transmitted in the initial transmission ntx1 = 8 is less than the
maximum number of slots available for the retransmission nmax = 11. Because of this ndtx = nmax-ntx1 = 3
are not transmitted at the end of the retransmission frame.
The E-DPCCH slots are not DTXed. The idle slots in the E-DPCCH frames correspond only com-
pressed mode idle time as shown in Figure 11.95.
The behaviour of downlink HSUPA channels: E-HICH, E-RGCH and E-AGCH during compressed
mode on the DPCH or F-DPCH is similar to the behaviour of E-DPCCH:
r A UE shall decode E-HICH, E-RGCH or E-AGCH transmissions to the UE using all the slots which
do not overlap a downlink transmission gap.
r The UE may discard E-HICH, E-RGCH or E-AGCH slots which overlap a downlink transmission
gap.
11.3.2.5
Operation During Soft Handover
Unlike HSDPA, HSUPA supports soft and softer handovers. The behaviour of E-DCH during the soft
handover is very similar to the behaviour of DCH described in section 11.2.7. However, during soft
handover HSUPA uses its own active set, which differs from the active set used by Release’99 channels.
The maximum number of Node Bs that can be included in HSUPA active set is four rather than six for
Release’99 channels. Actually, soft handover is very important for HSUPA since it helps to decrease the
interference originating from the other cell UEs.
One feature helping to decrease the interference and to increase the reliability of the transmitted uplink
data involves all Node Bs from the active set in the H-ARQ process. That means all Node Bs included
in active set rather than only serving Node B can send ACK/NACK signal to the UE. However, as can
be seen from Table 11.47 NACK signal from the non-serving Node B is represented by ‘0’. Therefore,
in reality non-serving Node B can feedback only ACK signal. It can help in situations when the UE is
near the cell edge, then it is quite probable that the transmission of a packet to serving cell fails while the
non-serving Node B can receive this packet correctly. Then this packet will be received by RNC, which
considers the transmission successful and sends the packet to network without waiting the delivery of
this packet from the serving cell, that is, the packets at RNC are reordered, as shown in Figure 11.96.
After receiving ACK from any Node B belonging to the active set UE will stop the retransmissions. This
helps somehow to decrease the interference from this particular UE in the neighbouring cell, since this
procedure decreases the packet transmission time. And taking into account that being at the serving cell

Figure 11.95
E-DPDCH during compressed mode. E-DCH TTI = 10 ms

Standardization in 3GPP
573
Figure 11.96
HSUPA H-ARQ in soft handover
edge the UE have to transmit at a higher power to compensate for being farther away from the serving
Node B, the interference causing by this UE is greater than average. So, it is enough if just any Node B
from the active set received the correct version of packet from the UE to deliver this packet to network.
On the other hand, the retransmission of the packet can be triggered only by the NACK signal from the
serving cell. That allows trafﬁc to be kept as low as possible. In case the UE is in softer handover, the
ACK/NACK signals from different sectors are soft combined, and NACK from non-serving sector is
mapped to ‘-1’ rather than to ‘0’ as belonging to the same radio link.
The second ﬁeld, where handover mechanism is very important for HSUPA is the resource allocation.
The uplink resource is power (or what is the same interference). As it was mentioned in section 11.3.2.2
the HSUPA scheduling is provided with the help of absolute and relative grants. The very important fact
for soft handover is that it is possible to send the relative grants to UE not only from serving cell but
from non-serving cells either. For example, if a UE served in low loaded cell asks for more resources
by sending the value of Happy Bit = ‘Not Happy’, it may be given a grant that allows it to transmit at
high data rates, maximizing the beneﬁt to that user as shown in Figure 11.97. However, if the UE then
moves toward a high loaded cell, its high power transmission can bring additional severe interference to
that cell. The serving Node B knows nothing about the interference in the nonserving cell and cannot
decrease the UE transmitting power. The solution of this problem is that nonserving Node B can send
to UE the relative grant ‘DOWN’ requesting the UE’s transmit power to be reduced as shown in Figure
11.97. The UE can increase data only in cases where the ‘UP’ relative grant was received from serving
Node B and no ‘DOWN’ relative grant was detected from any Node B belonging to the active set.
The nonserving Node B can send only two types of relative grants: ‘HOLD’ or ‘DOWN’. It is only the
serving cell that can allow UE to increase the transmit power by sending relative grant ‘UP’ or absolute

574
Modulation and Coding Techniques in Wireless Communications
Figure 11.97
HSUPA scheduling in soft handover
grant with high power value. This mechanism allows different Node Bs to manage the uplink air interface
without involving the RNC, which makes the scheduling more effective and much faster. When the UE is
in softer handover the relative grants from the E-DCH serving radio link set are the same (all of them can
send all three possible types of relative grants: ‘UP’, ‘HOLD’ and ‘DOWN’) and shall be soft combined
into one single relative grant information.
11.3.3
CPC
Continuous Packet Connectivity (CPC) was designed to improve the performance of delay-critical small
bit rate services like VoIP. Actually, it is not some new WCDMA technology like HSDPA or HSUPA.
CPC is the collection of features applied to HSDPA or HSUPA aiming at optimizing WCDMA for packet
switched connections. CPC eliminates the need for continuous transmission and reception when data is
not exchanged. The main components of CPC are
r Discontinuous uplink transmission (uplink gating);
r Discontinuous downlink reception;
r HS-SCCHless HSDPA.
The beneﬁts of implementing CPC are obvious. First of all, it eliminates the situation when a lot
of connected but inactive UEs in the cell consumes signiﬁcant part of resources and create severe
interference without transmission any data. The elimination of this scenario allows increasing the cell
capacity, that is, more users can be connected. Another beneﬁt is the decreasing of energy consumption.
For UE it is especially important since it allows battery life to be extended and therefore, to increase the
talk time. Also, implementing of CPC improves the connection set up time.
The uplink gating or DTX allows a lot of resources to be saved. Without uplink gating the DPCCH
control channel is always transmitted to support the power control, even if there is no data for transmission.
The comparison of transmitted power levels of uplink channels without and with uplink gating is
represented in Figure 11.98. The example of uplink DCH with TTI = 20 ms transmitting the circuit-
switched voice with data rate 12.2 Kbps is depicted in Figure 11.98a. In this case both DPCCH and
DPDCH are transmitted in every TTI to provide the required CS voice service quality. In Figure 11.98b
the example of E-DCH with 10 ms TTI bearing data for VoIP is depicted. In this case only E-DPCCH
is transmitted constantly. Since VoIP does not require high data rate there is no need to transmit the
E-DPDCH in every TTI. The same example for 2 ms TTI is depicted in Figure 11.98 c). In case of 2
ms E-DCH TTI it is possible to transmit the E-DPDCH even less frequently as in case of 10 ms E-DCH

Standardization in 3GPP
575
t
20 ms
DPDCH
DPCCH
a) DCH, CS voice
Power
Power
Power
Power
t
20 ms
E DPDCH
E DPCCH
b) E-DCH, TTI = 10 ms, VoIP
10 ms
30 ms
t
20 ms
E DPDCH
E DPCCH
c) E-DCH, TTI = 2 ms, VoIP
10 ms
30 ms
t
20 ms
E DPDCH
E DPCCH
d) E-DCH with uplink gating, 
TTI = 2 ms, VoIP
10 ms
30 ms
Uplink gating
Uplink gating
Figure 11.98
Comparison of power consumption of uplink channels

576
Modulation and Coding Techniques in Wireless Communications
TTI. However, E-DPCCH is still transmitted in every TTI. Uplink gating allows to get rid of necessity
for E-DPCCH to be always on, as shown in Figure 11.98 d). According to the CPC the control signals
are transmitted on the uplink control channels according to predeﬁned discontinuous patterns during the
inactive state of corresponding uplink data channels (that is, in the state when there is no packets for
transmission on E-DPDCH) in order to maintain signal synchronization and power control loop with
less control signalling. The DTX pattern in example in Figure 11.98 d) consists mostly of idle slots and
includes only few active slots before and after data transmission on E-DPDCH. Uplink gating is applied
not only to HSUPA channels, but also to normal DPCCH in addition to the uplink control channels of
HSDPA. However, the uplink gating for DPCCH has more restrictions than for E-DPCCH. If a UE will
start a transmission of E-DPCCH and E-DPDCH on an E-DCH TTI, the UE shall start the DPCCH
transmission 2, 4 or 15 slots prior to the E-DCH TTI and continue the DPCCH transmission during the
E-DCH TTI and 1 slot after the E-DCH TTI. The uplink gating can be activated/deactivated by higher
layers or by serving Node B with fast L1/L2 signalling.
Discontinuous downlink reception (downlink DRX) of CPC is conﬁgured by the RNC and allows the
UE to restrict the downlink reception times in order to reduce power consumption. When the downlink
DRX is enabled, the UE is not required to receive physical downlink channels except for several speciﬁc
situations. Actually, that means the UE is allowed to power off the radio receiver for a predeﬁned period
called DRX period. The DRX cycle comprises active period during which the receiver is on and DRX
period during which the receiver is off. During DRX, the UE must just check once per DRX cycle if new
data arrives. However, due to the power control, slots corresponding to uplink transmissions must always
be received. Downlink DRX is useless without the uplink gating because due to uplink power control
feedback continuous downlink transmission and reception is required if uplink transmission is continuous.
In addition, CPC includes an HS-SCCH less operation, which is a special mode of HSDPA opera-
tion for reducing HS-SCCH overhead for an H-ARQ process. This feature also allows the UE power
consumption to be reduced. Under this mode, the initial HS-DSCH transmission of the HARQ process
corresponding to the small size of transport blocks on pre-deﬁned HS-DSCH is performed without the
accompaniment of HS-SCCH signaling, and the H-ARQ retransmissions corresponding to the original
HS-DSCH transmission are accompanied with the HS-SCCH Type 2 signalling if the retransmissions are
needed. This kind of signalling allows the control channel overhead to be eliminated from small packets
sent over HSDPA. In this case the UE must use blind transport format detection for the initial transmission
based on predeﬁned transport block size and channel coding set. If blind transport format detection is
successful, the UE reports ACK; otherwise, the UE reports nothing and waits for retransmission initiated
by the Node-B. In order to combine the original transmission with the subsequent retransmissions, the
HS-SCCH transmits required control signals of physical channel coding set, transport block size, UE
identity, and the pointer notifying the UE of the TTI where the previous transmission has been performed
as it is described for HS-SCCH Type 2 in section 11.3.1.4.1. In addition, the UE can report ACK or
NACK for the retransmission, and the retransmission is restricted to two times. The ﬁrst and second
retransmissions can be asynchronous with respect to the ﬁrst transmission, and with respect to each other.
The accompanying HS-SCCH follows the same timing relationship with the HS-PDSCH transmission
as legacy transmissions do.
All these CPC features allow the UE power consumption to be decreased signiﬁcantly. Some examples
of power saving gain provided by CPC are represented in Table 11.57.
Table 11.57
Examples of power saving gain with CPC
Service
Power saving gain with CPC
Voice call
36 %
Browsing
32 %
Online Data Application
50 %

Standardization in 3GPP
577
Table 11.57A
Special subframe conﬁguration
UE Category
DL peak data
rate [Mbit/s]
Number of RX
antennas
UL peak data
rate [Mbit/s]
1
10
2
5
2
51
2
25
3
102
2
51
4
151
2
51
5
300
4
75
As can be seen from Table 11.57 the UE energy consumption can be decreased up to 50% due to CPC
implementation. Also, the cell capacity of the cell using CPC can be almost doubled in comparison to
the cell supporting only Release’99 channels.
These facts provide wide support to faster implementation of CPC and it is included in 3GPP Release
7 speciﬁcations.
11.4
4G LTE
Long Term Evolution (LTE) is the next step in the development of cellular services. LTE is positioned
as 4G standard. In future the radio access for LTE E-UTRA should replace the UTRA. The orginal
requirements for LTE were peak data rate of 100 Mbps in the downlink and 50 Mbps in the uplink
and with scalable bandwidth from 1.25 MHz to 20 MHz in order to suit the needs of different network
operators with different bandwidth allocations, and also allow operators to provide different services
based on spectrum. LTE supports both frequency division multiplexing (FDD) and frequency division
multiplexing (TDD) to allow operation in both paired and unpaired spectrum allocation. LTE is also
expected to improve spectral efﬁciency and decrease the RAN latency to 10 ms [32]. The key technologies
allowing LTE to provide high performance are OFDMA and MIMO.
The actual supported peak data rates are higher than the requirements and are speciﬁed for the given
UE categories deﬁned in [42]. Table 11.57A shows the number maximum UL and DL data rates that can
be achieved for the different categories.
11.4.1
LTE Downlink
11.4.1.1
Frame Structure
To ensure good radio access technology interoperability(handovers to other radio systems),the LTE frame
structure is based on the UMTS radio frame of 10 ms. Each radio frame consists of 10 subframes of
length 1 ms and in normal subframes there are two 0.5 ms slots in each subframe. The smallest time unit
that can be scheduled to one user is one subframe. The frame structure is shown in Figure 11.99.
Figure 11.99
LTE frame structure1
1The 3GPP speciﬁcations separate the FDD and TDD frame structures as frame structure Type 1 and Type 2, respectively

578
Modulation and Coding Techniques in Wireless Communications
Table 11.58
Uplink-downlink conﬁgurations
Subframe number
Uplink-downlink
conﬁguration
Downlink-to-Uplink
Switch-point periodicity
0
1
2
3
4
5
6
7
8
9
0
5 ms
D
S
U
U
U
D
S
U
U
U
1
5 ms
D
S
U
U
D
D
S
U
U
D
2
5 ms
D
S
U
D
D
D
S
U
D
D
3
10 ms
D
S
U
U
U
D
D
D
D
D
4
10 ms
D
S
U
U
D
D
D
D
D
D
5
10 ms
D
S
U
D
D
D
D
D
D
D
6
5 ms
D
S
U
U
U
D
S
U
U
D
D: Downlink subframe S: Special subframe U: Uplink subframe
11.4.1.1.1
TDD Frame Structure and the Special Subframe
Since downlink and uplink transmissions in FDD are separated in frequency, all subframes are either
uplink or downlink DL, but in TDD the radio frame needs to be split into downlink and uplink frames
and this is done on a subframe level. Since the data load in the uplink and downlink may be different,
the number of subframes used for uplink and downlink transmissions can be varied, shifting resources
between downlink and uplink. For the same reason, the switching point periodicity can be conﬁgured to
be either 5 ms or 10 ms. Table 11.58 shows the allowed conﬁgurations the TDD frame structure with the
associated downlink and uplink percentages.
In a TDD system, problems with interference will arise at a base station if the transmitted signals from
the neighbouring base stations interfere with the received signals from the UEs. Strict synchronization
of the DL and UL transmissions across cells is therefore needed, but even with tight synchronization
interference can still be a problem when a delayed signal from a distant base station arrives after the base
station has switched from downlink transmission to uplink reception. In addition, a small switching time
is needed in both UE and base station to do the actual switch from uplink to downlink and vice versa.
Therefore, a guard period with no transmission is needed and this is the purpose of the special subframe
which always occupies subframe #1 and additionally subframe #6 in the case of 5 ms downlink to uplink
switch point periodicity. Figure 11.100 shows the special subframe.
The special subframe consists of three parts, DwPTS, guard period and UpPTS. The DwPTS is the
downlink part of the subframe and can contain downlink transmissions of control and data. The UpPTS
can be used for transmission of uplink sounding and short RACH. In order to allow for deployments with
varying site distance, the length of the guard period can be conﬁgured by varying the length of DwPTS
and UpPTS. The possible lengths are shown in Table 11.59.
A switching time is also needed when switching from uplink to downlink, but this is provided by
advancing the UL transmission timing to the DL receiving time as shown in Figure 11.100A.
11.4.1.1.2
Slot Structure
LTE multiplexing is based on OFDM with a sub-carrier spacing is 15 kHz in LTE. In an OFDM system,
the OFDM symbol consists of two parts, the data part and the cyclic preﬁx. The cyclic preﬁx part is a
Figure 11.100
LTE special subframe structure

Standardization in 3GPP
579
Subframe #0 (DL)
Half radio frame (5 ms)
Subframe (1 ms)
Subframe #4 (DL)
Subframe #3 (UL)
DwPTS
Subframe #2 (UL)
UL timing advanced
so that there is a gap
for switching from UL
UpPTS
Guard Period
Figure 11.100A
Example of TDD switching with uplink downlink conﬁguration 1 and special subframe conﬁgu-
ration 7
copy of the last part of the data symbol and is put in front of the data symbol to create a periodic signal
over the full OFDM symbol. The purpose of the cyclic preﬁx is to avoid intersymbol interference caused
by multipath propagation. Therefore, the cyclic preﬁx length should be larger than the delay spread of the
channel, but the cyclic preﬁx length is also overhead and reduces the spectral efﬁciency of the system. In
order to support a large delay spread range while maintaining a reasonable overhead for the more typical
deployments, LTE supports two cyclic preﬁx lengths, normal cyclic preﬁx and extended cyclic preﬁx.
Since the slot length is ﬁxed at 0.5 ms, the number of OFDM symbols varies based on the cyclic preﬁx
length. The numerology is shown in Table 11.60.
One OFDM sub-carrier in one OFDM symbol is called a Physical Resource Element. In order to
facilitate simple resource allocation, a resource block is deﬁned as 12 resource elements in the frequency
domain across the slot as in Figure 11.101.
11.4.1.1.3
Subframe Structure
One subframe consists of two slots and is the smallest time unit that can be scheduled to one UE. The
subframe contains two parts, the control region and the data (PDSCH) region. The subframe starts with
the control region which can be dynamically varied from one to four OFDM symbols (four OFDM
symbols only for bandwidths with less than 10 RBs). The data region occupies the remaining OFDM
symbols of the subframe. The subframe structure is shown in Figure 11.102.
11.4.1.1.4
Transmission Bandwidths
LTE is designed to support varying bandwidths able to support different operator’s spectrum allocation.
For LTE Release 8 the transmission bandwidths listed in Table 11.61 are supported.
The physical layer speciﬁcations actually support any bandwidth from 6 to 110 resource blocks, but
only the listed transmission bandwidths are supported by LTE Release 8 UEs.
In order for the UE to ﬁnd a cell without knowing the transmission bandwidth, all procedures used
in the initial access are based on the narrowest bandwidth of six resource blocks. To facilitate this,
Table 11.59
Special subframe conﬁguration
Special subframe
conﬁguration
DwPTS
[symbols]
UpPTS
[symbols]
GP
[symbols]
0
3
10
1
9
4
2
10
1
3
3
11
2
4
12
1
5
3
2
9
6
9
3
7
10
2
8
11
1

580
Modulation and Coding Techniques in Wireless Communications
Table 11.60
Downlink numerology
Conﬁguration
Cyclic preﬁx
length [µs]
Number of OFDM symbols
per slot N DL
symb
Number of resource elements
in a resource block
Normal cyclic preﬁx
4.8
7
84
Extended cyclic preﬁx
16.7
6
72
Transm ss on bandw dth (N resource b ocks)
12 REs
Slot (0.5 ms)
Resource Block (RB)
Resource Element (RE)
Figure 11.101
LTE slot structure

Standardization in 3GPP
581
Figure 11.102
LTE subframe structure
the synchronization signals and the primary broadcast channel, which contains information about the
downlink transmission bandwidth, only span the six middle resource blocks regardless of the number of
resource blocks in the transmission bandwidth.
11.4.1.1.5
LTE Timing
The timing for the downlink transmissions and the associated ACK/NACK transmission is shown in
Figure 11.102A.
When the UE receives a transmission on the PDSCH, an ACK or NACK shall be transmitted for this
HARQ process (see on the PUCCH three subframes after the end of the PDSCH subframe and this is
the time available for the UE for processing the PDSCH and preparing to transmit the PUCCH. The
transmissions from different UE are time aligned at the base station and this timing is controlled by the
base station by sending timing advance commands to the UE that is just by the UE to adjust its timing.
As can be seen from the ﬁgure, the timing advance will reduce the available processing time for the UE.
The HARQ timing in DL LTE is adaptive, meaning that the BS may transmit a retransmission or a new
transmission for a HARQ process at any time after having received the NACK or ACK and the base
station processing time will be whatever this delay is.
11.4.1.2
Transport Channels
LTE has the following transport channels:
r Downlink Shared Channel (DL-SCH). Carries user data and system information
r Broadcast Channel (BCH). Delivers the Master Information Block (MIB) of the system information
Table 11.61
LTE transmission bandwidths
Channel bandwidth [MHz]
1.4
3
5
10
15
20
Transmission bandwidth in number of resource blocks
6
15
25
50
75
100

582
Modulation and Coding Techniques in Wireless Communications
Figure 11.102A
The timing for the downlink transmissions and the associated ACK/NACK transmission
r Paging Channel (PCH). Used for paging UEs
r Multicast Channel (MCH). Used for Multimedia Broadcast and Multicast Services (MBMS) trans-
mission.
In LTE, the channel encoding and rate matching are done on the transport channel and these functions
are common for DSCH, PCH and MCH. BCH has its own processing.
11.4.1.2.1
Transport Block
A transport block is delivered to the physical layer from higher layers. Transport block size can take a
given number of sizes and higher layers make sure that the data is padded to a supported transport block
size. A 24-bit CRC is added to the transport block to allow for error detection. At the receiving end, the
UE ﬁnds the transport block size from the signalled number of resource blocks and the modulation and
coding scheme using a speciﬁed look-up table.
11.4.1.2.2
Channel Coding
The transport channels are encoded using turbo code shown in Figure 11.27. The constituent codes are the
same as used in UTRA, but the interleaver has been changed. From an implementation perspective there
are clear beneﬁts of being able to generate the interleaver on the ﬂy and thus a polynomial interleaver
was chosen. The polynomial used in the interleaver is:
(i) =

f1 · i + f2 · i2
mod K
(11.132)
where K is the code block size and 188 possible code block sizes between 40 and 6144 bits have been
deﬁned with associated values for f 1 and f 2.
In case the transport block size is larger than the maximum code block size, code block segmentation
is performed where the transport block is divided into equal sized code blocks that are individually
encoded. For each code block a 24-bit CRC is added.
11.4.1.2.2.1
HARQ and Rate Matching
Selective repeat Hybrid ARQ (HARQ) is applied to the DL-
SCH transport channel. This means that retransmissions are performed in the physical layer, signiﬁcantly
reducing the latency incurred by incorrectly received transmissions. HARQ allows for combining the

Standardization in 3GPP
583
Interleaver
Systematic bits (s)
Circular buffer
Interleaver
Parity 1 bits (p1)
Interleaver
Parity 2 bits (p2)
Interlace
Figure 11.103
LTE circular buffer rate matching
received samples from different transmissions before decoding, improving the link performance over
pure ARQ. In the downlink, the HARQ is adaptive both when it comes to timing of the retransmissions
and resources and coding rates used, with synchronized transmission time for the ACK or NACK in the
UL as shown in section 11.4.1.1.5. The maximum number of HARQ processes is eight.
Adaptive link adaptation in LTE means that the coding rate can be adjusted to the UE’s channel
conditions. For a given data packet size, the eNB scheduler ﬁnds the appropriate coding rate and assigns
the necessary number of resource block needed. The purpose of the rate matching is to take the output
of the ﬁxed rate channel encoder and output the number of bits that is available for transmission on the
PDSCH.
In LTE a circular buffer rate matching scheme is deployed. The systematic bits are interleaved and
written to the rate matching buffer ﬁrst. The parity bits are ﬁrst interleaved and then interlaced and written
to the rate matching buffer. The rate matching algorithm then reads out as many bits from the buffer as
needed for the transmission. The buffer is circular in the sense that after reaching the end of the buffer,
the reading continues from the start of the buffer again.
The circular buffer allows for simple implementation of Incremental Redundancy (IR) HARQ. In IR,
the transmitted bits can be different for the retransmissions than for the initial transmission ensuring
that after a certain number of transmissions all the channel bits will have been transmitted, effectively
reducing the code rate for each transmission. Different redundancy versions are generated by varying
the starting address in the circular buffer. The circular buffer rate matching scheme is depicted in Figure
11.103.
11.4.1.3
Physical Channels
A summary of the physical channels is shown in Table 11.62.
11.4.1.3.1
Physical Broadcast Channel (PBCH)
The PBCH carries the broadcast transport channel (BCH) and is used by the UE in the initial access
to get the master information block (MIB). The MIB contains essential information for initial access to
the system: the DL transmission bandwidth, the used conﬁguration for the PHICH, and the eight most
signiﬁcant bits of the system frame number (SFN). In addition, the PBCH implicitly gives the full SFN
and the number the antenna ports used in the transmission of common control information. The two
least signiﬁcant bits of the SFN can be detected from the PBCH timing since the PBCH TTI is 40 ms.
The scrambling of the BCH CRC depends on the number of antenna ports conﬁgured in the base station

Table 11.62
LTE Physical channels
Physical channel
Abbreviation
Content
Transport
channel
Coding
Modulation
Mapping to resource elements
Physical Downlink
Shared Channel
PDSCH
User data and system
information
DSCH, PCH
Turbo coding
QPSK,
16QAM,
64QAM
Frequency ﬁrst mapping starting
from the second, third or fourth
OFDM symbol of the subframe
Physical Broadcast
Channel
PBCH
Broadcast
information
BCH
Convolutional
coding
QPSK
6 center resource blocks in the ﬁrst
four OFDM symbols of the second
slot in sub-frame #0.
Physical Control
Format Indicator
Channel
PCFICH
Gives the length of
PDCCH in
OFDMS symbols
NA
Block code
(1/16)
QPSK
Spread in frequency in the ﬁrst
OFDM symbol of the subframe
Physical Downlink
Control Channel
PDCCH
Allocates DL and UL
NA
Convolutional
coding
QPSK
Interleaved across the 1-3 ﬁrst
OFDM symbols of the subframe
Physical Hybrid
ARQ Indicator
Channel
PHICH
ACK/NACK from
UL transmissions
NA
Repetition
code (1/3)
BPSK
First or three ﬁrst OFDM symbols of
the subframe
Physical Multicast
Channel
PMCH
For MBMS
transmission
MCH
Turbo coding
QPSK,
16QAM,
64QAM
Frequency ﬁrst mapping starting
from the third OFDM symbol of
the subframe

Standardization in 3GPP
585
and by doing the CRC check for each of the three possible conﬁgurations, the number of ports can be
detected. The PBCH is mapped to the centre 72 resource elements of the ﬁrst four OFDMS symbols of the
second slot in subframe #0. Once the PBCH has been decoded, the UE receives the system information
from the broadcast channel (BCCH) giving the UE all the needed information to attach to the cell.
11.4.1.3.2
Physical Control Format Indicator Channel (PCFICH)
The number of OFDM symbols used for the control channels (PDCCH) can be varied dynamically to
allow for shifting resources between control and data based on the needed control channel capacity. The
PCFICH gives the information about the number of OFDM symbols used.
11.4.1.3.3
Physical Downlink Control Channel (PDCCH)
The PDCCH is used for allocating resources in the downlink and the uplink and for providing power
control commands to a group of UEs.
11.4.1.3.3.1
PDCCH Content
The content of the PDCCH varies depending on whether it is a downlink
assignment, uplink grant or power control commands. In addition, different PDSCH transmission modes
require different information to be conveyed, resulting in different content. These different formats are
called downlink control information (DCI) formats. The following information is transmitted in most
DCI formats:
r Resource block assignment – indicates the resource allocation for PDSCH or PUSCH
r HARQ process number (DL only)
r Modulation and coding scheme – joint indication of modulation and transport block size
r Redundancy version (implicit in UL) – changes the sent channel bits for incremental redundancy
r New data indicator – indicates if this is the initial transmission or are retransmission
r Transmit power control command for the scheduled PUSCH(UL) or PUCCH (DL)
r TPC command for PUCCH
r Downlink Assignment Index (TDD only)
Table 11.63 shows the more speciﬁc information provided by the different formats.
11.4.1.3.3.2
PDCCH Encoding
The PDCCH coding rate variesd based on the number of control
channel elements (CCE) it is mapped to. A control channel element is 72 bits and one PDCCH can be
rate matched to 1, 2, 4 or 8 control channel elements resulting in a wide coding rate range.
The coding used for the PDCCH is a convolutional code with constraint length 7 and coding rate 1/3.
The encoding is as shown in Figure 11.104.
Tail-biting is used to avoid the additional overhead for conventional convolution codes caused by the
additional terminating bits needed to terminate the code to a known ﬁnal state. The initial state is set to
be the same as the ﬁnal state and this is done by setting the shift register initial value to the last 6 input
bits. Since this state is not known by the decoder, additional processing is needed to ﬁnd the initial state.
One example of ﬁnding the initial state is to run the decoding process twice, where the second run is
started from the ﬁnal state of the ﬁrst run. This increases the decoding complexity, but since tail biting
also gives the same performance for a code with shorter constraint length, the overall complexity is not
increased compared to conventional convolutional codes.
The rate matching of PDCCH uses also a circular buffer in a similar manner as for DL-SCH. Multiple
PDCCH are interleaved and mapped to one, two or three OFDM symbols depending on the value
indicated by the PCFICH.

586
Modulation and Coding Techniques in Wireless Communications
Table 11.63
DCI formats
DCI format
Number of
transport blocks
Resource
allocation type
Information provided
0
UL
1
2
Frequency hopping indication
Indication of the demodulation reference signal
sequence to be used
CQI request – used by the network to request an
aperiodic CQI report
1
DL
1
0 or 1
1A
DL
1
2
Can allocate distributed PDSCH
To reduce the UE blind decoding, format 1A is
always the same size format 0 and a bit
indicates which of the two that is being sent.
Format 1A is always decoded by the UE
1B
DL
1
2
Same as 1A with additional precoding
information for closed loop TxD
1C
DL
1
22
Compact assignment with reduced MCS set
1D
DL
1
2
Same as 1B with an additional power offset
information for use in MU-MIMO
2
DL
2
0 or 1
Additional information for second codeword
Precoding information for closed loop spatial
multiplexing
2A
DL
2
0 or 1
Same as format 2, but with reduced precoding
information for large delay CDD
2B
DL
2
0 or 1
Same as format 2A, but with additional
information about the antenna port used for
UE-speciﬁc reference signals.
3
−
−
−
Transmission of TPC commands for PUCCH
and PUSCH with 2-bit power adjustments
Same size as format 0/1A.
3A
−
−
−
Transmission of TPC commands for PUCCH
and PUSCH with single bit power
adjustments
Same size as format 0/1A.
11.4.1.3.3.3
PDCCH Decoding
Since multiple PDCCHs are interleaved together and the UE has
limited a priori knowledge of which PDDCH contains information, the UE needs in every subframe to
blindly decode multiple PDCCHs. Based on the transmission mode (Table 11.65) the UE is conﬁgured
to receive certain DCI formats for the given PDCCH code rates. In addition, the search space has been
limited by deﬁning two search spaces, the common search space, searched by all UEs, and a UE speciﬁc
search space that UEs ﬁnds from its Cell Radio Network Temporary Identity(C-RNTI). The C-RNTI
is the unique identiﬁer of a UE in a cell. Based on the limitations given by these two search spaces, a
maximum 44 decoding attempts must be made before covering the full search space. The search spaces
of different UEs will overlap, so basing the detection of a transmission for a certain UEs purely on a
successful decoding is not sufﬁcient. To prevent any ambiguity the PDCCH CRC has been scrambled
with the C-RNTI and if the incorrect C-RNTI is used in the descrambling, the CRC will fail. If the CRC
checks correct, the UE knows that the transmission is for it and can proceed with the appropriate actions.
2Only distributed transmissions

Standardization in 3GPP
587
D
D
D
D
D
D
d3 n
d3 n+1
d3n+2
Figure 11.104
PDCCH convolutional encoder
In addition to the C-RNTI, additional RNTIs have been deﬁned to allow identiﬁcation of special cases.
The possible RNTIs are given in the Table 11.64.
11.4.1.3.3.4
PDSCH Resource Allocation
In order to provide ﬂexible resource allocation for PDSCH
while keeping the associated signalling overhead on PDCCH at a reasonable level, three types of
allocation schemes are supported:
0. The resources assignment is for groups of consecutive resource block where the assignment informa-
tion contains a bitmap where each bit indicates that a group has been assigned to the UE. The number
of RBs in a group is from 1-4 and depends on the transmission bandwidth
1. The resource assignment is for a subset of the available resource blocks where the assignment
information contains the allocated subset, a possible frequency domain shift of the subset and a
bitmap allocating the resource blocks within the subset. The subsets are deﬁned by the speciﬁcation.
Note that this allocation scheme cannot allocate the full bandwidth to one UE
2. The resource assignment is for consecutive resource blocks and the assignment information contains
the ﬁrst resource block assigned and the number of resource blocks assigned
The difference between the resource allocation schemes is shown in Figure 11.105.
In order to increase the frequency diversity for transmissions requiring a small number of resource
blocks while not requiring the high signalling overhead incurred by resource allocations types 0 and
1, a special resource allocation mode for type 2 is provided where the allocated resource blocks are
distributed in the frequency domain using a speciﬁed function and the resource allocation is different in
the ﬁrst and second slot of the subframe creating slot-based frequency hopping within a subframe.
Table 11.64
RNTI types
RNTI
Use
Search space
DCI Formats
C-RNTI
UE speciﬁc assignments
Common and UE speciﬁc
0, 1, 1A, 1B, 1D, 2, 2A
SPS C-RNTI
Initiation and stopping of SPS
Common and UE speciﬁc
0, 1, 1A, 2, 2A
P-RNTI
Indicates PDSCH allocation
for paging (PCH)
Common
1A, 1C
RA-RNTI
Random access response
Common
1A, 1C
SI-RNTI
Indicates PDSCH allocation
for BCCH
Common
1A, 1C
TPC-PUCCH-RNTI
PUCCH power control
commands
Common
3, 3A
TPC-PUSCH-RNTI
PUSCH power control
commands
Common
3, 3A

588
Modulation and Coding Techniques in Wireless Communications
Table 11.65
Transmission modes
Transmission
mode
Transmission scheme for
PDSCH
Fallback mode
DCI formats UE feedback
1
Single-antenna port
transmission with common
reference signals
None
1, 1A
CQI
2
Transmit diversity
None
1, 1A
CQI
3
Large delay CDD
Transmit diversity
1A, 2A
CQI + RI
4
Closed-loop spatial
multiplexing
Transmit diversity
1A, 2
CQI + PMI + RI
5
Multi-user MIMO
Transmit diversity
1A
CQI + PMI
6
Closed-loop spatial
multiplexing using a single
transmission layer
Transmit diversity
1A
CQI + PMI
7
Single-antenna port
transmission with
UE-speciﬁc reference
signals
Single-antenna port
transmission with common
reference signals if the
number of antenna ports is
one and transmit diversity
otherwise
1, 1A
CQI
8
Dual layer transmission
Single-antenna port
transmission with common
reference signals if the
number of antenna ports is
one and transmit diversity
otherwise
1, 1A
CQI + PMI + RI
or CQI + RI
11.4.1.3.4
MIMO Operation
Introduction of high capacity spatial multiplexing is one of the main features of LTE. LTE supports
operation with one, two or four antenna ports. These ports are virtual, meaning that they do not
necessarily correspond to the physical number of antennas. An example of this is beamforming, where
the number of physical antennas would be eight, but the UE would only see one, two or four antenna
ports and any beamforming is then a matter of base station implementation. A cell is conﬁgured with
a given number of antenna ports and the UEs processing differs. All UEs support reception of LTE
transmissions from 1, 2, or 4 antenna ports at the base, but the maximum number of spatial layers a UE
is a function of the UE category and depends on the number of antennas the UE has.
LTE MIMO is based on linear precoding, that is, the mapping from spatial transmission layer to the
antenna port, where precoding matrixes have been speciﬁed to support the multiple MIMO transmission
modes included and these precoding matrixes are assumed in the feedback design for the closed loop mode
and in the transmission. In addition, from Release-9 onwards it is also possible to do spatial multiplexing
using UE-speciﬁc reference signals and then any precoding is possible, but the UE feedback is still based
on the standardized precoding matrixes.
The UE is conﬁgured to a certain transmission mode as shown in Table 11.65. For each transmission
mode there is a fallback mode that provides robustness to the communication link and associated feedback
provided to the network by the UE.
Single-antenna port transmission As the name indicates, the PDSCH is in this case transmitted from
a single-antenna port. This can either be using cell-speciﬁc reference signals or UE-speciﬁc reference
signals. In single-antenna port transmission, any precoding is the same for the PDSCH as for the reference
signals and hence transparent to the UE.

Figure 11.105
PDSCH resource allocation schemes

590
Modulation and Coding Techniques in Wireless Communications
Transmit diversity For transmit diversity the precoding is based on the frequency shift transmit
diversity(FSTD)
Large delay CDD In large delay cyclic delay diversity (CDD), a time difference is applied to the
transmissions from the different antenna ports. The precoding used is the same as for closed loop
spatial multiplexing, but the mode is open loop and the base station cycles through the codebook
entries.
Closed-loop spatial multiplexing In closed-loop spatial multiplexing, the UE feeds back the recom-
mended precoding vector from the speciﬁed codebook to the network and normal network operation is
then to use this recommended vector in the transmission. The network can limit the operation in this
transmission scheme to a single layer (Transmission mode 6).
MU-MIMO This mode is used to spatially multiplex two UEs to the same resource (multi-user MIMO)
where each user gets a one layer transmission. The precoding is as for closed-loop spatial multiplexing.
Dual layer transmission Dual layer transmission was introduced in LTE release 9 and provides
spatial multiplexing using UE speciﬁc reference signals. As for single layer transmission, any precoding
is transparent since the reference signals and the transmitted data layers have the same precoding.
As shown in Table 11.65, the different modes have different levels of feedback provided by the UE to
the network. The feedback provided is:
r Channel Quality Indication (CQI) reporting is similar in LTE as in HSDPA and the UE provides an
indication of the channel quality it sees by signalling the combination of transport block size and
modulation it estimates it can receive with a block error rate not exceeding 10%. The CQI can be
reported for the whole received bandwidth or individual CQIs per subband.
r Rank Indication (RI) indicates the number of transmission layers the UE estimates it can receive.
r Precoding Matrix Indicator (PMI) indicates to the network what the UE estimates as the best precoding
vector to be used for the transmission. This can be for the whole received bandwidth or individual for
subbands.
11.4.1.3.5
Physical Channel Multiplexing
Figure 11.106 shows the multiplexing and mapping of the physical channels to the frame structure for
FDD. For TDD, the physical channel mapping is the same, but the synchronization signal mapping is
different as the primary synchronization signal is mapped to the third OFDM symbol of DwPTS and the
secondary synchronization signal is mapped to the last OFDM of the ﬁrst slot of subframe #0.
11.4.1.4
Physical Signals
11.4.1.4.1
Synchronization Signals
The primary synchronization signal (PSS) is used by the UE for initial time and frequency synchroniza-
tion. There are three possible sequences used for PSS. Once the UE has identiﬁed a possible candidate
frequency and timing from the PSS, it correlates the incoming signal with the 170 possible secondary
synchronization signals sequences. There are 510 combinations of primary and secondary synchroniza-
tion signals and this gives the physical layer ID for the cell. The cell ID gives the reference signals used
in the cell and the UE can then proceed with decoding the PBCH followed by the reception of the system
information from the broadcast channel giving the UE all the needed information to attach to the cell.
11.4.1.4.2
Reference Signals
In LTE, different reference signal types are provided to aim channel estimation, timing estimation and
measurements:
Cell-speciﬁc reference signals: Cell-speciﬁc reference signals are used for demodulation of common
channels and for PDSCH if UE-speciﬁc reference signals are not conﬁgured for the UE. It is possible to

Standardization in 3GPP
591
Figure 11.106
Multiplexing and mapping of the physical channels for FDD
conﬁgure a cell with one, two or four antenna ports. The cell-speciﬁc reference signals are also used for
timing estimation and neighbour cell measurements. In order to allow high quality channel estimates, a
resource element used for transmission of cell-speciﬁc reference signal for a given antenna port is not
used for transmission (“nulled”) in the other conﬁgured antenna ports.
UE-speciﬁc reference signals: When cell-speciﬁc reference signals are used, the codebook used in
the precoding must be known for the UE do the demodulation. In order to allow non-codebook based
precoding, for example, higher order beamforming, UE speciﬁc reference signals are provided and the
UE assumes in the demodulation that the data has been subject to the same precoding as these reference
signals. Since common channels still have to be transmitted to the whole cell, UE speciﬁc reference
signals cannot replace cell speciﬁc reference signals, but must be provided in addition.
MBSFN reference signals: In MBMS transmissions, multiple cells broadcast the same synchronized
signal and the received signal at the UE antenna is then the sum of the transmitted signals from all the
base stations participating in the MBSFN transmission. To the UE, such a transmission appears as if
if it is coming from a single base station in a similar way as any multipath transmission. In order to
simplify the demodulation, the base stations must also transmit the same reference signals. Hence, cell
speciﬁc reference signals cannot be used and special reference signal port is therefore introduced, where
the reference signal density has been optimized for the long delay spread typically seen in MBSFN
transmissions.
Positioning reference signals: LTE Release 9 supports a UE-based positioning method based on
Observed Time Difference of Arrival(OTDOA) Special reference signals can be provided by the network
to enhance the time difference measurement.
An example of LTE reference signals is shown in Figure 11.107. Here, the base station is conﬁgured
with two cell-speciﬁc antenna ports and in addition, the UE is using Release 9 UE speciﬁc reference
signals for demodulation of PDSCH.

592
Modulation and Coding Techniques in Wireless Communications
Figure 11.107
LTE reference signals
11.4.2
LTE Uplink
This section deals with single-carrier frequency division multiple access (SC-FDMA) which is the radio
technology selected for LTE Uplink. Special emphasis is put on the reasons and consequences of the
selection of SC-FDMA for LTE UL.
It is clear that wide area (WA) coverage was an optimization point for LTE radio. It is noted that in
WA environment, Tx power of user equipment is much smaller than that of evolved Node B (eNB). This
indicates that WA coverage is limited by UL direction. The importance of power consumption is another
factor which differentiates the UL and DL. Thus, selection of the transmit waveform is such that power
efﬁciency is being maximized as the key performance issue in UL. OFDMA is known to be spectrum
efﬁcient but it suffers from high peak to average power ratio (PAPR) which decreases power efﬁciency
of the transmitter.
As an outcome of the standardization different radio technologies have been selected for LTE: OFDMA
for DL and SC-FDMA for UL. Selection of the multiple access scheme, including selection of the
waveform of transmitted signal, impacts in other parts of the physical layer, such as reference signal and
control/data channel multiplexing design. Regardless of the different multiple access scheme, most of
the building blocks used in LTE system are common for UL and DL. These methods include the frame
structure, channel coding, inter-block-interference free frequency domain equalization and so on.
11.4.2.1
SC-FDMA Basics
The basic SC-FDMA transmission scheme is based on low peak to average power ratio single-
carrier transmission with cyclic preﬁx to achieve uplink inter-user orthogonality and to enable efﬁcient
frequency-domain equalization at the receiver side [33]. The block diagram of UL SC-FDMA transceiver
chain is shown in Figure 11.108.
The UE can exploit frequency domain generation of SC-FDMA signal, as presented in Figure 11.109.
Frequency domain realization of SC-FDMA is called DFT-S-OFDMA. The SC-FDMA with frequency
domain generation has high degree of commonality with DL OFDMA. The frequency domain generation
enabling zero roll-off results in higher spectrum efﬁciency compared to earlier SC- based radio standards
like WCDMA. The modulation methods speciﬁed for Physical Uplink Data Channel (PUSCH) are
QPSK, 16-QAM and 64-QAM.
Different UEs are separated by means of Frequency Division Multiplexing in SC-FDMA. Each
scheduled UE occupies a variable bandwidth resource, which is contiguous in the frequency domain.

Standardization in 3GPP
593
frequency
Transmitter
Receiver
total radio BW (eg. 20 MHz)
Modulator
Cyclic
Extension
Remove
Cyclic 
Extension
FFT
MMSE
Equaliser
IFFT
Demodulator
Bits
Bits
frequency
Transmitter
Receiver
total radio BW (eg. 20 MHz)
Modulator
Cyclic
Extension
Remove
Cyclic 
Extension
FFT
MMSE
Equaliser
IFFT
Demodulator
Bits
Bits
Figure 11.108
Block diagram of LTE UL transceiver chain
The frequency and time domain resources are organized into physical resource blocks and subframes.
A variable number of adjacent resource blocks can be allocated to an UE. One physical resource block
consists of 12 subcarries corresponding to 180 kHz frequency band and 1 ms subframe, which is further
divided into two slots each 0.5 ms. The slot structure is shown in Figure 11.110. Further, the slot is divided
into either six or seven SC-FDMA blocks, depending on the length of cyclic preﬁx (normal/extended). In
data channel (physical uplink shared channel, PUSCH), the middlemost block is reserved to demodulation
reference signals (DMRS).
The frequency selectivity of the radio channel can be exploited by channel dependent frequency
domain scheduling or frequency hopping between slots. The frequency hopping between slots and/or
subframes is typically used for control channels, whereas frequency dependent scheduling is applied for
data channel. The channel dependent scheduling in supported by sounding reference signal transmitted
in the last SC-FDMA block of the subframe.
11.4.2.2
Comparison Between OFDMA and SC-FDMA
The multiple access selection was based on the careful benchmarking between OFDMA and SC-FDMA.
OFDMA represents a spectrum efﬁcient system and allows usage of simple 1-tap Equalizer. The biggest
drawback of OFDMA is that it suffers from high peak-to-average power ratio (PAPR). The higher the
PAPR, the higher output power back-off (OBO) is needed to avoid clipping of transmitted signal which
in turn result in higher Adjacent Carrier Leakage Ratio (ACLR) and increased Error Vector Magnitude
(EVM) [34]. Thus, high OBO decreases power efﬁciency of the transmitter, which is very critical for
mobile terminals with low form factor from both a battery drain and heat dissipation point of view.
The Cubic Metric (CM) for both OFDMA and SC-FDMA are shown in Figure 11.111. The CM
represents the required OBO [40]. The output power difference between OFDMA and SC-FDMA is then
IFFT
CP
Resource 
block 
mapping
Data  
symbols
DFT
Figure 11.109
Frequency domain generation of SC-FDMA signal

594
Modulation and Coding Techniques in Wireless Communications
      0.5 ms
DATA
CP
DATA
CP
DATA
CP
DMRS
CP
DATA
CP
DATA
CP
DATA/SRS
CP
Figure 11.110
LTE uplink slot structure for short cyclic preﬁx
2.4 dB with QPSK modulation and 1.6 dB with 16-QAM, respectively. The OBO difference translates
into corresponding difference in UL link budget.
The link performance for SC-FDMA and OFDMA is shown in Figure 11.112. The simulations are
done in Typical Urban (TU) radio channel in 5 MHz bandwidth. The perfect channel state information
has been assumed. The results show that SC-FDMA performs equally or slightly worse than OFDMA
with QPSK using baseline Frequency Domain Equalizer (FDE). The difference in link performance
varies between 0 dB and 0.4 dB and is dependent on the coding rate. In the case of 16-QAM OFDMA
performs about 0.7 dB better than SC-FDMA using simple FDE. As depicted in Figure 11.112 turbo
equalizer improves the performance of SC-FDMA over FDE by about 0.2 to 1 dB, resulting that the
performance of SC-FDMA with turbo equalizer becomes better than that of OFDMA.
Based on given aspects, it can be said that SC-FDMA is the most preferable technology for wide area
uplink, as it has lower OBO than OFDMA. Furthermore, SC-FDMA allows usage of iterative reception
technique to achieve better radio link performance, even better than that of OFDMA. The price to pay
is higher receiver complexity, but this is considered as a feasible and economical choice in the uplink
direction.
11.4.2.3
Uplink Reference Signals
Two types of reference signals are deﬁned in LTE uplink: demodulation reference signals (DM RS)
and sounding reference signals (SRS). Demodulation reference signal are used for channel estimation
and, thus, they enable coherent detection and demodulation of data. Periodic sounding reference signal
transmissions provide base station channel state information (CSI) on uplink channel, also when terminal
does not have data to transmit. With SRS period longer than channel coherence time, the obtained CSI can
0
0.5
1
1.5
2
2.5
3
3.5
M
A
Q
6
1
K
S
P
Q
Modulation Method
CM [dB]
SC-FDMA
OFDMA
Figure 11.111
CM comparison between SC-FDMA and OFDMA

Standardization in 3GPP
595
0.01
0.1
1
-6
-4
-2
0
2
4
6
8
10
12
14
16
SNR [dB]
BLER
SC FDMA TE+FDE
SC FDMA MMSE FDE
OFDM MMSE FDE
QPSK
  1/3
QPSK
  1/2
QPSK
   3/4
16QAM
  1/2
16QAM
  2/3
16QAM
  3/4
Figure 11.112
Block error rate as function of SNR
be used for adjusting uplink timing or transmission power control in absence of other uplink transmission.
With shorter SRS period, the CSI can be used for packet scheduling in frequency domain.
To maintain uplink single carrier property, time division multiplexing is used between data and
reference signals. On PUSCH, each slot contains one DM RS SC-FDMA symbol at the centre of the
slot, as shown in Figure 11.113. Thus, acceptable channel estimation performance is achieved even at
high terminal velocities while keeping DM RS overhead reasonable. DM RS overhead is 14.3% and
16.6% for normal and extended cyclic preﬁx lengths, respectively. On PUCCH, correct detection of
carried control data is equally important for all terminals, also for those ones on cell edge. Control data
transmitted on PUCCH is also time-critical so there are no possibilities for retransmissions. On the other
hand, carried data amount is considerably smaller than on PUSCH. Consequently, the DM RS overhead
is larger on PUCCH than on PUSCH to achieve reasonable balance between the signal energies used
for channel estimation and data transmission. On PUCCH, DM RS overhead ranges from 14.3% up to
42.9%, depending on the PUCCH format and cyclic preﬁx length.
When conﬁgured, sounding reference signal is transmitted on the last SC-FDMA symbol of subframe.
When the last SC-FDMA symbol is reserved for SRS transmission, no PUSCH data is transmitted on
that symbol in the cell. Base station can reserve the last subframe symbol for SRS transmission in every
Data
Data 
Data
DM RS
Data
Data
Data
Data
Data 
Data
DM RS
Data
Data
Data / 
SRS
Cyclic 
prefix
0.5 ms slot
1 ms subframe
Figure 11.113
Uplink reference signals in normal cyclic preﬁx subframe

596
Modulation and Coding Techniques in Wireless Communications
subframe or in some of the subframes, for example, once per 10 ms frame. Thus SRS overhead can be
adjusted according to the cell conﬁguration and environment. Overhead ranges from less than 1% up
to 7%.
Reference signal sequences are designed so that they have constant amplitude in frequency domain.
This considerably simpliﬁes channel estimation especially in frequency domain. Consequently, sequences
have ideal periodic autocorrelation. This means that autocorrelation is zero for all other lags except zero
lag. As a result, a set of orthogonal reference signals is obtained with cyclic shifts, that is, by circurlarly
shifting the sequence. The set of orthogonal reference signals, or cyclic shifts, is used to code division
multiplex several terminals on the same physical resource block, that is, on PUCCH as discussed in
section 11.4.2.4. The same sequences are used for DM RS, SRS, as well as on PUCCH.
11.4.2.4
Uplink Control Signaling
In order to beneﬁt from single carrier property low Cubic Metric property needs to be maintained not only
when transmitting data on PUSCH, but also when transmitting uplink controls signals with or without
simultaneous UL data allocation. Hence, separate control signalling schemes have been speciﬁed for
these two cases.
PUSCH carries the UL L1/L2 control signals in cases when the UE has been scheduled for data
transmission on shared data channel. PUSCH is capable to transmit control signals with a large range of
supported signalling sizes. Data and different control ﬁelds such as ACK/NACK and CQI are separated
by means of time division multiplexing by mapping them into separate modulation symbols prior to the
DFT.
Physical Uplink Control Channel (PUCCH) is a shared frequency/time resource reserved exclusively
for UEs transmitting only L1/L2 control signals. PUCCH has been optimized for a large number of
simultaneous UEs with relatively small number of control signaling bits per UE. Due to the single carrier
limitations, simultaneous transmission of PUCCH and PUSCH is not allowed in LTE Rel-8.
11.4.2.4.1
PUCCH
PUCCH has special requirements in wide-area coverage optimized system. First of all, quality of service
requirement for delay critical control signalling is high. Hence, utilization of frequency diversity is of
high importance since PUCCH beneﬁts neither from the fast link adaptation nor the HARQ. On the other
hand, channel estimation limits the performance of UL control signalling in the cell-edge conditions.
The best trade-off between the channel estimation performance and frequency diversity is obtained using
two narrowband frequency domain clusters in a frequency hopping manner. At the same time, concurrent
transmission of multiple clusters increasing the cubic metric is avoided.
PUCCH is transmitted in a frequency region located on the edges of the system bandwidth. In order to
exploit frequency diversity while maintaining the single-carrier property slot-based frequency hopping
symmetrically over the centre frequency is always used on PUCCH. Different UEs are separated on
PUCCH by means of Frequency Division Multiplexing (FDM) and Code Division Multiplexing (CDM).
FDM is used only between the narrowband resource blocks (180 kHz) whereas code division multiplexing
is used inside the PUCCH resource block. CDM is a feasible choice for UE multiplexing in LTE UL
since it allows longer time duration for the control signalling message and maximizes the wide area
coverage. PUCCH utilizes two separate and LTE-speciﬁc ways to realize CDM [36]:
r CDM by means of cyclic shifts of sequences with suitable zero-autocorrelation properties (that is,
CDM inside the SC-FDMA block)
r CDM by means of block-wise spreading with the orthogonal cover sequences (that is, CDM between
multiple SC-FDMA blocks)

Standardization in 3GPP
597
ZAC
sequence
with UE-
specif
cyclic shift
.
.
.
Control
signalling
bits
Phase
modulator
Resource
block
mapping
IFFT
CP
...
Figure 11.114
Block diagram of sequence modulator
Figure 11.114 shows the block diagram of sequence modulation scheme used in LTE PUCCH. Cyclically
shifted zero-autocorrelation (ZAC) sequences take care of both user multiplexing (CDM) and conveying
the control information on PUCCH. The same sequences are used also as reference signal sequences
allowing coherent detection. BPSK and QPSK modulation schemes are supported on PUCCH which
provides one or two control signalling bits per modulated sequence.
Block-wise spreading increases the multiplexing capacity of PUCCH by a factor of spreading factor
(SF) used. The principle of block-wise spreading is shown in Figure 11.115, which illustrates the block
spreading operation made for ACK/NACK reference signal (RS) sequence transmitted on PUCCH.
Separate block spreading operation is made for the reference signal and ACK/NACK data parts but for
simplicity, block processing related to reference symbol (RS) part is neglected in Figure 11.115. PUCCH
utilizes Walsh-Hadamard codes as block spreading codes with SF = 4 and SF = 2, whereas DFT codes
are used when SF equals to three.
11.4.2.4.2
PUSCH
Figure 11.116 shows the principle of control and data multiplexing within the SC-FDMA symbol (block)
on PUSCH. In order to maintain the single carrier properties of transmitted signal data and different
control symbols are multiplexed prior to the DFT by means of TDM multiplexing. The data part of
PUSCH is punctured by the number of control symbols allocated in the given subframe. Data and
different control ﬁelds (ACK/NAK, CQI/PMI, Rank Indicator) are coded and modulated separately
RS
RS
RS
w0
w1
w2
PUCCH
RS
Figure 11.115
Principle of block spreading applied for ACK/NACK reference signal, spreading factor SF = 3

598
Modulation and Coding Techniques in Wireless Communications
MUX
Resource
block
mapping
IFFT
CP
...
Data symbols
CQI symbols
ACK/NACK/RI 
symbols
DFT
...
Figure 11.116
Principle of data and control modulation on PUSCH
before multiplexing them into the same SC-FDMA symbol block. Different coding rates for control are
achieved by occupying different number of symbols for each control ﬁeld [37].
CQI/PMI transmitted on PUSCH utilizes the same modulation scheme as the data part. ACK/NACK
and Rank Indicator (RI) are transmitted in such that the coding, scrambling and modulation maximize the
Euclidean distance at the symbol level. This means a modulation symbol used for ACK/NACK carries at
most two bits of coded control information regardless of the PUSCH modulation scheme. The outermost
constellation points having the highest transmission power are used to signal the ACK/NACK and RI in
the case of 16-QAM and 64-QAM. This selection provides a small power gain for ACK/NACK and RI
symbols, compared to PUSCH data using higher order modulation.
11.4.2.5
RACH
In several situations, UE needs to transmit data to the network but the base station is not aware of the need
and has not allocated any uplink resources to the terminal. Such uplink random access is needed when
the terminal has been idle and wants to establish radio resource control connection with the network, for
example,to access the Internet or to make or receive a phone call. Random access is also needed when
the terminal has been idle for some time and all PUCCH resources allocated for the terminal have been
released, or when uplink timing synchronization needs to be re-established, for example,during handover
between cells.
Random access preamble is transmitted on Random Access Channel (RACH). There are several
requirements that are characteristic to the random access channel:
r RACH is a contention based channel and there is a possibility of collisions, that is, multiple terminals
transmit simultaneously the same preamble. It is desirable to minimize collision rate, since collisions
will increase random access delay and consume radio resources.
r Random access preamble needs to be detected reliably, that is, missed detection rate needs to be
minimized. If preamble is missed, the terminal will transmit another preamble at higher transmission
power, if possible. However, repeated transmissions will increase random access delay as well as RACH
load and collision probability. RACH detection sensitivity will also set, together with performance of
other channels, limits to the maximum cell range.
r False alarm rate needs to be minimized. In the false alarm, base station detects, due to noise and
interference, a preamble that was never sent. Due to false detection, base station will transmit random
access response at the downlink and reserve uplink resources for the consecutive response from the
terminal. Thus, every false alarm will consume unnecessarily radio resources.
r Timing of received preamble needs to be estimated accurately. Terminal is synchronized to the re-
ceived downlink signal when it transmits preamble. However, terminal’s distance from the base station
is unknown and the propagation delay both in downlink and uplink cannot be estimated nor com-
pensated for. Thus, preamble reception is unsynchronized and the base station needs to estimate the
corresponding timing from the received preamble. Based on the timing estimate, the base station can
set the timing advance for the terminal, thus, compensating for propagation delays and synchronizing
the consecutive uplink transmissions with the timing of transmissions from other terminals.

Standardization in 3GPP
599
r Radio resources need to be used efﬁciently.
r RACH receiver needs to have acceptable computational complexity.
The requirements are clearly contradictory; for example, collision and missed detection rates can be
easily reduced by increasing the radio resources used, and the compromise between missed detection
and false alarm rates is a classical statistical decision process problem.
On each RACH subframe, 64 different preamble sequences can be transmitted. Thus, there are up
to 64 random access opportunities in each RACH subframe. In this way, the number of random access
opportunities can be increased, thus, decreasing preamble collision probability without increasing the
amount of radio resources reserved by RACH. Of course, such code division multiple access sets further
requirements for the preamble sequences. Zadoff-Chu sequences [33] are used as preamble sequences
since they have several properties favourable for random access preamble:
r There is a large number of Zadoff-Chu sequences available, which allows for reasonable reuse factors
between cells together with different RACH subframe conﬁguration options. In LTE, 838 Zadoff-Chu
sequences are used for preamble sequences.
r Zadoff-Chu sequences have ideal periodic cross-correlation and auto-correlation properties, thus,
minimizing interference between different preambles as well as simplifying preamble detection and
timing estimation.
r They have also low cubic metric, which translates to reasonable back-off at the power ampliﬁer and,
thus, more efﬁcient transmission.
Since the Zadoff-Chu sequences have ideal auto-correlation properties, it is possible to derive multiple
preamble sequences from a single Zadoff-Chu sequence by using cyclic shifts, as illustrated in Figure
11.117. Interference between cyclic shifts is close to zero, so the use of cyclic shifts as preambles reduces
intra-cell interference. Of course, one needs to reserve a sufﬁcient window for the two-way propagation
delay for each cyclic shift used as a preamble sequence, so the number of preamble sequences obtained
from a single Zadoff-Chu sequence is inversely proportional to the conﬁgured cell range.
In addition to preamble sequence, random access preamble contains also cyclic preﬁx (CP). With
the CP, the received signal can be correlated with the preamble sequence for all potential propagation
delays in frequency domain as shown in Figure 11.117. Duration of a preamble sequence is 800 µs,
Preamble 
detector
Preamble sequence 1
CP
Preamble sequence 2
CP
FFT
FFT
IFFT
Complex conjugate of
preamble sequence DFT
FFT window
UE 1
UE 2
UE1 correlation 
peak
UE 2 correlation 
peak
2-way propagation 
delays for UE1 and UE2
Cyclic shifts used as 
preamble sequences
2-way propagation 
delay for UE 2
Separation between cyclic shifts used as 
preambles is larger than the maximum 
2-way propagation delay in the cell
Figure 11.117
Detection of random access preambles based on cyclic shifts

600
Modulation and Coding Techniques in Wireless Communications
Preamble sequence
CP
GP
Preamble sequence
1, 2 or 3 subframes of 1 ms
1.08 MHz
1 or 2 preambles of 0.8 ms
3 options for cyclic prefix length
Figure 11.118
Random access preamble formats
and 1.08 MHz are reserved for RACH. The preamble sequence duration is increased to maximize the
signal energy available for preamble detection while limiting the whole random access preamble within
single 1 ms subframe. Preamble bandwidth is a reasonable compromise between increased frequency
diversity and timing estimation accuracy, driving for larger bandwidths, and radio resource consumption
and noise bandwidth, both favouring narrower bandwidths. Random access preamble is followed by a
silent guard period (GP). The purpose of the GP is simply to avoid a delayed preamble from a cell
edge terminal to overlap and, thus, interfere with the PUSCH transmission from other terminals in the
following subframe. The length of GP corresponds roughly to the length of cyclic preﬁx.
LTE supports four preamble formats for both FDD and TDD and one format speciﬁc for TDD in order
to provide reasonable RACH conﬁgurations to various environments. The preamble structure for the four
formats suitable for both FDD and TDD is presented in Figure 11.118. Preamble formats contain three
different CP lengths, accommodating preamble to different round-trip propagation delays and, thus, cell
ranges. With short CP of roughly 0.1 ms, two-way propagation delays up to roughly 15 km cell ranges
are supported and the RACH preamble still ﬁts within single subframe. Longer cyclic preﬁxes are needed
in larger cells; CP of roughly 0.2 ms can support 30 km cells ranges, while the longest CP of 684 µs
can support two-way propagation delays up to 100 km, that is set as LTE maximum cell range. In two
preamble formats with longer CP, RACH detection is also improved by repeating the preamble sequence
twice; longer transmission time simply increases signal energy available for RACH detection. However,
the prize to be paid is the increased consumption of subframes; one preamble for larger cells reserves
two or three subframes. Clearly the beneﬁt of multiple preamble formats is that RACH can be conﬁgured
to support large cells while radio resource usage can be optimized in typical cells with a preamble of
single subframe.
11.4.2.6
LTE Uplink Evolution (LTE-Advanced)
LTE Rel-8 is approaching the commercial deployment phase. As a part of continuous system evolution,
the standardization work is now focusing on new LTE-Advanced features towards LTE Rel-10. The main
new features in UL side are single user MIMO (SU-MIMO) and component carrier aggregation.
11.4.2.6.1
SU-MIMO
As uplink MIMO techniques, LTE is already in support for multi-user MIMO (MU-MIMO) and antenna
selection transmit diversity. In multi-user MIMO, uplink transmissions from multiple terminals are
spatially multiplexed by scheduling and received at the base station with suitable MIMO receiver. In
LTE-Advanced, SU-MIMO transmission with up to four transmit antennas per terminal is supported.
Three transmission modes will be speciﬁed for SU-MIMO terminals; single antenna port, transmit
diversity, and spatial multiplexing modes.

Standardization in 3GPP
601
In single antenna port mode, transmitted signal will appear as single antenna transmission to the
base station. Single antenna port mode can be used as a fall-back mode for SU-MIMO terminals. As
such, it has clear beneﬁts simplifying the overall system design. For example, the base station does not
need to have knowledge on the number of transmit antennas at the terminal immediately after random
access thanks to single antenna port mode. Additionally, single antenna port mode needs anyway to be
implemented at the terminal so that it can access LTE Rel-8 cells that do not support SU-MIMO in the
UL. Transmit diversity mode will be used for reliable transmission of critical control signals on PUCCH.
Spatial multiplexing will be controlled by the base station. It will dynamically conﬁgure the number
of spatial layers to be multiplexed, a.k.a. transmission rank. Transmission rank can be conﬁgured from
one layer up to four layers. Precoding will also be conﬁgured by the base station. The terminal will
periodically send channel sounding signal in the uplink. Based on the channel estimates, the base
station will select the most suitable precoding matrix from a ﬁxed precoding codebook and signal the
corresponding index to the terminal. Also in the precoding codebook design, the cubic metric is taken
into account and CM preserving precoding will likely be used.
11.4.2.6.2
CC-Aggregation
Carrier aggregation, where two or more component carriers are aggregated, is considered for LTE-
Advanced, in order to support wider transmission bandwidths of, for example, up to 100 MHz and
also for spectrum aggregation. The principle of carrier aggregation is shown in Figure 11.119, which
shows aggregation of four component carriers. The physical layer speciﬁcation shall support carrier
aggregation for both contiguous and non-contiguous component carriers. Both cases are covered in the
example depicted in Figure 11.119.
UL multiple access scheme (waveform) supporting wider bandwidth is N x DFT-S-OFDMA [38],
[39]. This means that LTE-Advanced UL continues on the SC-FDMA track. The reason for selecting N x
DFT-S-OFDMA is that it will provide full support for component carrier speciﬁc MCS, HARQ and
power control. The selected approach provides also the best backwards compatibility between LTE Rel-
8 and enables that majority of existing control signaling can be directly borrowed from LTE Rel-8. The
block diagram of considered transmitter is shown in Figure 11.120 [41]. There is one transport block per
component carrier (in the case without spatial multiplexing). The transport block is turbo-encoded and
modulated and after the modulator, there is a separate DFT for each component carrier. The multiple
IFFTs shown in the ﬁgure may be replaced by one large IFFT on condition that the component carriers
are located on the common 15 kHz raster. It is also noted that support for multiple UL component carriers
is an UE category feature.
Besides the multi-carrier extension it has also been decided to support clustered DFT-S-OFDMA
(non-contiguous PRB allocation) within each component carrier. Furthermore, it has been decided that
freq.
…
Component
carrier (CC)
Aggregated bandwidth
CC#1
CC#2
CC#3
CC#4
Figure 11.119
Carrier aggregation principle

602 
Modulation and Coding Techniques in Wireless Communications
IFFT
CP
0
0
0
0
0
0
t
f
e
1
2π
0
0
0
0
0
0
t
f
e
2
2π
0
0
0
0
0
0
t
f
e
3
2π
0
0
0
0
0
0
t
f
e
4
2π
0
0
0
0
0
0
t
f
e
5
2π
TB
Modulator
Channel
coding
TB
TB
TB
TB
Channel
coding
Channel
coding
Channel
coding
Channel
coding
Modulator
Modulator
Modulator
Modulator
IFFT
IFFT
IFFT
IFFT
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
DFT
IFFT
CP
0
0
0
0
0
0
t
f
e
1
2π
0
0
0
0
0
0
t
f
e
2
2π
0
0
0
0
0
0
t
f
e
3
2π
0
0
0
0
0
0
t
f
e
4
2π
0
0
0
0
0
0
t
f
e
5
2π
TB
Modulator
Channel
coding
TB
TB
TB
TB
Channel
coding
Channel
coding
Channel
coding
Channel
coding
Modulator
Modulator
Modulator
Modulator
IFFT
IFFT
IFFT
IFFT
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
Subcarrier 
mapping
DFT
DFT
DFT
DFT
Figure 11.120 
Block diagram for N x DFT-S-OFDMA
on top of Rel-8 operation, control-data decoupling (simultaneous PUCCH and PUSCH transmission) is
supported.
To summarize, we note that possibility for low-CM transmission is fully maintained in LTE-Advanced
including also SU-MIMO. The additional options increasing the CM compared to Rel-8 are designed to
enable higher bandwidth (CC aggregation), increased scheduling ﬂexibility (clustered DFT-S-OFDMA)
and data-control separation. CM of these options is still reasonable and well below that of OFDMA.
Furthermore, the new features are fully backwards compatible and can be made with rather minor
standardization efforts.
References
[1] Holma, H., and A. Toskala (eds.), WCDMA for UMTS, Chichester, England: John Wiley & Sons, Ltd., 2000.
[2] http://www.3gpp.org/ftp/Inbox/2008 web ﬁles/3GPP Scopeando310807.pdf, retrieved 18. Dec. 2009
[3] http://www.3gpp.org/Speciﬁcation-Groups, retrieved 18. Dec. 2009
[4] http://www.3gpp.org/RAN, retrieved 18. Dec. 2009
[5] 3GPP, TR 21.900 Technical Speciﬁcation Group working methods, v 8.3.0, 2008. © 2008. 3GPPTM TSs and
TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They
are subject to further modiﬁcations and are therefore provided to you “as is” for information purposes only.
Further use is strictly prohibited.
[6] http://www.3gpp.org/releases, retrieved 18 Dec. 2009
[7] 3GPP, RP-091353, Minutes of the 45th 3GPP TSG RAN meeting, 2009
[8] 3GPP, TS 25.307 Requirements on User Equipments (UEs) supporting a release-independent frequency band,
v. 8.4.0, 2009. © 2009. 3GPPTM TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC

Standardization in 3GPP 
603
who jointly own the copyright in them. They are subject to further modiﬁcations and are therefore provided to
you “as is” for information purposes only. Further use is strictly prohibited.
[9] http://www.3gpp.org/ftp/Specs/html-info/TSG-WG–r1.htm, retrieved 18. Dec. 2009
[10] http://www.3gpp.org/ftp/Specs/html-info/TSG-WG–r2.htm, retrieved 18. Dec. 2009
[11] http://www.3gpp.org/ftp/Specs/html-info/TSG-WG–r4.htm, retrieved 18. Dec. 2009
[12] http://www.3gpp.org/speciﬁcation-numbering, retrieved 18. Dec. 2009
[13] 3GPP, TS 25.301 Radio Interface Protocol Architecture, v. 7.4.0, 2008. © 2008. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[14] 3GPP, TS 25.302 Services provided by the physical layer, v. 7.6.0, 2008. © 2008. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[15] 3GPP, TS 25.211 Physical channels and mapping of transport channels onto physical channels (FDD), v. 7.6.0,
2008. © 2008. 3GPPTM TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly
own the copyright in them. They are subject to further modiﬁcations and are therefore provided to you “as is”
for information purposes only. Further use is strictly prohibited.
[16] 3GPP, TS 25.212 Multiplexing and channel coding (FDD), v. 7.9.0, 2008. © 2008. 3GPPTM TSs and TRs are
the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are
subject to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further
use is strictly prohibited.
[17] 3GPP, TS 25.213 Spreading and modulation (FDD), v. 7.6.0, 2008. © 2008. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[18] 3GPP, TS 25.214 Physical layer procedures (FDD), v. 7.9.0, 2008. © 2008. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[19] 3GPP, TS 25.331 Radio Resource Control (RRC); Protocol Speciﬁcation, v. 7.10.0, 2008. © 2008. 3GPPTM
TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright
in them. They are subject to further modiﬁcations and are therefore provided to you “as is” for information
purposes only. Further use is strictly prohibited.
[20] 3GPP, TS 25.922 Radio resource management strategies, v. 7.1.0, 2007. © 2007. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[21] 3GPP, TS 25.215 Physical layer - Measurements (FDD), v. 7.4.0, 2007. © 2007. 3GPPTM TSs and TRs are the
property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject
to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is
strictly prohibited.
[22] 3GPP, TS 25.306 UE Radio Access capabilities, v. 7.9.0, 2009. © 2009. 3GPPTM TSs and TRs are the property
of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject to further
modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is strictly
prohibited.
[23] Holtzman J.M. CDMA Forward Link Waterﬁlling Power Control. Vehicular Technology Conference, 2000.
VTC 2000 Spring. Volume 3. pp. 1663–1667.
[24] Jalali A. et al. Data Throughput of CDMA-HDR a High Efﬁciency-High Data Rate Personal Communication
Wireless System. Vehicular Technology Conference, 2000. VTC 2000 Spring. Volume 3. pp. 1854–1858.
[25] Chase, D., Code combining: A maximum-likelihood decoding approach for combining an arbitrary number of
noisy packets, IEEE Trans. Commun., Vol. COM -33, pp. 385–393, May 1985.
[26] 3GPP, TR 25.848 Physical layer aspects of UTRA High Speed Downlink Packet Access, v. 4.0.0, 2001. ©
2001. 3GPPTM TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own

604
Modulation and Coding Techniques in Wireless Communications
the copyright in them. They are subject to further modiﬁcations and are therefore provided to you “as is” for
information purposes only. Further use is strictly prohibited.
[27] Holma, H., Toskala, A (eds.), HSDPA/HSUPA for UMTS, Chichester, England: John Wiley & Sons, Ltd., 2006.
[28] 3GPP, TR 25.825 Dual-Cell HSDPA operation, v. 1.0.0, 2008. © 2008. 3GPPTM TSs and TRs are the property
of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are subject to further
modiﬁcations and are therefore provided to you “as is” for information purposes only. Further use is strictly
prohibited.
[29] 3GPP, TS 25.212 Multiplexing and channel coding (FDD), v. 8 DRAFT.
[30] 3GPP, TS 25.321 Medium Access Control (MAC) protocol speciﬁcation, v. 7.12.0, 2009. © 2009. 3GPPTM TSs
and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them.
They are subject to further modiﬁcations and are therefore provided to you “as is” for information purposes
only. Further use is strictly prohibited.
[31] 3GPP, TS 25.309 FDD Enhanced Uplink; Overall Description, v. 6.6.0, 2006. © 2006. 3GPPTM TSs and TRs
are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in them. They are
subject to further modiﬁcations and are therefore provided to you “as is” for information purposes only. Further
use is strictly prohibited.
[32] 3GPP, TR 25.913 Requirements for Evolved UTRA (E-UTRA) and Evolved UTRAN (E-UTRAN) (Release 9),
V9.0.0, 2009 © 2009. 3GPPTM TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC
who jointly own the copyright in them. They are subject to further modiﬁcations and are therefore provided to
you “as is” for information purposes only. Further use is strictly prohibited.
[33] R1-050251, Uplink Considerations for UTRAN LTE, Nokia
[34] R1-050639, Impact of the transmitter back-off to the uplink range, Nokia
[35] Chu, D.C., Polyphase codes with good periodic correlation properties, IEEE Transactions on Information
Theory, vol. 18, pp. 531–532, July 1972
[36] R1-062841, Multiplexing of L1/L2 Control Signalling when UE has no data to transmit, Nokia
[37] R1-062840, TDM based Multiplexing Schemes between L1/L2 Control and UL Data, Nokia
[38] R1-081842, LTE-A Proposals for evolution, Nokia Siemens Networks, Nokia
[39] R1-083732, Comparison between SC-FDMA and OFDMA for LTE-Advanced Uplink, Nokia Siemens Networks,
Nokia
[40] R1-060023, Cubic Metric in 3GPP-LTE, Motorola Jan 2006
[41] R1-082609, Uplink Multiple access for LTE-Advanced Nokia Siemens Networks, Nokia Siemens Networks,
Nokia
[42] 3GPP, TS 36.306 User Equipment (UE) radio access capabilities (Release 9), V9.0.0 2009-09 © 2009. 3GPPTM
TSs and TRs are the property of ARIB, ATIS, CCSA, ETSI, TTA and TTC who jointly own the copyright in
them. They are subject to further modiﬁcations and are therefore provided to you “as is” for information purposes
only. Further use is strictly prohibited.

12
CDMA2000 and Its Evolution
Andrei Ovchinnikov
St. Petersburg State University of Aerospace Instrumentation, Russia
12.1
Development of 3G CDMA2000 Standard
With code division access each user is assigned some code, modulation by which disperses the user’s data
over the bandwidth. The data from all users are overlaid with each other, but because of the correlation
properties of modulation sequences the receiver may extract the signals of particular users from the
overall received signal [5, 6]. The methods of multiple access with code division were considered in
Chapter 9.
The CDMA standards exist both for second generation networks (2G) and for third generation networks
(3G). CDMA standards of the second generation are called cdmaOne and include IS-95A and IS-95B
standards.
CDMA is also the basis for 3G standards: two main standards of third generation networks based on
CDMA: these are CDMA2000 and WCDMA standards. In this chapter we consider the standards of the
CDMA2000 family. Below is a brief description of IS-95 and IS-2000 standards.
12.1.1
IS-95 Family of Standards (cdmaOne)
This telecommunication standard, which uses CDMA, was developed by Qualcomm and titled IS-95
(Interim Standard 95, also the title cdmaOne is used). This is the second generation standard (2G) for
working in frequency bandwidth used in the USA by analog communication systems (AMPS). The
CdmaOne standard contains a full description of the wireless system, and includes IS-95A and IS-95B
revisions of CDMA TIA/EIA IS-95 standard. CdmaOne provides the set of services, including cellular
communication, wireless local loop and PCS (personal communication service) [2].
The ﬁrst cellular standard TIA/EIA IS-95 [4] (Telecommunications Industry Association/Electronic
Industries Association Interim Standard — 95) was published in July 1993. IS-95A revision was published
in May 1995 and formed the basis for many commercial second-generation CDMA systems all over the
world. IS-95A describes the structure of the channels with a bandwidth of 1.25 MHz, power control, call
processing, hand-offs and registration techniques.
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

606
Modulation and Coding Techniques in Wireless Communications
Basic characteristics of this standard are listed below [6].
r Each channel is spread to bandwidth of 1.25 MC and ﬁltered to limit the spectrum.
r The transmission rate of elementary signals (chips) is 1.2288 millions signals per second. Nominal
transmission rate in RS1 mode (Rate Set 1) is 9.6 Kbit/s, it is also possible to use improved rate mode
RS2 to achieve a rate of 14.4 Kbit /s.
r To modulate the signal the binary phase-shift keying (BPSK) is used, with signal spreading by means
of QPSK method.
r The convolutional error-correcting code with rate 1/2 and constraint length K = 9 is used for forward
error correction with the Viterbi decoding.
r In downlink (forward) channel the base station performs time-division of users with a time interval of
20 ms.
r For signal receiving the RAKE-receiver is used, demodulating three of the strongest components of
multipath signal in mobile station and four components in base station. To provide spatial diversity
the two antennas are used.
r Base station uses 64 channels for transmission. For channel separation the orthogonal code multiplexing
is used.
r Power control allows the base station to equalize the levels of signals from users which are at a different
distance from the base station. This allows the power of transmitted signal to be minimized and the
interference to be decreased.
IS-95B revision provides a transmission rate of 64 Kbit/s in line-switching mode and 115.2 Kbit/s in
batch mode of the CDMA network. Because of the achievable rates the IS-95B standard is referred to
the set of 2.5G standards.
Advantages of cdmaOne standard when implemented in the cellular network are
r Capacity increase 8 to 10 times compared to the AMPS analog system and 4 to 5 times compared to
the GSM system.
r Improved call quality, with better and more consistent sound as compared to AMPS systems.
r Simpliﬁed system planning through the use of the same frequency in every sector of every cell.
r Enhanced privacy.
r Improved coverage characteristics, allowing for the possibility of fewer cell sites.
r Increased talk time for portables.
r Bandwidth on demand.
12.1.2
IS-2000 Family of Standards
The networks of third generation (3G) are the systems, providing high quality of voice communications,
and also high speed of data transmission, including access to Internet, working of mobile applications
and transferring mobile content. The program IMT-2000 (International Mobile Telecommunications-
2000), developed by International Telecommunication Union (ITU), deﬁnes technical requirements and
standards, as well as frequency bandwidth usage for third generation systems, involved in the program.
According to ITU requirements, third generation networks of IMT-2000 should provide improved
capacity and spectrum efﬁciency compared to 2G systems. Besides, they should support data transmission
on rates of 144 kbps in outdoor and 2 Mbps in indoor conditions.
Based on these requirements, in 1999 ITU approved ﬁve standards for IMT-2000. Three of them
(CDMA2000, TD-SCDMA, WCDMA) are based on CDMA.

CDMA2000 and Its Evolution
607
CDMA2000 is the family of standards and includes:
r CDMA2000 1x
r CDMA2000 1xEV-DO
– CDMA2000 1xEV-DO Rel 0
– CDMA2000 1xEV-DO Rev A
– CDMA2000 1xEV-DO Rev B
Standards of 1xEV-DO (evolution data-only, or data-optimized) family became the development of
CDMA2000 1x standard, oriented on improving the data transmission. Also another direction of devel-
opment is CDMA2000 EV-DV (evolution data/voice) standard, in which both data and voice transmission
are improved. However, in practice the direction EV-DO turned to became more attractive to telecoms
operators, since these standards do not require backward compatibility, network equipment cost is lower,
and once completed there was not enough EV-DV equipment to match the market requirements, while
at the same time EV-DO equipment was accessible. As the result, in March 2005 Qualcomm froze the
development of EV-DV chipsets and focused on development of the EV-DO products.
CDMA2000 uses the advantages of CDMA technology, and also contributes new improvements such
as Orthogonal Frequency Division Multiplexing (OFDM and OFDMA), improved methods for signal
control and transmission, improved countermeasures against interference, quality of service (QoS)
management, and also the novel “antenna” techniques like Multiple-Input Multiple-Output (MIMO) and
Space Division Multiple Access (SDMA). All of these signiﬁcantly improve data transmission rate and
services quality, at the same time signiﬁcantly increasing the capacity of the network and decreasing
costs.
The main properties of CDMA2000 are:
r Voice quality.
r High-speed broadband data connectivity.
r Low end-to-end latency.
r Efﬁcient use of spectrum.
r Support for advanced mobile services: CDMA2000 1xEV-DO enables the delivery of a broad range
of advanced services, such as high-performance VoIP, push-to-talk, video telephony, multimedia
messaging, multicasting and online gaming.
r All-IP: CDMA2000 technologies are compatible with IP and ready to support network convergence.
r Flexibility: CDMA2000 systems have been designed for urban as well as remote rural areas for
ﬁxed wireless, wireless local loop (WLL), limited mobility and full mobility applications in multiple
spectrum bands.
r Application, user and ﬂow-based QoS.
r Improved security and privacy.
In the following sections we brieﬂy consider the main properties of CDMA2000 and its evolution
CDMA2000 1xEV-DO.
12.1.2.1
CDMA2000 1x
CDMA2000 1x (IS-2000) was accepted by International Telecommunications Union (ITU) as IMT-2000
standard in November 1999. This was the ﬁrst practically deployed IMT-2000 system in the world
(October 2000).
CDMA2000 1x supports data transmission at rates up to 307 kbps in one channel with 1.25 MHz
bandwidth.

608
Modulation and Coding Techniques in Wireless Communications
Main properties of CDMA2000 1x are:
r Voice capacity.
r High-speed data transmission: Release 0 supports bi-directional peak data rates of up to 153 kbps and
an average of 60-100 kbps in commercial networks in a 1.25 MHz channel. Release 1 can deliver peak
data rates of up to 307 kbps.
r Applications: Supports circuit-switched voice, short messaging service (SMS), multimedia messaging
service (MMS), games, GPS-based location services, music and video downloads.
Mobile phones of CDMA2000 1x are backwards compatible with cdmaOne standard.
The following basic methods of CDMA are used in CDMA2000 1x and backwards compatible with
cdmaOne:
r Direct Sequence Spread Spectrum Multiple Access — to improve spectral efﬁciency (system capacity).
r Orthogonal Code Channelization — for user separation on the downlink (mitigates interference).
r Random Access — to efﬁciently share radio access resources among all users.
r Fast Uplink Power Control — to resolve the near-far ﬁeld effect (reduce interference).
r Rake Receivers — to resolve and beneﬁt from multipath interference and support soft handoffs.
r Soft Handoff — to handoff users between base stations.
r Softer Handoff — to handoff users between base station sectors.
r Soft Handoff (SHO) Active Set — to provide seamless service with increased spectral efﬁciency.
r Single Frequency Re-use — to increase overall network capacity.
r Downlink Slotted Paging — to extend the battery life of mobile devices.
r Blind Rate Detection — to enable variable rate decoding without additional overhead.
r Downlink Reference Channel — to share a common pilot to increase capacity.
r Downlink Channel Structure — to simplify system implementation and efﬁciency by separating
channels with Walsh codes.
r Scrambling — to provide communications privacy.
r Speech Regulated Vocoders — to reduce interference and increase system capacity.
Besides the already mentioned technologies from cdmaOne in CDMA2000 new technologies
are used:
r Variable Length Orthogonal Codes — to support variable data rates.
r Uplink Complex Spreading — to increase data rates and network capacity.
r Fast Downlink Power Control — to reduce transmit power usage and increase capacity.
r Data Rate Conﬁgurable Channels — to support applications that use a variety of data rates.
r Dual-Event Downlink Paging — to further extend the battery life of mobile devices.
r Uplink Channel Structure — to multiplex control and data channels.
r Reserve Mode Random Access — to access the network more efﬁciently.
r Parallel Turbo Codes — to improve capacity through more efﬁcient forward error correction.
r Coherent Uplink Detection — to improve data rates and coverage.
r Continuous Uplink Operation — to increase transmission range and capacity, while reducing interfer-
ence to hearing aids and other devices.
Further development of CDMA2000 standard is CDMA2000 1xEV-DO presented in the next subsection.

CDMA2000 and Its Evolution
609
12.1.2.2
CDMA2000 1xEV-DO
CDMA2000 1xEV-DO (Evolution-Data Optimized) standard was approved as IMT-2000 standard in
2001 and provides peak transmission rates above 2 Mbps. Variations of this standard include CDMA2000
1xEV-DO Release 0, CDMA2000 1xEV-DO Revision A and CDMA2000 1xEV-DO Revision B.
CDMA2000 1xEV-DO Release 0 (Rel. 0) standard proposes data transmission on rates up to 2.4
Mbps. Its key features are:
r Broadband data: Provides a peak data rate of 2.4 Mbps in the forward link and 153 kbps in the reverse
link in a single 1.25 MHz FDD carrier. In commercial networks, Rel. 0 delivers an average throughput
of 300-700 kbps in the forward link and 70-90 kbps in the reverse link.
r Supports IP-based network connectivity and software applications.
r Applications: Supports broadband data applications, such as broadband Internet or VPN access, MP3
music downloads, 3D gaming, TV broadcasts, video and audio downloads.
Besides technologies used in CDMA2000 1x, in CDMA2000 1xEV-DO Rel. 0 the following improve-
ments are used:
r High-speed packet-switched downlink channelization structure — bundling downlink resources into
a packet data channel to enable high-speed data rate transmissions by combining all of the available
Walsh codes and power.
r Adaptive modulation and coding schemes — to optimize the delivery of packets based on changes in
the radio environment.
r Adaptive packet data scheduling — to rapidly adapt to changes in the radio link.
r Hybrid ARQ — to acknowledge correct receipt of data and retransmit erroneous data.
r Incremental redundancy feedback in the Downlink — to increase the effective data rate in the uplink
by terminating the transmission of a packet early if it is decoded earlier than expected.
r Rate control — to rapidly adjust to changes in the radio environment in downlink and to efﬁciently
control the transmission of mobile devices in uplink.
r Downlink multiple user separation — to efﬁciently assign the downlink channel to users.
r Downlink transmission signaling — to indicate the downlink modulation and coding.
r Uplink rate detection — to enable correct decoding of uplink data trafﬁc.
r Short transmission time intervals (TTI) — to accelerate the transmission of packets.
Rev. A is an evolution of CDMA2000 1xEV-DO Rel. 0 that increases peak rates on reverse and forward
links to support a wide variety of symmetric, delay-sensitive, real-time, and concurrent voice and
broadband data applications. It also incorporates OFDM technology to enable multicasting (one-to-
many) multimedia content delivery.
Rev. A allows users to send large ﬁles, emails with attachments, high resolution photographs and
personal videos from their mobile devices. With its low network latency, service tiering with Quality of
Service (QoS) and IP-based broadband architecture, Rev. A is able to support time-sensitive applications,
such as Voice over IP (VoIP), Push-to-Talk (PTT) and video telephony. Rev. A was launched in October
2006.
Key features of Rev. A include:
r Improved broadband speeds — Provides a peak data rate of 3.1 Mbps in the forward link and 1.8
Mbps in the reverse link in a 1.25 MHz FDD carrier. In commercial networks, Rev. A achieves average
throughput of 450-800 kbps in the forward link and 300-400 kbps in the reverse link.

610
Modulation and Coding Techniques in Wireless Communications
r Higher spectral efﬁciency — Supports 1.2 times Rel. 0 forward link sector capacity and 3.4 times
reverse link sector capacity. Increased rate quantization on both forward and reverse link enables more
efﬁcient use air link resources, better network utilization and lower cost of delivery.
r Increased capacity — On both the forward and reverse link, Rev. A allows operators to support more
users and it improves the cost of delivering voice, data and multimedia services.
r Symmetry — Symmetry is important for applications where users send packets of data as often as
they receive them, such as receiving and sending email with attachments.
r Low latency — The average latency of Rev. A is below 50 milliseconds, making it ideal for delay-
sensitive applications.
r Advanced quality of service (QoS) mechanisms that support the prioritization and delivery of individual
packets based on the type of application or user proﬁle. These mechanisms ensure a consistent, high-
quality user experience.
r All-IP — Like 1xEV-DO Rel. 0, All-IP Rev. A network provides operators with service ﬂexibility and
higher bandwidth efﬁciencies.
r Advanced services — Enables the enhanced performance of real-time broadband, symmetric data
link, and delay sensitive services such as VoIP, push-to-talk (PTT), push-to-media (PTM), video
conferencing, multicasting, and 3D gaming with multiple players.
r Backward compatibility — Rev. A networks support existing Rel. 0 applications and devices.
In addition to the air interface techniques used in CDMA2000 1x and 1xEV-DO Rel. 0, the following
new high-speed packet-switched uplink techniques are incorporated into CDMA2000 1xEV-DO Rev. A:
r Fast uplink rate control — to efﬁciently control the transmission of mobile devices.
r Hybrid ARQ in uplink — to acknowledge correct receipt of data and retransmit erroneous data.
r Incremental redundancy feedback in uplink — to increase the effective data rate in the downlink by
terminating the transmission of a packet early if it is decoded earlier than expected.
r Uplink channelization — to enable better control of the uplink data ﬂows.
r Short Transmission Time Interval (TTI) — to accelerate the transmission of packets
The Revision B (Rev. B) is an evolutionary step of Rev. A that consists of a software upgrade that
aggregates multiple EV-DO Rev. A channels to provide higher performance for multimedia delivery,
bi-directional data transmissions and VoIP-based concurrent services. The Rev. B standard was published
by the 3GPP2 under document number 3GPP2 C.S0024-B [1] and by the TIA and Electronics Industry
Association as TIA/EIA/IS-856-B.
Rev. B builds on the efﬁciencies of Rev. A by introducing the concept of dynamically scalable
bandwidth. Through aggregation of multiple 1.25 MHz Rev. A channels, Rev. B enables data trafﬁc to
ﬂow over more than one carrier and hence improve user data rates, latencies on both the forward and
reverse link. Peak data rates are proportional to the number of carriers aggregated. When 15 channels
are combined within a 20 MHz bandwidth, Rev. B delivers peak rates of 46.5 Mbps in forward link and
27 Mbps in the reverse link. With the 64-QAM scheme, the peak data rate in the forward link increase in
a single 1.25 MHz carrier to 4.9 Mbps, an aggregated 5 MHz will deliver up to 14.7 Mbps and within 20
MHz of bandwidth up to 73.5 Mbps. By increasing the bandwidth, an operator can support more users
per sector or lower their cost per megabyte to encourage longer usage. To achieve this performance,
the 1.25 MHz carriers do not have to be adjacent to one another, thus giving operators the ﬂexibility to
combine blocks of spectrum from different bands. This is a unique beneﬁt of Rev. B that is not available
to WCDMA/HSDPA [2].
In addition to supporting mobile broadband data and OFDM-based multicasting, the lower latency
characteristics of Rev. B improve the performance of delay-sensitive applications such as VoIP, push-to-
talk, video telephony, concurrent voice and multimedia and multiplayer online gaming.

CDMA2000 and Its Evolution
611
Table 12.1
Radio-conﬁguration parameters of CDMA Reverse Channel
Radio
Conﬁg.
Associated
Spreading Rate
Data rates, Forward Error Correction, and general characteristics
1
1
1200, 2400, 4800, and 9600 bps data rates with R = 1/3, 64-ary
orthogonal modulation
2
1
1800, 3600, 7200, and 14400 bps data rates with R = 1/2, 64-ary
orthogonal modulation
3
1
1200, 1350, 1500, 2400, 2700, 4800, 9600, 19200, 38400, 76800, and
15300 bps data rates with R = 1/4, 307200 bps data rate with R = 1/2,
BPSK modulation with a pilot
4
1
1800, 3600, 7200, 14400, 28800, 57600, 115200, and 230400 bps data
rates with R = 1/4, BPSK modulation with a pilot
5
3
1200, 1350, 1500, 2400, 2700, 4800, 9600, 19200, 38400, 76800, and
15300 bps data rates with R = 1/4, 307200 and 614400 bps data rate
with R = 1/3, BPSK modulation with a pilot
6
3
1800, 3600, 7200, 14400, 28800, 57600, 115200, 230400, and 460800 bps
data rates with R = 1/4, 1036800 bps data rates with R = 1/2, BPSK
modulation with a pilot
12.2
Reverse Channel of Physical Layer in CDMA2000 Standard
12.2.1
Reverse Channel Structure
CDMA2000 standard [3] described interoperability of the base station and user mobile stations. The
transmission channel from base station to mobile station is referred to in the standard as reverse channel,
while the transmission channel from mobile station to base station is referred to as forward channel. In
this section we will describe the reverse channel.
Transmission over the reverse channel may be performed in different modes. First, the transmission
mode may be deﬁned by the so-called spreading rate, which may be denoted by the number 1 or 3. With
spreading rate 1 (SR1) the transmission is performed on the rate 1.2288 Mcps, using direct spread of the
one carrier. With spreading rate 3 (SR3) and transmission over the CDMA forward channel either three
carriers with rate 1.2288 Mcps (Multi-Carrier Forward Channel) or one carrier with direct spread on rate
3.6864 Mcps (Direct-Spread Forward Channel) may be used. During the transmission over the CDMA
reverse channel the one carrier with direct spreading of spectrum is used on rate 3.6864 Mcps.
Then, for SR1 mode the four radio-conﬁgurations (RC) are deﬁned. Two more radio-conﬁgurations
are deﬁned for SR3 mode. Parameters of radio-conﬁgurations are listed in Table 12.1.
The Reverse Channel structure of the CDMA2000 standard is shown in Figure 12.1, taking into
account different SR and RC modes. The channel consists of the following subchannels.
r Access Channel. The Access Channel is used for short signaling message exchanges such as call
originations, responses to pages, and registrations.
r Reverse Trafﬁc Channel. A trafﬁc channel on which data and signaling are transmitted from a mobile
station to a base station.
– Reverse Fundamental Channel. A channel which carries higher level data and control information.
– Reverse Supplemental Code Channel. A channel which operates in conjunction with some other
channels to provide higher data rate services.
– Reverse Pilot Channel. A reverse pilot channel provides a phase reference for coherent demodu-
lation and may provide a means for signal strength measurement.
– Reverse Dedicated Control Channel. A channel used for the transmission of higher-level data and
control information from a mobile station to a base station.

612
Modulation and Coding Techniques in Wireless Communications
Reverse
Traffic
Channel
Operation
(RC 3 to 6)
REVERSE CDMA CHANNEL
for Spreading Rates 1 and 3 (SR1 and SR3)
Access
Channel
Reverse
Traffic
Channel
(RC 1or 2)
Enhanced
Access
Channel
Operation
Reverse
Common
Control
Channel
Operation
Reverse
Fundamental
Channel
Reverse
Pilot
Channel
Reverse
Pilot
Channel
Reverse
Pilot
Channel
0 to 7 Reverse
Supplemental
Code Channel
Enhanced
Access
Channel
Reverse Common
Control
Channel
0 or 1 Reverse
Fundamental
Channel
0 to 2 Reverse
Supplemental
Code Channel
Reverse
Power Control
Subchannel
0 or 1 Reverse
Dedicated Control
Channel
Figure 12.1
Reverse Channel structure
– Reverse Supplemental Channel. A channel which operates in conjunction with some other chan-
nels to provide higher data rate services.
– Reverse Power Control Subchannel. A subchannel used by the mobile station to control the power
of a base station.
r Enhanced Access Channel — used for transmission of short messages, such as signaling, MAC
messages, response to pages, and call originations. It can also be used to transmit moderate-sized data
packets.
r Reverse Common Control Channel — used for the transmission of digital control information from
one or more mobile stations to a base station.
We will describe only SR1 mode in radio-conﬁgurations RC1 and RC3. In fact, from the functional point
of view the other radio-conﬁgurations do not differ from these. The Access Channel structure is depicted
in Figure 12.2.
The structure of Reverse Trafﬁc Channel (which consists of Reverse Fundamental Channel and Reverse
Supplemental Channel) for radio-conﬁguration 1 is depicted in Figure 12.3.
The structure of Enhanced Access Channel and Reverse Common Control Channel are shown in
Figures 12.4 and 12.7. The structure of Reverse Trafﬁc Channel for radio-conﬁguration 3 is shown in
Figures 12.5–12.7. The structure of Reverse Pilot Channel is also presented in Figure 12.7.
12.2.2
Forward Error Correction (FEC)
Cdma2000 standard uses the convolutional codes as error-correcting codes. To provide FEC coding in
Reverse Supplemental Channel the turbo-codes may also be used.

CDMA2000 and Its Evolution
613
Access
Channel
Bits
Add 8
Encoder
Tail Bits
Convolutional
Encoder
Code
Symbol
Symbol
Repetition
Repeated
Code
Symbol
Block
Interleaver
Repeated
Code Symbol
64-ary
Orthogonal
Modulator
Long Code
Generator
Long Code
Mask
I-Channel
PN Sequence
I
Signal Point
Mapping
0 →+1
1 →–1
Channel
Gain
Baseband
Filter
sin(2πf
Σ
ct)
cos(2πfct)
Q
Q-Channel
PN Sequence
1/2 PN
Chip
Delay
Signal Point
Mapping
0 →+1
1 →–1
Channel
Gain
Baseband
Filter
s(t)
+
+
Figure 12.2
Access Channel structure (SR1 mode)
12.2.2.1
The Convolutional Codes in CDMA2000 Standard
The convolutional codes used in CDMA2000 standard have code rates of 1/2, 1/3 and 1/4 and the
constraint length of 9. At the initial moment of time all the registers are set to zero, the structure of the
code (encoder scheme) with rate 1/4 is shown in Figure 12.8, while the same structures for the rate 1/3
and rate 1/2 codes are described in Figure 12.9 and Figure 12.10 correspondingly.
12.2.2.2
The Turbo-Codes in CDMA2000 Standard
Let K denotes the length of encoded physical layer packet, and turbo-codes is (Nout, Nturbo, R)-code
with codelength Nout, information message length Nturbo and code rate R.
The information symbols of encoded message are the symbols of physical layer packet. The turbo-code
calculates Nout = Nturbo/R codeword symbols, and also 6/R tail symbols.
The encoder of the turbo-code consists of two constituent systematic recursive convolutional encoders,
connected in parallel with an interleaver between. To achieve the target rates the outputs of constituent
encoders may be punctured or repeated.

614
Modulation and Coding Techniques in Wireless Communications
Figure 12.3
Reverse Trafﬁc Channel structure, RC1 mode
Reverse
Common
Control
Channel
Bits
Add 8
Encoder
Tail Bits
Convolutional
Encoder
R = 1/4, K = 9
Symbol
Repetition
Add
Frame
Quality
Indicator
C
Block
Interleaver
Modulation
Symbol
Figure 12.4
Enhanced Access Channel and Reverse Common Control Channel structure
Reverse
Dedicated
Control
Channel
Bits
Add 8
Encoder
Tail Bits
Convolutional
Encoder
Symbol
Repetition
Add
Frame
Quality
Indicator
B
Block
Interleaver
Modulation
Symbol
Figure 12.5
Reverse Trafﬁc Channel structure (Reverse Dedicated Control Channel), RC3 mode

CDMA2000 and Its Evolution
615
Channel
Bits
Add 8
Reserved/
Encoder
Tail Bits
Convolutional
Or Turbo
Encoder
Symbol
Repetition
Add
Frame
Quality
Indicator
C
Block
Interleaver
Modulation
Symbol
Symbol
Puncture
Figure 12.6
Reverse Trafﬁc Channel structure (Reverse Fundamental Channel and Reverse Supplemental Channel),
RC3 mode
The transfer function of each constituent encoder is deﬁned by:
G(D) =

1
1 + D + D3
1 + D2 + D3
1 + D + D2 + D3
1 + D2 + D3

The encoder scheme is shown in Figure 12.11. In the initial moment of time the elements of registers
are ﬁlled with zeros. Then the registers are clocked Nturbo times with switches in “up” position to obtain
the symbols of the codeword. The outputs of constituent encoders are punctured in correspondence with
Table 12.2, where “0” corresponds to symbol puncturing, and “1” corresponds to symbol output.
Then the switches are set into “down” position and 6/R tail symbols are calculated: ﬁrst constituent
encoder are clocked three times (the second constituent encoder does not work), then the second con-
stituent encoder are clocked three times (ﬁrst constituent encoder does not work). The outputs of encoders
are punctured as shown in Table 12.3 and in the case of using codes with rate R = 1/4 and R = 1/3 the
X outputs are repeated.
That is, with R = 1/2 the output of ﬁrst three clocks is XY0, the output of second three clocks is X ′Y ′
0.
With R = 1/3 the output of ﬁrst three clocks is X XY0, the output of second three clocks is X ′X ′Y ′
0.
With R = 1/4 the output of ﬁrst three clocks is X XY0Y1, the output of second three clocks is X ′X ′Y ′
0Y ′
1.
The turbo-interleaver scheme is shown in Figure 12.12. The interleaved symbols are numbered from 0
to Nturbo −1, the output of the turbo-interleaver are the position numbers (addresses) from this set. The
procedure of addresses calculation is performed as follows.
1. Calculate the parameter n =

log2 Nturbo

−5, i.e. the address of Nturbo may be presented as n + 5
bits.
2. Initialize the (n + 5)-bit counter to 0.
3. Add 1 to n most signiﬁcant bits (MSB) of counter (in+4, . . . , i5), keep only n least signiﬁcant bits
(LSB) from the resulted value.
4. Extract the n-bit value from the row of Table 12.4, deﬁned by ﬁve LSB bits (i4, . . . , i0) of the counter.
5. Multiply the values obtained on steps 3 and 4 and keep only n LSB of the result.
6. Bit-reverse the ﬁve LSB of the counter as (i0, . . . , i4).
7. From a tentative address, in which MSB are deﬁned by the value obtained on step 6, and LSB are
deﬁned by the value obtained on step 5.
8. Consider the tentative address as output address, if its value less than Nturbo, otherwise ignore the
value.
9. Increment the counter by 1 and repeat the steps 3-8, until all Nturbo output addresses will be found.
12.2.3
Codeword Symbols Repetition
The output of error-correction encoders are repeated by the factor dependent on channel being used and
radio-conﬁguration, as shown in Figures 12.2–12.6.

616
Modulation and Coding Techniques in Wireless Communications
Σ
Σ
Σ
Σ
Σ
Figure 12.7
Reverse Trafﬁc Channel, Reverse Pilot Channel, Enhanced Access Channel and Reverse Common Control Channel structure, RC3 mode

CDMA2000 and Its Evolution
617
Figure 12.8
Rate 1/4 convolutional encoder structure
Figure 12.9
Rate 1/3 convolutional encoder structure
Figure 12.10
Rate 1/2 convolutional encoder structure

618
Modulation and Coding Techniques in Wireless Communications
Nturbo
Information
Bits
(Input)
Turbo
Interleaver
Constituent Encoder 1
Symbol
Puncturing
and
Repetition
(N turbo + 6)/R
Code
Symbols
(Output)
Constituent Encoder 2
Control
Control
d
d
n0
n1
n0
n1
X
Y0
Y1
Y’0
Y’1
X’
Figure 12.11
The structure of turbo-code encoder
12.2.4
Puncturing
In some radio-conﬁgurations after the symbols repetition one more puncturing procedure is performed,
see Figure 12.6.
12.2.5
Block Interleaving
After procedures of codeword symbols repetition and puncturing the data is block interleaved, as shown
in Figures 12.2–12.6.

CDMA2000 and Its Evolution
619
Table 12.2
Puncturing the codeword
symbols of turbo-code
Code Rate
Output
1/2
1/3
1/4
X
11
11
11
Y0
10
11
11
Y1
00
00
10
X
′
00
00
00
Y
′
0
01
11
01
Y
′
1
00
00
11
12.2.6
Orthogonal Modulation and Orthogonal Spreading
When using the radio-conﬁguration RC1 the output of block interleaving is processed with 64-ary
orthogonal modulation. When using the radio-conﬁguration RC3 the output of block interleaving is
processed with orthogonal spreading by using Walsh coverings, see Figures 12.2, 12.3 and 12.7.
12.2.7
Direct Sequence Spreading and Quadrature Spreading
For spreading the sequences obtained after 64-ary orthogonal modulation in radio-conﬁguration RC1,
or after Walsh covering in radio-conﬁguration RC3, the so-called long codes are used, as well as short
pseudorandom sequences for in-phase and quadrature channels.
The long codes have period 242 −1. To obtain the long code, the feedback shift register is used,
deﬁned by the polynomial:
p(x) = x42 + x35 + x33 + x31 + x27 + x26 + x25 + x22 + x21 + x19
+x18 + x17 + x16 + x10 + x7 + x6 + x5 + x3 + x2 + x + 1
The output of this shift register is masked by means of component-wise multiplication by symbols of
masking sequences, as shown in Figure 12.13. The long code mask depends on the channel type, public
Electronic Serial Number (ESN), unique for each mobile station, and also private Voice Privacy Mask
(VPM), providing the secrecy of transmission.
For spreading rate SR3 the generation of long code uses the procedure of generation of the long code
for spreading rate SR1 as its basis, as shown in Figure 12.14. As a result the long code with chip rate
3.6864 Mcps is obtained instead of 1.2288 Mcps for SR1 mode.
Table 12.3
Puncturing the tail symbols of turbo-code
Code Rate
Output
1/2
1/3
1/4
X
111 000
111 000
111 000
Y0
111 000
111 000
111 000
Y1
000 000
000 000
111 000
X
′
000 111
000 111
000 111
Y
′
0
000 111
000 111
000 111
Y
′
1
000 000
000 000
000 111

620
Modulation and Coding Techniques in Wireless Communications
Table 12.4
Table for turbo-interleaving calculations
Table Index
n = 4
n = 5
n = 6
n = 7
n = 8
n = 9
n = 10
0
5
27
3
15
3
13
1
1
15
3
27
127
1
335
349
2
5
1
15
89
5
87
303
3
15
15
13
1
83
15
721
4
1
13
29
31
19
15
973
5
9
17
5
15
179
1
703
6
9
23
1
61
19
333
761
7
15
13
31
47
99
11
327
8
13
9
3
127
23
13
453
9
15
3
9
17
1
1
95
10
7
15
15
119
3
121
241
11
11
3
31
15
13
155
187
12
15
13
17
57
13
1
497
13
3
1
5
123
3
175
909
14
15
13
39
95
17
421
769
15
5
29
1
5
1
5
349
16
13
21
19
85
63
509
71
17
15
19
27
17
131
215
557
18
9
1
15
55
17
47
197
19
3
3
13
57
131
425
499
20
1
29
45
15
211
295
409
21
3
17
5
41
173
229
259
22
15
25
33
93
231
427
335
23
1
29
15
87
171
83
253
24
13
9
13
63
23
409
677
25
1
13
9
15
147
387
717
26
9
23
15
13
243
193
313
27
15
13
31
15
213
57
757
28
11
13
17
81
189
501
189
29
3
1
5
57
51
313
15
30
15
13
15
31
15
489
75
31
5
13
33
69
67
391
163
Figure 12.12
The scheme of turbo-interleaver functioning

CDMA2000 and Its Evolution
621
Figure 12.13
Generation of long codes
The short pseudonoise (PN) sequences PI and PQ have the period 215 for SR1 mode and 3 × 215
for SR3 mode. Usage of such short sequences allows the correlation between in-phase and quadrature
channels to be avoided.
The sequences for SR1 mode is obtained based on linear feedback shift registers (LFSR), deﬁned by
the polynomials:
PI(x) = x15 + x13 + x9 + x8 + x7 + x5 + 1
(12.1)

622
Modulation and Coding Techniques in Wireless Communications
Figure 12.14
Generation of long codes, SR3 mode
and
PQ(x) = x15 + x12 + x11 + x10 + x6 + x5 + x4 + x3 + 1
(12.2)
Such LFSRs have the maximal period of 215 −1, and to obtain the sequences with the period of 215, in
the only case when in these sequences there is the series of 14 zeros, the one additional (15th) zero is
added to this series.
The sequences for SR3 mode are obtained basing on the LFSR deﬁned by the polynomial:
P(x) = x20 + x9 + x5 + x3 + 1
(12.3)
but with different initial conditions for in-phase and quadrature channels. The output of such LFSR has
the maximal period of 220 −1, and to obtain the period of 3 × 215 the output sequence is truncated.
12.2.8
Frame Quality Indicator
The frames of all channels in Figure 12.1, excluding Reverse Power Control, Reverse Pilot and Access
Channels (but including Enhanced Access Channel), apart from the information bits and bits dedicated
to encoder tail bits, contain the cyclic redundancy check (CRC) which is called Frame Quality Indicator.
Depending on the channel type and transmission rate the CRC of lengths 16, 12, 10, 8 and 6 bits are
used. For this purpose the following generator polynomials g(x) are used:
g(x) = x16 + x15 + x14 + x11 + x6 + x5 + x2 + x + 1
g(x) = x12 + x11 + x10 + x9 + x8 + x4 + x + 1
g(x) = x10 + x9 + x8 + x7 + x6 + x4 + x3 + 1
(12.4)
g(x) = x8 + x7 + x4 + x3 + x + 1
g(x) = x6 + x5 + x2 + x + 1
For example, the shift register for 16-bit Frame Quality Indicator is depicted in Figure 12.15. The other
registers may be constructed by the correspondent generator polynomials in a similar way.
Figure 12.15
16-bit Frame Quality Indicator

CDMA2000 and Its Evolution
623
Table 12.5
Radio-conﬁguration parameters of CDMA Forward Channel
Radio
Conﬁguration
Associated
Spreading Rate
Data rates, Forward Error Correction, and general characteristics
1
1
1200, 2400, 4800, and 9600 bps data rates with R = 1/2, BPSK
pre-spreading symbols
2
1
1800, 3600, 7200, and 14400 bps data rates with R = 1/2, BPSK
pre-spreading symbols
3
1
1500, 2700, 4800, 9600, 19200, 38400, 76800, and 153600 bps data rates
with R = 1/4, QPSK pre-spreading symbols, OTD allowed
4
1
1500, 2700, 4800, 9600, 19200, 38400, 76800, 153600, and 230400 bps
data rates with R = 1/2, QPSK pre-spreading symbols, OTD allowed
5
1
1800, 3600, 7200, 14400, 28800, 57600, 115200, and 230400 bps data
rates with R = 1/4, QPSK pre-spreading symbols, OTD allowed
6
3
1500, 2700, 4800, 9600, 19200, 38400, 76800, 153600, and 307200 bps
data rates with R = 1/6, QPSK pre-spreading symbols, DS non-OTD,
DS OTD, or MC modes.
7
3
1500, 2700, 4800, 9600, 19200, 38400, 76800, 153600, 307200, and
614400 bps data rates with R = 1/3, QPSK pre-spreading symbols, DS
non-OTD, DS OTD, or MC modes.
8
3
1800, 3600, 7200, 14400, 28800, 57600, 115200, 230400, and 460800
bps data rates with R = 1/4 (20 ms) or 1/3 (5 ms), QPSK pre-spreading
symbols, DS non-OTD, DS OTD, or MC modes.
9
3
1800, 3600, 7200, 14400, 28800, 57600, 115200, 230400, 460800, and
1036800 bps data rates with R = 1/2 (20 ms) or 1/3 (5 ms), QPSK
pre-spreading symbols, DS non-OTD, DS OTD, or MC modes.
12.3
Forward Channel of Physical Layer in CDMA2000 Standard
12.3.1
Forward Channel Structure
CDMA Forward Channel connects the base station to the mobile station. Similar to Reverse Channel,
in the Forward Channel of CDMA2000 standard there are two spreading rates SR1 and SR3, for which
are deﬁned the radio-conﬁgurations 1 to 5 and 6 to 9 correspondingly. The parameters of these radio-
conﬁgurations are presented in Table 12.5.
As can be seen from Table 12.5, Forward Channel may function in three modes (see also section
12.2.1): direct-spreading (DS) with orthogonal transmit diversity (OTD), DS in non-OTD mode, and
multi-carrier (MC) mode.
OTD mode is the technique of transmission in Forward Channel, when the symbols are arranged
among multiple antennas and spread with a unique Walsh or quasi-orthogonal function associated with
each antenna.
In multi-carrier (MC) transmission the N > 1 adjacent 1.2288 Mcps direct-spread RF carriers are
used. Interleaved data is demultiplexed onto each of the N adjacent carriers.
In the following, when describing the structure of different Forward Channel subchannels, we will
basically limit the consideration by non-OTD mode. Generalization by the case of transmission over
multiple antennas (carriers) requires correspondent (usually trivial) demultiplexing and does not affect
the basic functional blocks described below.
The general structure of the Forward Channel is shown in Figure 12.16. Forward Channel consists of
the following subchannels.

624
Modulation and Coding Techniques in Wireless Communications
Common
Assignment
Channels
Common
Power Control
Channels
Pilot
Channels
Common
Control
Channels
Sync
Channel
Traffic
Channels
Broadcast
Channels
Paging
Channels
(SR1)
Quick
Paging
Channels
FORWARD CDMA CHANNEL
for Spreading Rates 1 and 3
(SR1 and SR3)
Forward
Pilot
Channel
Transmit
Diversity Pilot
Channel
Auxiliary
Pilot
Channels
Auxiliary Transmit
Diversity Pilot
Channels
0-1 Dedicated
Control
Channel
0-1 Fundamental
Channel
Power Control
Subchannel
0-7 Supplemental
Code Channels (Radio
Configurations 1-2)
0-2 Supplemental
Channels (Radio
Configurations 3-9)
Figure 12.16
Forward Channel Structure
r Common Assignment Channel. A forward common channel used by the base station to acknowledge
a mobile station accessing the Enhanced Access Channel.
r Common Power Control Channel. A forward common channel which transmits power control bits
(that is, common power control subchannels) to multiple mobile stations.
r Pilot channels.
– Forward Pilot Channel. An unmodulated, direct-sequence spread spectrum signal transmitted
continuously by each CDMA base station. The Pilot Channel allows a mobile station to acquire
the timing of the Forward CDMA Channel, provides a phase reference for coherent demodulation,
and provides means for signal strength comparisons between base stations for determining when to
handoff.
– Transmit Diversity Pilot Channel. Used to support forward link transmit diversity. The pilot
channel and the transmit diversity pilot channel provide phase references for coherent demodulation
of forward link CDMA channels which employ transmit diversity.
– Auxiliary Pilot Channel. An auxiliary pilot channel is required for forward link spot beam and
antenna beam forming applications, and provides a phase reference for coherent demodulation of
those forward link CDMA channels associated with the auxiliary pilot.
– Auxiliary Transmit Diversity Pilot Channel. A transmit diversity pilot channel associated with
an auxiliary pilot channel.
r Common Control Channel. A control channel used for the transmission of digital control information
from a base station to one or more mobile stations.
r Sync Channel. A channel which transports the synchronization message to the mobile station.
r Trafﬁc Channel. One or more channels used to transport user and signaling trafﬁc from the base
station to the mobile station.
– Dedicated Control Channel. A channel used for the transmission of higher-level data, control
information, and power control information from a base station to a mobile station.
– Fundamental Channel. A channel which carries a combination of higher-level data and power
control information.
– Power Control Subchannel. A subchannel used by the base station to control the power of a mobile
station when operating on the Reverse Trafﬁc Channel.
– Supplemental Code Channel. A channel which operates in conjunction with other channels to
provide higher data rate services, and on which higher-level data is transmitted.

CDMA2000 and Its Evolution
625
Pilot
Channels
(All 0’s)
Signal Point
Mapping
0 →+1
1 →–1
Channel
Gain
XI
XQ
0
Figure 12.17
Pilot Channel structure
– Supplemental Channel. A channel which operates in conjunction with other channels to provide
higher data rate services, and on which higher-level data is transmitted.
r Broadcast Channel. A channel used for transmission control information and pages from a base
station to a mobile station.
r Paging Channel. A channel used for transmission control information and pages from a base station
to a mobile station.
r Quick Paging Channel. An uncoded, spread, and On-Off-Keying (OOK) modulated spread spectrum
signal sent by a base station to inform mobile stations operating in the slotted mode during the idle
state whether to receive the Forward Common Control Channel or the Paging Channel starting in the
next Forward Common Control Channel or Paging Channel frame.
The structures of the channels are shown in Figures 12.17–12.28.
The structure of the Forward Trafﬁc Channel in Figure 12.26 is shown only for radio-conﬁguration
RC3, from the functional point of view it is similar to other conﬁgurations.
Connection between outputs in Figures 12.17–12.26 and inputs of I and Q mapping in Figure 12.28 is
deﬁned by demultiplexing scheme as shown in Figure 12.27.
The description of basic functional blocks of Forward Channel is given below.
12.3.2
Forward Error Correction
As in the case of transmission over the Reverse Channel, the convolutional and turbo-codes may be used
to provide an error-correction coding in the Forward Channel.
12.3.2.1
Convolutional Coding
In the Forward Channel the convolution codes with constraint length K = 9 and rate 1/2, 1/3, 1/4 and
1/6 are used, depending on radio-conﬁguration, spreading rate and subchannel being used. The codes on
rates 1/2, 1/3 and 1/4 are completely similar to those being used in Reverse Channel and described in
section 12.2.2.1.
The structure of the convolutional code with rate 1/6 is presented in Figure 12.29.
Signal Point
Mapping
0 →+1
1 →–1
Channel
Gain
XI
XQ
0
Modulation
Symbol
Block
Interleaver
Symbol
Repetition
Convolutional
Encoder
Sync
Channel
Bits
Figure 12.18
Sync Channel structure

626
Modulation and Coding Techniques in Wireless Communications
+
X1
+
XQ
Paging
Channel
Bits
Convolutional
Encoder
Symbol
Repetition
Modulation
Symbol
Signal Point
Mapping
0 →+1
1 →–1
0
Channel
Gain
Long Code
Mask for
Paging
Channel
Long Code
Generator
Decimator
Figure 12.19
Paging Channel structure
Broadcast Channel Bits
Add 16-Bit
Frame
Quality
Indicator
Add 8-Bit
Encoder
Tail
Convolutional
Encoder
Block
Interleaver
Sequence
Repetition
Modulation
Symbol
Signal Point
Mapping
0 →+1
1 →–1
Channel
Gain
X
Modulation
Symbol Rate
Scrambling Bit Repetition
Long Code
Mask for
Broadcast
Channel
Long Code
Generator
I and Q Scrambling Bit Extractor
Figure 12.20
Broadcast Channel structure
Quick Paging Channel
Indicators
Symbol
Repetition
Modulation
Symbol
Signal Point Mapping
+1 When Indicator Enabled
0 Otherwise
Channel
Gain
X
Figure 12.21
Quick Paging Channel structure

CDMA2000 and Its Evolution
627
I Arm
Input
PC Bits
Assigned
Initial
Offset 0
Assigned
Initial
Offset N – 1
I Arm Modulation Symbol
Symbol
Present
Indicator
Channel
Gain
XI
Signal Point Mapping
0 → +1
1 → –1
No Symbol → 0
Symbol
Repetition
MUX
MUX
Q Arm
Input
PC Bits
Assigned
Initial
Offset 0
Assigned
Initial
Offset N – 1
Symbol
Repetition
Channel
Gain
Signal Point Mapping
0 → +1
1 → –1
No Symbol → 0
XQ
Relative
Offset
Calculation
Decimator
Long Code
Generator
Long Code Mask
for Common
Power Control
Channel
Q Arm Modulation Symbol
Symbol
Present
Indicator
...
...
Figure 12.22
Common Power Control Channel structure
Common Assignment
Channel Bits
Add 8-Bit
Frame
Quality
Indicator
Add 8-Bit
Encoder
Tail
Convolutional
Encoder
Block
Interleaver
Modulation
Symbol
Signal Point Mapping
0 →+1
1 →1
No Message → 0
Channel
Gain
X
Modulation
Symbol Rate
Scrambling Bit Repetition
Long Code
Mask for
Common
Assignment
Channel
Long Code
Generator
I and Q Scrambling Bit Extractor
Message
Present
Indicator
Figure 12.23
Common Assignment Channel structure

628
Modulation and Coding Techniques in Wireless Communications
Forward
Common
Control
Channel
Bits
Add 8-Bit
Encoder
Tail
Convolutional
Encoder
Block
Interleaver
Signal Point Mapping
0 → +1
1 → –1
Channel
Gain
X
Modulation
Symbol Rate
Scrambling Bit Repetition
Long Code
Mask for
Forward 
Common
Control 
Channel
Long Code
Generator
I and Q Scrambling Bit Extractor
Modulation
Symbol
Figure 12.24
Common Control Channel structure
Forward
Dedicated
Control
Channel
Bits
Add
Frame
Quality
Indicator
Add 8
Encoder
Tail Bits
Convolutional
Encoder
Block
Interleaver
W
Modulation
Symbol
Figure 12.25
Dedicated Control Channel structure
Block
Interleaver
Channel
Bits
Add 8
Reserved/
Encoder
Tail Bits
Add
Frame 
Quality
Indicator
Convolutional
or Turbo
Encoder
Symbol
Repetition
Symbol
Puncture
Modulation
Symbol
Signal Point
Mapping
0→+1
1→–1
Channel
Gain
Power
Control
Symbol
Puncture
Forward Power
Control
Subchannel
Gain
Power Control
Bits
Puncture Timing
Control
Power
Control
Bit Position
Extractor
Decimator
Long Code
Generator
Long Code
Mask
for User m
Modulation
Symbol Rate
Scrambling Bit Repetition
I and Q Scrambling Bit Extractor
I and Q
mapping
s(t)
Figure 12.26
Forward Trafﬁc Channel structure, RC3 mode

CDMA2000 and Its Evolution
629
DEMUX
X
YI
YQ
YI
YQ
XI
XQ
Figure 12.27
Demultiplexer structure
12.3.2.2
Turbo-Coding
In the Forward Channel the turbo-codes with rates 1/2, 1/3 and 1/4 are used. The structure of the encoders,
as well as interleaving and puncturing schemes are completely the same as used in Reverse Channel and
described in section 12.2.2.2.
12.3.3
Codeword Symbols Repetition
The output of error-correction encoders are repeated by the factors dependent on channel being used and
radio-conﬁguration.
Σ
Baseband
Filter
Σ
Baseband
Filter
Σ
When
Enabled,
Rotate
by 90º
(Output
–Qin + jIin)
Walsh
Function
QOFsign
YI
YQ
Iin
Qin
Walshrot
Enable
PNI
PNQ
+
+
+
–
Complex Multiplier
Q
I
sin(2πfct)
cos(2πfct)
s(t)
+
+
Figure 12.28
I and Q mapping

630
Modulation and Coding Techniques in Wireless Communications
Information
Bits
(Input)
Code
Symbols
(Output)
g0
g1
g2
g3
g4
g5
c0
c1
c2
c3
c4
c5
Figure 12.29
Rate 1/6 convolutional encoder structure
12.3.4
Puncturing
In some radio-conﬁgurations after the symbols repetition one more puncturing procedure is performed,
see Figure 12.26.
12.3.5
Block Interleaving
After procedures of codeword symbols repetition and puncturing the data is block interleaved, as shown
in Figures 12.17–12.26. The parameters of interleaving depend on the radio-conﬁguration and the mode
being used (DS or MC).
12.3.6
Sequence Repetition
When transmitting over the Broadcast Channel (see Figure 12.20) the sequence repetition is applied.
Depending on the transmission rate the sequences are repeated twice, four times or not repeated at all.
12.3.7
Data Scrambling
When transmitting over the Paging, Broadcast, Common Assignment, Forward Common Control and
Forward Trafﬁc Channels the data are scrambled, see Figures 12.19, 12.20, 12.23, 12.24, and 12.26. For
scrambling the PN-sequence is used, obtained from the long code.

CDMA2000 and Its Evolution
631
12.3.8
Orthogonal and Quasi-Orthogonal Spreading
When using the radio-conﬁgurations RC1 and RC2 the Walsh functions are used for orthogonal spreading.
When using the radio-conﬁgurations RC3 to RC9 the Walsh functions or quasi-orthogonal functions are
used. The maximal length of Walsh sequence is 128 bits for SR1 and 256 bits for SR3.
Quasi-orthogonal functions (QOF) are obtained from Walsh functions masked by multiplication on
QOFsign sequences and “rotation”, deﬁned by Walshrot sequence, see Figure 12.28.
12.3.9
Quadrature Spreading
The procedure of quadrature spreading is shown in Figure 12.28.
For the quadrature spreading the PN-sequences are used, analogous to short codes described in Section
12.2.7. For SR1 or MC SR3 modes of the Forward Channel the registers similar to shift registers (12.1)
and (12.2) of Reverse Channel’s SR1 mode are used.
For DS SR3 mode of the Forward Channel the shift register, similar to (12.3) of Reverse Channel’s
SR3 mode is used.
12.3.10
Frame Quality Indicator
The frames of Broadcast, Common Assignment, Forward Dedicated Control, Forward Fundamental,
Forward Supplemental and Forward Supplemental Code Channels, apart from the information bits and
bits dedicated to encoder tail bits, contain the cyclic redundancy check (CRC) which is called Frame
Quality Indicator. Depending on the channel type and transmission rate the CRC of lengths 16, 12, 10,
8 and 6 bits are used. For this purpose the same generator polynomials as for Reverse Channel are used,
see (12.4) in section 12.2.8.
The shift register for 16-bit Frame Quality Indicator is depicted in Figure 12.15. The other registers
may be constructed by the correspondent generator polynomials similarly.
12.4
Architecture Model of CDMA2000 1xEV-DO Standard
Next we will consider the development of CDMA2000 standard – the CDMA2000 1xEV-DO standard.
In this development, besides the transmission of the voice information, one of the main tasks is the
improvement of basic CDMA2000 standard for digital data transmission. This is given the widely used
title of this standard as EV-DO — “evolution-data optimized”.
Consider the model shown in Figure 12.30. It includes the access terminal, access network and air
interface. The access terminal is the user’s device allowing user to access the network. Access network is
the analogue of base station, that is, equipment allowing organizing access points for interoperation with
user (in fact organizing the “last mile” between network and user’s end point). The subparts of access
network are the sectors, which are distinguished by their identiﬁers. The CDMA2000 standard describes
an air interface between access terminal and access network.
The standard describes seven levels of the standard OSI model: Application Layer, Stream Layer,
Session Layer, Connection Layer, Security Layer, MAC Layer, and Physical Layer. For each of these
layers the default protocols are deﬁned, as well as non-default protocols.
In the following we will brieﬂy describe the physical layer of CDMA2000 1xEV-DO Revision B
standard [1]. For the physical layer the standard deﬁnes four subtypes: the one default subtype (subtype
0) and three non-default subtypes (subtype 1, subtype 2 and subtype 3).

632
Modulation and Coding Techniques in Wireless Communications
Air Interface
Access Terminal
Access Network
Sector
Figure 12.30
Architecture reference model
12.4.1
Structure of Physical Layer Packet
The length of the packet of physical layer may be equal to 256, 512, 1024, 2048, 3072 or 4096 bit,
depending on the transmission channel and physical layer subtype being used. Each physical layer
packet contains one or more packets from the MAC layer. The lengths of physical layer packets and the
number of contained MAC-packets are listed in the Table 12.6.
The structure of the physical layer packet is shown in Figure 12.31. Here the MAC layer packet is the
packet obtained from the higher (MAC) layer of the network, FCS (frame check sequence) is the CRC
code for integrity check, TAIL is the ﬁeld for encoder’s tail bits, which should be always equal to 0.
12.4.2
FCS Computation
FCS computation is performed by the following scheme (Figure 12.32), using the linear feedback shift
register, deﬁned by the polynomial:
g(x) = x16 + x12 + x5 + 1
In the beginning, all register cells are initialized with zeros. Switches in Figure 12.32 are set in “up”
position. The input is the symbols of the ﬁrst ﬁeld of physical layer packet (in Figure 12.31 this is
the MAC layer packet), which are summed with the register’s output and deﬁned the feedback values
(during this time the symbols themselves are output without changing). Then the switches are set down,
the register is clocked 16 more times and the FCS ﬁeld of the physical layer packet is ﬁlled by the
register’s output. The TAIL ﬁeld remains unchanged.
Table 12.6
The lengths of physical layer packets and the number of transmitted MAC-packets
Channel
PHY subtype
Packet length
Number of MAC-packets
Control
0, 1
1024
1
Access
0
1
256
256, 512, 1024
1
1
Forward trafﬁc
0, 1
1024, 2048, 3072, 4096
1,2,3,4
Reverse trafﬁc
0, 1
256, 512, 1024, 2048, 4096
1

CDMA2000 and Its Evolution
633
MAC layer packet
TAIL (6 bits)
FCS (16 bits)
Figure 12.31
The structure of the physical layer packet
12.5
Access Terminal of the CDMA2000 1xEV-DO Standard
12.5.1
Power Control
The management of the access terminal’s output power is performed by combining the open-loop power
control and closed-loop power control.
Open-loop power control is performed by the access terminal itself, taking into account the power
of the signal received from the forward communication channel. Access terminal deﬁnes the power for
signal transmission over the pilot channel, and from this value the output powers for the transmission
over the other channels are deﬁned.
As the result of the open-loop power control, the access terminal obtains the estimate for the output
power, which is then corrected by means of the closed-loop power control. With closed-loop power
control the access terminal takes into account the commands transmitted from the access network over
the special channel named Reverse Power Control Channel (RPC Channel), see section 12.6.4. This
channel is the part of the forward channel from the access network to the access terminal, see section
12.6.1.
The access network transmits the signals ‘0’ and ‘1’ over the RPC channel, which give the command
to the access terminal to increase or decrease the transmission power, correspondingly. Power increasing
and decreasing is performed by the ﬁxed value RPCStep, which is the parameter of Reverse Trafﬁc
Channel in MAC Protocol. So, the access network may control the power of signals from the access
terminals based on the quality of signals received from them. This may be required, for instance, to
equalize the power of the received signals from the access terminals which are on different distances
from the base station, or transmitting under different channel conditions.
12.5.2
Reverse Channel Structure
Reverse Channel is the channel connecting the access terminal to the access network. The structure of
the Reverse Channel for physical layer subtype 0 and 1 is shown in Figure 12.33.
The main subchannels of the Reverse Channel are listed and described below.
X0
X1
X5
X12
X15
Input
‘0’
‘0’
Output
Figure 12.32
Calculation of the FCS check ﬁeld for the physical layer packet

634
Modulation and Coding Techniques in Wireless Communications
Pilot
Data
Pilot
Reverse rate
indicator
Data rate
control
Ack
Data
Access
Traffic
Reverse
Figure 12.33
Reverse Channel structure
r Access channel — intended for initializing the connection between the access terminal and access
network or to respond to an access terminal directed message. For each sector of the access network
there is the correspondent access channel, identiﬁed by the long code.
– Pilot channel — intended for pilot signals transmission.
– Data channel — intended for data transmission.
r Trafﬁc channel — used for connecting the access terminal to the access network. Prior to the
access terminal authentication the trafﬁc channel is used as non-dedicated resource. After successful
authentication the channel may be used as dedicated resource for given access terminal.
– Pilot channel — intended for pilot signals transmission.
– Data channel — intended for data transmission.
– Reverse rate indicator (RRI) channel — indicates the transmission rate in the Reverse Trafﬁc
Channel.
– Data rate control (DRC) channel — indicates the rate on which the access terminal may receive
data from the Forward Trafﬁc Channel, and also the sector from which the access terminal would
like to receive the Forward Trafﬁc Channel.
– Acknowledgment (ACK) channel — indicates to the access network on success or failure in
receiving from the Forward Trafﬁc Channel.
The general structures of the Access Channel and Reverse Trafﬁc Channel are shown in Figures 12.34
and 12.35. The features of these channels are considered in Sections 12.5.4 and 12.5.5, and then the
common blocks are described.
12.5.3
Modulation Parameters and Transmission Rates
Modulation parameters for the Access Channel and Reverse Trafﬁcs Channel are listed in Table 12.7.
When using the subtype 0 of the physical layer (default subtype) the transmission from the access
terminal is performed on the rate of 9.6 kbps. In case of using the subtype 1 the transmission rate may
achieve 9.6, 19.2 or 38.4 kbps, correspondent to the parameters of MAC protocol.
When transmitting over the Trafﬁc Channel the transmission rate may be equal to 9.6, 19.2, 38.4, 76.8
or 153.6 kbps, correspondent to the parameters of MAC protocol.
12.5.4
Access Channel
The structure of the Access Channel is shown in Figure 12.34. The rates and packet sizes indicated in
the ﬁrst row for the Data Channel packets, are correspondent to the physical layer subtype 0 (default

CDMA2000 and Its Evolution
635
Signal Point
Mapping
0 > +1
1 > 1
W0
16 =(++++++++++++++++)
Signal Point
Mapping
0 > +1
1 > 1
Interleaved
Packet
Repetition
Channel
Interleaver
Encoder
Pilot 
Channel
(All 0's)
Data Channel
Physical Layer
Packets
W2
4 =(++ )
Baseband
Filter
Baseband
Filter
Quadrature
Spreading
(Complex Multiply)
I’ = I PNI
Q PNQ
Q’ = I PNQ + Q PNI
Data
Channel
Relative
Gain
cos(2πfct)
sin(2πfct)
Σ
S(t)
I’
I
Q’
Q
1.2288 Mcps
Decimator
by Factor
of 2
PQ
Q Channel
Short
PN Sequence
PNQ
PNI
Walsh Cover
(+ 
)
PI
I Channel
Short
PN Sequence
UQ
Q Channel
Access Long
Code
PN Sequence
UI
I Channel
Access Long
Code
PN Sequence
Figure 12.34
Access Channel structure

636
Modulation and Coding Techniques in Wireless Communications
Table 12.7
Modulation parameters
Data Rate (kbps)
Parameter
9.6
19.2
38.4
76.8
153.6
Reverse Rate Index
1
2
3
4
5
Bits per Physical Layer Packet
256
512
1,024
2,048
4,096
Physical Layer Packet Duration (ms)
26.66. . .
26.66. . .
26.66. . .
26.66. . .
26.66. . .
Code Rate
1/4
1/4
1/4
1/4
1/4
Code Symbols per Physical Layer Packet
1,024
2,048
4,096
8,192
8,192
Code Symbol Rate (ksps)
38.4
76.8
153.6
307.2
307.2
Interleaved Packet Repeats
8
4
2
1
1
Modulation Symbol Rate (ksps)
307.2
307.2
307.2
307.2
307.2
Modulation Type
BPSK
BPSK
BPSK
BPSK
BPSK
PN Chips per Physical Layer Packet Bit
128
64
32
16
8
subtype), while the subtype 1 also supports parameters indicated in the second and third rows (see section
12.5.3).
To establish the connection over the Access Channel the access probe is done, which means the
transmission of the preamble and then — one or more packets of the physical layer Access Channel.
The preamble consists of transmission only the symbols of the pilot channel (over in-phase component
channel), and during the transmission of the Access Channel packet both the symbols of Pilot Channel
(over in-phase component channel) and Data Channel (over quadrature component channel) are sent.
Over the Pilot Channel unmodulated signals ‘0’ are transmitted. Transmission over the Pilot Chanel is
performed continuously, the signals are sent over the in-phase channel with covering by Walsh sequence
W 16
0 = (+ + + + + + + + + + + + + + ++).
During the access probe, after preamble transmission one or more Access Channel physical layer
packets are sent over the quadrature channel with Walsh covering W 4
2 = (+ + −−).
12.5.5
Reverse Trafﬁc Channel
The structure of the Reverse Trafﬁc Channel is shown in Figure 12.35.
The Pilot Channel, DRC Channel, ACK Channel and Data Channel are orthogonally spread with
Walsh functions of length 4, 8 or 16.
The frame of the Reverse Channel Trafﬁc has the duration of 26.66 . . . µs. The frame consists of 16
slots of duration 1.66 . . . µs, each slot contains 2048 chips.
Next we will describe the functioning of different channels shown in Figure 12.35.
12.5.5.1
Pilot Channel
Access terminal transmits unmodulated signals ‘0’ over the Pilot Channel. Transmission over the Pilot
Channel is made continuously, the pilot signals are time-division multiplexed with RRI Channel. The
transmission is made over the in-phase channel with Walsh covering by sequence W 16
0 = (+ + + + + +
+ + + + + + + + ++). The transmission over the Pilot Channel and RRI channel is performed with
equal power.

CDMA2000 and Its Evolution
637
Puncture 
Last 3 
Symbols
Pilot Channel
(All 0's)
RR  Symbols 
DRC Symbols 
DRC Cover 
Symbols 
ACK Channel 
Data Channel 
Physical Layer 
Packets
Simplex 
Encoder
Bi-
Orthogonal
Encoder
Encoder
Codeword
Repetition
Codeword
Repetition
TDM
7 1
Signal Point
Mapping 
0->+1
1->-1
Bit Repetition 
Channel 
nterleaver
nterleaved 
Packet
Repetition
Signal Point
Mapping 
0->+1
1->-1
Walsh Cover 
wi
8  i=0
7
Signal Point
Mapping 
0->+1
1->-1
Signal Point
Mapping 
0->+1
1->-1
W8
16 (++++++++--------)
W4
8 (++++----)
W2
4 (++--)
W0
16 (++++++++++++++++)
Σ
Σ
ACK Channel 
Relative Gain
DRC Channel 
Relative Gain
Data Channel 
Relative Gain
Q
PNI
PNQ
Quadrature 
Spreading 
(Complex Multiply)
=  PNI – Q PNQ
Q =  PNQ -Q PNI
PI
-Channel 
Short 
PN Sequence
UI
-Channel 
User Long-Code
PN Sequence
Decimator 
by Factor 
of 2
Σ
Baseband 
Filter
Baseband 
Filter
Walsh Cover 
(+ -)
PQ
-Channel 
Short 
PN Sequence
UQ
-Channel 
User Long-Code
PN Sequence
sin(2πfct)
cos(2πfct)
s(t)
Figure 12.35
Reverse Trafﬁc Channel structure

638
Modulation and Coding Techniques in Wireless Communications
Table 12.8
RRI symbols encoding
Data Rate (kbps)
RRI Symbol
RRI Codeword
0
000
0000000
9.6
001
1010101
19.2
010
0110011
38.4
011
1100110
76.8
100
0001111
153.6
101
1011010
Reserved
110
0111100
Reserved
111
1101001
12.5.5.2
RRI Channel
With the RRI Channel the access terminal indicates the transmission rate over the Data Channel. The
transmission rate of each 16-slot physical layer packet is encoded by 3 bits, then 3-bit symbol is
encoded into 7-bit, as shown in Table 12.8. Obtained codeword is repeated 37 times, which gives 259-bit
sequences, from which the three last bits are punctured (see Figure 12.35).
Obtained 256 RRI channel bits are time-division multiplexed (TDM, time-division multiplexing) with
the symbols of Pilot Channel as shown in Figure 12.36. Then the multiplexed Pilot and RRI Channels
are spread by sequence W 16
0 and transmitted over the I-channel, see section 12.5.5.1.
12.5.5.3
DRC Channel
The Data Rate Control (DRC) Channel is used by the access terminal to indicate the selected servicing
sector to the access network, and also to indicate the requested data transmission rate for the Forward
Trafﬁc Channel. The DRC Channel is transmitted over the Q-channel, as shown in Figure 12.35.
The requested rate is mapped into 4-bit DRC-value, which is then encoded into 8-bit biorthogonal
codeword in correspondence with Table 12.9.
Obtained 8-bit codeword is repeated twice for each slot. Each bit of the repeated codeword is spread
by 8-bit Walsh sequence W 8
i as shown in Table 12.10, where i is deﬁned by the DRCCover parameter of
MAC protocol for the Forward Trafﬁc Channel. Next, each bit of 8-bit Walsh sequence is spread by the
sequence W 16
8 (see Figure 12.35).
Pilot
RRI
1 Slot
2,048 Chips
256 Chips
1,792 Chips
Figure 12.36
TDM for Pilot and RRI Channels of the Reverse Trafﬁc Channel

CDMA2000 and Its Evolution
639
Table 12.9
DRC symbols encoding
Rate (kbps)
DRC value
Codeword
Null rate
0 × 0
00000000
38.4
0 × 1
11111111
76.8
0 × 2
01010101
153.6
0 × 3
10101010
307.2
0 × 4
00110011
307.2
0 × 5
11001100
614.4
0 × 6
01100110
614.4
0 × 7
10011001
921.6
0 × 8
00001111
1228.8
0 × 9
11110000
1228.8
0 × a
01011010
1843.2
0 × b
10100101
2457.6
0 × c
00111100
Invalid
0 × d
11000011
Invalid
0 × e
01101001
Invalid
0 × f
10010110
The DRC Channel may function either constantly or periodically (gated functioning), under control
of the MAC protocol Forward Trafﬁc Channel. In this case the slots for which the DRC Channel is on,
are called active.
12.5.5.4
ACK Channel
The ACK Channel is used for informing the access network about success or failure in receiving the
packet from the Forward Trafﬁc Channel. The symbols of ACK Channel are modulated by BPSK, where
‘0’ corresponds to successful receive acknowledgement (ACK), and ‘1’ corresponds to error (negative
acknowledgement, NAK). If the physical layer packet of the Forward Trafﬁc Channel is transmitted in
slot n, then the correspondent bit of ACK Channel is transmitted in slot n + 3 of the Reverse Trafﬁc
Channel. The transmission over the ACK Channel takes the half of the slot, is spread by Walsh sequence
W 8
4 (see Figure 12.35) and is performed by the I-channel.
12.5.5.5
Data Channel
The transmission over the Data Channel is performed on rates 9.6, 19.2, 38.4, 76.8 or 153.6 kbps. The
data are encoded, block interleaved, repeated and orthogonally spread by Walsh sequence W 4
2 .
Table 12.10
8-bit Walsh
sequences
W08
0000 0000
W18
0101 0101
W28
0011 0011
W38
0110 0110
W48
0000 1111
W58
0101 1010
W68
0011 1100
W78
0110 1001

640
Modulation and Coding Techniques in Wireless Communications
Table 12.11
Turbo-code parameters
Data Rate (kbps)
9.6
19.2
38.4
76.8
153.6
Reverse Rate Index
1
2
3
4
5
Bits per Physical Layer Packet
256
512
1,024
2,048
4,096
Number of Turbo Encoder Input Symbols
250
506
1,018
2,042
4,090
Turbo Encoder Code Rate
1/4
1/4
1/4
1/4
1/2
Encoder Output Block Length (Code Symbols)
1,024
2,048
4,096
8,192
8,192
12.5.6
Encoding
Revers Trafﬁc Channel and Access Channel are encoded with turbo-code. Depending on the size of
physical layer packet the codes with rates 1/2 or 1/4 are used, the parameters of the codes are listed in
Table 12.11. The turbo-code encoder is similar to the encoder from CDMA2000 standard, described in
section 12.2.2.2 for the rates 1/2 and 1/4.
The turbo-interleaving scheme is also similar to the procedure described in section 12.2.2.2, but uses
Table 12.12 instead of Table 12.4.
Table 12.12
Table for turbo-interleaving calculation
Table Index
n = 3 Entries
n = 4 Entries
n = 5 Entries
n = 6 Entries
n = 7 Entries
0
1
5
27
3
15
1
1
15
3
27
127
2
3
5
1
15
89
3
5
15
15
13
1
4
1
1
13
29
31
5
5
9
17
5
15
6
1
9
23
1
61
7
5
15
13
31
47
8
3
13
9
3
127
9
5
15
3
9
17
10
3
7
15
15
119
11
5
11
3
31
15
12
3
15
13
17
57
13
5
3
1
5
123
14
5
15
13
39
95
15
1
5
29
1
5
16
3
13
21
19
85
17
5
15
19
27
17
18
3
9
1
15
55
19
5
3
3
13
57
20
3
1
29
45
15
21
5
3
17
5
41
22
5
15
25
33
93
23
5
1
29
15
87
24
1
13
9
13
63
25
5
1
13
9
15
26
1
9
23
15
13
27
5
15
13
31
15
28
3
11
13
17
81
29
5
3
1
5
57
30
5
15
13
15
31
31
3
5
13
33
69

CDMA2000 and Its Evolution
641
12.5.7
Channel Interleaving and Repetition
The output of the error-correcting encoder is subject to channel interleaving as follows. If the symbols
at the output of interleaver are numbered from 0 to 2L −1, and if the i-th symbol at the interleaver’s
output has bit representation i = (bL−1, . . . , b0), then this symbol is the symbol from interleaver’s input
with number j = (b0, . . . , bL−1).
When transmitting on rates below 76.8 kbps the sequences of codeword symbols are repeated the
number of times listed in Table 12.7, to achieve the modulation symbol rate of 307.2 ksps.
12.5.8
Quadrature Spreading
The powers of ACK Channel, DRC Channel and Data Channel should be scaled relative to the Pilot
Channel, this procedure is performed in “ACK Channel Relative Gain”, “DRC Channel Relative Gain”
and “Data Channel Relative Gain” blocks depicted in Figure 12.35, and also in “Data Channel Relative
Gain” block in Figure 12.34. After scaling is ﬁnished, the stage of quadrature spreading should be
performed.
Pilot Channel and ACK Channel are combined and form the in-phase channel I-Channel, Data Channel
and DRC Channel are forming the quadrature channel Q-Channel similarly. Quadrature spreading is
equivalent to complex multiplication by the pseudo-noise (PN) sequences PNI and PNQ. These sequences
are obtained from the correspondent so-called long codes and short codes.
The procedure of obtaining the sequences PNI and PNQ is shown in Figures 12.34 and 12.35, where
for performing the operation of sequences multiplication the binary sequences are mapped into bipolar,
so that ‘0’ is mapped to ‘1’, and ‘1’ is mapped to ‘−1’. During the decimation procedure every second
symbol is destroyed and replaced by the preceding symbol, so there are the pairs of similar symbols
at the output of decimator. After combining with the Walsh sequence (+−) the ﬁrst symbol remains
unchanged, while the second changes its sign.
The procedure similar to that being described in section 12.2.7 is used to obtain the long PN-sequences
UI and UQ. To achieve this, the same PN-sequence is used, which is then masked by two different masks
MI and MQ deﬁned by the MAC layer protocol. For the Access Channel the long code identiﬁes the
sector, and masks MI and MQ are dependent on SectorID parameter. In case of Reverse Trafﬁc Channel
the long codes identify different users, and masks MI and MQ are dependent on ATI (Access Terminal
Identiﬁer) parameter.
To obtain the long code, the same common register is used as described in section 12.2.7 for the
CDMA2000 standard. This shift register is deﬁned by the polynomial:
p(x) = x42 + x35 + x33 + x31 + x27 + x26 + x25 + x22 + x21 + x19
+x18 + x17 + x16 + x10 + x7 + x6 + x5 + x3 + x2 + x + 1
The output of this register is masked with the symbols of masking sequences by means of component-wise
multiplication, as shown in Figure 12.37.
The short codes are obtained from the registers deﬁned by polynomials:
PI(x) = x15 + x10 + x8 + x7 + x6 + x2 + 1
for in-phase component and:
PQ(x) = x15 + x12 + x11 + x10 + x9 + x5 + x4 + x3 + 1
for quadrature component, which are similar to correspondent polynomials for spreading rate 1 in
CDMA2000 standard, see section 12.2.7.

642
Modulation and Coding Techniques in Wireless Communications
Modulo 2
Addition
Modulo 2
42
41
40
39
8
7
6
5
4
3
2
1
Addition
Figure 12.37
Long codes generation

CDMA2000 and Its Evolution
643
Forward
Pilot
Medium
Access
Control
Control
Traffic
Reverse
Activity
DRCLock
Reverse
Power
Control
Figure 12.38
Forward Channel structure
At the beginning of each long codes period the long codes generator should be initialized by the value
0x24B91BFD3A8.
12.6
Access Network of the CDMA2000 1xEV-DO Standard
There is the transmitter in each sector of the access network. The channel from the transmitter to the
user station (access terminal) is called the forward channel. The structure of the CDMA2000 1xEV-DO
Forward Channel and its basic functional blocks are described in this section.
12.6.1
Forward Channel Structure
Forward Channel is the channel connecting the access network to the access terminal. The structure of
the Forward Channel is shown in Figure 12.38.
The main subchannels of the Forward Channel are listed and described below.
r Pilot channel — the portion of the Forward Channel that carries the pilot.
r Control channel — the channel that carries data to be received by all access terminals monitoring the
Forward Channel.
r Trafﬁc channel — used for data transmission to particular access terminal. Prior to the access terminal
authentication the trafﬁc channel is used as non-dedicated resource. After successful authentication
the channel may be used as dedicated resource for given access terminal.
r MAC Channel — the portion of the Forward Channel dedicated to Medium Access Control activities.
The Forward MAC Channel consists of the Reverse Power Control (RPC), DRCLock, and Reverse
Activity (RA) Channels.
– Reverse Activity channel — indicates activity level on the Reverse Channel.
– DRCLock channel — indicates to the access terminal whether or not the access network can receive
the DRC Channel and Reverse Link Channel sent by the access terminal.
– Reverse Power Control (RPC) channel — controls the power of the Reverse Channel for one
particular access terminal.
The structure of the Forward Channel is shown in Figure 12.39. As can be seen from Figure 12.39,
the channels included in Forward Channel (see Figure 12.38) are time-multiplexed with each other. The

644
Modulation and Coding Techniques in Wireless Communications
RPC Channel
Gain: G(i)
C
D
C
D
A
B
A
B
S
Forward Traffic
Channel or
Control Channel
Physical Layer
Packets
Encoder
R = 1/3
or 1/5
Scrambler
Channel
Interleaver
QPSK/
8 PSK/
16 QAM
Modulator
I
Q
I
Q
I
Q
I
Q
I
Q
I
Q
I
Q
16 Channels
Sequence
Repet tion/
Symbol
Puncturing
Symbol
DEMUX
1 to 16
16 ary
Walsh
Covers
Walsh
Channel
Gain =
1/4
Walsh
Chip Level
Summer
32 Symbol Bi
Orthogonal Cover
with MACIndex i
Preamble I
(All 0's)
Signal Point
Mapping
0 > +1
1 > 1
Sequence
Repetition
I
Q
0
64 ary Walsh Cover for
MACIndex i
I Channel for
Even MACIndex
Q Channel for
Odd MACIndex
64 to 1,024
PN Chips
per Physical
Layer Packet
for Preamble
TDM
I Walsh
Channels
Q Walsh
Channels
I
Q
I
Q
I
Q
Sequence
Repetition
(Factor = 4)
Walsh
Chip Level
Summer
TDM
Signal Point
Mapping
0 > +1
1 > 1
Signal Point
Mapping
0 > +1
1 > 1
Signal Point
Mapping
0 > +1
1 > 1
Signal Point
Mapping
0 > +1
1 > 1
MAC Channel 
RPC Bits for
MACIndex i
MAC Channel 
DRCLock
symbols for 
MACIndex i
Bit
Repetition
(Factor =
DRCLockLength)
DRCLock
Channel Gain:
G'(i)
MAC Channel
RA Bits 1 
Bit per Slot
Pilot Channel
(All 0’s)
RA
Channel
Gain
Walsh Cover W
I
Walsh Cover 0
256 PN
Chips
per Slot
for MAC
0
192 PN
Chips
per Slot
for Pilot
cos(2πfct)
sin(2πfct)
Forward
Modulated
Waveform
Note  The Walsh covers and PN
sequences are represented with ±1
values with the mapping +1 for
binary 0’ and 1 for binary ‘1’
Baseband
Filter
Baseband
Filter
Quadrature
Spreading
(Complex Multiply)
I = I PN
Q PN
Q = I PN + Q PN
PN
Q Channel
PN Sequence
PN
I Channel
PN Sequence
Figure 12.39
Forward Channel structure

CDMA2000 and Its Evolution
645
½ Slot
1,024 Chips
½ Slot
1,024 Chips
Data
400
Chips
MAC
64
Chips
Pilot
95
Chips
Data
400
Chips
Data
400
Chips
Data
400
Chips
MAC
64
Chips
MAC
64
Chips
MAC
64
Chips
MAC
64
Chips
MAC
64
Chips
MAC
64
Chips
MAC
64
Chips
Pilot
95
Chips
Pilot
95
Chips
Pilot
95
Chips
Idle Slot
Active Slot
Figure 12.40
Forward Channel slot structure
transmission over the Forward Channel is performed in slots of 2048 chips. Pilot Channel, MAC Channel
and Trafﬁc or Control Channel are time-multiplexed within each slot, as shown in Figure 12.40.
The functional blocks of the channels within the Forward Channel structure, shown in Figure 12.39,
are described below.
12.6.2
Modulation Parameters and Transmission Rates
Modulation parameters and possible transmission rates for the Forward Trafﬁc Channel and Control
Channel are listed in Table 12.13.
The symbols of MAC Channel are modulated with BPSK, as shown in Figure 12.39 and described
further in section 12.6.4.
12.6.3
Pilot Channel
The Pilot Channel transmits unmodulated signal, containing ‘0’, over in-phase component. This channel
is used for synchronization and other functions which may be needed by the access terminal in sector’s
coverage area.
12.6.4
Forward MAC Channel
The Forward MAC Channel consists of three subchannels — Reverse Power Control (RPC) Channel,
DRCLock Channel and Reverse Activity (RA) Channel. The RPC and DRCLock Channels are time-
multiplexed and transmitted via the same MAC-channel.
Symbols, which are transmitted over the channel are modulated with BPSK and covered by Walsh
sequences W 64
i , where i may take values from 0 to 63. The selection of particular sequence is deﬁned by
the MACIndex parameter. For even values of MACIndex (0, 2, . . ., 62) the Walsh sequences W 64
0 ,. . .,W 64
31
are used, and correspondent subchannels are transmitted over in-phase component, while for odd values
of MACIndex (1, 3, . . ., 63) the Walsh sequences W 64
32 , . . . , W 64
63 are used, and correspondent subchannels
are transmitted over quadrature component.
The MAC-channel symbols after Walsh covering are repeated four times within a slot in blocks of 64
chips, just before the pilot symbols and after them, see Figure 12.40.

646
Modulation and Coding Techniques in Wireless Communications
Table 12.13
Modulation parameters of the Forward Trafﬁc Channel and Control Channel
Number of Value per Physical Layer Packet
Data Rate
Code
Modulation
TDM Chips (Preamble,
(kbps)
Slots
Bits
Rate
Type
Pilot, MAC, Data)
38.4
16
1,024
1/5
QPSK
1,024
3,072
4,096
24,576
76.8
8
1,024
1/5
QPSK
512
1,536
2,048
12,288
153.6
4
1,024
1/5
QPSK
256
768
1,024
6,144
307.2
2
1,024
1/5
QPSK
128
384
512
3,072
614,4
1
1,024
1/3
QPSK
64
192
256
1,536
307.2
4
2,048
1/3
QPSK
128
768
1,024
6,272
614.4
2
2,048
1/3
QPSK
64
384
512
3,136
1,228.8
1
2,048
1/3
QPSK
64
192
256
1,536
921.6
2
3,072
1/3
8-PSK
64
384
512
3,136
1,843.2
1
3,072
1/3
8-PSK
64
192
256
1,536
1.228,8
2
4,096
1/3
16-QAM
64
384
512
3,136
2,457.6
1
4,096
1/3
16-QAM
64
192
256
1,536

CDMA2000 and Its Evolution
647
12.6.5
Control Channel
Control Channel transmits the broadband messages and access-terminal-directed messages. The mes-
sages are transmitted over the Control Channel on rates 76.8 kbps or 38.4 kbps. Modulation parameters
for the Control Channel are the same as for the Forward Trafﬁc Channel. Determining the transmission
mode (Control Channel or Forward Trafﬁc Channel) is made by the value of MACIndex (the value of
MACIndex, corresponding to Control Channel, equals 2 for the rate of 76.8 kbps and 3 for the rate of
38.4 kbps).
12.6.6
Forward Trafﬁc Channel
12.6.6.1
Forward Trafﬁc Channel Preamble
Preamble, being transmitted with Forward Trafﬁc Channel or Control Channel, serves for establishing
the synchronization on the access terminal side. Preamble consists of all-‘0’ and is transmitted over
the in-phase component only. Preamble sequence is covered by Walsh sequences W 32
i/2 and their bitwise
complements W 32
(i−1)/2, where i ∈[0, 63] is MACIndex parameter (see section 12.6.4).
Depending on the transmission rates the preamble sequence may be repeated several times (from
2 to 32).
12.6.6.2
Encoding
For encoding the Forward Trafﬁc Channel the turbo-codes with rates 1/3 and 1/5 are used.
The physical layer packets of the Forward Trafﬁc Channel are encoded similar to encoding in Reverse
Channel (see section 12.5.6), that is, the TAIL ﬁeld symbols are omitted, other symbols are encoded,
and 6/R tail symbols are added.
Encoding parameters are listed in Table 12.14.
Encoder structure is similar to that described in section 12.5.6 and shown in Figure 12.11. To achieve
the required rates the encoder output is subject to repetition and puncturing. The puncturing scheme for
the codeword symbols is given in Table 12.15, and the puncturing scheme for the tail symbols is similar
Table 12.14
Encoding parameters for Forward Trafﬁc Channel
Values per Physical Layer Packet
Data Rate
(kbps)
Slots
Bits
Turbo Encoder Input
Bits
Code Rate
Turbo Encoder Output
Symbols
38.4
16
1,024
1,018
1/5
5,120
76.8
8
1,024
1,018
1/5
5,120
153.6
4
1,024
1,018
1/5
5,120
307.2
2
1,024
1,018
1/5
5,120
614.4
1
1,024
1,018
1/3
3,072
307.2
4
2,048
2,042
1/3
6,144
614.4
2
2,048
2,042
1/3
6,144
1,228.8
1
2,048
2,042
1/3
6,144
921.6
2
3,072
3,066
1/3
9,216
1,843.2
1
3,072
3,066
1/3
9,216
1,228.8
2
4,096
4,090
1/3
12,288
2,457.6
1
4,096
4,090
1/3
12,288

648
Modulation and Coding Techniques in Wireless Communications
Table 12.15
Puncturing the codeword symbols of
turbo-code
Code Rate
Output
1/3
1/5
X
1
1
Y0
1
1
Y1
0
1
X
′
0
0
Y
′
0
1
1
Y
′
1
0
1
to those given in Table 12.3, where the ﬁrst column (for rate 1/2) corresponds to the rate-1/3 case in
Forward Channel, and the second column (for rate 1/4) corresponds to the rate of 1/5.
Besides the puncturing procedure, the repetition is also used during the last six clocking for calculating
the tail bits. For the rate 1/5 the output of the ﬁrst three clocks is XXY0Y1Y1, the output of the next three
clocks is X′X′Y′0Y′1Y′1. For the rate 1/3 the output of the ﬁrst three clocks is XXY0, the output of the
next three clocks is X′X′Y′0.
Turbo-interleaver is similar to that being described in section 12.5.6 and shown in Figure 12.12. For
the physical layer packets lengths of 1024, 2048 and 4096 the value of parameter n is equal to 5, 6 and 7
correspondingly. For the packet length 3072 the value of n is set to 7. For turbo-interleaving calculation
Table 12.12 is used (columns, correspondent to the values of n = 5, 6 and 7).
12.6.6.3
Scrambling
The decoder’s output is subject to scrambling for randomizing the resulting value. The scrambling
procedure concludes in a summation of encoded symbols with the pseudorandom sequence modulo 2.
PN sequence is obtained from the feedback shift register deﬁned by the polynomial:
h(D) = D17 + D14 + 1
and shown in Figure 12.41.
The initial state of the shift register is deﬁned by the binary values [1111111r5r4r3r2r1r0d3d2d1d0]. The
values of r5r4r3r2r1r0 are deﬁned by the 6-bit value of MACValue parameter, and the values of d3d2d1d0
are deﬁned by the transmission rate, as shown in Table 12.16.
12.6.6.4
Channel Interleaving
Interleaving of scrambled symbols at the decoder’s output is performed in two steps. First step is symbol
reordering; the second step is symbol permuting.
During the reordering stage the scrambled data stream is split into several subsequences, which are
then reordered in some way, as described below.
When using the code with rate 1/5 the scrambled symbols are demultiplexed in ﬁve parallel streams,
we denote it as U, V0, V1, V ′
0 and V ′
1, so that the ﬁrst symbol at scrambler’s output goes to the stream
U, the second goes to V0 and so on (the sixth symbol will be written in U again). Then the streams are
ordered as UV0V ′
0V1V ′
1.
When using the code with rate 1/3 the scrambled symbols are demultiplexed in three parallel streams
U, V0 and V ′
0. Then the streams are ordered as UV0V ′
0V1V ′
1.

CDMA2000 and Its Evolution
649
1
1
1
1
1
1
1
r5
r4
r3
r2
r1
r0
d3
d2
d1
d0
Scrambler Initial State
Scrambling
Sequence
...
Figure 12.41
Scrambling
Next, the symbol permuting step is performed. After symbol reordering we obtain the sequence U,
followed by sequences V0 and V ′
0 (denote it as sequence V0/V ′
0), and then, in the case of rate-1/5 code,
there are the sequences V1 and V ′
1 (denote it as sequence V1/V ′
1). Then for each of the sequences U, V0/V ′
0
and V1/V ′
1 the following procedure is performed.
1. Write the whole reordered sequence in two-dimensional matrix with K rows and M columns. Param-
eters K and M are deﬁned by the physical layer packet size and given in Table 12.17.
2. Number the columns of obtained matrix by index j, taking the values from 0 to M −1. Cyclically shift
each column of the matrix down by j mod K positions for block U and by ⌊j/4⌋mod K positions
for blocks V0/V ′
0 and V1/V ′
1.
Table 12.16
Parameters d3d2d1d0 for scrambler initializing
Data Rate (kbps)
Slots per Physical Layer Packet
d3
d2
d1
d0
38.4
16
0
0
0
1
76.8
8
0
0
1
0
153.6
4
0
0
1
1
307.2
2
0
1
0
0
307.2
4
0
1
0
1
614.4
1
0
1
1
0
614.4
2
0
1
1
1
921.6
2
1
0
0
0
1,228.8
1
1
0
0
1
1,228.8
2
1
0
1
0
1,843.2
1
1
0
1
1
2,457.6
1
1
1
0
0

650
Modulation and Coding Techniques in Wireless Communications
Table 12.17
Parameters for symbol permuting
U block interleaver
parameters
V0/V′0 and V1/V′1 block
interleaver parameters
Physical layer
packet size
K
M
K
M
1,024
2
512
2
1,024
2,048
2
1,024
2
2,048
3,072
3
1,024
3
2,048
4,096
4
1,024
4
2,048
3. Reorder the columns of the matrix, that is, swap the columns with numbers in bit-reversed order to
each other.
4. Read the matrix into serial sequence by columns from top to bottom and from the leftmost column.
12.6.6.5
Modulation
At the output of channel interleaver the modulation QPSK, 8-PSK or 16-QAM is used, depending on
transmission rate, in correspondence with Table 12.13.
12.6.6.6
Repetition and Puncturing
Since the number of symbols at modulator’s output for each physical layer packet and the number of
symbols required for data TDM chips may differ in both sides, the sequences of modulated symbols, if
necessary, are repeated or punctured, as shown in Table 12.18.
Table 12.18
Repetition and puncturing parameters
Values per Physical Layer Packet
Data Rate
(kbps)
Number
of Slots
Number
of Bits
Number of
Modulation
Symbols
Provided
Number of
Modulation
Symbols
Needed
Number of
Full Sequence
Transmissions
Number of
Modulation Symbols
in Last Partial
Transmission
38.4
16
1,024
2,560
24,576
9
1,536
76.8
8
1,024
2,560
12,288
4
2,048
153.6
4
1,024
2,560
6,144
2
1,024
307.2
2
1,024
2,560
3,072
1
512
614.4
1
1,024
1,536
1,536
1
0
307.2
4
2,048
3,072
6,272
2
128
614.4
2
2,048
3,072
3,136
1
64
1,228.8
1
2,048
3,072
1,536
0
1,536
921.6
2
3,072
3,072
3,136
1
64
1,843.2
1
3,072
3,072
1,536
0
1,536
1,228.8
2
4,096
3,072
3,136
1
64
2,457.6
1
4,096
3,072
1,536
0
1,536

CDMA2000 and Its Evolution
651
12.6.6.7
Demultiplexing
Both in-phase and quadrature channels are demultiplexed at the modulator’s output into 16 parallel
streams, so that ﬁrst in-phase (quadrature) modulated symbol goes to ﬁrst stream, second goes to second,
17th goes again to ﬁrst stream and so on. At the output of demultiplexor each parallel stream contains
modulated symbols at rate 76.6 ksps.
12.6.6.8
Walsh Channels Forming
For each of the 16 demultiplexed stream (more precisely, for each pair in-phase/quadrature stream)
is correspondent one of 16 different Walsh channels W 16
k , k = 0, . . . , 15. To maintain the constant
transmission power, the symbols of Walsh channels are scaled by the coefﬁcient 1/
√
16 = 1/4. Then
the symbols of 16 Walsh channels are summed component-wise.
12.6.7
Time-Division Multiplexing
The chips of the Forward Trafﬁc Channel (or Control Channel) are time-division multiplexed with the
preamble, Pilot Channel and MAC-channel chips, as shown in Figure 12.39. The Walsh chip rate is
ﬁxed on 1.2288 Mcps. Diagrams of time-division multiplexing for different cases are shown in Figures
12.42–12.45. Multiplexing parameters are given in Table 12.19.
12.6.8
Quadrature Spreading
Spectrum spreading in the Forward Channel is performed by means of maximal-period linear feedback
shift registers (LFSR) producing PN-sequences PI and PQ for in-phase and quadrature components,
2 or 4 Slots
4,096 or 8,192 Chips
...
...
...
Data Modulation Symbols
Data Modulation Symbols
(Repeated Sequence )
2,560 or 3,072
Modulation Symbols
Preamble
N
Chips
Data
400 - N
Chips
Data
800
Chips
Data
800
Chips
Data
400
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Figure 12.42
TDM for multislot transmission on rates 153.6, 307.2, 614.4, 921.6 and 1228.8 kbps

652
Modulation and Coding Techniques in Wireless Communications
8 Or 16 Slots
16,384 or 32,768 Chips
...
...
...
Data Modulation Symbols
Data Modulation Symbols
(Repeated Sequence)
2,560
Modulation Symbols
Preamble
400
Chips
Pilot
& MAC
224
Chips
Preamble
112 Chips
for 76.2 kbps
624 Chips 
for 38.4 kbps
Data
688 Chips
for 76.2 kbps
176 Chips 
for 38.4 kbps
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
Data
800
Chips
Data
800
Chips
Data
400
Chips
Figure 12.43
TDM for transmission on rates 38.4 and 76.8 kbps
correspondingly, with the period of 215. These registers are deﬁned by polynomials:
PI(x) = x15 + x10 + x8 + x7 + x6 + x2 + 1
for in-phase component and:
PQ(x) = x15 + x12 + x11 + x10 + x9 + x5 + x4 + x3 + 1
for quadrature component.
Preamble
400
Chips
Data
336
Chips
Data
800
Chips
Data
400
Chips
Pilot
& MAC
224
Chips
Pilot
& MAC
224
Chips
1 Slot
2,048
3,072 Data Modulation Symbols
Figure 12.44
TDM for single slot transmission on rates 1.2288, 1.8432 and 2.4576 Mbps

CDMA2000 and Its Evolution
653
1,536 Data Modulation Symbols
1 Slot
2,018
Preamble
61
Chips
Data
336
Chips
Pilot
& MAC
224
Chips
Data
800
Chips
Data
100
Chips
Pilot
& MAC
224
Chips
Figure 12.45
TDM for single slot transmission on rate 614.4 kbps
Such LFSRs have the maximal period of 215 −1, and to obtain the sequences with period 215, in
the only case when in these sequences there is the series of 14 subsequent zeros, the one more (15th)
zero is added to the series. The initial state of these registers should be the state producing ‘1’ and then
15 zeros.
Table 12.19
TDM parameters
Number of Values per Physical Layer Packet
Data Rate (kbps)
Slots
Bits
Preamble Chips
Pilot Chips
MAC Chips
Data Chips
38.4
16
1,024
2,560
1,024
4,096
24,576
76.8
8
1,024
512
1,536
2,048
12,288
153.6
4
1,024
256
768
1,024
6,144
307.2
2
1,024
128
384
512
3,072
614.4
1
1,024
64
192
256
1,536
307.2
4
2,048
128
768
1,024
6,272
614.4
2
2,048
64
384
512
3,136
1,228.8
1
2,048
64
192
256
1,536
921.6
2
3,072
64
384
512
3,136
1,843.2
1
3,072
64
192
256
1,536
1,228.8
2
4,096
64
384
512
3,136
2,457.6
1
4,096
64
192
256
1,536

654 
Modulation and Coding Techniques in Wireless Communications
References
[1] CDMA2000 High Rate Packet Data Air Interface Speciﬁcation, 3GPP2 C.S0024-B Version 2.0, March 2007.
[2] CDMA Development Group, http://www.cdg.org.
[3] Physical Layer Standard for cdma2000 Spread Spectrum System, 3GPP2 C.S00002-0 Version 1.0, July 1999.
[4] Telecommunications Industry Association, http://www.tiaonline.org.
[5] Proakis, J. Digital Communications. McGraw Hill, 1995.
[6] Sklar, B. Digital Communications. Fundamentals and Applications. Prentice Hall, 2001.

Index
a posteriori probability (APP)
a priori probability 192
Abelian group 87
absolute grant 539
access channel 611
access point (AP) 390
access slot 448, 457
access terminal 631
acknowledgment (ACK) channel 634
acquisition indicator (AI) 457
acquisition indicator channel (AICH) 457
active set 481
active user 352
adaptive equalizer 222
adaptive link adaptation 583
adaptive modulation and coding (AMC) 491
adaptive precoding 422
additive white Gaussian noise (AWGN) 1
adjacent carrier leakage ratio (ACLR) 593
admissible interval 244
advanced air interface (AAI) 411
advanced MAP (A-MAP) 411
advanced preamble (A-Preamble) 400
Alamouti scheme 316
algebraic-geometry code 117
American Institute of Electrical Engineers (AIEE) 381
American National Standards Institute (ANSI) 381
amplitude 21
amplitude-shift keying (ASK) 22
analog modulation 22
anchor carrier 533
antenna equalization 529
antenna gain 8
antenna port 588
antenna veriﬁcation 488
Argand diagram 22
ARQ with Selective Repeat (SR) 268
asymptotic code rate 115
asymptotic Gilbert-Varshamov bound 117
asymptotic Hamming bound 116
automatic equalizer 222
automatic repeat request (ARQ) 263
auxiliary pilot channel 624
auxiliary transmit diversity pilot channel 624
average number of the error events 292
bandpass modulation 21
bandpass signal 301
base station (BS) 387
basic service set (BSS) 390
baseband modulation 21
basis function 29
Bayes’ rule 192
BCJR algorithm 195
beamforming 344
belief propagation decoding 154
Bell Labs Layered Space-Time architectures (BLAST)
339
Berlekamp-Massey algorithm 138
best users 370
binary group code 88
binary operation 86
binary phase shift keying (BPSK) 38
binary symmetric channel (BSC) 84
bit-ﬂip decoding 154
bit loading 356
bit collection 446
bit separation 443
blind equalizer 222
Bose–Chaudhui–Hocquenghem (BCH) code
133
Bose criterion 96
branch metric 170
broadband wireless access (BWA) 387
broadcast channel (BCH) 437, 581
broadcast control channel (BCCH) 435
Modulation and Coding Techniques in Wireless Communications
Edited by Evgenii Krouk and Sergei Semenov
C⃝2011 John Wiley & Sons, Ltd

656
Index
capture effect 373
carrier 21
carrier aggregation 601
carrier sensing multiple access (CSMA) 375
carrier wave 21
catastrophic convolutional code 169
catastrophic error propagation 169
Cauchy-Bunyakovsky-Schwarz inequality 28
change requests (CR) 431
channel capacity 351, 367
channel coding scheme 440
channel equalization 221
channel impulse response 7
channel quality indicator (CQI) 492
channel state information (CSI) 344
channel with additive noise 94
Chase combining (CC-HARQ) 270, 496
Chernoff bound 206
Chien’s search 137
circular buffer rate matching 583
circular recursive systematic convolutional code
(CRSC) 426
Clarke power spectral density 16
clipping noise 80
closed-loop MIMO (CL-MIMO) 344
closed loop mode 1 (CL1) 344, 486
closed loop mode 2 (CL2) 486
closed loop power control 478
closed-loop spatial multiplexing 590
closed loop transmit diversity 486
code division multiple access (CDMA) 360
CDMA2000 606
code division multiplexing (CDM) 596
code rate 161
coded composite transport channel (CCTrCH) 438
coding gain 314
coding gain distance (CGD) 316
coherence bandwidth 19
coherence time 16
coherent demodulation 22
combined design 278
common assignment channel 624
common control channel (CCCH) 435
common pilot channel (CPICH) 454
common power control channel 623
common trafﬁc channel (CTCH) 436
common transport channel 435
commutative group 87
complementary code keying (CCK) 393
complex orthogonal design 319
compressed mode 480
conjugate data repetition (CDR) 420
constellation diagram 30
constellation rearrangement 512
constellation version parameter 512
constraint length 161
contiguous LRU (CLRU) 416
contiguous resource unit (CRU) 416
continuous packet connectivity (CPC) 574
control channel 435
convolutional code 161
convolutional turbo code (CTC) 426
core network and terminals (CT) 430
coset leader 97
covering polynomial 122
covering-set decoding 125
cubic metric (CM) 593
cyclic code 98
cyclic delay diversity (CDD) 590
cyclic group 87
cyclic preﬁx 73
cyclic redundancy check (CRC) 440
data rate control (DRC) channel 634
decision feedback equalizer (DFE) 233
decision region 64
decoding depth 174
dedicated channel (DCH) 438
dedicated control channel (DCCH) 436
dedicated trafﬁc channel (DTCH) 436
dedicated transport channel 435
degree of the polynomial 92
delay spread 19
demodulation reference signal (DMRS) 593
designed distance 134
determinant criterion 316
detour 180
DFT leakage 76
DFT-S-OFDMA 592
diagonal BLAST (D-BLAST) 341
differential encoding 49
differential phase shift keying (DPSK) 49
digital modulation 22
direct-sequence CDMA (DS-CDMA) 360
direct sequence spread spectrum (DSSS) 388
discontinuous downlink reception operation (DRX) 506
discontinuous transmission (DTX) 452
discrete Fourier transform (DFT) 67
discrete memoryless channel (DMC) 175
dispersion 301
distance 27
distributed LRU (DLRU) 416
distributed resource unit (DRU) 416
distributed subcarrier allocation 356
distribution system (DS) 390
diversity 303
diversity gain 315
Doppler shift 15
downlink dedicated physical channel (downlink DPCH)
453

Index
657
downlink frequency partition conﬁguration (DFPC)
416
downlink shared channel (DSCH) 437
downlink shared channel (DL-SCH) 581
downlink subband allocation count (DSAC) 414
dual cell HSDPA (DC-HSDPA) 533
dual code 96
dual layer transmission 590
dual stream mode 520
dual-stream transmit antenna adaptive array (D-TxAA)
345, 519
dynamic frequency selection (DFS) 386
dynamic hopset allocation FH-OFDMA
(DHA-FH-OFDMA) 370
equivalent code 95
effective aperture area 8
electronic serial number (ESN) 619
Elias-Bassalygo bound 117
embedded modulation scheme 356
empirical path loss model 9
enhanced access channel 612
enhanced dedicated channel (E-DCH) 438, 536
E–DCH absolute grant channel (E-AGCH) 536
E-DCH dedicated physical control channel (E-DPCCH)
536
E-DCH dedicated physical data channel (E-DPDCH)
536
E-DCH Hybrid ARQ Indicator Channel (E-HICH) 537
E-DCH radio network identiﬁer (E-RNTI) 558
E-DCH relative grant channel (E-RGCH) 537
E-DPDCH power extrapolation formula 563
E-DPDCH power interpolation formula 563
enhanced UTRA (E-UTRA) 430
E-UTRA network (E-UTRAN) 430
equal gain combining (EGC) 305
equal modulation (EQM) 395
equalization methods based on ﬁltering 221
equalization methods based on sequence estimation 221
equivalent Ungerboeck code 298
error-location number 135
error-location polynomial 136
error-value 135
error vector magnitude (EVM) 593
Euclidean-geometry (EG) code 148
Euclidean ring 92
evolution data-only, or data-optimized (EV-DO) 607
evolution data/voice (EV-DV) 607
evolved Node B (eNB) 592
executive committee (EC) 384
extended RS code 132
extended rate PHY (ERP) 394
extended service set (ESS) 390
extended signal set 278
extrinsic information 192
factor-group 88
fading 7
fading process 7
fair throughput scheduling 495
Fano algorithm 187
Fano branch metric 183
Fano metric 183
Fano symbol metric 183
fast fading 7, 11
fast Fourier transform (FFT) 70
fast frequency hopping 368
fast link adaptation 491
fast scheduling 491
feedback ﬁlter 233
feedback information (FBI) 447
feedback mini-tile (FMT) 412
feedback signalling message (FSM) 488
feedforward ﬁlter 233
Fermat’s “small theorem” 89
ﬁeld 88
ﬁnger 252
ﬁnite ﬁeld 88
ﬁnite state machine (FSM) 165
forward access channel (FACH) 437
forward channel 623
forward pilot channel 624
fractional dedicated physical channel (F-DPCH) 500
fractional frequency reuse 357
fractionally spaced equalizer 222
frame check sequence (FCS) 632
frame quality indicator 622
free distance 168
frequency diversity 305
frequency division multiplexing (FDM) 66, 596
frequency division multiple access (FDMA) 353
frequency domain equalizer (FDE) 594
frequency hopping 368
frequency-hopping code division multiple access
(FH-CDMA) 367
frequency-hopping spread spectrum (FHSS) 388
frequency-nonselective fading 15
frequency partition (FP) 411
frequency reuse factor (parameter) 355
frequency-shift keying (FSK) 22
frequency shift transmit diversity(FSTD) 590
frequency slot 354
Frobenius norm 315
Gaussian minimum shift keying (GMSK) 54
general linear group 90
generalized complex orthogonal design 319
generalized covering-set decoding 127
generalized RAKE (G-RAKE) 254
generalized real orthogonal design 319
generating function 180

658
Index
generator matrix 95, 165
generator matrix of convolutional code 165
generator polynomial 99
geometry factor G 259
Gilbert code 151
Gilbert-Varshamov bound 116
girth 147
go back N (GBN) ARQ 267
Golay sequence 475
Gold code sequence 474
Gram-Schmidt procedure 30
Gray code 46
group 87
group code 94
GSM EDGE Radio Access (GERAN) 430
guard interval (GI) 395
Guruswani-Sudan (GS) algorithm 142
Hadamard sequence 475
Hamming bound 114
Hamming code 128
Hamming distance 84
Hamming weight 94
handover 479
happy bit 544
hard decision Viterbi algorithm 174
hard handover 480
Hasse derivative 141
hidden node problem 375
hierarchical modulation scheme 356
high speed dedicated physical control channel
(HS-DPCCH) 491
high-speed downlink packet access (HSDPA) 490
high speed downlink shared channel (HS-DSCH) 437
high-speed packet access (HSPA) 490
high speed physical downlink shared channel
(HS-PDSCH) 490
high speed shared control channel (HS-SCCH) 491
HS-SCCH type 1 501
HS-SCCH type 2 505
HS-SCCH type 3 523
high-speed uplink packet access (HSUPA) 490
high throughput (HT) 395
Hilbert space 27
homogeneous packing 130
homomorphism 87
hop duration 368
hopset 368
horizontal encoding (HE) 420
hybrid ARQ (H-ARQ) 269, 491
hybrid transmission system with feedback 263
hysteresis 482
ideal 93
identity element 87
impulse response 163
incremental redundancy (IR) H-ARQ 271, 496
independent BSS (IBSS) 390
information element (IE) 408
information set 119
information set decoding 121
infrared (IR) 388
inner closed loop power control 478
inner loop link adaptation 492
Institute of Electrical and Electronics Engineers (IEEE)
381
IEEE-Standard Association (IEEE-SA) 381
IEEE-SA Board of Governors (IEEE-SA-BOG) 382
Institute of Radio Engineers (IRE) 381
integer linear combination 288
inter-carrier interference (ICI) 70
inter-RAT handover 485
interference 2
interleaving 356
international mobile telecommunications 2000
(IMT-2000) 606
international mobile telecommunications advanced
(IMT-A) 387
International Telecommunication Union (ITU) 385
ITU Radiocommunication Sector (ITU-R) 387
intersymbol interference (ISI) 12, 32
intracell frequency reuse 356
intra-cell interference 477
intrinsic information 192
inverse DFT (IDFT) 68
inverse element 87
inverse FFT (IFFT) 70
irreducible polynomial 93
isometric transformation 291
isometry operator 91
isomorphism 87
iterative decoding 192
Jakes power spectral density 16
Lagrange theorem 87
lattice 242
lattice basis vectors 242
left coset 87
lexicographic monomial ordering 145
likelihood function 170
likelihood ratio 192
line-of-sight (LOS) 16, 387
linear block code 95
linear combination 89
linear convolutional code 165
linear equalization 222
linear ﬁlter 12, 103
linear functional 90
linear operator 90

Index
659
linear subspace 91
link adaptation 491
list decoding 178
list sphere detection (LSD) 251
local area network (LAN) 384
localized subcarrier allocation 356
LAN/MAN standard committee (LMSC) 384
location-based service (LBS) 387
log-likelihood ratio (LLR) 192
log-MAP Algorithm 200
logical channel 435
logical resource unit (LRU) 418
long term evolution (LTE) 429, 577
long term evolution advanced (LTE-A) 600
loop 180
low-density parity-check (LDPC) code 146
Lyapunov’s condition 2
M-PSK 47
management information base (MIB) 387
matched ﬁlter 37
Max-Log-MAP algorithm 199
maximal ratio combining (MRC) 252, 309
maximum a posteriori (MAP) algorithm 195
maximum a posteriori (MAP) rule 192
maximum C/I scheduling 495
maximum distance separable (MDS) code 131
maximum likelihood decoding 98
MBMS point-to-multipoint control channel (MCCH)
436
MBMS point-to-multipoint scheduling channel
(MSCH) 436
MBMS point-to-multipoint trafﬁc channel (MTCH) 436
MLSE criterion 240
maximum likelihood decoding 97
maximum likelihood sequence estimation (MLSE) 170
maximum likelihood sequence estimation (MLSE)
equalization 239
McEliece-Rodemich-Rumsey-Welch bound 118
medium access control (MAC) 386
message 449
metric 27
metropolitan area network (MAN) 387
MIMO encoding formats (MEF) 420
minimum distance (MD) 96
minimum distance (MD) decoding 85
minimum mean-square error (MMSE) criterion 228
minimum mean-square error (MMSE) equalization 228
MMSE-nulling 340
minimum shift keying (MSK) 54
mobile station (MS) 434
modiﬁed Chernoff bound 214
modulation and coding scheme (MCS) 491
monitoring set 482
multicast channel (MCH) 582
multi-cell HSDPA (MC-HSDPA) 535
multimedia broadcast and multicast services (MBMS)
582
multipath fading 7, 11
multipath propagation 301
multiple access (MA) 351
multiple input multiple output (MIMO) system 306
multiple access interference (MAI) 351
multicarrier CDMA (MC-CDMA) 369
multicast channel (MCH) 582
multichannel ARQ with waiting (MC-SW-ARQ) 266
multipath propagation 11
multiple access interference (MAI) 351
multiple-input single-output (MISO) system 309
multi tone CDMA (MT-CDMA) 369
multi-user detector (MUD) 364
multiuser diversity 356
multi-user MIMO (MU-MIMO) 590
multi-user water ﬁlling 356
near-far effect (problem) 364, 476
node B 434
noise 1
noncoherent demodulation 22
non-line-of-sight (NLOS) 16, 387
non-adaptive precoding 421
non-linear equalization 222
non-serving relative grant 540
non-synchronized ranging channel (NSRC) 413
normal group 88
normalized bandwidth 56
normalized polynomial 92
Nyquist criterion 33
Nyquist pulse 32
offset quadrature shift keying (OQPSK) 50
open loop MIMO (OL-MIMO) 420
open loop power control 478
open loop transmit diversity 486
open system interconnection (OSI) model 388
operating point 493
order of a group 87
organizational partner (OP) 429
orthogonal design 317
orthogonal frequency division multiplexing (OFDM)
66
orthogonal frequency division multiple access
(OFDMA) 354
orthogonal transmit diversity (OTD) 623
orthogonal variable spreading factor (OVSF) codes 462
orthonormal basis 29
orthonormal space 29
outer closed loop power control 478
outer loop link adaptation 493
output power back-off (OBO) 593

660
Index
packet data convergence protocol (PDCP) 431
packing density 116
paging channel (PCH) 437, 582
paging control channel (PCCH) 435
paging indicator channel (PICH) 459
parallel-concatenated convolutional (PCC) code 190
parallel interference cancellation (PIC) 340
parallelogram equality 28
parity bits 462
parity-check matrix 96
parity polynomial 100
partial path metric 170
path loss 7
path metric 170
peak distortion 226
peak to average power ratio (PAPR) 80
PEG LDPC code 152
perfect code 116
period of generator polynomial 129
permutation 87
permutation decoding 122
Peterson-Gorenstein-Zierler algorithm 137
phase 21
phase-locked loop (PLL) 78
phase shift keying (PSK) 38
physical broadcast channel (PBCH) 583
physical channel 435
physical control format indicator channel (PCFICH) 585
physical downlink control channel (PDCCH) 585
physical layer (PHY) 388
physical layer convergence procedure (PLCP) sublayer
389
physical medium dependent (PMD) sublayer 389
physical random access channel (PRACH) 448
physical resource element 579
physical resource unit (PRU) 413
physical uplink control channel (PUCCH) 596
physical uplink data channel (PUSCH) 592
Pohst enumeration 245
PLCP protocol data unit (PPDU) 392
PLCP service data unit (PSDU) 392
Plotkin bound 117
postcursor ISI 233
power delay proﬁle (PDP) 18
power density 8
preamble 449
precoding control indication (PCI) 498, 521
precoding matrix indicator (PMI) 590
precursor ISI 233
preferred matrix index (PMI) 422
preset equalizer 222
primary A-Preamble (PA-Preamble) 406
primary common control physical channel (P-CCPCH)
456
primary common pilot channel (P-CPICH) 454
primary fast feedback channel (PFBCH) 412
primary precoding vector 520
primary synchronisation code (PSC) 475
primary synchronization signal (PSS) 590
primitive BCH code 135
primitive element 94
principal ideal 93
principle of optimality 171
principle of orthogonality 228
program coordination group (PCG) 429
project authorization request (PAR) 384
proportional fair scheduling 495
protocol data unit (PDU) 543
pseudorandom binary sequence (PRBS) 425
pulse shaping 32
Pythagorean Theorem 28
quadrature amplitude modulation (QAM) 60
quasi-orthogonal function (QOF) 631
quick paging channel 625
quadrature phase shift keying (QPSK) 43
quadrature spreading 631
quotient ring 93
raised-cosine ﬁlter 34
radian frequency 21
radio access network (RAN) 430
radio link control (RLC) 431
radio resource control (RRC) 431
RAKE receiver 251
random access channel (RACH) 436, 598
random OFDMA 369
ranging channel (RCH) 413
rank criterion 316
rank indication (RI) 590
rate matching pattern determination algorithm 445
Rayleigh distribution 14
Rayleigh fading 303
receiving transaction guard (RTG) 401
recursive systematic convolutional (RSC) code 190
recursive STTC code 330
redundancy version (RV) 497
Reed-Solomon (RS) code 132
reference signal 591
relative grant 539
relative minimum distance 115
relay station (RS) 405
residue 92
residue class ring 93
resource block 579
retransmission sequence number (RSN) 538
reuse distance 355
reverse activity channel 643
reverse channel 611
reverse common control channel 612

Index
661
reverse dedicated control channel 611
reverse fundamental channel 611
reverse pilot channel 611
reverse power control subchannel 612
reverse rate indicator (RRI) channel 634
reverse supplemental channel 612
reverse supplemental code channel 611
reverse trafﬁc channel 611
Rice distribution 14
right coset 88
ring 88
robust header compression (ROHC) 387
roll-off factor 34
root raised-cosine ﬁlter 38
Roth-Ruckenstein algorithm 143
round robin scheduling 495
scalar multiplication 88
scattering function 14
scheduling grant (SG) 540
Schnorr-Euchner enumeration 245
secondary advanced preamble (SA-Preamble) 407
secondary common control physical channel
(S-CCPCH) 456
secondary common pilot hannel (S-CPICH) 454
secondary fast feedback channels (SFBCH) 412
secondary synchronization code (SSC) 475
selection combining (SC) 306
selective mapping 80
selective repeat (SR) ARQ 268
self ICI cancellation 79
self-orthogonal space 91
semigroup 86
sequences of signal points 280
sequential decoding 183
service access point (SAP) 389
service and system aspects (SA) 430
service data unit (SDU) 392
serving grant 539
serving relative grant 540
shadowing 7, 10
shared channel control channel (SHCCH) 436
shift keying 22
shortened cyclic code 110
signal space 29, 278
signal space diagram 30
signal to noise ratio (SNR) 36
single-carrier frequency division multiple access
(SC-FDMA) 358, 592
single-input multiple-output (SIMO) system 309
single stream mode 520
single user MIMO (SU-MIMO) 600
Singleton bound 131
singular value decomposition (SVD) 397
slow frequency hopping 368
slotted ALOHA 372
soft handover 481
soft handover algorithm 482
soft handover gain 484
softer handover 484
soft decision Viterbi algorithm 177
soft-input/soft-output (SISO) decoder 193
soft-in/soft-out Viterbi algorithm (SOVA) 201
sounding channel 413
sounding reference signal (SRS) 594
space division multiple access (SDMA) 607
space-frequency block coding (SFBC) 420
space-time block coding based transmit diversity
(STTD) 486
space-time block code 311
space-time code 311
space-time trellis code 328
space-time turbo trellis code 330
spatial diversity 305
spatial division multiplexing (SDM) 395
spatial multiplexing 338
spectral efﬁciency 277
sphere detection (SD) 242
sphere-packing bound 114
split syndrome decoding 127
spreader 360
spreading factor (SF) 447
stack algorithm 184
standard array 96
standards developing organization (SDO) 429
start of frame delimiter (SFD) 393
state diagram 165
station (STA) 390
steepest descent algorithm 232
stop and wait (SAW) ARQ 265
stream equalization 530
strict-sense stationary sequence 15
strictly bandlimited signal 31
strictly time limited signal 31
study group (SD) 384
subband contiguous LRU (SLRU) 416
subcode over subset 129
subgroup 87
subscriber 352
subscriber identity module (SIM) 430
subscriber station (SS) 387
successive interference cancellation (SIC) 339, 528
Sudan algorithm 141
super frame header (SFH) 400
supplementary carrier 533
survivor path 173
symbol metric 170
symbol-rate packing 33
symbol spaced equalizer 222
sync channel 625

662
Index
synchronisation channel (SCH) 455
synchronized ranging channel (S-RCH) 413
syndrome 96
system frame number (SFN) 546
systems with data feedback 263
system with decision feedback 263
systematic bits 462
systematic code 95
systematic convolutional code 166
systematic encoding 95
tail symbols 174
Tanner graph 147
tap solver 222
technical advisory group (TAG) 384
technical report (TR) 431
technical speciﬁcation (TS) 431
technical speciﬁcation group (TSG) 430
Third Generation Partnership Project (3GPP) 429
time-bandwidth product 56
time diversity 305
time-division duplex (TDD) 434
time division multiple access (TDMA) 359
time switched transmit diversity (TSTD) 486
time to trigger 482
time-varying frequency response 12
tone reservation 80
total squared correlation (TSC) 363
trace criterion 317
trafﬁc channel 435
training sequence 222
training sequence based equalizer 222
transmission time interval (TTI) 438
transmission transaction guard (TTG) 401
transmit beamforming (TxBF) 397
transmit diversity pilot channel 624
transmit power-control (TPC) 447
transport block (TB) 438
transport block set 438
transport block set size (TBSS) 438
transport block size (TBS) 438
transport channel 435
transport format 438
transport format combination (TFC) 438
transport format combination indicator (TFCI) 438
transport format set (TFS) 438
tree diagram 166
trellis coded modulation (TCM) 280
trellis diagram 167
triangle inequality 28
truncation window length 174
turbo-BLAST 342
turbo-code 190
turbo equalization 254
type A PCI/CQI report 521
type B PCI/CQI report 521
type-I H-ARQ 269
type-II H-ARQ 270
type-III H-ARQ 273
unequal modulation (UEQM) 395
Ungerboeck codes 285
Universal Mobile Telecommunications System (UMTS)
429
Universal Telecommunications Radio Access (UTRA)
430
UTRA network (UTRAN) 430
unlicensed national information infrastructure (U-NII)
388
uplink dedicated physical control channel (uplink
DPCCH) 447
uplink dedicated physical data channel (uplink DPDCH)
447
uplink gating 574
uplink shared channel (USCH) 437
user equipment (UE) 430
vector coordinates 89
vector space 89
vertical BLAST (V-BLAST) 339
vertical encoding (VE) 420
very high throughput (VHT) 397
Viterbi algorithm 169
voice privacy mask (VPM) 619
Walsh-Hadamard construction 362
water ﬁlling 356
wavelength division multiple access (WDMA) 359
weight enumerator function 180
weighted-degree monomial ordering 145
white noise 2
wideband code division multiple access (WCDMA) 433
wide-sense stationary (WSS) process 15
Wiener-Hopf equation 228
wireless local area network (WLAN) 388
wireless personal area network (WPAN) 384
wireless regional area network (WRAN) 384
working group (WG) 384, 430
worldwide interoperability for microwave access
(WiMAX) 384
Zadoff-Chu sequence 599
zero-autocorrelation (ZAC) sequence 597
zero-force (ZF)-nulling 339
zero-forcing equalization 226
zero-forcing solution 226

