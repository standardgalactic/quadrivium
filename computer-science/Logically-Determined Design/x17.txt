of the expression.
In this chapter we do not aim to present a detailed design methodology but rather
to give the reader a sense of the territory. In this chapter we cover the derivation of
the 2NCL library of operators, basics of 2NCL combinational design, approaches to
synthesize 2NCL combinational expressions, and the mapping of 2NCL combina-
tional expressions directly from Boolean logic combinational expressions.
The first topic is the classification of threshold functions and of Boolean func-
tions. This provides a conceptual foundation for the derivation of the 2NCL operator
library and for the synthesis of 2NCL combinational expressions.
4.1
FUNCTION CLASSIFICATION
Functions of a particular range, all three input Boolean functions, for instance, may
be classified by commonalities of logical structure. The structural elements can be
partitioned into elements that are cheap to implement and elements that are costly
to implement. For instance, if the internal logic of a function is costly, rearranging
the input wires is free and inverting the input signals can be relatively cheap. It
would be useful to be able to express a few functions in terms of the internal
logic structure and to express the rest of the functions in terms of rearranging and
inverting the inputs.
59
Logically Determined Design: Clockless System Design with NULL Convention LogicTM, by Karl M. Fant
ISBN 0-471-68478-3
Copyright # 2005 John Wiley & Sons, Inc.

Functions can be sorted into classes that differ only in the permutation and/or
negation of their input signals, called PN classification. The implementation of a
single function from each class as a representative function is then sufficient to
implement the entire class of functions by appropriately connecting and inverting
input signals of the class representative function. The result is a small group of func-
tions that are generally expressive over the range of all possible functions.
Function classification was developed initially to manage the mapping of Boo-
lean functions to a minimal set of vacuum tube circuits [19]. It was extensively
developed in the study of threshold logic to facilitate the synthesis of threshold
expressions [36,22]. In the case of 2NCL it provides a rationale of design and
allows confident statements of thoroughness that would, otherwise, be difficult to
justify.
4.1.1
Threshold Function Classification
The function classes for three input positive threshold functions are derived as an
illustrative example of function classification. For this discussion of function classi-
fication the state-holding behavior of 2NCL operators will be ignored, and only their
threshold function will be considered. Preliminarily Figure 4.1 shows the three
classes of 1 and 2 input threshold functions.
The classification process is illustrated in Figure 4.2. All forms of three input
functions with input weights of 1 and 2 and all meaningful thresholds are considered.
The process begins with a 3 input function with all input weights 1 and threshold 1 at
upper left. This enumeration proceeds through all possible functions to all input
weights 2 and threshold 6 at the lower right. In the process, functions occur that
can be mapped to a previously enumerated function. Each function encountered
that cannot be mapped to a previously enumerated function is taken as the represen-
tative function of a class and is highlighted with shading. As the enumeration pro-
ceeds, each function is either identified as a new class representative function or its
class membership is shown by a mapping to its functionally equivalent class repre-
sentative function. Some of the 3 input functions map to 2 input function classes.
Input weights of 3 are not considered because most input weights of 3 for a three
input function can always be reduced to a weight of 2 without changing the function-
ality. The purpose of the weights is to differentiate the inputs. A weight of 3 in
relation to a weight of 1 does not differentiate any more than a weight of 2 in relation
to a weight of 1. So, for all combinations of weight 3 and weight 1, the weights of 3
can be reduced to weight 2 with an appropriate adjustment in threshold. For all com-
binations of weight 3 and weight 2, both weights can be reduced by one with the
appropriate adjustment in threshold. The only combination that is not obviously
A
A
B
1
A
B
2
Figure 4.1
Classes of 1 and 2 input threshold functions.
60
2NCL COMBINATIONAL EXPRESSION

C
functions of
weight 1,1,1
functions of
weight 1,1,2
functions of
weight 1,2,2
functions of
weight 2,2,2
representative
function
representative
function
representative
function
A
B
C
1
A
B
C
2
A
B
C
3
A
B
C
2
A
B
C
3
A
B
C
1
A
B
C
3
A
B
1
A
B
C
4
A
B
C
5
A
B
C
4
A
B
C
3
A
B
C
2
A
B
1
C
A
B
6
C
A
B
5
C
A
B
4
C
A
B
3
C
A
B
2
C
A
B
C
1
A
C
1
A
B
C
2
A
C
2
A
B
C
3
A
B
C
1
A
B
C
2
A
B
C
2
A
B
C
3
A
B
C
3
Enumeration of Enumeration of
Enumeration of
Enumeration of
Equivalent
Equivalent
Equivalent
Figure 4.2
Classification of 3 input positive threshold functions.

reducible is a combination of weights 3, 2, and 1. The mapping to equivalent classes
for 3 input functions with weights 3, 2, 1 for threshold values through 6 is shown in
Figure 4.3.
The procedure discovered five classes of threshold functions of exactly 3 inputs.
The five 3 input classes, the two 2 input classes, and the one 1 input class are suffi-
cient to express all possible threshold functions of 3 inputs or less. If the exercise is
repeated for 4 input threshold functions, 17 classes will be found. In total, there are
25 threshold function classes for threshold functions of 4 or fewer inputs.
4.1.2
Boolean Function Classification
There are two classifications of Boolean functions that are of interest. The PN (or
NP) classification considers all functions that differ only in the permutation and/
or negation of input signals as being in the same class. And the NPN classification,
which adds negation of the output such that all functions that differ only in the per-
mutation and negation of the inputs and negation of the output are in the same class.
NPN classification combines some NP classes resulting in fewer classes overall.
Figure 4.4 is a table after Muroga [36] of Boolean function classes of 3 and fewer
variables that shows the 22 PN classes and the 14 NPN classes. Each function
class is defined by a representative equation. The PN functions in bold type are
the classes of unate functions of 3 and fewer inputs.
The statistics for PN and NPN classification of Boolean functions is given in
Table 4.1 [22]. It can be seen that the classification issue rapidly grows for functions
of 4 and 5 variables. As will be clear shortly, the interest here is in the classes of
unate Boolean functions and those classes remain quite tractable through 4
variables.
4.1.3
Linear Separability and Unateness
There is a very direct relationship between Boolean unate functions and threshold
functions through the property of linear separability. All threshold functions map
to linearly separable Boolean functions. Linear separability is illustrated in
Figure 4.5 in two dimensions for 2 variable Boolean functions. If a line can be
drawn separating the different result values in the function space mapping as with
AND and OR, then the function is linearly separable and can be determined by a
threshold operator. If the different result values cannot be separated by a line as
with XOR, then the function is not linearly separable and cannot be determined
by a threshold operator. For three input functions the linear separation is a plane
through a function cube, and for four input functions it is a hyperplane through a
function hypercube.
A unate Boolean function is one in which no input variable appears in the func-
