The 12 NPN representative expressions can be implemented as library macros,
and they can be conveniently mapped with current automated design tools onto
any Boolean expression in functions of three or less variables reliably forming a
logically determined 2NCL combinational expression.
4.12
SUMMARY
Threshold
function
classification
and
Boolean
function
classification
have
provided a firm conceptual foundation for a 2NCL synthesis methodology. Function
C
C
B
A
C
C
B
A
C
B
A
3
3
3
1
Z0 = A + BC
Z1 = AB + AC
C
C
B
A
C
B
A
3
3
PN class M11
To implement PN class M11
target function F = A + BC
To implement PN class M10
target function F = AB + AC
0 ->
B
C
A
B
C
A
3
3
3
C0
C1
B0
B1
A0
A1
1
Z0
3
3
Z1
NPN class M10/M11
Target
function
Complement
function
2NCL combinational expression
Figure 4.33
Representative 2NCL expression for NPN class M10/M11.
92
2NCL COMBINATIONAL EXPRESSION

classification provides a rationale for the construction of a 2NCL operator library as
well as the methodology to synthesize directly from function tables with multi-value
variables. It also provides the basis for the direct mapping of Boolean expressions
into 2NCL expressions.
4.13
EXERCISES
4.1. Implement the library of operators in terms of S-R flip flops as macros in your
available simulation program or FPGA development environment. (See the
discussion on playing with 2NCL in Appendix B.)
4.2. Simulate the examples of this chapter.
4.3. Design and simulate five common functions.
Force 1
Force 0
7
6
5
4
3
2
1
0
5
4
3
2
1
0
3
3
3
1
3
3
0
1
0
1
0
1
0
1
0
1
1
0
1
7
6
5
4
3
2
1
0
1
0
1
0
1
0
force 1
force 0
0
1
force zeros
pass
pass
force ones
path 0
path 1
pass
pass
3
3
3
1
3
3
1
0
3
3
3
1
3
3
0
1
force zeros
pass
pass
force ones
path 0
path 1
3
3
3
1
3
3
0
1
force zeros
pass
pass
force ones
path 0
path 1
3
3
3
1
3
3
0
1
force zeros
pass
pass
force ones
path 0
path 1
3
3
3
1
3
3
0
1
force zeros
pass
pass
force ones
path 0
path 1
3
3
3
1
3
3
Figure 4.34
Clipper implemented by direct substitution of three-variable Boolean
functions.
4.13 EXERCISES
93

4.4. Define a procedure to synthesize 2NCL combinational expressions directly
from any multi-value function map.
4.5. Define the set of completeness preserving and orphan isolating optimization
transformations on 2NCL operators.
4.6. Define a procedure to apply optimizations to any 2NCL combinational
expression.
4.7. Define the library of 12 2NCL representative expressions for the NPN classes,
and determine the connection mappings for all 256 Boolean functions.
94
2NCL COMBINATIONAL EXPRESSION

&CHAPTER 5
Cycle Granularity
The cycles of a logically determined system can be any granularity. They can be
large or they can be very small. System performance depends on the period it
takes a cycle to cycle. Large cycles are slower than small cycles so a critical
factor of logically determined system design is the degree to which the size of
cycles can be minimized [45,46,47,48]. The cycle period depends on the cycle
path shown in Figure 5.1. The cycle path includes the spanning completion detection
path, the acknowledge path, the spanning completeness path of the acknowledge
signal, and the data path between the spanning acknowledge and the completion
detection, which may include a combinational expression. As examples get visually
more complex, cycles will be indicated by highlighting the completion/acknowl-
edge path of the cycle, as shown in Figure 5.1.
