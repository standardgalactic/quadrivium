L
I
J
I
K
N
N
I
T
F
I
I
F
T
I
I
I
I
I
I
I
I
N
4NCL
4NCL
4NCL
Figure 2.2
4NCL logic operator function tables.
DATA
DATA
DATA
NULL
data
wavefront
data
wavefront
data
wavefront
NULL
wavefront
NULL
wavefront
NULL
wavefront
NULL
NULL
NULL
complete
complete
complete
complete
complete
complete
complete
Figure 2.1
Successive wavefronts monotonically transitioning between disjoint domains.
14
A SUFFICIENTLY EXPRESSIVE LOGIC

functions, and they are acyclically connected from input to output. Divide any such
combinational expression arbitrarily into N ranks of functions ordered progressively
from input to output, with all inputs before the first rank and all outputs after the last
rank. The rank boundaries are shown with vertical lines labeled alphabetically in
rank order from input to output.
For the values crossing E to be all data all of the values crossing D must be data.
For the values crossing D to be all data all of the values crossing C must be data.
For the values crossing C to be all data all of the values crossing B must be data.
For the values crossing B to be all data all of the values crossing A must be data.
Therefore, for all the values after E to be data, all the values before A must be data.
These considerations are also true for the NULL wavefront presented when the
expression is in an all data state. Simply substitute NULL for data in the text above.
During a data wavefront value transitions progress monotonically from NULL to
data through the expression from input to output. If any value crossing a boundary is
NULL or INTERMEDIATE, then there will be at least one NULL or INTERMEDI-
ATE value crossing all boundaries to the right of that boundary. There can only be a
complete set of output data values when there is a complete set of input data values
and the data values have propagated through the expression. There can only be a
complete set of output NULL values when there is a complete set of input NULL
values and the NULL values have propagated through the expression. The combina-
tional expression as a whole expresses the completeness criterion and maintains the
monotonic behavior of the input in its output.
The propagation of a wavefront through the expression is completely logically
determined. Consider operator 7 in Figure 2.3. It does not matter how long the
data values (NULL value) take to propagate through other functions and over
signal paths to the input of function 7, or whether there are transitions through
INTERMEDIATE, it will not output data (NULL) until all values are data
output
state
A
B
C
D
E
1
5
4
3
2
6
8
11
7
10
9
input
state
B
input
state
A
Figure 2.3
The completeness criterion for a combinational expression as a whole.
2.1
SEARCHING FOR A NEW LOGIC
15

(NULL) at the input of the function. No function transitions its output to data or
NULL until all the values present at the input of the function have transitioned.
Each function synchronizes the orderly propagation of monotonic transitions to cor-
rect result values through the combinational expression until the output of the
expression as a whole is complete. There are no races, no hazards, and no spurious
result values during the propagation of a wavefront through the combinational
expression.
No expression of any time relationship, nor any other nonlogical relationship, is
necessary to fully characterize the behavior of the expression. The behavior of the
combinational expression is expressed entirely in terms of logical relationships
and is completely determined by those logical relationships. It is a logically deter-
mined expression.
2.1.5
Relationship of 4NCL to Boolean Logic
Since 4NCL uses TRUE and FALSE to differentiate data values, 4NCL can be
directly mapped function for function with a Boolean logic expression to form a
logically determined 4NCL combinational expression as shown in Figure 2.4.
2.2
DERIVING A 3 VALUE LOGIC
A 4 value logic is not a practical logic for electronic implementation. The 4 value
logic can be reduced to a 3 value logic that expresses the completeness criterion
by replacing the expression of the INTERMEDIATE value with state-holding beha-
vior as shown in Table 2.1. This reduction forms a 3 value NULL Convention Logic
or 3NCL.
A
B
S
CI
CO
1
2
3
4
5
6
7
8
9
10
11 12
4NCL
4NCL
4NCL
A
B
S
CI
CO
4NCL
4NCL
Figure 2.4
Boolean logic full adder and the corresponding 4NCL full adder.
TABLE 2.1
Correspondences of 4NCL and 3NCL
4NCL
3NCL
TRUE
TRUE
FALSE
FALSE
INTERMEDIATE
State-holding behavior
NULL
NULL
16
A SUFFICIENTLY EXPRESSIVE LOGIC

In 4NCL the INTERMEDIATE value explicitly indicates a partial completion
state to be explicitly ignored. The partial completion states can also be ignored
with a state-holding behavior. When the input of a logic operator is completely
data, it outputs a data value and maintains the data value until its input is completely
NULL, whereupon it outputs a NULL value and maintains the NULL value until its
input is completely data, and so on. Instead of being explicitly expressed as a logic
value by the logic operator, the partially complete states are simply ignored by the
logic operator. Only wavefronts of NULL values and data values flow through the
logic operators.
With state-holding behavior a logic operator is no longer a function and will
henceforth be called an operator. Each operator still expresses the completeness
criterion and 3NCL operators still compose to logically determined combinational
expressions.
2.2.1
Expressing 3NCL State-holding Behavior
This state-holding behavior can be expressed as a function with feedback as in
Figure 2.5 making the logic operator a state machine. The truth tables expressing
the state-holding behavior for the 3NCL AND, OR, XOR, and NOT operators are
shown in Figure 2.6. The NOT operator is a single input operator that cannot
posses any intermediate input states, so it does not require state holding to explicitly
express completeness for both data and NULL. The input R value is the output result
R
A
B
R
Figure 2.5
3NCL operator model with feedback path.
T
N T F
N T F
R
B
R
F
N T F
N F F
N
A
INPUT
RESULT
N
N T F
N N N
T
N T F
F
F
F
N T F
F F F
F
N
N T F
N F F
T
N T F
T T
F
N T F
T
N
N T F
N T
F
T
T
T
