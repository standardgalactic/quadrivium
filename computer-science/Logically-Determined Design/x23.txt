X1
Z0
Z1
Z1
Z0
2
3
27
A
D
B
C
Y0
Y1
Y0
Y1
3. AB
Figure 4.15
Binary half-adder function map and output equations.
4.6 EXAMPLE 3: MINTERM CONSTRUCTION
75

A and C are mutually exclusive and B and D are mutually exclusive, operator 19 can
be substituted for operator 27 in the output expression, as in Figure 4.16d.
The shared minterm expression of Figure 4.16a has seven operators. The half-
adder expression generated directly from the four output equations has four oper-
ators. However, these four operators are more complex than the seven operators.
The shared minterm version of the half adder could very well be the more efficient
version.
2NCL minterm construction is similar to Delay Insensitive Minterm Synthesis
(DIMS), which is expressed in terms of C-elements and OR functions and 2 value
variables [53].
4.7
EXAMPLE 4: A BINARY CLIPPER
An 8 bit to 6 bit 2s complement clipper is shown in Figure 4.17. Bit 7 is the sign bit
and is passed through as the sign bit of the 6 bit number. Bits 5, 6, and 7 determine
how the low-order bits will be treated: whether they will be all forced to one, all
forced to zero, or passed as is.
4.7.1
The Clipper Control Function
The control signals generated from the first three high-order bits express the three
meanings; force to 1, force to 0, or pass as is. In the Boolean expression these
three control meanings are encoded in two binary variables and applied to the
low-order bits in two stages of logic. If one considers the function map in
Figure 4.18, it is clear that the control variable is inherently a 3 value variable. Read-
ing the output equations from the map and partitioning the sums yields only two
forms of generic equations: ABC, which is implemented with a 3 of 3 operator,
and ABC þ ABD, which has two possible operators because C and D (60 and 61)
are mutually exclusive. The resulting output expressions for the clipper control func-
tion are shown in Figure 4.19a and b. The combinational expression is shown in
Figure 4.19c.
7
6
5
4
3
2
1
0
5
4
3
2
1
0
Figure 4.17
Boolean clipper circuit.
76
2NCL COMBINATIONAL EXPRESSION

715160 + 715060 + 715061
706050 + 716151
ABC + (ABC + ABD)
ABC + ABC
Specific equations
Generic equations
pass input
force zeros
6. ABC
21. ABC + ABD
11. ABC + ABD + ACD + BCD
A
B
C
3
D
C
A
B
5
D
C
A
B
3
70
51,60
51,61
pass input
force zeros
force ones
force zeros
71
force ones
force zeros
force ones
pass input
50,60
50,61
705160 + 705161 + 705061
(ABC + ABD) + ABC
force ones
C and D are mutually exclusive
Figure 4.18
Clipper control function.

The control can also be implemented by partitioning the product. Bits 5 and 6 are
resolved to an internal variable, and then bit 7 is resolved with the internal variable.
Figure 4.20 shows the output equations with the internal variable and their map-
ping to operators. The resulting expression is shown in Figure 4.20a. Figure 4.20b is
an optimization that combines two operators in the first rank into a single operator,
which also simplifies operators in the next rank of logic by lessening their inputs.
4.7.2
The Danger of Minimizing the Boolean Output Equations
Properties of logically determined completeness boundaries derive from the sum of pro-
ducts form of the Boolean output equations. If one sticks with product partitioning and
with sum partitioning of the sum of product Boolean output equations, fulfillment of the
completeness criterion and isolation of the orphans will inherently follow. Because of
the completeness relationships there are no ‘don’t cares’ in NCL expressions. If one per-
forms a standard Boolean minimization of the output equations that removes Boolean
‘don’t cares’ before mapping to 2NCL operators, neither completeness nor orphan
isolation inherently follow, and these properties must be explicitly restored.
Figure 4.21 illustrates the preminimization of the output equations for the clipper
control. The ‘force zeros’ and ‘force ones’ equations can be minimized in terms of
Boolean logic to eliminate the 51 and 61 values and the 50 and 60 values, respectively,
from the force zeros and force ones equations. The direct mapping of the resulting gen-
eric equation results in a 2NCL expression that does not fulfill the completeness
pass input
force zeros
force ones
3
3
3
3
0
1
0
1
7
6
5
0
1
force ones
force zeros
70
60
50
71
51
61
pass input
5
51
71
60
51
61
50
50
71
70
61
60
51
50
70
3
3
3
3
3
3
0
1
3
3
60
70
50
71
61
51
3
3
61
60
70
51
70
51
50
1
3
3
60
61
71
50
71
50
51
1
60
70
71
61
51
3
3
50
1
61
60
70
51
70
51
50
60
61
71
50
71
50
51
c. Combinational expression
b. Merged operators
a. Control output expressions
Figure 4.19
The clipper control function.
78
2NCL COMBINATIONAL EXPRESSION

force zeros
71u + 71s + 71t
70u + 70v + 70t
70s + 71v
Specific equations
pass
