operator
boundaries
full-adder
boundaries
Figure 7.12 Four-bit adder with boundaries.

BOUNDARIES OF COMPLETENESS BEHAVIOR 109

COMPOSING BOUNDARIES
7.2 COORDINATING BOUNDARIES
While the composition of completeness boundaries is concurrent, the behavior
of each boundary is strictly sequential. Only one input presentation at a time
can fl ow through an input boundary and into an expression. There must be a
presentation of empty or NULL between each presentation of data content.

The monotonic behavior of the content fl ow must be maintained, the content
must be maintained, and the liveness of the fl ow must be maintained. Again,
there is a simple convention for humans that accomplishes the purpose.

The completeness criterion states that when there is completeness at the
output boundary the resolution of the input is complete. The completeness
criterion can be used to coordinate the presentation of input and the fl ow of
resolution through an expression.

7.2.1 The Cycle
The fact of completeness of the output can be domain inverted and associated
back to the input to coordinate the presentation of the input. Domain inver-
sion shown on the right in Figure 7.13 is a NULL convention primitive that
transitions a data value to NULL and NULL to a selected data value, in this
case T. This feedback coordination value, also called acknowledge, is associ-
ated from the output to a rank of input primitives called a registration stage,
as shown in Figure 7.13. When the output is completely data the coordination
value transitions to NULL. When the output is completely NULL, the coor-
dination value transitions to data.

Only when the input values presented to the registration stage are data,
and the coordination value is data, will the output of the registration stage
transition to data and present a data wavefront to the encompassed expres-
sion. As long as the coordination value remains data, the registration stage
will stably maintain its output data values even if a NULL wavefront is pre-
sented to the input of the registration stage.

Only when the input values presented to the registration stage are NULL
values, and the coordination value is NULL, will the output of the registration
stage transition to NULL and present a NULL wavefront to the encompassed
expression. As long as the coordination value remains NULL, the registration
T
N
F
K
J
I
N
N
T
domain
inversion
explicit
registration
stage
presentation
boundary
result
boundary
domain inversion
N
N
N
N
N
N
N
N
N
N
N
N
N
Figure 7.13 Feedback self-coordination cycle for full-adder.


stage will stably maintain its NULL output values even if a data wavefront is
presented to the input of the registration stage.

The feedback association of the inverted coordination value is a simple
dependency relationship that forms a closed oscillating expression called a
cycle. The expression continually strives to transition between data and NULL.

Not only does the cycle provide coordination of input presentation for an
expression, it provides an autonomous expression of liveness.

7.2.2 Flow Coordination
Flow of presentation of input and assertion of output between expressions can
be coordinated through associated completeness boundaries by interlinking
the self-coordination cycles of the associated expressions, as shown in Figure
7.14. If completeness of a source expression is determined strictly after presen-
tation is allowed by the destination expression, then no expression will allow
a next input presentation until its current asserted output is accepted by the
destination. Wavefronts fl ow spontaneously and stably from cycle to cycle.

Interlinked cycles form a structure of coupled oscillators, which expresses
a spontaneously behaving pipeline structure. Large complex pipeline struc-
tures can be expressed in terms of interlinked cycles.

7.2.3 Integrated Coordination
There does not need to be a separate expression of a registration stage. The
expression of registration can be integrated into the logic expression itself, as
shown in Figure 7.15. The input and output operators receive one more input
which is the coordination signal. A single operator is added to coordinate the
topmost input path of the expression.

7.2.4 Level of Coordination
A composition boundary is also a partitioning boundary, a completeness
boundary and a coordination boundary. Hierarchical levels of nested bound-
aries can be defi ned within a large expression such as the four-bit adder of
Figure 7.12. Cycle coordination can be applied to all boundaries of commen-
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
N
completion
detection
domain
inversion
domain
inversion
completion
detection
completion
domain
inversion
coordination
value
following
expression
previous
expression
registration
stage
registration
stage
registration
stage
registration
stage
coordination
value
coordination
value
coordination
value
full adder expression
detection
Figure 7.14 Cycles with interlinked self-coordination.

COORDINATING BOUNDARIES 111

COMPOSING BOUNDARIES
surate hierarchical level within an expression. The hierarchical levels of the
four-bit adder will be called the data path level for the four-bit data path for
the boundaries of the four-bit adder, the intermediate level for the boundaries
of the full-adders and the primitive level for the boundaries of the primitive
operators.

Data Path Level Cycle Coordination Figure 7.16 shows the four-bit adder
with cycle coordination about its boundary. Other four-bit adders and other
embedded
registration
presentation
boundary
result
boundary
domain inversion
N
N
N
N
N
N
N
N
