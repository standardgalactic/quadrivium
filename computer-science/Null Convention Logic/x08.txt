called a data wavefront and expresses the presentation of a new instance of
input data. The transition of the input from “completely data” to “completely
not-data” is called a NULL wavefront and expresses the boundary between
successive presentations of input data.

2.4.2 Logically Recognizing Data Flow Boundaries
A logical function can be enhanced to respond only to completeness relation-
ships at its inputs:
• If input is “completely data,” then transition output to the “data” resolu-
tion of input.

• If input is “completely NULL,” then transition output to “NULL”.

• If input is neither “completely data” nor “completely NULL,” do not
transition output.

The transition of the output implies the completeness of presentation of the
input, the completeness of its resolution and that the asserted output is the
correct resolution of the presented input. This is called the completeness
criterion.

Enhanced Boolean logic operators, shown in Figure 2.3, are no longer
mathematical functions. They now include a state-holding or hysteresis behav-
ior. A dash means that there is no transition. The domain inversion will be
explained later. A logic using the NULL value and state-holding behavior will
be called a NULL Convention Logic. The logic described here is a 3 value
NULL Convention Logic (3NCL). While this discussion will continue in terms
completely
NULL
Data
wavefront
Data
wavefront
Data
wavefront
NULL
wavefront
NULL
wavefront
NULL
wavefront
completely
NULL
completely
NULL
completely
NULL
completely
data
completely
data
completely
data
Figure 2.2 Monotonically alternating wavefronts of completely data and completely not-data.

T
N
F
K
J
I
F
T
N
T
N
F
N
F
T
K
L
J
K
L
I
J
I
K
-
T
T
-
F
T
N
-
-
N
T
N
F
N
F
T
K
L
J
K
L
I
J
I
K
-
T
F
-
F
T
N
-
-
N
T
N
F
N
F
T
K
L
J
K
L
I
J
I
K
-
F
T
-
F
F
N
-
-
N
T
N
F
K
J
I
N
N
T
domain
inversion
Figure 2.3 Boolean operators enhanced with NULL value and state-holding behavior.


of 3NCL, there is also a practical 2 value NULL Convention Logic (2NCL)
suitable for electronic implementation [7].

2.4.3 The Completeness Behavior of a Network of
Enhanced Functions
The monotonic behavior of the data and the completeness behavior of each
enhanced function fully coordinates the order of events in a concurrent expres-
sion. The individual completeness behaviors accumulate so that the network
as a whole expresses the completeness criterion. Consider the combinational
network of enhanced Boolean operators shown in Figure 2.4. Divide the
network arbitrarily into N ranks of operators ordered progressively from input
to output, with all inputs before the fi rst rank and all outputs after the last
rank. The rank boundaries are shown in Figure 2.4 with vertical lines labeled
alphabetically in rank order from input to output.

• For the values crossing G to be all data, all of the values crossing F must
be data.

• For the values crossing F to be all data, all of the values crossing E must
be data.

• For the values crossing E to be all data, all of the values crossing D must
be data.

• For the values crossing D to be all data, all of the values crossing C must
be data.

• For the values crossing C to be all data, all of the values crossing B must
be data.

• For the values crossing B to be all data, all of the values crossing A must
be data.

• Therefore, for all the values after G to be data, all the values before A
must be data. If any value before A is NULL at least one value after G
will be NULL.

These considerations are also true for the NULL wavefront presented when
the expression is in an “completely data” state. Simply interchange NULL and
data in the text above.

(T, F, N)
(T, F, N)
Presentation
boundary
Result
boundary
