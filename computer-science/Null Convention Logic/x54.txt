-
-
-
-
-
-
-
-
-
-
-
-
-
-
operator
fan-in
A
B
F
-
F
-
F
-
F
-
F
-
F
-
F
-
F
-
F
-
A
-
A
-
B
C
B
C
B
C
D
E
F
-
F
-
F
-
A
-
A
-
B
C
B
C
B
C
D
E
D
E
Figure 9.12 Commands combined into a single sequence and mapped to preassigned place
names.

TIME–SPACE TRADE-OFF 159

INCIDENTAL TIME
presenting command wavefronts that select the sequence of paths for the
memory/operator ring.

9.2.5 The Transformed Nature of the Expression
Even though the confi gurable expression is still a pipeline structure that
behaves in terms of spontaneously fl owing wavefronts, the expression of a
mapped process is no longer in terms of spontaneously behaving wavefronts
fl owing along direct association paths through spontaneously behaving opera-
tors. Data wavefronts and operators passively wait to be controlled by a
command wavefront. A single coherent relationship structure has been frag-
mented into two relationship structures with no inherent connection. Unique
place in a structure of association relationships has transformed into a com-
bination of unique place in memory and unique place in an a sequence of
commands.

These two expressions must be properly coordinated with each other to
correctly express the process. There are many possible correct command
sequences, and the memory mapping is completely arbitrary. It is easy to get
the coordination wrong. None of this variability of expression is present in the
original example association expression of Figure 9.1.

9.2.6 Commands in Memory
The command ring is just a memory for the command sequence that presents
the commands one at a time in sequence. With a large generally addressable
feedback network each command wavefront can just as well be stored in the
feedback network and the command ring can contain just a sequence of feed-
back network addresses. Each command can be fetched and instantiated in
sequence and then sent back to its address to be enabled another time.

9.2.7 Subexpressions and Iteration
If the pre-addressing of the feedback network is ordinal, the commands can
be placed in consecutively ordered addresses and the address ring can contain,
instead of a sequence of addresses, an address generator that generates con-
secutively ordered addresses. A command can be added that sets the address
of the address generator so that it starts generating a sequence from a new
pipeline address. This way a greater sequence can be composed from lesser
sequences located at different places in the pipeline network. If a command
can set the sequencer address dependent on some data state, a command
sequence can be composed conditionally in relation to states of data.

9.2.8 Indirect Addressing and Data Structures
The ability to change the sequencing location means that some sequences
can be composed multiple times. It makes little sense that the same sequence

be applied to the same data multiple times, so each instantiation of the
sequence should be presented with a different data set to resolve. If the
commands in the sequence refer to specifi c feedback pipelines, the contents
of the pipelines can be changed between instantiations. Another possibility is
that with ordinal addresses the pipeline addresses of each command can be
relative to a base address that can be changed by a command between each
instantiation, allowing a command sequence to be instantiated over and over
on different sets of data at different places in the memory enabling iteration
behavior.

9.2.9 A Generally Confi gurable Expression
A sequence of commands composed of short command sequences at different
places in memory can operate on patterns of data reference composed of
common subpatterns of data reference at different places in memory. Any
association expression, including expressions that associate through time, can
be mapped into the confi gurable expression.

9.2.10 The Conventional Synchronous Sequential Architecture
The confi gurable expression presented so far is still a logically determined
pipeline structure of spontaneously fl owing wavefronts coordinated with
completeness relationships. A command wavefront splits into fi eld wave-
fronts that fl ow to the steering structures, enabling data wavefronts patiently
waiting in the memory pipelines through an operator and back to a memory
pipeline. It is a short step from this point to the traditional synchronous
architecture with a conventional passive memory, a controller, and an
ALU—all coordinated with a global clock. With a conventional memory
a location can be read multiple times, so the chain operator is no
longer needed. The data fl ow is regimented in terms of clock tics instead of
spontaneously fl owing in terms of local completeness relations. Each tic of
the clock is the expression of completeness. With the conventional memory
and the clock the last vestige of logically determined spontaneous behavior
disappears.

9.2.11 New Notions of Expressivity
In the process of incidentally extending expression in time, several new
notions of expressivity arose: the notion of a single coherent addressable
memory, the notion of passive data, the notion of addressable operators
(ALU), the notion of strict sequentiality, the notion of explicit sequence
control, the notion of the serial bus, the notion of a sequence of symbolic ref-
erence, and the notion of interpretive resolution of a symbolic referential
expression.

TIME–SPACE TRADE-OFF 161

INCIDENTAL TIME
9.3 SUMMARY
Extension of an expression in time may simply be an incidental feature of a
particular expression in contrast to an additional dimension of differentiation
and appreciation. Any expression can be extended in time in many ways, all
of which involve memory. Memory may often be much cheaper than other
resources of expression, and memory can support fl exibility of expression
enabling symbolic interpretation.


Computer Science Reconsidered: The Invocation Model of Process Expression, by Karl M. Fant
Copyright © 2007 John Wiley & Sons, Inc.

POINTS OF VIEW
The fi rst step of process expression is a point of view. What are the different-
nesses of the process? How are they associated? How do they interact and
appreciate? The answers to these questions form a point of view. There can
be different points of view for any given process, leading to radically different
expressions of the process. This chapter explores example processes from dif-
fering expressional points of view.

10.1 NUMBER AS DIFFERENTNESS
Number is an expression of ordered differentness. The differentnesses can be
ordered with uniform intervals of differentness, creating a cardinal metric typi-
cally expressed as a uniformly ruled number line. Differentness is characterized
as place on the number line in terms of quantity of intervals from an origin. Two
different numbers represent two different places on the number line. If two
numbers are identical, then they represent the same place on the number line.

In the abstract, each number is a unique differentness. But, in practice, a
number is represented symbolically with a limited number of actual different-
nesses: a limited set of unique digits. This is accomplished with multiple
ordered digit positions, each of which can contain any digit of the set, each
position imparting a different meaning to its contained digit. This is called a
place-value number, where place refers to the position of a digit and value
refers to the actual digit at the position. In a place-value number each digit

POINTS OF VIEW
