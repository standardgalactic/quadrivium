value and the 1 value for that wire.

C means X = 0
D means X = 1
E means Y = 0
F means Y = 1 and so on for each wire in the circuit.

Next imagine a set of rules that express how the symbols interact and trans-
form into other symbols such as the set of rules below. GI[S] means the com-
bination of symbols G and I transform into the symbol S. The interaction rules
for the behavior of each logic operator are derived from the symbols associ-
ated with each operator and its particular logical operation. The derivation of
CI
X
Y
S
CO
A,B
C,D
E,F
G,H
I,J
K,L
M,N
O,P
Q,R
S,T
U,V
W,X
g,h
a,b
k,l
c,d
o,p
e,f
i,j
m,n
q,r
s,t
u,v
Figure 3.2 Boolean full-adder mapped to a rich symbol expression.


the interaction rules for the AND logical operator surrounded by O, P, Q, R,
W, and X is shown in Figure 3.3.

The resulting expression of the full-adder, which is just a collection of
interaction rules, is shown below.

“fan-out input symbols”
A[g, k, o] B[h, l, p] C[G, K, O] D[H, L, P] E[I, M, Q] F[J, N, R]
“defi ne combinational resolution stages”
GI[S] GJ[T] HI[S] HJ[S]
KM[U] KN[U] LM[V] LN[U]
OQ[W] OR[W] PQ[W] PR[X]
“fan out input to second half-adder”
SU[a, c, e] SV[b, d, f] TU[b, d, f] TV[b, d, f]
ga[i] gb[j] ha[i] hb[i]
kc[m] kd[m] lc[n] ld[m]
oe[q] of[q] pe[q] pf[r]
im[s] in[t] jm[t] jn[t] “sum”
qW[u] qX[v] rW[v] rX[v] “carry out”
Imagine that the expression above is directly enlivened with spontaneously
behaving and interacting symbols. Symbol G knows it can interact with
symbols I and J and with no other symbols. Symbol I knows it can interact
with symbols G and H and no other symbols. G and I know when they encoun-
ter each other to spontaneously transform into S effecting the rule GI[S]. If
the symbols are in a shaking bag, all possible associations of symbols will
occur, and all possible interactions will happen. The expression resolves pro-
gressively and unambiguously through the spontaneous behavior of the indi-
vidual symbols. Input symbols thrown into the shaking bag will associate,
transform, and resolve the expression. Figure 3.4 shows the progression of
resolution for input symbols B, C, and F. The combinations of symbols involved
at each stage of interaction are circled, and the rules involved are shown
between the bags.

Every symbol is unique and every combination of interacting symbols is
unique. The coordination of the symbol resolution fl ow is embodied in the
symbolic expressions. When the expression is directly enlivened, the behavior
of the enlivened expression is completely and unambiguously determined by
K
L
J
K
Q
R
P
O
K
L
J
K
W
W
X
W
OQ[W] OR[W] PQ[W] PR[X]
Figure 3.3 Mapping of value transform rules.

ELIMINATING THE HUMANS 39

DEHUMANIZING COMPUTER SCIENCE
the symbols and their interaction rules. There are no races no hazards and no
ambiguous behavior. There is only the orderly propagation of correct result
symbols. When an s or t and a u or v appear, they express the correct comple-
tion of a resolution.

The new expression is a symbolic expression in the same sense that the
Boolean logic expression is a symbolic expression. There is a population of
symbols with a set of symbol interaction rules. There is a direct mapping
between the Boolean symbolic expression and the new symbolic expression.

However, the new symbolic expression behaves correctly on its own symbolic
merits. No extra expression such as a time interval is required. There is no
need to “engineer” the enlivened expression to make it work correctly. An
engineering human is not required.

3.2.3 Eliminating the Conceiving Human
There is still the human in the works that conceived the Boolean expression.

We are used to thinking of the conception of a symbolic expression as a care-
fully coordinated interplay between specifying a set of symbols, specifying the
symbol interaction rules and specifying the patterns of interaction. But, if the
resources of expression are profl igate, are spontaneously active, and are con-
tained in a common place of interaction, then a large variety of symbolic
expressions must spontaneously arise and resolve. The entire realm of the laws
of physics and chemistry provide an enormous domain of interaction rules for
particle, atomic, and molecular symbols. There are, for instance, 10130 possible
protein symbols. Spontaneous symbol interactions in the thermally agitated
soup contained by the gravity well of a young earth stumbled upon and ignited
the expression of a sustainable self renewing process expression that drifting
through an immense possibility space for billions of years continues to smoul-
der and begins to contemplate itself. No human expressivity was required. The
conceiving human fi nally becomes unnecessary to the existence of a spontane-
ously behaving symbol system, and the last human is removed from the
works.

OR[W]
GJ[T]
KN[U]
B[h,l,p]v
C[G,K,O]
F[J,N,R]
pf[r]
hb[i]
ld[m]
im[s]
rW[v]
TU[b,d,f]
T
U
W
h
l
p
b
f
W
h
p
d
l
m
r
W
i
s
v
B
C
F
G J
K
N
O
R
h
l
p
Figure 3.4 Resolution progression for pure symbol expression of full-adder.


3.3 HUMANLESS SYMBOL SYSTEMS
While humans can still muck around in the works as they please, they are no
longer conceptually integral to the works. Transcending its mathematical heri-
tage without abandoning it, dehumanized computer science is essential to
understanding the nature of symbolic expression. It can encompass expres-
sions of natural symbolic computation as well as expressions of human sym-
bolic computation in the same way that the science of aeronautics encompasses
the airplane’s wing and the bird’s wing.

REFERENCES
1. P. Ceruzzi. Electronics technology and computer science, 1940–1975: A coevolution.

Annals of the History of Computing 10 (4, 1989): 257–275, quote at p. 267.

2. A. Newel, A. Perlis, and H. Simon. Letter to the editor. Science 157 (22 September
1967): 1373–1374.

REFERENCES 41
