
FOUR AVAILABLE DATA VALUES 89

ALONG THE SPECTRUM
specifi es the assertion value. The other input is the output of an equality opera-
tor. If the other input is the TRUTH value, in this case L, then the specifi ed
value is output; if the other input is a FALSE value, in this case I, then a default
value is output. In the latter case, I is assigned as the default value. It is con-
venient for the FALSE value and the default value to be identical.

The Priority Operator Once the appropriate recognition value is asserted,
it must be delivered to the appropriate output. The priority operator, shown
in Figure 6.9, passes the default value, in this case I, unless one input is a higher
priority nondefault value in which case the operator passes the higher priority
nondefault value. A tree of priority operators with all inputs default values
except one, which may be a nondefault value, will propagate the nondefault
value to the root of the tree. If there is no nondefault value, the default value
will propagate to the root.

The input of the tree of priority operators is the nine assertion operators.

These operators will all generate I except for one, which may assert a higher
priority value or may assert I.

Asserting the Output The generation of the Y output value is shown in
Figure 6.10. A single L value will cause an assertion operator to assert the
appropriate output value that is collected through the tree of priority opera-
tors to assert the fi nal Y output.

All of the result values do not need to be explicitly generated. The truth
value is already an L value, so it can be used directly without passing through
an assertion operator. For the case where the output value is I, it need not be
explicitly asserted at all. All the other recognition values will be asserting I
into the priority tree. I is the default value and the collected output will be I
without it being explicitly presented to the tree. Figure 6.11 shows the genera-
tion of the Y output explicitly asserting only J and K.

Since L is a higher priority value, all the Ls that will assert a specifi c value
can be priority collected before the assertion of the specifi c value. There
only needs to be one explicit assertion of each value for each output. Figure
6.12 shows the collection of all the TRUTH values that will generate K or J
before presenting them to assertion operators to actually generate the values
K or J.

I
K
J
K
J
I
L
L
K
J
I
L
K
J
J
L
K
K
K
L
L
L
L
L
P
symbol
Figure 6.9 Four-value priority operator.


Y result
I
J
K
A
A
A
J
K
L
A
A
A
K
I
I
A
A
A
P
P
P
P
P
P
P
P
IK -> LI
JK -> IJ
KK -> LK
AB -> XY
IJ -> KJ
JJ -> KK
KJ -> KL
II -> JK
JI -> JI
KI -> KI
J
K
A
A
J
K
A
A
K
A
P
P
P
P
P
IK -> LI
JK -> IJ
KK -> LK
AB -> XY
IJ -> KJ
JJ -> KK
KJ -> KL
II -> JK
JI -> JI
KI -> KI
Y result
Figure 6.10 Generation of Y output value.

Figure 6.11 Modifi ed Y output generation.

FOUR AVAILABLE DATA VALUES 91

ALONG THE SPECTRUM
6.2.3 The Complete Expression
The complete expression that recognizes a presented input name and generates
the appropriate output values for X and Y is shown in Figure 6.13. With the
NULL convention coordination all operators will transition twice per name
recognition for 74 transitions. For timed coordination without the NULL con-
vention there will be 17 to 22 transitions per input. All 12 rotates will transition.

One recognition will transition. There will be three or four transitions to assert
X and one, four, or fi ve transitions to assert Y. With four values there is a 25%
chance that each operator will be in the appropriate state and not transition,
so the transitions for a timed expression will be 75% of 17 to 22, or 12.75 to
16.5 transitions. The transitioning of the clock is not considered.

6.2.4 Correspondence with Boolean Logic
The correspondence of the four-value operators with the familiar Boolean
logic operators is shown in Figure 6.14.

Binary inversion is the Boolean version of the rotate operator. The AND
operator is the Boolean version of the equality operator with a standard rec-
ognition name of 11. TRUE is 1 and FALSE is 0. The OR operator is the
Boolean version of the priority operator that passes the default value, 0, unless
overridden by the higher priority nondefault value, 1. Since there is only one
nondefault value which is the same as the TRUE value asserted by the AND
operator, there is no need for an explicit assert operator to assert multiple
nondefault values.

AB -> XY
Y result
J
A
K
A
P
P
P
P
P
IK -> LI
JK -> IJ
KK -> LK
IJ -> KJ
JJ -> KK
KJ -> KL
II -> JK
JI -> JI
KI -> KI
Figure 6.12 Optimized generation of Y output.


Recognize input name
Generate appreciation behavior
Y output
J
A
K
A
P
