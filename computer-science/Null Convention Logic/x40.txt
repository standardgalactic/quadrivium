COMPOSING BOUNDARIES
behavior of the cycle. Spatial and temporal alignment can be recovered at the
level of the four-bit adder, which can then be composed to coordination pro-
tocols through communication channels and memories, and so forth.

7.2.8 Nature’s Coordination
The completeness boundaries and the feedback coordination cycle presented
here are simple conventions for human consumption. The inverted acknowl-
edge is a simple dependency relationship to keep wavefronts from colliding.

The expressivity of nature is more free form and opportunistic than the formal
mentality of humans, and there can be more complex dependency relation-
ships that separate wavefronts of behavior and involve more disjoint value
sets. There is no reason why there cannot be multiple disjoint value sets, each
expressing data meaning as well as coordination meaning with data paths and
coordination feedback paths much more complexly intertwined, less distinctly
hierarchical, and less distinctly cyclical.

7.3 PARTITIONING THE NETWORK
Composing greater association expressions by directly associating boundaries
of lesser association expressions makes larger and larger networks of associa-
tion relationships. This network is a structure of composition boundaries that
can be viewed in many ways in relation to its boundaries. Each composition
boundary is also a partitioning boundary, a completeness boundary, and a
N
N+1
N+2
N+3
N+4
N+5
N+6
T
R
I
A
N
G
L
E
B
U
F
F
E
R
T
R
I
A
N
G
L
E
B
U
F
F
E
R
Figure 7.24 Inverted triangle buffer generating skewed wavefront fl ow.


coordination boundary. The behavior of every boundary has to be coordinated
one way or another. Figure 7.25 shows a network and its composition
boundaries.

7.3.1 Completeness Boundaries and Concurrent Behavior
Each level of composition forms a new boundary that encompasses the bound-
aries of the component expressions resulting in a hierarchical structure of
nested levels of boundaries. Each new boundary is composed of multiple
lesser boundaries.

While the behavior of a boundary itself is strictly sequential, the component
boundaries can behave concurrently in relation to each other. These boundar-
ies in turn decompose into lesser boundaries that can behave concurrently in
relation to each other. As boundaries decompose down the hierarchy, concur-
rent behavior proliferates.

The four-bit adder receives one pair of four-bit number wavefronts at a
time. These wavefronts are decomposed into four pairs of one-bit numbers
level 0
level 2 boundary
level 3 boundary
l
e
v
e
l
b
o
u
n
d
a
r
y
Figure 7.25 Association expression with composition boundaries.

PARTITIONING THE NETWORK 119

COMPOSING BOUNDARIES
and presented concurrently to four full-adders. Each full-adder decomposes
the pair of one-bit numbers and a carry into individual digits and presents
them concurrently to its internal logic functions.

7.3.2 Hierarchical Partitioning
A network can be partitioned along commensurate hierachical boundaries.

The network of Figure can be partitioned at level 1 boundaries, as shown in
Figure 7.26. The level 1 boundary is expressed in both partitions. The greater
partition—levels 1, 2, and 3—retain the expression of the level 1 association
relationships. The lesser partition—levels 0 and 1—lose the level 1 association
relationships, and the lesser partition becomes an unassociated collection of
level 1 expressions. The relationship between the greater partition and the
A
A
B
C
E
F
G
D
B
C
E
F
G
D
level 0
level 2 boundary
level 3 boundary
l
e
v
e
l
b
o
u
n
d
a
r
y
Figure 7.26 Network hierarchically partitioned at level 1.


lesser partition might be maintained with a reference mechanism such as the
letters in Figure 7.26.

One might compare and sort the unassociated level 1 expressions and fi nd
that there are only four different types of expression. The greater partition
can now be expressed in terms of reference to type of level 1 expression, as
shown in Figure 7.27 instead of in terms of reference to specifi c level 1
expressions.

This raises the possibility of there being only one instantiation of each level
1 expression. As the greater partition resolves, it can dynamically compose
level 1 expressions by type reference from the sparse set of instantiated level
1 expressions. A conventional computer with its ALU, large memory and
sequence controller is a mechanism to realize such dynamic composition. The
greater partition is the program and the lesser partition is the ALU.

An expression might be partitioned at multiple hierarchical levels to map
into different implementation environments. The lowest level might be parti-
tioned and mapped into hardware. A higher level can be mapped into fi rm-
ware, a higher level into software, and an even higher level into scriptware.

W
X
Y
Z
W
Z
Y
X
X
X
Y
X
Z
X
W
Z
Y
X
X
X
Y
X
Z
X
W
Z
Y
X
X
X
Y
X
