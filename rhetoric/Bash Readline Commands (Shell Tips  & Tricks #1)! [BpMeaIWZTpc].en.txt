hello everybody it's stack smasher back
again to show you some bash tips and
tricks
i had this video on my channel
previously and i
ended up privating it because um it
didn't turn out super great
we'll see if this one turns out better
but basically i'm just going to go over
some things that
the reedline functionality implements in
a lot of different shells
so you're probably using a shell
like bash or zsh or i think even fish
implements this
and there's all these useful keyboard
shortcuts
that i never see people use i work in
the professional world
in a technology based company
in just this week which is why i was
reminded to remake this video
so i basically i backspaced a whole word
and the person i work with goes how did
you do that
so it's really weird to me that people
don't know about these
these functions i use them hundreds of
times every day
and it'd be interesting to see if other
people find this video useful for that
reason
so i'm going to make the text bigger
here as always oh wait that's not how
you do it
my bad i have different different
terminal
i had in my mind so basically we're just
going to do a couple of
simple commands here on the command line
so let's just do let's
do something like let's first of all
let's cd into this
this directory where i have my notes
and from here um i don't know let's do
something
i guess ls is fine isn't it let's string
a couple commands together though let's
do ls
um echo
lol you know whatever fine
okay basic command on a command line i'm
going to
show you a couple of different tricks
again keyboard shortcuts for kind of
navigating
we're going to start with navigation
we'll move on to other stuff
from there all of these commands except
for one
require you to hold down the control key
so if i just say
use b or use f i mean along with the
control key i hope i don't make that
mistake but i might
if i want to navigate backward through
the command line
through the command on the command line
one character at a time i can do control
b
as you can see there that's control b if
i want to go forward i can do control
f right if i want to jump to the
beginning of a line i can do control
a if i want to jump to the end i can do
control
e okay i think i actually feel like i
need to make this
this is uh it's super important you can
see my highlighted cursor here so i'm
hoping this is useful
um let's make it even bigger why not
uh ctrl b to go back ctrl f to go
forward
ctrl a to go to the beginning a just
because the first letter of the alphabet
and control e for the end
to go to the end obviously control b
stands for back control f stands for
forward
so that's pretty straightforward right
navigating across the command line
in pretty much a as a simple way as
possible
there's another command that might work
for you control x
that normally in my terminal actually
don't know why
but in my terminal it highlights the
entire line
i don't have a clue why in my other
terminals so i'm using st
here but i've used alacrity in other
cases uh control x
x which is what i just typed that that
takes you to the most recent spot so if
you start at the end of a line then hit
control
a control x x will just take you back to
the end of the line not as useful but i
don't know why st handles that
differently
it seems to be a problem with the
terminal maybe it's not maybe it's
something deeper
in linux that i'm just not aware of but
seems to be a difference in terminals
okay so all that stuff is pretty easy
right straightforward
if i do this echo three echo two echo
one
to seek in my history for a command i've
typed i can hold ctrl and press p for
previous
so you see there we've gone through echo
one two and three
or ctrl n for next
right remember we ran this echo lol now
i'm basically just hitting ctrl p for
previous control n for next to find
those
and of course from there you can just
execute whichever one you want if you
want to take it a step further you can
use control r
control r this is reverse image reverse
image search when we're talking about
uh reverse searching of a command so if
i were to type echo
you would see one of the recent echo
commands come up i can actually hit ctrl
o to just execute this
or i can hit ctrl t to
um let me do another reverse search here
get out of here
ctrl t just puts it on the command line
without executing it
uh so from there i can edit the command
so if i have like a i don't know some
complicated command
i i could just hit ctrl t and then go
back and edit it in whatever way i
wanted
um of course will make a difference here
but
so uh you get that also i should say
control l is how you clear the terminal
i guess i should have mentioned that
before i do that all the time don't even
think about it
another interesting trick for bash
output
is control q and ctrl s if you want to
play a prank on your buddy
use ctrl s so what this does now let's
say i export
a variable equals
zero sum equals zero and then i want to
export sum equals uh let's do some math
here
sum plus one
and then let's echo sum i think this
will work
yeah okay cool so i'm basically just
incrementing this environment variable
if i put this in a while loop while one
meaning it just runs forever
nope that won't work oh see i just tried
to use ctrl x
that won't work either
basically you can see what this is going
to do this is going to increment this
environment variable forever
so if i hit control s the terminal
output pauses this is extremely useful
when you're you're maybe doing a big
download and you see an error output
message you want
control s will pause the terminal output
now interestingly enough i'll show this
in a second
it pauses it in every which way so if
you're trying to type
i don't know if you can hear me typing
but nothing will show up
until you restart the output with
control q which i'll do now
so this just puts you back to where you
were it's not actually catching up it
actually just launched forward to where
i was before
i'll stop this now there's no need to
keep on doing that but i'm going to hit
ctrl s so you can see i'm not typing
you can see what it looks like when i'm
typing i'm going to type ls
colon echo law like i did before so
i'm going to hit control s first
and i'm going to enter now you haven't
seen anything if i hit control q
it launches forward like hey here's
here's what's actually on the terminal
interesting trick if you ever want to
play on your buddy hit ctrl s
now let's actually talk about the stuff
that's useful that i use hundreds of
times a day everything up to this point
they're neat tricks uh just to kind of
know
if your application is implementing read
line you can do all these things in fact
i think
uh like if you're in a python shell
anything that implements redline this
will work as well if i just did like
i don't know a times
25 can i go to the beginning yeah okay
everything works as expected
uh but you get my point these are just
kind of neat tricks but these next ones
are actually really really useful i use
them like i said hundreds of times a day
they're for editing commands on the
command line that are currently
uh in your prompt so let's say i run a
really complicated command let's say
well let's not make it super complicated
i guess let's just do that uh wild
command why not
let's bring that in here using the
tricks we just learned
so let's say i don't know i want to
change
the the echo part of the command right
if i'm here on the command line what's
the fastest way to get rid of everything
from where my cursor is to the end of
the line
the answer there is of course ctrl k i
say of course well the whole point of
this video is that it's not obvious
ctrl k deletes everything from your
cursor
to the end of the command now i'm going
to replace it and i'm not going to tell
you how i replace it because
that's important we'll get to that a bit
that's a neat little trick
if i want to change let's say i'm here
and i want to change the word sum to a
different variable
i could hit control w and i could change
that to
i don't know value whatever i'm going to
change it back to sum because sum
actually works here if i want to delete
everything let's say i typed a different
kind of loop or i want to change this
from where my cursor is now to the
beginning of the line i can hit ctrl u
and then again i'll replace it with this
magic trick i'm going to reveal in a
second
and then most uh probably the thing i
use the most
is control h and control d so if you
want to
so export let's say i want to delete the
word export and this is my cursor
direction
i could just hold down control d or
press ctrl d a number of times
that deletes starting from the cursor as
you can see there
or i could do control h which deletes
backward from the cursor
as you can see there so i'll cover those
all again
ctrl k is from cursor to end of line
control u is from cursor to beginning of
line
ctrl d is cursor just eats up the things
in front of it
and control h is cursor deletes
basically
ctrl h in this context is the delete key
for all intents and purposes
it might even be easier to use a delete
key the whole reason i'm showing you all
these things is because
on my keyboard where the arrow keys are
is extremely
frustrating if you are on if you're
typing in a console as much as i am
so um all these little tricks are
valuable
so i want to talk also about the the
bash or i guess it's not the bash but
the redline buffer
which is the magic trick i was showing
before whenever you delete something
using any of these tricks from redline
their value is stored in a uh
in a buffer sorry for that rough edit
there i had a crash
either way uh talking about the redline
buffer
so if let's say we're typing
um three words we want to echo
uh deleting one with control w as we saw
before we can repaste it with control y
if we delete three words we can also
repaste it
with ctrl y there's some time uh
thing in effect there i'm not aware of i
basically
if i hit control w and then wait too
long and then control w
again it will only paste one word i'm
not sure what the actual um
how that's configured where it's
configured but this is super valuable
knowing this redline buffer
anything you delete most recently
is stored in that buffer a time where
this has been useful to me
most recently at my job is we were doing
something with docker i won't actually
use docker commands but let's
let's just say i wanted to run a command
that was echo
lol but then i needed to check a
configuration file i could hit control u
cat notes.txt or let's make up a fake
file
and then after that control y again and
the thing in the buffer just returns to
the terminal
this is extremely valuable now the last
thing i want to show you
is the exact same thing as control w
with one minor exception so if i do
something like this let's say i do
ls directory
dir dirt or the
obviously a fake directory it's not
gonna it's not gonna be real
if i control w that
the entire directory is gone
if i just use control y to bring it back
if you want to
go to the most recent
uh i guess alphanumeric character
not punctuation character or other
characters
you can use your meta key backspace
which
in my case is alt backspace but i've
been on a machine where i've had to do
shift alt backspace before so just be
aware this might change
so if i want to go back to the period
where asdf.jpg
the period in that dot jpg all backspace
will work
if i want to go back to the forward
slash
obviously you get it you get it right
and of course all that will paste back
with
control y as well so ctrl w to delete
the whole word
or alt backspace or whatever your meta
key is again it might you might have to
hold shift for this that's happened to
me before
to go to the most recent alphanumeric
or non-alphanumeric character right
that simple that's really useful if
you're just trying to change
uh directories in a
output or a command i guess
anyway that's it for me thank you
everybody i appreciate it
as always leave a couple comments
i love whenever you guys do let me know
if this is useful
otherwise i will talk to you again soon
