gosh am i upset so i definitely just
recorded this video two different times
with different obs settings
and they both were just terrible i
if anyone knows of a good video to get
obs audio set up
between your mic so basically what
happened was i had my mic set up but for
some reason
all of the default mics were set to the
mic i had plugged in so when i
listened back to the audio you could not
only hear me four times
but it was extremely loud i think i
fixed it now i certainly hope so
i'm going to try to get through this
video quickly so i'm not super
frustrated if i fail again
but anyway other side note i've switched
to using
um herbs left herb sluff i don't know
how to say it but it's a pretty cool
window manager i like it quite a bit i
might do a video on it soon but
anyway this isn't about that this is
about my favorite
my very favorite library in all of
uh maybe all of unix because i use it
hundreds of times a day some maybe even
thousands i don't count but
it's called the redline library and it's
used in bash as what's called the line
editor
so command line interfaces will often
have line editors zsh has one called zle
which just stands for zsh line editor
but read line i've done videos on before
it's the one
that's on by default in bash but i
found some amazing new tricks i have to
show you so just as a brief reminder
the read line library is how you control
the line the cli like i said before
so you can do things like if i type
three word forwards and want to delete
one
i can hit control w and i can control w
again to delete a second one
if i want to re-paste those in a
different spot i can hit control y
i pasted them in the same spot in this
case but if i want to let's say paste
them at the beginning so i'll use a
different example
one word two word three word four
control w control w control a to go to
the beginning of the line and then ctrl
y to paste them
and then i can hit a space there to add
that space there
so um you can also just from where you
are delete backwards
and then hit ctrl e to go to the end of
a line ctrl y to paste again so we're
back to where we were before
now all that's great i've shown that
before so this is just a refresher for
those of you who might be new
or i'm sorry for those of you who saw it
before i guess it will be new to those
of you who are new
but i found some amazing new features
that i just could not hide
because they were so great so awesome so
one of those is i've always done control
backwards and control forwards to move
forward by word
so it makes more sense there's a bunch
more words there right
that's how you move forward that's
actually in read line by default you can
hit control i'm sorry alt
b to go backward by word or alt f to go
forward by word
now in herbs left ctrl alt f
is um it's key bound to full screen
so i can't do it here i can overwrite
that in fact i can't think of a time
when i would need full screen
in herb stuff so i might just overwrite
that by default
that seems like that would be for the
best but anyway
so that navigation is really valuable
and it was new to me
i don't remember if i've shown this
before but if you do something like
i hope i showed it before
[Music]
something like this and you want to
change or you want to delete
just a certain path in the directory
if you hit control w you go back to the
most recent space
i'm hitting ctrl y to bring that back
but if you do shift
all backspace you go to the most recent
non-alphanumeric character
like that right so i could easily just
delete this
and then backspace here type var and
then control y to bring back what i
deleted
using shift alt backspace and i'll put
all these key
bindings in the description so it makes
sense remember though if they don't work
it could be that your window manager
or something else is bound to those keys
so just keep that in mind as well
additionally if i want to do let's say i
want to
copy this file to this one if i want to
do that now these files don't exist but
let's say they did exist but i got them
in the wrong order like the first one
didn't exist but the second one did
right i could easily just let's count
here we have if we start at 0 we have
0 one two arguments
and i can use the bang directive which
is uh
the exclamation point to slice the
previous command so you'll know if
you've ever done anything with
with um
bash read line before that the
exclamation point
just means previous command and so if
you do previous command
and then you type the history number it
will repeat that i don't know what 234
is i'm not going to run it it will
repeat that command in your history
if you do previous command previous it
does the exact
most recent command so it'll try the c
the copy
command here but if i want to do
something special with that like slice
the previous command
i can do let me just type it again here
actually
so remember again we have zero one two
arguments i can do cp uh
bang directive and then zero
one two sorry one
two two
[Music]
one and you can see here that's replaced
those two in uh in order using what are
basically slices or arrays or whatever
your
lists whatever your favorite programming
language calls them i don't know what
bash calls them
so these are amazing new things i've
learned but there is one
way more amazing thing i've learned it's
so amazing i can't believe it's real
i'm gonna start using it i'm fairly
positive but i haven't used it enough
yet
so the one thing i never made the
connection to
is that these commands i've described
control a to go to the beginning of the
line
control k to delete from the cursor
those are emacs
key bindings and i never made that
connection before the read line library
was written by the same people who wrote
emacs
richard stallman was on that team etc
but
because so many people working on the
library preferred vi
as a text editor they made a mode
called vi mode which you can enter by
doing
set tech again this only works on bash
this is not implemented in zle
so what does that do well you always
start in insert mode
so i'm just typing but if i hit escape
you can watch my cursor there
escape it goes back onto the keys and
i'm now
in uh normal mode editor mode visual i
don't remember the name of the mode and
vibe
but i'm using h and l to navigate the
keyboard
right i can hit j and k to cycle through
history
right so these are commands i just typed
right i can hit
uh zero to go beginning of the line
dollar sign to go to the end
b to go backwards words everything you
can do in
in vi the default vi key bindings you
can do here
so if i want to do delete the whole line
i can do dd
if i want to paste it back i can do p
right
and i can of course like i said cycle
through history the way i just showed
or i can yank let me see if i just yank
a word
here let's do um uh yw
go to the end of the line hit capital p
paste it well i did it wrong whoops
can i do you to undo oh yeah i can do
you to undo totally fine
you see though i can i can hit i to go
back into edit mode so now i've hit i to
add a space there escape to go back all
of those key bindings you're used to let
me if i do
if i do v do i grab the actual
oh okay if you hit v it actually opens
up the command
in vim which is cool and i'll bet if i
edit it it'll take me back let's see if
i do that
let me get out of here now oh no that
didn't work at all
oh is that an actual command i didn't
know that anyway
so maybe maybe the editing there is
actually a little bit more um
it's a little bit tougher than i thought
i might have to get used to it i just
started using this i just found out it's
real
so let me just type clear here because
um
and this if you want to go back to
normal if you just want to experiment
with it
you just do set taco emax which of
course brings us back to where we were
before i can hit control u control y
control v or alt b et cetera ctrl k
all the same stuff we had before you can
also change the key bindings on either
of these i didn't realize that as well i
mean it makes sense that you would be
able to customize it it's all open
source it's all here on the actual
computer you're running it from
so that makes sense but if you want to
do what i do
in vim or vi which is i don't like
hitting
escape to exit insert mode i'm going to
enter insert mode now i'm going to type
something what i do to get out of insert
mode is i just hit double j
i've made that key binding accessible to
me so i can escape instant mode that way
without having to reach for my escape
key
you can keybind redline to do that as
well whenever you're in vy mode
so anyway that's all i really wanted to
show play around with it let me know how
you like it
i think it's awesome i'm probably going
to start using it i just gotta you know
change some key bindings up
i have never liked zsh's zle
the airline editor which is why i've
never switched to zsh whenever i
start cali up now i always switch the
default shell back to bash because i'm
so familiar with the key bindings
oh did i not show the kill buffer oh my
god i'm sorry i'm so sorry
that was one of the coolest things ever
and i didn't even show it so
in redline here's another i guess
another trick you're getting for free
this is a bonus part of the episode
uh whenever you're in emacs mode which
is my the default one i'm used to
i showed you that kill buffer so if i
want to do word one
word two if i hit control w
and then i hit control y
that pastes what i just deleted right
what i just found out
is that this is actually being pasted
from what's called the kill buffer which
you can cycle through
so i just deleted word two now i'm going
to delete the whole line
this means when i hit control y
let's say i want to do echo and then i
hit control y
right it pastes back what's the most
recent item in the kill buffer but i can
cycle through the kill buffer
by not moving my cursor and hitting alt
y
so you see we're now at word two which i
just deleted the first time
so if i delete all this now and i hit
control y
we can cycle through the kill buffer
again to see the most previous things
we've
deleted anyway that's an incredibly
powerful command if you want to store
very complicated commands in your uh if
you're doing in bash let's say these
aren't complicated commands but let's
just say we're doing something like
copy thing doesn't matter what it is
and then i'm over here doing i want to
pipe that to a different command
but i don't know if the second command
works i can do
control u to delete the entire line test
the second command works
and then i can paste back and then edit
whatever i want
but if i need to edit the command that
i'm testing
uh okay that didn't work but maybe it'll
work if i do it like this
then all i have to do oh
okay i don't know what that's about but
um
and then i want to get back to the
command i was testing i can hit ctrl y
and then cycle through that kill buffer
to get back to where i was
and start re-entering the command i was
testing
anyway a little bit all over the place
this video i've been gone a while
because of work stuff i won't go into it
here maybe i'll do a
just audio update but anyway very cool
stuff the redline library is
significantly more powerful than i
originally thought it was
i'm going to start using vi mode and let
you guys all know how it is if you guys
have any advice for obs let me know i am
terrible at it if there's like a good
once-over video
i'm you know it's not the reason i don't
upload i don't upload because i'm lazy
but i've never had such a bad time as i
did today anyway hope all you guys are
doing well
i'll be back on shortly
