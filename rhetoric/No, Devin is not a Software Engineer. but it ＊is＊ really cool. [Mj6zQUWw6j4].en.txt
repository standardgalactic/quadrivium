welcome to the internet of bugs today
we're going to be talking about an
exciting new announcement from cognition
Labs about their new AI offering called
Devon I'm going to see if I can separate
the value from the hype and in the
process talk about the question what is
the job of a software engineer exactly
my name is Carl I've been a software
professional for 35 years and I'm the
father of a college freshman computer
science major and on this channel I've
been answering questions from college CS
Majors about programming as a profession
I've been doing a series on programmer
jobs in AI lately and I got a text this
morning asking what I thought about this
announce
short answer is I think it's great I'm
fascinated by it and I look forward to
using it and more tools like it but as
with all things AI these days it's got a
lot of hype around it to start with
they're calling this the first AI
software engineer which I think is way
overblown but hey it got a lot of
attention so I see why they did it in
this climate when everyone is
exaggerating if you try to be modest
you'll never get noticed that said it is
really really cool I put a link to their
Channel with their Demos in their
description although let's be realistic
if you're watching this video you
already know what it is and how to find
it
this offering is different in specific
ways than any I've seen before and it's
really cool for one thing Devon has its
own command line window in which you can
download and run code it's got an editor
window where it can edit code it has a
browser window where it can interact
with websites like GitHub and it can
read and make use of some documentation
it finds and it can interact with the
apis of some websites but the main thing
that I've seen is it has a dedicated
planning window and it breaks down tasks
and then executes them in order it's
also got the ability to do some amount
of debugging by print statement which is
cool most of this as individual skills
aren't new for quite a while chat GPT
has been able to give you a step-by-step
list of things to do it can summarize
documentation and apis it can tell you
what Linux commands to run for certain
tasks it can suggest code and find some
bugs in code the cool thing is someone
finally put this all together it was
inevitable would happen at some point
but I'll admit it happened more quickly
than I thought it would there's some
legitimate question about just how
cherry-pick these examples are but there
isn't anything about what it does that
seems INF feasible and it seems to have
the ability to accept new instructions
when it gets stuck so I have no doubt a
software engineer or even an programmer
could get it to do all the things
they've shown it doing but I don't think
it really is an AI software engineer
because that isn't the job of a software
engineer it's just a tiny part of the
job this is a tool for software
engineers and it's a cool one but it's
just a tool the job of a software
engineer keeps changing which is one of
the things I love about it so there
aren't a lot of hard and fast
unbreakable rules but these days the
primary thing a software engineer does
is to take tasks from some kind of
ticketing system like jira or Trello or
GitHub issues accomplishes whatever that
task needs him to accomplish and then
checks that off the list to go to the
next one often those tasks require a
bunch of steps and those steps can often
be represented by other items in the
ticketing system sometimes created by
the engineers themselves that admittedly
is a very vague description because it's
a very vague job but here's the
fundamental thing those tasks at least
the top level of tests are generally
created and defined by non-programmers
maybe former programmers but not
programmers on the current system and
often people that aren't technical at
all this is because for most environment
employing software engineer the goal is
to create business value by which I mean
money and the job of figuring out what
products offerings and features will
make money and how they should be
defined is the job of someone else by
contrast the job of the software
engineering team is generally to take
those high level business requirements
from the non-programming business folks
turn those things into a product or
service that can then be used by
customers either internal or external to
provide value in exchange for money in
the form of either revenue or cost
savings that money in turn is used to
recoup the cost of paying for the
software Engineers hopefully with some
left over Devon doesn't do that Devon
can't take vaguely and Squishy defined
requirements for new products and
services from people who believe they
know it will make money and turn those
requirements into working offerings
Devon isn't a software engineer and it
isn't intended to work with
non-programmers to create value for
customers it's a tool for software
Engineers to use and that's great doing
more with less is good for us at least
in the long run in the short run the
hype cycle is making things a little
bumpy I already made a video about what
I think AI mes for the next couple of
years of programming job and you can
find that here and if you want to see
more videos about Ai and programming or
programming in general please hit the
Subscribe button and I hope to see you
again soon thanks for watching
