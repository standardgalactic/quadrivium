this is a talk about agency at the very
bottom and introduction to Universal
properties and adjoint functors so it's
about mathematical agency uh first of
all just a little bit about me my
background is in economics uh but I
moved to abstract math to try to solve
some problems in economics that
economics was not able to help me solve
we didn't have the tools and ended up
finding out about Mike's work through a
YouTube video like a lot of people I
sent him an email and we ended up
setting this up uh I should also mention
that this talk is designed for people
who have little to know background with
c or Theory or abstract math in general
I know a number of you do have
experience with such things so the
mathematical portion of this may move
relatively slowly for you but that
should hopefully make it easy to focus
on the unusual perspective and if you
don't have any background with such
things it should be easy to follow along
also we have a lot to get through so
I'll appreciate it if people can hold
questions unless something I've said
just doesn't make logical sense to you
in which case please let me know but
otherwise we'll try to get through uh as
much of this as we can so first of all
why talk about mathem iCal agency
there's a few reasons uh one is that it
could settle the question of where the
line is between agentic and non- agentic
things in our universe there is no line
because it's all math uh also if you
think math can be atic it's suddenly
pretty easy to think that cells can be
atic so that stuff is pretty easy to
swallow uh in general New Perspectives
means new questions and new
interpretations of old results so that
could be useful and finally and what's
really going to be the focus of this
talk is that math looks a gentic so we
should call it a
gentic so here's what we're going to
talk about we're going to talk about
four Concepts here in this talk uh the
first is scarcity this is a concept from
economics that I'm going to argue as the
necessary conditions for agency I'm
going to show you that uh mathematics
has scarcity and so it meets the
necessary conditions for agency so it's
plausible that it is in fact agentic
then we're going to talk about two
agentic things in math which are
Universal properties and adjoint
functors uh Universal properties relate
to optimization which is obviously
important for agents and adjoint
functors relate to Optimal
reconstruction and least action which
are also very agentic things and finally
time permitting which it may or may not
be we'll talk a little bit about
Timeless choice so math doesn't move so
people can do stuff through time but
math can't so how can math actually do
anything like an agent we'll talk about
that if we can and so the hypothesis
lurking in the background which I can't
provide evidence for but it's just sort
of the idea that maybe uh can Inspire
some new questions is that life and
physical you know structures in general
that have any agentic properties uh are
able to do so because exploit the
affordances given to them by math
including basic agentic properties so
just like if you're evolving a triangle
and you evolve the first two angles you
get the third angle for free maybe
something similar is happening with
agency where you get a lot of stuff for
free so I want to start with scarcity
we're going to talk about how scarcity
is the necessary conditions for agency
and see what that looks like in
mathematics so let's start with agency
if you see something agentic in the
world you see something you want to call
agentic what's causing you to do that
what must be present for that to make
sense as a modeling decision there's
undoubtedly a number of perspectives on
this the perspective I'm going to take
is that it's all about choice if you see
something agentic or that you model as
agentic what it's probably doing is
making something that you are calling a
choice and so you think of it as an
agent so where does Choice come from why
do we call things choices the answer is
it comes from trade-offs trade-offs
exist if you do one thing you can't do
another thing if you go left you can't
go right so you have to make choices and
then to make those choices you have to
be an agent so uh choices necessary for
agency tradeoffs is necessary for Choice
what's necessary for tradeoffs I'm going
to argue this bottoms out at scarcity
scarcity I'm going to Define as the
necessary conditions under which
tradeoffs occur that's quite vague at
the moment we're going to be more
specific but this is the sort of pyramid
here agency ultimately requires scarcity
to make sense as a modeling decision so
what we're going to do here is come up
with a more specific definition of
scarcity we're going to look at some
examples of tradeoffs first in economics
and then in math we're going to see how
economists think about scarcity what the
limitations of that are and then come up
with a generalization that fits
mathematics so here is the standard uh
economic picture of scarcity forgive me
I'm not an artist so this is the best I
can do on the left here we have four
sandwiches on the right we have five
hungry people and you can see the issue
we can't feed everyone a full sandwich
so we're forced to make trade-offs we
could feed four people a full sandwich
and one person goes hungry or we could
cut up the sandwiches in some way and
feed everybody but not everybody's going
to get get to eat a full sandwich so
we're forced to make tradeoffs well I've
argued that scarcity is the necessary
conditions for tradeoffs so the
existence of tradeoffs means there is
scarcity here so what what is the
scarcity what makes scarcity be
happening here well economists go Define
it as a finite physical resources the
core of the issue is that we have a
finite amount of sandwiches we have four
of them instead of infinity if we had an
infinite number of sandwiches we'd be
able to feed everybody uh so this is how
economists think about scarcity physical
resources the problem with this
definition is that math does not have
finite physical resources so far as I
know but it still has trade-offs so
there's a problem with defining scarcity
in terms of finite physical resources
which is it can't Define trade-offs when
we're dealing with infinite
stuff so let's look at a tradeoff in
math so this should be very familiar
we're just counting up the natural
number line 1 2 3 4 5 Etc as we do so
we're constantly switching back and
forth between odd and even numbers so
we're constantly making trade-offs odd
number even number we never have both
and this is not just a superficial
distinction if you have an even number
and you divide it by two you get a whole
number if you have an odd number and
divide it by two you get a rational
number so there's different properties
so this tradeoff is really meaningful
which means there must be scarcity
because trade-offs imply scarcity
because scarcity is necessary for
tradeoffs but I don't see anything
finite in this situation it looks like
we have an infinite number of natural
numbers so where is the scarcity coming
from if not the finiteness of our
system here's just another example of
trade-offs in mathematics I want to show
you that this is ubiquitous you're
always making trade-offs in mathematics
uh real numbers versus complex numbers
on the left here we have real numbers
real numbers have a very useful property
which is they can be totally ordered
meaning for any two real numbers I can
always tell you which one is bigger
like we always know which one is bigger
what they can't do is Define the square
root of negative one if we move to the
complex numbers we can Define the square
root of ne1 but we can't totally order
are numbers anymore because they're two-
dimensional so one complex number could
be bigger on the real Dimension but
smaller along the imaginary Dimension or
vice versa so we gain the ability to
define the square root of negative 1 we
lose the ability to totally order our
numbers so again this is a trade-off so
we have trade-offs and therefore we must
have scarcity but again there's no
finite physical resource we don't have a
finite amount of number numbers we don't
even have a finite amount of fields so
what's going on to understand agency in
mathematics we need to solve this
problem because I'm arguing that
scarcity is necessary for agency so we
need to understand what uh scarcity is
in mathematics so here's what we have so
far economics tells us scarcity is about
finite resources math isn't finite and
yet it has scarcity because it has
trade-offs so where to
scarce sorry go
ahead no okay uh so to uh solve this
little riddle what we're going to do is
we're going to look at a situation in
math where math does not make tradeoffs
we're going to see the difference what's
going on when math doesn't make
tradeoffs versus when math does make
tradeoffs and that's going to tell us
what scarcity
is and then that'll let us make the case
for math being agentic because we'll see
that math has scarcity and therefore
meets the necessary conditions for
agency so here is the situation in math
where you don't make trade-offs and that
situation is contradiction so there's a
famous logical principle called the
principle of explosion which says that
if we contradict ourselves we can d
anything so if we assume p and not P
where p is any proposition so I'm saying
p is true and not true hence
contradicting myself then Q follows
where Q is anything so if I say I if I
am Benjamin and I am not Benjamin hence
contradicting myself I can derive that
John F Kennedy is alive and living on
the Moon with his best friend Santa
Claus that follows from the
contradiction so in particular
contradiction let us avoid trade-offs we
could have an odd number that we divide
by two and get a whole number or we
could totally order the complex numbers
we can do anything because we don't have
to worry if it makes sense because we
can just contradict ourselves so
scarcity is what's necessary for
tradeoffs but when we contradict
ourselves we can avoid uh making
tradeoffs so it makes sense to associate
a lack of scarcity with contradiction
that is in fact what I'm going to argue
is that we have scarcity when and only
when we do not contradict ourselves
which is to say when we are being
logically consistent so scarcity in math
relates to logical consistency in math
and that might seem weird but I think
when you look at this picture it becomes
quite clear because what happens when
you commit yourself to logical
consistency when you say I am not going
to contradict myself you commit yourself
to making choices you say I have to pick
do I want to assume P or do I want to
assume not P both assumptions are fine
you can start deriving theorems in One
Direction then you can go back and make
the other assumption and derive theorems
in the other direction but you just
can't do both simultaneously you have to
pick one so scarcity this or that
logical consistency P or not P to me
they feel like the same
concept so what I'm saying here is that
agency requires Choice requires
trade-offs requires scarcity math has
scarcity because it has logical
consistency that's what I'm associating
with scarcity so as long as we're being
consistent we're going to have scarcity
and therefore meet the necessary
conditions for being agentic so now what
we're going to do is look at some actual
examples of agentic things in math which
are Universal properties and adjoint
functors so we've set the table for math
maybe being agentic because it meets the
necessary conditions now we're going to
see does it actually do agentic things
I'm going to argue that it
does so starting with universal
properties we have uh this is an
important Concept in math that relates
to a few agentic ideas first of all
optimization which is obviously very
important for uh for agency uh we're
also going to see how it relates to a
concept of top- down go driven design or
control that you can do in math with
universal properties we'll also see how
Universal properties con constitute a
solution type that we can remap onto new
mathematical body types so just like we
can think of an organism as being
optimal for its environment we'll see
how we can talk about a mathematical
structure as being optimal for its
environment via a universal property so
what is a Universal Property a universal
property is a way of defining a
mathematical object by how we use it
rather than what it's made of so instead
of looking inside of it to see all the
parts and pieces we're just going to ask
what are we doing with this thing and
how well does it do the job we're going
to consider a collection of all
mathematical uh objects that do the same
job and we're going to ask what's the
best at doing that job the Universal
Property is going to be a special
relationship that the optimal
mathematical object has with all other
objects that says I am better than you
so it's Universal because it's talking
to every other thing in the environment
and it's saying the same message to each
one a universal message for every object
that says I'm better than you at this so
you know back off and let me do my thing
so here's a very simple example of a
universal property we actually have two
of them in this picture so we have an
ordered set this is the minimal element
this is the uh maximum element uh so if
we consider the job here we could ask we
want a thing that's bigger or equal to
everything else and if we consider this
top element here it's the best at doing
that job because it's bigger than this
thing it's bigger than this thing and
then it's equal to itself so it sends
the same message to every other object
in this environment that says yes I am
bigger than or equal to you so that's a
Universal Property it's the same
singular relationship with everything
else including itself and then the
bottom element similarly it uh is
optimal the task of being smaller than
everything else and it sends the same
message I'm smaller than you I'm smaller
than you and then I'm less than or equal
to myself the same message for
everything that's a simple example of a
universal property now let's look at a
more interesting example of a Universal
Property which is the cartisian product
we're going to see that we can Define
the cartisian product in terms of what
it does instead of what's inside of it
we'll see how we can compare the
cartisian product to other object that
do the same job as it and we'll see that
that allows it to satisfy the Universal
Property and then we'll see how this
leads to some interesting agentic things
that you can end up doing with this uh
uh use based definition of the cartisian
product so let's start with the internal
view of the cartisian products this is
the standard way to define the cartisian
product that every math student is going
to learn so we have two sets A and B the
cartisian product is the set written a *
B of all ordered pairs of the form a
comma B where a comes from Big A and B
comes from the set B so very simple
example let's say a is a two element set
A1 comma A2 and B is the two elements
set B1 comma B2 then a * B is just every
way of pairing an element of a with an
element of B so we have A1 paired with
B1 A1 paired with B2 A2 paired with B1
A2 paired with B2 this is like very
basic like intro like proofs for like
any undergraduate math students is going
to learn this definition but we have
another way of defining the product
which is based on how we're using it
instead of what's inside of it so this
is a an object denoted a * b along with
projection functions P1 and P2 that map
to a and map to B respectively so these
functions are part of the definition
because we're considering it in terms of
how we use it and what we do with sets
is we we make functions so our use is
based on functions to see what these
functions do a very s simple example is
it takes our ordered pair A1 comma B2 is
just an arbitrary excuse me arbitrary
choice of input and what P1 is going to
do is it's going to preserve the a unit
in a so our a unit here is A1 so we map
to A1 and a and then P2 similarly it
preserves the B unit mapping us to B2 in
B so just to get a picture of why this
is in fact useful this tells us what
we're using the cartisian product for
Anytime you've done some graphing you've
been using the cartisian product whether
you realize it or not so this is our a
on our our x axxis b on our y AIS and
here's the ordered pair A1 comma B2 well
our projection functions allow us to
remember that this product you know it's
uh it's A1 units along this axis and B2
units along this axis if you were to try
to understand this ordered pair without
these projection functions it wouldn't
mean anything it's these projection
functions that take this uh you know
ordered pair this point this Dot and
actually turn it into something
meaningful by relating it back to b and
a in particular what you could say is it
remembers A and B so we've got this
ordered pair like wait what am I doing
with this oh yeah got you know a and
I've got B I've got this A1 unit and
this B2 unit that's what's going
on so what's interesting about this
perspective on products is that it lets
us ask a question that we couldn't have
asked before when we were just looking
inside things there's a new question
which is if that a product of sets is
just a set combined with functions to A
and B doesn't any set qualify because as
long as a and b are non-empty then any
set is going to have functions to them
so let's say PC that's like a a can for
the product a product candidate it's
just some arbitrary set we don't know
well doesn't have a function f to a and
a function G to B the answer is kind of
yeah it does but what we're going to see
is that it's not necessarily optimal a *
B is going to end up being optimal this
other candidate may not be optimal and
we're going to express that with a
universal property so let's look at a
specific candidate for the product a
product of three sets a * B * C which is
going to have elements of the form a
comma B comma C so this is an ordered
triple now instead an ordered pair where
a comes from a b comes from B and then C
comes from C now so we have these
functions let's just call them f and g
to A and B just like before and it's
going to do what we're going to expect
so we're going to take an input let's
say A1 comma B2 comma C1 what f is going
to do is it's going to preserve the a
unit just like before A1 and a and what
G is going to do is preserve the B unit
B2 and B just like before and then the C
stuff ends up being irrelevant so you
can see that uh we are doing the same
job we did before of projecting to a and
projecting to B and remembering uh those
sets so we want to now we intuitively we
understand a * B * C is inefficient
compared to a * B because it clearly has
something extra but how do we actually
show that it is what we're going to do
is compare a * B * C to a * B this
comparison is going to end up being our
Universal Property and it's going to
show us uh that a * B * C is inefficient
so the way we compare sets is with a
function because that's how you relate
fun sets to each others with functions
we're going to call that function H and
to understand what's going on we're
going to follow this diagram very
carefully so I'm going to move through
this kind of slowly bear with me so
we've got this input let's just say it's
A1 comma B2 comma C1 we're going to
Define H to preserve the a unit and B
units we're going to map from our
ordered triple in a * B * C to an
ordered pair in a * B we're going to
keep the same a unit A1 keep the same B
unit B2 then we'll just delete the C
Unit because it's extraneous so we've
gone down from H to here and now we
could go either left or right let's go
left so P1 is going to take us to A1 and
a from this ordered pair now what's
interesting is that F does the same
thing so H then P1 starts over here and
ends up over here F does the same thing
it starts over here and ends over here
well two functions if they start in the
same place and end in the same place
they're equal so f is equal to H
followed by P1 and similarly uh G is
equal to H followed by P2 so what this
tells us a very precise way is that if
we take a * B * C and we Lop off the
extraneous part we end up doing the same
work so we can take a * B * C cut off a
piece of it and still do the same job as
before that tells us that a * B * C had
something extraneous and was therefore
inefficient and what's particularly
noteworthy is this is the only way we
can compare them to have them do the
same job H is forced by how we are using
a * b and a * B * C we are using them to
reconstruct a and reconstruct B and it
turns out that if we want to use a * B *
C to reconstruct A and B in the same way
as a * B we are forced to effectively
turn it into a * B to do the job so
there's sort of top- down design here I
say I've got this job reconstruct a
reconstruct B I have to turn things into
a times B and there's a forced way to do
so given my alternative candidate I
started here this isn't perfect I end up
here this is perfect what makes this a
Universal Property is that this same
relationship that a * B has with a * B *
C this unique factorization where a * B
* C gets turned into a Time B to do the
job it has with every other candidate
for the product so I've given them
stupid names like bibbly Bo wi bib
doesn't matter what they're called just
every other set that could do the job
this is infinite going upward because
there's an infinite number of candidates
each of them comes with their
projections to a each of them comes with
their projections to B but each of them
gets mapped uniquely to a * B where it
ends up saying okay yeah a * B is is
actually better than me at this job it's
the same relationship for each one a
unique way of saying you want to be me
to do this job properly so effectively
all of these other candidates are sort
of cheating off a * B's homework a * B
is in fact optimal via this Universal
Property something I just think is
interesting as someone with an economics
background is this actually feels very
similar to a preference order which is
obviously a very agentic concept so from
an active inference perspective if I
want to have like a favorite ice cream
flavor what I'm using that to do is to
reconstruct my anticipated flavor and
anticipated texture experience my
favorite flavor of ice cream is going to
be the one that's best at reproducing my
anticipations the unique factoring could
be like selling the strawberry ice cream
and using the proceeds to buy chocolate
ice cream so Universal you know
properties it looks very much like
having a favorite way of doing something
which is clearly an agentic
concept so here are the principles of
universal properties so Universal
properties are the most efficient
solution to problem that specifically
exists in math so we're not using this
to solve a physical problem or a human
problem we're using it to solve a
mathematical problem that you can Define
in purely mathematical terms and yet
despite the fact that it's just math we
have an efficient we have a favorite way
of doing things we also have a way of
defining top- down gold driven control
if I say I've got some other thing here
and I want to make it the best way of
doing things I don't need to look inside
of it I just need to Define this unique
mapping to a Time B
uh and similarly we can test optimality
so we don't just have to like assume or
guess optimality we can test it by
looking at these kinds of mappings and
asking does it Factor through a * B yes
or no that's going to tell us about
optimality and now that we have this
picture of the Universal Property of the
cartisian product we're going to see a
couple of very cool agentic things that
you can only do with this definition and
not with the internal view of cartisian
uh product so the first thing we can do
is we can find unexpected competencies
that we could only discover by probe
objects so let's consider this cartisian
product of three sets a * B * C but this
time we're going to have C be a one
element set consisting of just Little C
here no C1 no C2 just little C so it's a
* B * just the set containing C and it's
the set of four uh ordered triples so we
have ordered triples not ordered pairs
but there's only four of them so we do
see that it is isomorphic to the uh a *
B that we saw several slides ago which
had just four ordered pairs now if you
were to ask a a math student an under
graduate math student you know is this
the cartisian product a * B they would
say no because the cartisian product a *
B consists of ordered pairs but this is
ordered triples but by testing it
instead of just assuming we know what it
can do we can see that it does the job
of the uh uh cartisian product just as
well as the cartisian product does and
we can see that because we can factor a
* B through a * B * C here to make
everything be equal just like before so
what this is going to do is we're going
to take uh an order repair let's say A2
comma B1 our function H in this case
will map it to the order triple A2 comma
B1 comma C and then we're going to end
up at A2 regardless of where we go or
regardless of which path we choose or
we'll end up at B1 regardless of with
patch which path we choose on the right
so this does in fact show that a * B * C
here is the cartisian product it does
the job of the cartisian product
optimally even though it doesn't look
like it should now if you're wondering
well isn't this also optimal that's
because it factors back the other way
through H Prime we can sort of take
either path so these are isomorphic so
they do the same job because in a sense
we can treat them as the same there's a
unique isomorphism specifically we have
one and only one way of transforming one
into the other so that they do the same
job so we're indiffer which one we
choose so C isn't helping us but it's
not hurting us either it's not costing
anything and we would have only learned
that by actually testing the system with
functions instead of just assuming by
looking inside of it at the parts and
pieces one other thing we can do with
the universal uh uh property of the
product is we can take that solution
type that it constitutes and map it onto
a new body type so instead of looking at
ordinary sets let's look at an ordered
set so we've got our set consisting of X
and Y and Z and these relationships mean
X is less than or equal to Y and X is
less than or equal to Z uh you could
think of this like biologically as like
descendency so y and z are the parents
and X is their child so what if x has a
child so let's say w descends from X and
also from y and Z then X is the greatest
lower bound it's the biggest thing that
is smaller than Y and Z so this is a
very important Concept in math you're
constantly talking about bounds and
greatest slower bounds when you're doing
mathematics so we've defined a very
important concept here now how does this
relate to Universal properties well
let's take this diagram and turn it
upside down and you can see it's the
exact same diagram as the Universal
Property of the product of sets uh I
haven't labeled the arrows here because
the labeling doesn't matter but
otherwise it's the exact same diagram
the forcing here is given by the fact
that in an ordered set there's only one
way to be a descendant of something else
you can't have like two different kinds
of child there's just one way to be a
child so we can take our Universal
Property of the product and we can you
know when we're trying to solve like
what is the greatest lower bound what
does that mean we don't need to you know
uh reinvent the wheel we can import our
solution type from another body type
from just plain sets into ordered sets
and we find out that the greatest lower
bound is in fact the product in
partially ordered sets so what I take
from this is that math doesn't make
specific solutions to specific
environments it makes problem solving
morphisms where morphisms is a generic
term for these kinds of
arrows so that takes us uh through the
end of universal properties appreciate y
bearing through that I know it can be
kind of dense and tedious uh and now
we're going to move on to adjoint
functors we'll try to get through this
and see if we have time for Timeless
agency as well so adjoint functors are a
very important Concept in mathematics
that relates to Optimal reconstruction
so if you're an organism trying to
survive in your environment you need to
uh in have an internal model of your
environment so you're recreating your
environment inside yourself but you have
limited sense data and limited computing
power so you can't perfectly recreate
your environment instead you want to
optimally recreate your environment and
adjoint functors also relate to being
lazy and we'll see that being lazy or
least action ends up being related to
optimality so you want to be lazy you
want to be optimal we'll see how those
end up being highly related to each
other so what is an adjoint functor an
adjoint functor is a pair of
relationships one of which forgets
information and the other reconstructs
what was forgotten once you forget
something you can't necessarily remember
it perfectly so we settle for optimally
reconstructing it instead we'll work
through a specific example of building
something lazily we'll see that building
something lazily lets us build it
optimally as well so we're going to
build something called ammonoid so
ammonoid is a fancy word for something
very familiar which is a set combined
with an operation an operation is a way
of combining two elements of the set to
create another element of the set and in
particular what's important is a given
set can have many operations so let's
take our set to be the natural numbers
well
one combine them to create nine or we
could have multiplication take two and
seven combine them to make 14 or we
could have maximum as the operation a
bit different from a normal arithmetic
operation but we can Define two and
seven we can bind them to create seven
as the maximum of those two so we're
combining things to create things so
that's an operation or we could even do
something like concatenation and take
two and seven and combine them to make
27 which is kind of silly and we could
use zero as our identity so this is a
monoid it's a very familiar concept A
set combined with an operation excuse me
let me drink some
water so now we're going to look at
using this idea of a monoid we're going
to ask how do we turn a monoid into a
set in a lazy way how do we turn a set
into a monoid in a lazy way we're going
to do this with what are called free and
forgetful functors so a funter is just a
a fancy word for a generalization of a
function just think of it as a function
for all intents and purposes that's
going to be okay for this talk so our
forgetful funter we're going to have our
monoid our monoid is going to be our set
of natural numbers along with some
operation I'm not going to say what the
operation is some arbitrary operation
doesn't matter which we'll just denote
with an asterisk our forgetful funter
asks what's the laziest way to turn our
monoid into just a set just a regular
set with no operation well the easiest
way to do that is just to forget about
the operation just throw the operation
in the trash and just keep the set so
take the natural numbers combined with
the operation and turn it into just the
natural numbers so that's the easy part
that's not too interesting now let's ask
how do we reconstruct our monoid so
we're we just have our natural numbers
we threw our operation away we don't
remember what it was but we do want to
turn this back into a monoid what's the
laziest way we can do that and that's
going to be with our free functor so
we're going to construct what's called a
free or lazy monoid on the natural
numbers the way we're going to do that
is we're going to choose a generating
set which we're going to choose to be
just the number one now by definition of
a monoid I have to be able to combine
one with itself to create something
because a monoid says I combine numbers
to create other numbers I'm going to use
the plus symbol to denote the operation
because it will in fact turn out to be
addition but we don't know that yet so
this is just an arbitrary choice of
notation right now so I have to write
down by I'm not thinking I'm being lazy
but just I'm neveress compelled to write
down 1 1 equals something well I'm going
to be as lazy as I can I don't want to
turn on my brain so I'm going to write 1
plus one equals random squiggle and then
because random squiggle is in the set I
have to write down one plus random
squiggle that's going to equal some
other random squiggle because I am being
lazy I don't want to think at all I'm
just moving my hand around randomly
totally brain dead well the result of
this is I'm going to create some set
called it m for monoid which is going to
look like 01 random thing which is one
bigger than one random thing which is
one bigger than this squiggle that's one
bigger than this squiggle that's one
bigger than this going out infinitely
because I'm never going to write two
random squiggles the same way the odds
of that is zero so I'm going to generate
an infinite amount of random squiggles
that are all one bigger than the
previous well if we compare that to our
set of natural numbers it's clearly the
same because I got 0o 1 two 3 four five
it's the same set so it could have
happened by random chance that when I'm
writing these random squiggles maybe I
wrote two by accident I wrote three by
sheer chance Etc so I could have
generated the natural numbers if I just
gotten luier with my choice of squiggles
well who cares what the squiggles are so
you can in fact say that this monoid is
the natural numbers and so that's what
we've done we've actually generated the
natural numbers under addition by being
as lazy as possible so this is our free
monoid the natural numbers under
addition we generate it by starting with
one doing 1 plus one plus one plus one
totally brain dead takes no thought
let's contrast this with an expensive
mod monoid and you'll see how lazy the
free monoid is so we'll take our
generating set to be one again and we'll
do some familiar relationships so we'll
have 0 plus 1 is 1 1 plus 1 is 2 2 plus
1 is 3 but now we're going to establish
a non-trivial relationship we're going
to turn our brain on and actually think
about something and make a deliberate
choice we're going to say 3 plus 1 is
zero now that might seem weird but this
is totally legitimate because all we
have to do with a monoid is combine
numbers to create other numbers well 3
plus one if I combine them to create
zero I've satisfied the rules of a
monoid so it looks weird but it's
actually totally legitimate so now what
else do we get well 3 + 2 is 3 + 1 + 1 3
+ 1 is 0 so 3 + 2 ends up being 1 then
like 3 + 3 is 2 and 2 plus 2 is 0 Etc so
all these relationships just follow from
our choice up here what we're doing is
we're counting but we're counting in a
loop instead of a line so with the
regular natural numbers you just go 1 2
3 4 5 Etc extending outward with our
expensive mono we go in a loop 0 1 2 3 0
1 2 3 0 1 2 3 Etc now this might look
weird but it's actually familiar because
this is how we count on a clock so if I
tell you like 9:00 plus 5:00 2:00 if
that makes sense to you then something
like 3 plus 2al 1 can make sense as well
now we're using zero instead of 12 here
so imagine a clock that goes 0 1 2 3 0 1
2 3 that's what we're doing with our
expensive monoid so it looks weird but
you all know how to count this way it's
just counting with a clock so now what
we want to do is do what we did before
with our Universal Property of the
product and compare our free monoid to
our expensive monoid so we built one in
a lazy way we built one with a bit more
effort we want to show that The Lazy way
of doing things is the optimal way of
doing things we're going to do so with a
function just like before but this needs
to be a function with a little more
structure it needs to preserve the
structure uh it needs to preserve the
use of the one monoid in the other
monoid what we're doing with both of
these monoids is we are counting by one
that's what we saw we're generating by
just adding one to itself over and over
so the function is going to preserve the
counting structure as long as each
counts by one in the same way and so the
way this is going to work is that if we
map a a number in the free monoid to a
number in the expensive monoid the next
number in the free monoid gets mapped to
the next number in the expensive monoid
so it's just going to match up with each
other counting by one so here is a
diagram that shows this so here's our
comparison our function so we've got all
of our natural numbers over here 0 1 2 3
Etc and then we're going to have our
expensive natural numbers which is just
going to be 0 1 2 three repeating what
is our function what's our mapping going
to look like well the first few are
obvious zero maps to Z Z One maps to one
two maps to two three maps to three what
is four map to well we don't have four
over here so we can't just map it to
four so what are we going to do well
four is one more than three we've mapped
three to three so we should map four to
one more than three over here which is
zero so that's what we're going to do so
four maps to zero then five is one more
than four one is one more than zero so
five gets mapped to one because four
gets mapped to zero and so it just
continues outward like this so this is
our comparison this is our choice of
function and we're going to see a really
interesting picture that's going to show
us the laziness and the optimality of
One monoid Versus the other so here is
that picture so here is our expensive
monoid the way a monoid is sort of
formally defined is you have a dummy
object which I've denoted with this gray
Circle here it doesn't really mean
anything it's just there because it has
to be there and then the numbers are
going to be relationships that extend
outward from the dummy object so we're
going to have zero 1 2 3 all extending
outward so we're going to start with
zero that's just there by default so
then we have one that's green here by
this Legend 1 plus 1 is two 2 plus 1 is
three so the image I want you to have in
your mind is like ripples extending
outward from a stone dropped in water we
dropped this dummy object in the water
and our numbers are ripples that extend
outward from it now what happens is a
bit unnatural with this Rippling motion
is it actually collapses back to zero
again so it's like we've done some extra
work with our water setup we have some
special technology that pulls everything
back to zero and then it ripples outward
again so it's Rippling but in a somewhat
unnatural way it's not how we would
expect physics to work let's compare
this to our free monid where we're going
to have things Rippling outward again
from the dummy object this time what our
Legends are going to show is the colors
are mapping to these colors over here so
red maps to this green maps to this blue
to this purple to this so we start with
zero again 0+ 1 is 1 1 plus 1 is 2 2
plus 1 is three now we don't collapse we
go forward so four 3 + 1 is four four is
red cuz it maps to 1 4 + 1 is 5 that
maps to two Etc so we keep mapping
outward uh and what you see is that this
actually behaves like a ripple does in
the real world if you had an infinite
sized pool you dropped a stone in it and
if there were no entropy you would just
get it Rippling outward infinitely
according to the initial pattern that's
what we expect least action to look like
in the physical world and that's what
doing things lazily looks like in the
mathematical world as well so this is
what our mapping looks like visualized
and this does in fact tell us that the
free monoid is optimal versus the
expensive monoid because the free monoid
contains the expensive monoid so what
can we do with the free monoid well we
can count linearly 1 2 3 4 5 6 7 Etc but
we can also count in a loop because
that's what this pattern is giving us we
can see the looping pattern we can count
with loops with this free monoids it can
do the job that the expensive monoid can
but the expensive monoid cannot do the
job that the free monoid can because it
can only count in a loop it doesn't
count linearly so the free monoid does
is like just able to do more tasks than
the expensive monoid does it contains it
and so even though we built it lazily it
actually ends up being
optimal so what have we learned about
adjoint functors adjoint functors are
lazy ways of translating between
structures so we have different
mathematical structures like monoids
versus sets adjoint functors allow us to
uh map between them in lazy ways that uh
create or destroy information uh we do
things in a least action way adjoint
functors end up giving a sort of
universal solution to the problem so
like if we want to count by one that's a
problem what's the the there's many ways
we could do it but what's like most sort
of universal or formulaic way of doing
that well it's this way of doing that
because we can do looping if we want to
but we also have linearity which these
other expensive versions don't have uh
something that's really interesting
about ad join functors just like in the
physical world there's so many things
that you can Define in terms of lease to
action well ad the same thing works in
math adjoint functors arise everywhere
as a common saying in math many
important mathematical things turn out
to be adint functors they turn out to be
easy ways of doing things and I don't
know much biology but it just kind of
seems to me that fre monoids are kind of
like the DNA of monoids to give you the
relational structure to do all different
kinds of counting linear counting
looping counting all kinds of different
patterns so we have the relational
Hardware to build any specific monoid if
we want to so that actually brings me to
uh the conclusion of the the math
portion of this which is what we've seen
so far which is that we have tradeoffs
in math and we have scarcity therefore
in math which happens because of logical
consistency not physical limitations so
as soon as we can commit ourselves to
being consistent we end up committing
ourselves to making tradeoffs uh which
is what we need to see uh agency and
what's fascinating about this is that
the agency of math it's not something
that humans just use to solve our
problems in the physical world we can
Define problems in the mathematical
world like how do you cast projections
to a and b or how do you count by one
and we can find Optimal Solutions to
those problems that are optimal for math
itself not for humans but just in purely
mathematical terms it ends up being
optimal and optimality often ends up
relating to laziness we can be formulaic
and just turn our brains off and do
things in the most obvious way so when
you're doing math like as a
mathematician it's often very useful to
use a gentic concept so just like you
can settle like debates about free will
like well it's useful to think of myself
as making choices of like you know
buying something in a restaurant
similarly if you're doing math it DS
just being very useful be like if I was
this set here how would I want to solve
this problem as someone who you know is
currently trying learn math I do find
that perspective useful so math ends up
doing agentic things uh behaving like an
agent this isn't necessarily like hard
proof that math is agentic but it does
show that thinking of math in a agentic
way seems to work there's no problem
with it so why not try thinking of it
that way now that brings me to Timeless
agency and I see that uh it's been about
40 minutes which means I probably talked
way too fast so let me actually pause
here before we move on to Timeless
agency and just see if there are any
questions about just you know what's
going on what am I saying if anyone just
wants to pause here if there's just
something that really doesn't make sense
or is niggling at them please feel free
to ask and otherwise I'll move on to
Timeless
agency seems like we're good so far so
thanks everyone for bearing with me
through this let's move on to Timeless
agency so there's an obvious problem
with thinking about math as a gentic
which is that math doesn't do anything
anything that math does a human does
like we have to write down 2 plus 2
equals 4 the math doesn't itself so
humans can move around math just holds
still uh so how can we talk about agency
if we don't have time the argument I'm
going to make is that we can think about
agency in terms of predictions like free
energy minimization it's all about
making predictions what a prediction
does is something that preserves
structure through time like if I'm
predicting the weather I've got some
structure some models some data I'm
going predict what it looks like in the
future as we preserve that structure and
so what I'm going to ask is well what if
we just drop the time part what if we
just talk about structure preservation
without time because that's what math is
all about it's all about structure
preservation so much of math is just
about structure preserving maps from one
uh object to another so what if we just
drop the time portion of that and just
talk about structure preservation then
we can talk about math as being making
predictions which seems to be the heart
of agency so what does Timeless
prediction look like very simple example
let's say that you have two apples and I
tell you that I'm going to bring you
three more apples well you're going to
predict that you're going to have five
apples but the core now this is a
prediction that takes place in time
right you're predicting what you're
going to have in the future but the core
of this prediction no pun intended is 2
+ 3 equals 5 which does not have a
temporal aspect to it it's just one
equation it's not like the two and three
happen first and then you have five it's
just one thing so we're using Timeless
things to make predictions Through Time
2 plus 3 equals 5 feels like a
prediction kind of thing it's just
there's no time element to it so let's
look at an example we've seen before
free monoid versus the uh expensive
monoid can we use this free monoid to
make predictions about the expensive
monoid to know things what a prediction
means is we're going to look at the free
monoid and we're going to use it to know
things about the expensive monoid that's
what a prediction is using one object to
gain knowledge about another object well
yes we can make this prediction which is
with this mapping we've seen before we
can use this mapping to know how this is
going to behave without actually having
to look at the expensive monoid we can
use our free monoid to make predictions
about it so this tells us intuitively
prediction is all about structure
preservation we have a structure
preserving map from our free monoid to
our expensive monoid uh and that's what
allows us to make predictions without
time there's no time happening in this
prediction we're not making predictions
about the future we're just making
predictions in the Timeless mathematical
world with structure preserving
Maps so prediction of structure
preservation this is my short argument
for math being agentic because it makes
predictions things like 2 plus 3 equals
5 are like prediction but there's just
no time to it predictions are all about
structure preserving a long time let's
just drop the temporal element we don't
need it math does structure preservation
without time so let's talk about
structure preservation without time if
that seems weird well we accept that
memories are not about the past so why
do predictions need to be about the
future if we can say I'm not remembering
about the past why can't we say I'm not
predicting about the future the
usefulness of doing so if that seems
like a weird decision is it lets us talk
about math being a gentic because math
is all about structure preservation
so structure preservation is prediction
then math is all about prediction agency
is all about prediction because of free
energy stuff so there you are and this
is in fact how things work in the
physical world so here's a very
important source of intuition take this
footprint in the mud here now obviously
what this footprint does is it preserves
the structure of the foot we can see
this footprint and clearly it reflects
the properties of the foot and we can
use this footprint to make predictions
about the foot we know what the foot is
going to look like uh based on this
footprint but don't have to think about
time here so we actually like freeze the
universe here and say just stop you know
there's no time here can I not in fact
still make predictions about what the
foot looks like based on the footprint I
don't have to make a prediction about
tomorrow just say I can look at this
footprint I know what the foot looks
like now do I care that there's not a
temporal element to that I just don't
see why that
matters so something else that's also
super relevant to this in terms of
biology so this is morphology so our
transformation the way the the mud
transformed forms is what the the
footprint is made of it's the
transformation that constitutes the
prediction which is also how predictions
work in math we take our free monoid we
transform it via a function to reflect
this looping uh relationship here so
we've got morphology in the physical
world are constituting our set of
predictions we have morphology in the
mathematical world is constituting our
set of predictions the only thing
missing is time it doesn't seem like
time is actually relevant so we can
equate prediction with morphology we can
think of the footprint as being the
prediction here the footprint is the
prediction we don't need an intelligent
human entity to come along and say I'm
going to use this to make a prediction
it is the prediction and the reason we
know that is because the mud is using it
to make a prediction the mud has formed
this shape because it is anticipating
being stepped on in the same way again
the mud is minimizing its free energy
and it's saying how do I I've been
stepped on how do I transform to
minimize the amount of change I could
experience from Being Stepped On Again
by the same foot in the same place forms
this footprint to minimize the amount of
anticipated change it could experience
because it's minimizing free
energy and of course the mud is just
very stupid so instead of understanding
that there's all kinds of things that
could step on it it forms very limited
prediction being like this is the only
foot in the world it can only step on me
one way because it's kind of dumb but we
have transformation through time we have
transformation without time you know the
physical Universe versus math but it
seems like it's doing everything the
same way and this is just like what we
saw with a * B remembering A and B we
Norm think of memory as being with time
but we can remember things without time
just with structure preserving Maps so
map doesn't do anything in time but it
does transform it transforms via
functions which don't have a temporal
quality but it still is transformation
and transformation or structure
preserving transformation is what agency
is all about so that takes me to the end
of this talk so thank you all very much
for sitting through that I know I
probably talked too fast I got to work
on that uh so just to remind you all the
basic idea here maybe what's going on
with agency in the physical universe is
exploiting things that math gives us for
free what I'm personally trying to do
with that is solve some problems in
economics there's a famous problem
called the problem of externality which
normal uh mathematical Tools in
economics didn't help me solve so I
ended up moving over here to look at
that kind of problem and in general it
seems like maap has an agentic structure
so I'm or an economic structure so I'm
kind of interested in producing a theory
like that just as an example groups are
monoids with an extra axium what price
are we pay like am I buying that in a
mathematical Market just think that's an
interesting idea it might lead somewhere
if any of this interests me uh please
feel free to email me at Ben or interest
you please feel free to email me at
benjamin. f. Lions gmail.com uh thank
you very much for sitting through that
again I know I probably talked too fast
but that brings me to the end so uh if
anyone has any questions or anything
they'd like to say please feel
free cool thanks so much um
questions uh so so when you're talking
about Timeless agency I was thinking
about uh does does it relate to
invariant quantity like Honus because
Honus don't have time in it but you can
generate a a Time sequence from
it yeah I don't know anything about
physics but I am vaguely aware uh that
there are ways of looking at some
physical things where you're not
necessarily thinking about time so I
can't give you a specific answer but
yeah invariance in math and invariance
in physics undoubtedly highly related
Concepts and being able to talk about
invariance without talking about time
which you can clearly do in math uh
probably does help us explain that
relationship between agency in the
physical Universe where we do have time
and agency in the mathematical Universe
where we
don't okay thank you because uh I saw
recently there are some uh research
domain like uh anage based model I think
those models are they don't have
explicit uh time in the mod they just
want to minimize their energy so guess
similar to what you said absolutely yeah
there's a physicist named Julian Barber
I Haven actually read their work but I
know they are they produced like a book
about um like doing physics without time
altogether so haven't read it but just
like the awareness of that as a
conceptual possibility did Inspire some
of these
ideas thank
you oh hi um I have a question um thank
you for the talk by the way um so um it
started out with the premise that uh uh
scarcity is a necessary condition for
agency so agency implies scarcity uh but
um is scarcity do you think scarcity is
also sufficient condition for agency
because I think for any condition any
definition of agency uh should specify
both necessary and suff
conditions yeah I agree that would be
nice to have I'm just not entirely sure
it seems to me that it's conceptually
possible that you could have like an
empty mathematics where you have logical
consistency but no assumptions no
theorems no nothing so maybe you don't
have agency because you're not doing
anything or maybe it's trivial agency so
you you it might end up being sufficient
but I just don't know for sure so I feel
very confident it's necessary I'm not
entirely sure that you can just say that
it is sufficient for sure so it might be
but I just didn't want to say that
because I'm not 100% on
that also kind of a related question um
we often I guess in cognitive science
the literature says that agency Fender
requires uh some kind of embodiment
right and when you think of math math is
is is very abstract and in a in a way
it's Limitless uh it does not have an
embodiment and it does not and one thing
that embodiment does is it specify some
kind of constraints and math in a sense
is Limitless and yet it seems to have
some property of scarcity some kind of
constraint which um is kind of confusing
to me but in any in any case I think uh
do you think that math also has some
sort of embodiment which people often
think is required for
agency I think the embodiment consists
of the relational structure that forms
when you define some purpose so let me
go back through um like back to to you
know here here uh So like um you know
this kind of feels like embodiment to me
like we're defining a Time B so this may
not look like a definition this is a
definition this defines a * B uh and
what it is is it's just a set of
relationships to other things defining
sort of information that's coming in and
ways of building things so when we look
at what a * B does and how it relates to
everything I'm not an expert on
embodiment that's kind of my
understanding is that to make sense to
the brain we have to think about how it
connects to the rest of the body and
what it does out in the environment we
can't just consider it as some isolated
uh you know just intelligence floating
around like a Spirit uh we do end up
doing something similar in math where
you end up defining objects by these
Universal Properties by these systems of
relationships so I think you could think
of this as analogous to embodiment in
math I mean I think it's related sandes
I think it's related to uh the stuff
that m and I are doing with the Grim
sentences where it seems like there is
at least something that it's all doing
in the absence of the in the absence of
specific embodiment in the like I think
it's related to the platonic space stuff
that we talked about it's to the to the
to mine's project um
yeah I guess I guess in a way any
definition of agency would have to be
specified in mathematical terms of the
day because uh right because we do not
have any other language to express any
concept other than mathematics and logic
and I guess mathematics is like logic is
a foundation of mathematics itself but
if you assume that mathematics is the
only language through which which we can
express agency perhaps it kind of
follows that mathematics is agent
because it's the only language we can
express agency in is that sort of a
parad sort of
contradiction I don't know I'm just
thinking of here yeah no it's a great
question the way I think it's going to
end up being resolved is we're not going
to actually come up with like a specific
definition of agency where we can
exactly say this is a gentic and this
isn't what agency is going to end up
being is it's going to be a human term
for clumping things together for
pragmatic uses based on common
underlying structure so the argument
that math is agentic here I don't intend
to find a precise definition of agency
instead what I intend to do is show that
it does the things that we normally call
agentic if we saw a physical object
doing the stuff that we see math doing
we would call it agentic so maybe we can
just call math agentic as well and the
reason to do so is not to be necessarily
just super consistent for consistency
sake but because that will lead to
useful ideas both useful things like
finding these novel competencies and
useful things for scientists broadening
the horizons bringing in new
mathematical tools asking new questions
so that's going to be the ultimate
benefit of of this is helping humans
make smarter categorization choices
which will lead to more efficient
scientific and mathematical
decisions thank
you I mean I had a question about the um
go ahead go ahead Mike no no you go
ahead okay okay um so let's assume for a
second that um we agree with the idea of
math being T I can I can see what you
mean I think what I'm curious though is
can you apply that to computations as
well right so like your example with the
um the equation where you have t+ 5 oh
what was like equal eight I numbers t
plus 2 I think equal 5 um but right in a
in a not only in a in a in a computer
setting if you have any kind of network
where you update States based on
equations essentially right you have to
make those
computations and even though you don't
specify exactly what time step that is
it has to have a step and actually
matters a lot um in these Network
computations and any networks I've seen
how you update it you all do it
synchronously do you um do you do it
sequentially right you can see that that
very intuitively changes the outcome of
computations so that's kind of my my
question do you think you can have even
if you can have even if Express math
without time can you also get time out
of the
computations yeah I don't know a lot
about the specific details but it's
something I have been thinking about
because it makes sense as a question and
it is something that needs to be
resolved um I suspect that um there
probably are ways of defining uh time in
terms of of abstract connections which
is basically some kind of it's hard to
articulate this but some kind of
functorial quality that's varying as
other things are varying and sort of
structure preserving maps that are
themselves structure preserving as they
move along their own structure
preserving trap uh track and there are
things in so all this kind of comes from
category Theory there are things in
category theory that look like that and
so maybe that will lead to some I'm sure
people are working on that so I'm sure
you could lead to some theory of of
computation so I don't really have a
specific answer but it's definitely an
important question something that I'm
interested in as well and I have no
doubt that I will not solve it and
hopefully someone else will all right
just like one super short followup um
what about logic same questions for
logic because if logic if you have if if
2+ 3 equals 5 then you know XY z um
isn't it then doesn't that also imply
the same as as a computation aspect time
yeah that's a super interesting
comparison because it is a tempor world
when we're talking about then in the
physical world that is time and when we
talk about then in the mathematical
World we're not referencing time the way
I take that is to say that we can
basically forget about time in the
physical world and think about our
predictions as being structure
preserving even if we just drop out the
time element but it may well be that you
could do the other way and say we're
going to add time into math so I don't
know how to do that but it's a a
perfectly logical thing to
try yeah no it's super interesting I I
just I want to
oh like I'm I'm super behind saying you
know you don't need to have a a specific
time like I mean even though that that
will of course make it more realistic
and leads different explanations but the
the idea of right of of a logical
connotation itself even though it
doesn't like it's not really time
dependent in terms of quantitatively but
I feel like the the idea itself of
connecting things logically even in a p
mathematical
space are basically have a time element
to it but maybe you're right maybe I'm
just uh projecting um language language
problems onto it uh is inter thought
anything think about more yeah I mean I
think
