the people defining what was called a
standard generalized markup language
stml they took over the pointy bracket
notation and actually used it within
documents themselves it leads back into
computer science principles in so many
many ways and there has been so much
confusion so I suppose you could say
what this episode is about is
sgml HTML
XML what's the difference or are they
all the same no they're not all the
same way back in the late 1970s early
1980s a team at IBM led by a man called
Charles Goldfarb who was trained as a
lawyer came up with the idea that it
would be really useful to be able to put
tags into documents to say what the
component parts of the document were
like P for paragraph which of course is
now so familiar to us from HTML pointy
bracket B close pointy bracket and they
came up with this whole notation for
tags that's what it comes down to it was
a tag set notation people could see the
advantage of this particularly if you
had a huge collection of documents that
were just crying out to be structured
and there are quite a few of those it
could be marriage records it could be uh
specifications of stuff owned by the
Department of Defense and indeed some of
the earliest users of this tag set
technology of sgml was the Department of
Defense and uh a thing called the text
encoding initiative and they were just
going to tag up everything in the world
that they could see with a suitable tag
set to make it easier to access and to
locate what you wanted if it was in the
big database so that was the overall
idea of it but in order to show you how
this HDML worked let's start straight
away with something very simple here is
a sample memo there is a two-part it's
been sent to Tony Blair this is way back
in the early years of this Century round
about the time of the Iraq War I think
is this uh fictitious memo it is from
the White House the message is as
follows and it says the President says
thanks for your support simple as that
so there's a two a from and a body a
message body now as computer scientists
we realize straight way that even if
it's just a sequence you can still
present it as a left to right structure
within a tree so here's a structured
tree representation of what we've just
informally written down the whole thing
look at the top is a memo and when you
look Below in the tree it says Ah
obviously a memo is a sequence of a
two-part followed by a from part
followed by a body part great within the
two part there's just some text it says
Tony Blair the front part part more text
it's from the White House body part I've
deliberately made this a little bit more
complicated I've said that the body part
can be if you like just be a single
paragraph a p and within a p there could
be arbitrary mixtures of plain text the
President says or marked quotations
because what I'm going to do is to say
that thing that was in quotes is an
example of a quotation so that if in
future Sean were to say to me go through
all our memos and dig out the bits that
are quotations or quoted speech then
because it's tagged and marked it's so
much easier to pick out of course from
that tree then how does that translate
into HTML notation Don't Panic it's very
very similar to what you're now familiar
with as XML notation right here is a tag
that says this whole thing is a memo and
this is where it begins a two tag is to
Tony Blair but being a good boy I must
remember to end the two tag from the
White House end of the from part here
comes the body now I types set the uh
thing previously as the word message but
this is just to illustrate that if
you're crawling all over this spec with
a type setting engine you could take the
decision that every time I see the word
body as a tag I actually put out the
types set thing saying message I could
have said body but the tags themselves
can trigger typ setting and stylistic
decisions if that's what you want to do
so here we come then here's the body of
the memo and like I said it's got to be
a paragraph denoted with a p here's the
free text that I'm allowed the President
says and here is the nested quote inside
the paragraph denoted with a Q tag thank
you for your support end of quote end of
paragraph end of memo now some of you
eagle-eyed will immediately be dashing
the comments on this video right now
hold on and we'll say you've missed out
the end of body tag to which the answer
is yes sgml allowed you to do that so
long as you warned it in the speck that
goes behind this of the legal tags if
you said I will optionally make end of
body B emittable then the biblical
handbook here says you may specify that
you want certain end tags to be emitted
provided that doing so will not lead to
ambiguity and therein lies a complete
nest of vipers but in this particular
case it's all right you could put in and
replace end of body why did they do this
well in Charles gabs area you have got
to remember disc space was massively
expensive and this sounds stupid but it
isn't every single saved end tag all
added up to so many 100 kilobytes that
you didn't need because it could be
assumed and safely replaced you hope so
you know they were not off their heads
they were trying to save dis space
Here's Where we have to try and choose
our words very carefully and say what
you're allowed to say and what you're
not allowed to say in terms of building
memo out of HDML technology so let me
begin with the Bedrock and when I say
HDML techn ology don't forget what I
mean it's basically sgml is like
specifying the punctuation if you think
about it it's saying you can have any
tag you like but the punctuation around
it is pointy brackets so here's our
Bedrock on top of this using HTML
notation I've devised a memo language so
remember the right way to say this is
that memo is an appli ation of sgml in
other words it uses the technology of
you must not say memo is a subset of
sgml because they're different things
sgml is a meta notation memo is a
specific tag set and just to tell you I
wasn't alone way before me in the
1980s there was
a initiative within the US Department of
Defense and I think it was to do with
requisition and stores and stuff like
this I've even forgotten what the
acronym refers to now called cows one of
the earliest applications very big of
sgml I thought was great being able to
tack things with what they are and what
they mean there was also a more
scholarly initiative called the text
encoding initiative I mean one can
imagine there's no end of literature is
this an example of the early medieval
subjunctive you tag it up to say yes it
is everything was KY dor document
professionals thought this is wonderful
when computer scientists shouted at them
basically saying you shouldn't have
allowed um omitted end tags you've no
idea the grief you will get into the
answer I think to that is if you're
careful and if you take advice you can
avoid the
grief but in a closed world of document
professionals where very few people see
the markup this is all right then in the
early 1990s is oh boy did something
happen that really blew it all wide open
and led to a much wider adoption of sgml
a certain Tim berners Lee came along in
the early 1990s I it was about 1992 when
it was first revealed to an unsuspected
world and Tim said I like this sgml and
for these web pages rather invent my own
tagging meta notation I'll use the
pointy bracket notation of sgml but it
was massively massively successful
everybody thought yeah it's great pointy
bracket notation we love this
specify our Pages get them all out there
well the weaknesses in HTML first of all
because it didn't have a document type
definition to say what was optionally
admissible and what wasn't Tim had a
certain view about well for example end
of paror even nowadays in an XML
compliant browser it's not going to
refuse to show your page because you go
from P to another P without formally
closing off the first par just says oh
I've hit another pee I'm already in the
middle of a p I think I better close off
the one I'm doing go into another one
fine but there were far worse problems
than that and they really really came
home to roost within the first 18
months in 1994 there was a meeting I was
there at
Edinburgh where all of this came out
into the open a full Furious Frank
discussion took place about what was
wrong with HTML could we ever put it
right this has to be another
story they wanted it to be clear as part
of the definition and they said easy
we're not going to call it l do a very
quick report on how to do a subset of
full sgml that's cleaner which insists
on
